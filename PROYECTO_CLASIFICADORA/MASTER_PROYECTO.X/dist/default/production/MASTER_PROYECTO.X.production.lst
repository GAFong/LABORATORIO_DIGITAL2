

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sat Sep 04 21:38:28 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2
    27                           	psect	text18,local,class=CODE,merge=1,delta=2
    28                           	psect	text19,local,class=CODE,merge=1,delta=2
    29                           	psect	text20,local,class=CODE,merge=1,delta=2
    30                           	psect	intentry,global,class=CODE,delta=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2
    32                           	psect	text22,local,class=CODE,merge=1,delta=2
    33                           	psect	text23,local,class=CODE,merge=1,delta=2
    34                           	psect	text24,local,class=CODE,merge=1,delta=2
    35                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    36                           	dabs	1,0x7E,2
    37  0000                     
    38                           ; Version 2.20
    39                           ; Generated 12/02/2020 GMT
    40                           ; 
    41                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC16F887 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72  0000                     	;# 
    73  0001                     	;# 
    74  0002                     	;# 
    75  0003                     	;# 
    76  0004                     	;# 
    77  0005                     	;# 
    78  0006                     	;# 
    79  0007                     	;# 
    80  0008                     	;# 
    81  0009                     	;# 
    82  000A                     	;# 
    83  000B                     	;# 
    84  000C                     	;# 
    85  000D                     	;# 
    86  000E                     	;# 
    87  000E                     	;# 
    88  000F                     	;# 
    89  0010                     	;# 
    90  0011                     	;# 
    91  0012                     	;# 
    92  0013                     	;# 
    93  0014                     	;# 
    94  0015                     	;# 
    95  0015                     	;# 
    96  0016                     	;# 
    97  0017                     	;# 
    98  0018                     	;# 
    99  0019                     	;# 
   100  001A                     	;# 
   101  001B                     	;# 
   102  001B                     	;# 
   103  001C                     	;# 
   104  001D                     	;# 
   105  001E                     	;# 
   106  001F                     	;# 
   107  0081                     	;# 
   108  0085                     	;# 
   109  0086                     	;# 
   110  0087                     	;# 
   111  0088                     	;# 
   112  0089                     	;# 
   113  008C                     	;# 
   114  008D                     	;# 
   115  008E                     	;# 
   116  008F                     	;# 
   117  0090                     	;# 
   118  0091                     	;# 
   119  0092                     	;# 
   120  0093                     	;# 
   121  0093                     	;# 
   122  0093                     	;# 
   123  0094                     	;# 
   124  0095                     	;# 
   125  0096                     	;# 
   126  0097                     	;# 
   127  0098                     	;# 
   128  0099                     	;# 
   129  009A                     	;# 
   130  009B                     	;# 
   131  009C                     	;# 
   132  009D                     	;# 
   133  009E                     	;# 
   134  009F                     	;# 
   135  0105                     	;# 
   136  0107                     	;# 
   137  0108                     	;# 
   138  0109                     	;# 
   139  010C                     	;# 
   140  010C                     	;# 
   141  010D                     	;# 
   142  010E                     	;# 
   143  010F                     	;# 
   144  0185                     	;# 
   145  0187                     	;# 
   146  0188                     	;# 
   147  0189                     	;# 
   148  018C                     	;# 
   149  018D                     	;# 
   150  0000                     	;# 
   151  0001                     	;# 
   152  0002                     	;# 
   153  0003                     	;# 
   154  0004                     	;# 
   155  0005                     	;# 
   156  0006                     	;# 
   157  0007                     	;# 
   158  0008                     	;# 
   159  0009                     	;# 
   160  000A                     	;# 
   161  000B                     	;# 
   162  000C                     	;# 
   163  000D                     	;# 
   164  000E                     	;# 
   165  000E                     	;# 
   166  000F                     	;# 
   167  0010                     	;# 
   168  0011                     	;# 
   169  0012                     	;# 
   170  0013                     	;# 
   171  0014                     	;# 
   172  0015                     	;# 
   173  0015                     	;# 
   174  0016                     	;# 
   175  0017                     	;# 
   176  0018                     	;# 
   177  0019                     	;# 
   178  001A                     	;# 
   179  001B                     	;# 
   180  001B                     	;# 
   181  001C                     	;# 
   182  001D                     	;# 
   183  001E                     	;# 
   184  001F                     	;# 
   185  0081                     	;# 
   186  0085                     	;# 
   187  0086                     	;# 
   188  0087                     	;# 
   189  0088                     	;# 
   190  0089                     	;# 
   191  008C                     	;# 
   192  008D                     	;# 
   193  008E                     	;# 
   194  008F                     	;# 
   195  0090                     	;# 
   196  0091                     	;# 
   197  0092                     	;# 
   198  0093                     	;# 
   199  0093                     	;# 
   200  0093                     	;# 
   201  0094                     	;# 
   202  0095                     	;# 
   203  0096                     	;# 
   204  0097                     	;# 
   205  0098                     	;# 
   206  0099                     	;# 
   207  009A                     	;# 
   208  009B                     	;# 
   209  009C                     	;# 
   210  009D                     	;# 
   211  009E                     	;# 
   212  009F                     	;# 
   213  0105                     	;# 
   214  0107                     	;# 
   215  0108                     	;# 
   216  0109                     	;# 
   217  010C                     	;# 
   218  010C                     	;# 
   219  010D                     	;# 
   220  010E                     	;# 
   221  010F                     	;# 
   222  0185                     	;# 
   223  0187                     	;# 
   224  0188                     	;# 
   225  0189                     	;# 
   226  018C                     	;# 
   227  018D                     	;# 
   228  0000                     	;# 
   229  0001                     	;# 
   230  0002                     	;# 
   231  0003                     	;# 
   232  0004                     	;# 
   233  0005                     	;# 
   234  0006                     	;# 
   235  0007                     	;# 
   236  0008                     	;# 
   237  0009                     	;# 
   238  000A                     	;# 
   239  000B                     	;# 
   240  000C                     	;# 
   241  000D                     	;# 
   242  000E                     	;# 
   243  000E                     	;# 
   244  000F                     	;# 
   245  0010                     	;# 
   246  0011                     	;# 
   247  0012                     	;# 
   248  0013                     	;# 
   249  0014                     	;# 
   250  0015                     	;# 
   251  0015                     	;# 
   252  0016                     	;# 
   253  0017                     	;# 
   254  0018                     	;# 
   255  0019                     	;# 
   256  001A                     	;# 
   257  001B                     	;# 
   258  001B                     	;# 
   259  001C                     	;# 
   260  001D                     	;# 
   261  001E                     	;# 
   262  001F                     	;# 
   263  0081                     	;# 
   264  0085                     	;# 
   265  0086                     	;# 
   266  0087                     	;# 
   267  0088                     	;# 
   268  0089                     	;# 
   269  008C                     	;# 
   270  008D                     	;# 
   271  008E                     	;# 
   272  008F                     	;# 
   273  0090                     	;# 
   274  0091                     	;# 
   275  0092                     	;# 
   276  0093                     	;# 
   277  0093                     	;# 
   278  0093                     	;# 
   279  0094                     	;# 
   280  0095                     	;# 
   281  0096                     	;# 
   282  0097                     	;# 
   283  0098                     	;# 
   284  0099                     	;# 
   285  009A                     	;# 
   286  009B                     	;# 
   287  009C                     	;# 
   288  009D                     	;# 
   289  009E                     	;# 
   290  009F                     	;# 
   291  0105                     	;# 
   292  0107                     	;# 
   293  0108                     	;# 
   294  0109                     	;# 
   295  010C                     	;# 
   296  010C                     	;# 
   297  010D                     	;# 
   298  010E                     	;# 
   299  010F                     	;# 
   300  0185                     	;# 
   301  0187                     	;# 
   302  0188                     	;# 
   303  0189                     	;# 
   304  018C                     	;# 
   305  018D                     	;# 
   306  0000                     	;# 
   307  0001                     	;# 
   308  0002                     	;# 
   309  0003                     	;# 
   310  0004                     	;# 
   311  0005                     	;# 
   312  0006                     	;# 
   313  0007                     	;# 
   314  0008                     	;# 
   315  0009                     	;# 
   316  000A                     	;# 
   317  000B                     	;# 
   318  000C                     	;# 
   319  000D                     	;# 
   320  000E                     	;# 
   321  000E                     	;# 
   322  000F                     	;# 
   323  0010                     	;# 
   324  0011                     	;# 
   325  0012                     	;# 
   326  0013                     	;# 
   327  0014                     	;# 
   328  0015                     	;# 
   329  0015                     	;# 
   330  0016                     	;# 
   331  0017                     	;# 
   332  0018                     	;# 
   333  0019                     	;# 
   334  001A                     	;# 
   335  001B                     	;# 
   336  001B                     	;# 
   337  001C                     	;# 
   338  001D                     	;# 
   339  001E                     	;# 
   340  001F                     	;# 
   341  0081                     	;# 
   342  0085                     	;# 
   343  0086                     	;# 
   344  0087                     	;# 
   345  0088                     	;# 
   346  0089                     	;# 
   347  008C                     	;# 
   348  008D                     	;# 
   349  008E                     	;# 
   350  008F                     	;# 
   351  0090                     	;# 
   352  0091                     	;# 
   353  0092                     	;# 
   354  0093                     	;# 
   355  0093                     	;# 
   356  0093                     	;# 
   357  0094                     	;# 
   358  0095                     	;# 
   359  0096                     	;# 
   360  0097                     	;# 
   361  0098                     	;# 
   362  0099                     	;# 
   363  009A                     	;# 
   364  009B                     	;# 
   365  009C                     	;# 
   366  009D                     	;# 
   367  009E                     	;# 
   368  009F                     	;# 
   369  0105                     	;# 
   370  0107                     	;# 
   371  0108                     	;# 
   372  0109                     	;# 
   373  010C                     	;# 
   374  010C                     	;# 
   375  010D                     	;# 
   376  010E                     	;# 
   377  010F                     	;# 
   378  0185                     	;# 
   379  0187                     	;# 
   380  0188                     	;# 
   381  0189                     	;# 
   382  018C                     	;# 
   383  018D                     	;# 
   384  0013                     _SSPBUF	set	19
   385  0014                     _SSPCON	set	20
   386  0006                     _PORTBbits	set	6
   387  0009                     _PORTE	set	9
   388  0007                     _PORTC	set	7
   389  0006                     _PORTB	set	6
   390  0005                     _PORTA	set	5
   391  0008                     _PORTD	set	8
   392  001A                     _RCREG	set	26
   393  000B                     _INTCONbits	set	11
   394  0019                     _TXREG	set	25
   395  000C                     _PIR1bits	set	12
   396  0018                     _RCSTAbits	set	24
   397  0063                     _SSPIF	set	99
   398  005E                     _PEIE	set	94
   399  005F                     _GIE	set	95
   400  0035                     _RB5	set	53
   401  0033                     _RB3	set	51
   402  0032                     _RB2	set	50
   403  0031                     _RB1	set	49
   404  0030                     _RB0	set	48
   405  0091                     _SSPCON2bits	set	145
   406  0087                     _TRISCbits	set	135
   407  0094                     _SSPSTAT	set	148
   408  0093                     _SSPADD	set	147
   409  0091                     _SSPCON2	set	145
   410  008F                     _OSCCONbits	set	143
   411  0086                     _TRISB	set	134
   412  0089                     _TRISE	set	137
   413  0088                     _TRISD	set	136
   414  0085                     _TRISA	set	133
   415  008C                     _PIE1bits	set	140
   416  009A                     _SPBRGH	set	154
   417  0099                     _SPBRG	set	153
   418  0098                     _TXSTAbits	set	152
   419  0463                     _SSPIE	set	1123
   420  043C                     _TRISC4	set	1084
   421  043B                     _TRISC3	set	1083
   422  043F                     _TRISC7	set	1087
   423  0189                     _ANSELH	set	393
   424  0188                     _ANSEL	set	392
   425  0187                     _BAUDCTLbits	set	391
   426                           
   427                           	psect	strings
   428  050A                     __pstrings:
   429  050A                     stringtab:
   430  050A                     __stringtab:
   431  050A                     stringcode:	
   432                           ;	String table - string pointers are 1 byte each
   433                           
   434  050A                     stringdir:
   435  050A  3005               	movlw	high stringdir
   436  050B  008A               	movwf	10
   437  050C  0804               	movf	4,w
   438  050D  0A84               	incf	4,f
   439  050E  0782               	addwf	2,f
   440  050F                     __stringbase:
   441  050F  3400               	retlw	0
   442  0510                     __end_of__stringtab:
   443  0510                     STR_1:
   444  0510  3450               	retlw	80	;'P'
   445  0511  3445               	retlw	69	;'E'
   446  0512  3453               	retlw	83	;'S'
   447  0513  344F               	retlw	79	;'O'
   448  0514  343A               	retlw	58	;':'
   449  0515  3420               	retlw	32	;' '
   450  0516  3443               	retlw	67	;'C'
   451  0517  344F               	retlw	79	;'O'
   452  0518  344C               	retlw	76	;'L'
   453  0519  344F               	retlw	79	;'O'
   454  051A  3452               	retlw	82	;'R'
   455  051B  343A               	retlw	58	;':'
   456  051C  3420               	retlw	32	;' '
   457  051D  3442               	retlw	66	;'B'
   458  051E  3441               	retlw	65	;'A'
   459  051F  344E               	retlw	78	;'N'
   460  0520  3444               	retlw	68	;'D'
   461  0521  3441               	retlw	65	;'A'
   462  0522  343A               	retlw	58	;':'
   463  0523  3400               	retlw	0
   464  0524                     STR_4:
   465  0524  3452               	retlw	82	;'R'
   466  0525  344F               	retlw	79	;'O'
   467  0526  344A               	retlw	74	;'J'
   468  0527  344F               	retlw	79	;'O'
   469  0528  3420               	retlw	32	;' '
   470  0529  3420               	retlw	32	;' '
   471  052A  3400               	retlw	0
   472  052B                     STR_3:
   473  052B  3456               	retlw	86	;'V'
   474  052C  3445               	retlw	69	;'E'
   475  052D  3452               	retlw	82	;'R'
   476  052E  3444               	retlw	68	;'D'
   477  052F  3445               	retlw	69	;'E'
   478  0530  3420               	retlw	32	;' '
   479  0531  3400               	retlw	0
   480  0532                     STR_2:
   481  0532  3442               	retlw	66	;'B'
   482  0533  344C               	retlw	76	;'L'
   483  0534  3441               	retlw	65	;'A'
   484  0535  344E               	retlw	78	;'N'
   485  0536  3443               	retlw	67	;'C'
   486  0537  344F               	retlw	79	;'O'
   487  0538  3400               	retlw	0
   488  0539                     STR_6:
   489  0539  344F               	retlw	79	;'O'
   490  053A  344E               	retlw	78	;'N'
   491  053B  3420               	retlw	32	;' '
   492  053C  3400               	retlw	0
   493  053D                     STR_5:
   494  053D  3467               	retlw	103	;'g'
   495  053E  3472               	retlw	114	;'r'
   496  053F  3420               	retlw	32	;' '
   497  0540  3400               	retlw	0
   498  0541                     STR_7:
   499  0541  344F               	retlw	79	;'O'
   500  0542  3446               	retlw	70	;'F'
   501  0543  3446               	retlw	70	;'F'
   502  0544  3400               	retlw	0
   503                           
   504                           	psect	cinit
   505  0013                     start_initialization:	
   506                           ; #config settings
   507                           
   508  0013                     __initialization:
   509                           
   510                           ; Clear objects allocated to BANK0
   511  0013  1283               	bcf	3,5	;RP0=0, select bank0
   512  0014  1303               	bcf	3,6	;RP1=0, select bank0
   513  0015  01BE               	clrf	__pbssBANK0& (0+127)
   514  0016  01BF               	clrf	(__pbssBANK0+1)& (0+127)
   515  0017  01C0               	clrf	(__pbssBANK0+2)& (0+127)
   516  0018  01C1               	clrf	(__pbssBANK0+3)& (0+127)
   517  0019  01C2               	clrf	(__pbssBANK0+4)& (0+127)
   518  001A  01C3               	clrf	(__pbssBANK0+5)& (0+127)
   519  001B                     end_of_initialization:	
   520                           ;End of C runtime variable initialization code
   521                           
   522  001B                     __end_of__initialization:
   523  001B  0183               	clrf	3
   524  001C  120A  118A  281F   	ljmp	_main	;jump to C main() function
   525                           
   526                           	psect	bssBANK0
   527  003E                     __pbssBANK0:
   528  003E                     _COLOR:
   529  003E                     	ds	1
   530  003F                     _SENSOR_MOV:
   531  003F                     	ds	1
   532  0040                     _VALOR_PESO:
   533  0040                     	ds	1
   534  0041                     _POS3:
   535  0041                     	ds	1
   536  0042                     _POS2:
   537  0042                     	ds	1
   538  0043                     _POS1:
   539  0043                     	ds	1
   540                           
   541                           	psect	cstackCOMMON
   542  0070                     __pcstackCOMMON:
   543  0070                     ?_setup:
   544  0070                     ?_Lcd_Init:	
   545                           ; 1 bytes @ 0x0
   546                           
   547  0070                     ?_Lcd_Clear:	
   548                           ; 1 bytes @ 0x0
   549                           
   550  0070                     ?_Lcd_Write_String:	
   551                           ; 1 bytes @ 0x0
   552                           
   553  0070                     ?_I2C_Master_Start:	
   554                           ; 1 bytes @ 0x0
   555                           
   556  0070                     ?_I2C_Master_Stop:	
   557                           ; 1 bytes @ 0x0
   558                           
   559  0070                     ?_Lcd_Write_Char:	
   560                           ; 1 bytes @ 0x0
   561                           
   562  0070                     ?_EUSART_ENVIAR:	
   563                           ; 1 bytes @ 0x0
   564                           
   565  0070                     ??_EUSART_ENVIAR:	
   566                           ; 1 bytes @ 0x0
   567                           
   568  0070                     ?_isr:	
   569                           ; 1 bytes @ 0x0
   570                           
   571  0070                     ?_main:	
   572                           ; 1 bytes @ 0x0
   573                           
   574  0070                     ?_Lcd_Port:	
   575                           ; 1 bytes @ 0x0
   576                           
   577  0070                     ?_Lcd_Cmd:	
   578                           ; 1 bytes @ 0x0
   579                           
   580  0070                     ?_I2C_Master_Wait:	
   581                           ; 1 bytes @ 0x0
   582                           
   583  0070                     ?i1___wmul:	
   584                           ; 1 bytes @ 0x0
   585                           
   586  0070                     ?i1___lwdiv:	
   587                           ; 2 bytes @ 0x0
   588                           
   589  0070                     i1___wmul@multiplier:	
   590                           ; 2 bytes @ 0x0
   591                           
   592  0070                     i1___lwdiv@divisor:	
   593                           ; 2 bytes @ 0x0
   594                           
   595                           
   596                           ; 2 bytes @ 0x0
   597  0070                     	ds	2
   598  0072                     EUSART_ENVIAR@dato:
   599  0072                     i1___wmul@multiplicand:	
   600                           ; 1 bytes @ 0x2
   601                           
   602  0072                     i1___lwdiv@dividend:	
   603                           ; 2 bytes @ 0x2
   604                           
   605                           
   606                           ; 2 bytes @ 0x2
   607  0072                     	ds	2
   608  0074                     ??i1___wmul:
   609  0074                     ??i1___lwdiv:	
   610                           ; 1 bytes @ 0x4
   611                           
   612  0074                     i1___wmul@product:	
   613                           ; 1 bytes @ 0x4
   614                           
   615                           
   616                           ; 2 bytes @ 0x4
   617  0074                     	ds	1
   618  0075                     i1___lwdiv@quotient:
   619                           
   620                           ; 2 bytes @ 0x5
   621  0075                     	ds	2
   622  0077                     i1___lwdiv@counter:
   623                           
   624                           ; 1 bytes @ 0x7
   625  0077                     	ds	1
   626  0078                     ?i1_VAL:
   627  0078                     i1VAL@variable:	
   628                           ; 1 bytes @ 0x8
   629                           
   630                           
   631                           ; 2 bytes @ 0x8
   632  0078                     	ds	2
   633  007A                     ??i1_VAL:
   634                           
   635                           ; 1 bytes @ 0xA
   636  007A                     	ds	2
   637  007C                     i1VAL@valor:
   638                           
   639                           ; 2 bytes @ 0xC
   640  007C                     	ds	2
   641                           
   642                           	psect	cstackBANK0
   643  0020                     __pcstackBANK0:
   644  0020                     ??_isr:
   645                           
   646                           ; 1 bytes @ 0x0
   647  0020                     	ds	5
   648  0025                     ??_I2C_Master_Start:
   649  0025                     ?_I2C_Master_Write:	
   650                           ; 1 bytes @ 0x5
   651                           
   652  0025                     ??_I2C_Master_Stop:	
   653                           ; 1 bytes @ 0x5
   654                           
   655  0025                     ?_EUSART_INIT:	
   656                           ; 1 bytes @ 0x5
   657                           
   658  0025                     ??_Lcd_Port:	
   659                           ; 1 bytes @ 0x5
   660                           
   661  0025                     ??_I2C_Master_Wait:	
   662                           ; 1 bytes @ 0x5
   663                           
   664  0025                     ?_I2C_Master_Read:	
   665                           ; 1 bytes @ 0x5
   666                           
   667  0025                     ?___wmul:	
   668                           ; 2 bytes @ 0x5
   669                           
   670  0025                     ?___lwdiv:	
   671                           ; 2 bytes @ 0x5
   672                           
   673  0025                     ?___lldiv:	
   674                           ; 2 bytes @ 0x5
   675                           
   676  0025                     Lcd_Port@a:	
   677                           ; 4 bytes @ 0x5
   678                           
   679  0025                     EUSART_INIT@tx:	
   680                           ; 1 bytes @ 0x5
   681                           
   682  0025                     I2C_Master_Write@d:	
   683                           ; 2 bytes @ 0x5
   684                           
   685  0025                     I2C_Master_Read@a:	
   686                           ; 2 bytes @ 0x5
   687                           
   688  0025                     ___wmul@multiplier:	
   689                           ; 2 bytes @ 0x5
   690                           
   691  0025                     ___lwdiv@divisor:	
   692                           ; 2 bytes @ 0x5
   693                           
   694  0025                     ___lldiv@divisor:	
   695                           ; 2 bytes @ 0x5
   696                           
   697                           
   698                           ; 4 bytes @ 0x5
   699  0025                     	ds	1
   700  0026                     ??_Lcd_Write_Char:
   701  0026                     ??_Lcd_Cmd:	
   702                           ; 1 bytes @ 0x6
   703                           
   704                           
   705                           ; 1 bytes @ 0x6
   706  0026                     	ds	1
   707  0027                     ??_I2C_Master_Write:
   708  0027                     ??_I2C_Master_Read:	
   709                           ; 1 bytes @ 0x7
   710                           
   711  0027                     Lcd_Write_Char@temp:	
   712                           ; 1 bytes @ 0x7
   713                           
   714  0027                     EUSART_INIT@rx:	
   715                           ; 1 bytes @ 0x7
   716                           
   717  0027                     ___wmul@multiplicand:	
   718                           ; 2 bytes @ 0x7
   719                           
   720  0027                     ___lwdiv@dividend:	
   721                           ; 2 bytes @ 0x7
   722                           
   723                           
   724                           ; 2 bytes @ 0x7
   725  0027                     	ds	1
   726  0028                     Lcd_Cmd@a:
   727  0028                     Lcd_Write_Char@y:	
   728                           ; 1 bytes @ 0x8
   729                           
   730                           
   731                           ; 1 bytes @ 0x8
   732  0028                     	ds	1
   733  0029                     ??_Lcd_Init:
   734  0029                     ??_Lcd_Clear:	
   735                           ; 1 bytes @ 0x9
   736                           
   737  0029                     ?_Lcd_Set_Cursor:	
   738                           ; 1 bytes @ 0x9
   739                           
   740  0029                     ??_EUSART_INIT:	
   741                           ; 1 bytes @ 0x9
   742                           
   743  0029                     ??___wmul:	
   744                           ; 1 bytes @ 0x9
   745                           
   746  0029                     ??___lwdiv:	
   747                           ; 1 bytes @ 0x9
   748                           
   749  0029                     Lcd_Set_Cursor@b:	
   750                           ; 1 bytes @ 0x9
   751                           
   752  0029                     Lcd_Write_Char@a:	
   753                           ; 1 bytes @ 0x9
   754                           
   755  0029                     I2C_Master_Read@temp:	
   756                           ; 1 bytes @ 0x9
   757                           
   758  0029                     ___wmul@product:	
   759                           ; 2 bytes @ 0x9
   760                           
   761  0029                     ___lldiv@dividend:	
   762                           ; 2 bytes @ 0x9
   763                           
   764                           
   765                           ; 4 bytes @ 0x9
   766  0029                     	ds	1
   767  002A                     ??_Lcd_Set_Cursor:
   768  002A                     ??_Lcd_Write_String:	
   769                           ; 1 bytes @ 0xA
   770                           
   771  002A                     Lcd_Write_String@i:	
   772                           ; 1 bytes @ 0xA
   773                           
   774  002A                     ___lwdiv@quotient:	
   775                           ; 2 bytes @ 0xA
   776                           
   777                           
   778                           ; 2 bytes @ 0xA
   779  002A                     	ds	2
   780  002C                     Lcd_Set_Cursor@a:
   781  002C                     Lcd_Write_String@a:	
   782                           ; 1 bytes @ 0xC
   783                           
   784  002C                     ___lwdiv@counter:	
   785                           ; 1 bytes @ 0xC
   786                           
   787                           
   788                           ; 1 bytes @ 0xC
   789  002C                     	ds	1
   790  002D                     ?_VAL:
   791  002D                     ??___lldiv:	
   792                           ; 1 bytes @ 0xD
   793                           
   794  002D                     Lcd_Set_Cursor@z:	
   795                           ; 1 bytes @ 0xD
   796                           
   797  002D                     VAL@variable:	
   798                           ; 1 bytes @ 0xD
   799                           
   800                           
   801                           ; 2 bytes @ 0xD
   802  002D                     	ds	1
   803  002E                     Lcd_Set_Cursor@y:
   804  002E                     ___lldiv@quotient:	
   805                           ; 1 bytes @ 0xE
   806                           
   807                           
   808                           ; 4 bytes @ 0xE
   809  002E                     	ds	1
   810  002F                     ??_VAL:
   811  002F                     Lcd_Set_Cursor@temp:	
   812                           ; 1 bytes @ 0xF
   813                           
   814                           
   815                           ; 1 bytes @ 0xF
   816  002F                     	ds	2
   817  0031                     VAL@valor:
   818                           
   819                           ; 2 bytes @ 0x11
   820  0031                     	ds	1
   821  0032                     ___lldiv@counter:
   822                           
   823                           ; 1 bytes @ 0x12
   824  0032                     	ds	1
   825  0033                     ?_I2C_Master_Init:
   826  0033                     I2C_Master_Init@c:	
   827                           ; 1 bytes @ 0x13
   828                           
   829                           
   830                           ; 4 bytes @ 0x13
   831  0033                     	ds	4
   832  0037                     ??_I2C_Master_Init:
   833                           
   834                           ; 1 bytes @ 0x17
   835  0037                     	ds	4
   836  003B                     ??_setup:
   837  003B                     ??_main:	
   838                           ; 1 bytes @ 0x1B
   839                           
   840                           
   841                           ; 1 bytes @ 0x1B
   842  003B                     	ds	3
   843                           
   844                           	psect	maintext
   845  001F                     __pmaintext:	
   846 ;;
   847 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   848 ;;
   849 ;; *************** function _main *****************
   850 ;; Defined at:
   851 ;;		line 91 in file "main.c"
   852 ;; Parameters:    Size  Location     Type
   853 ;;		None
   854 ;; Auto vars:     Size  Location     Type
   855 ;;		None
   856 ;; Return value:  Size  Location     Type
   857 ;;                  1    wreg      void 
   858 ;; Registers used:
   859 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   860 ;; Tracked objects:
   861 ;;		On entry : B00/0
   862 ;;		On exit  : 0/0
   863 ;;		Unchanged: 0/0
   864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   865 ;;      Params:         0       0       0       0       0
   866 ;;      Locals:         0       0       0       0       0
   867 ;;      Temps:          0       3       0       0       0
   868 ;;      Totals:         0       3       0       0       0
   869 ;;Total ram usage:        3 bytes
   870 ;; Hardware stack levels required when called:    6
   871 ;; This function calls:
   872 ;;		_I2C_Master_Read
   873 ;;		_I2C_Master_Start
   874 ;;		_I2C_Master_Stop
   875 ;;		_I2C_Master_Write
   876 ;;		_Lcd_Clear
   877 ;;		_Lcd_Init
   878 ;;		_Lcd_Set_Cursor
   879 ;;		_Lcd_Write_Char
   880 ;;		_Lcd_Write_String
   881 ;;		_VAL
   882 ;;		_setup
   883 ;; This function is called by:
   884 ;;		Startup code after reset
   885 ;; This function uses a non-reentrant model
   886 ;;
   887                           
   888                           
   889                           ;psect for function _main
   890  001F                     _main:
   891  001F                     l1632:	
   892                           ;incstack = 0
   893                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   894                           
   895                           
   896                           ;main.c: 92:     setup();
   897  001F  120A  118A  257F  120A  118A  	fcall	_setup
   898                           
   899                           ;main.c: 93:     Lcd_Init();
   900  0024  120A  118A  2389  120A  118A  	fcall	_Lcd_Init
   901                           
   902                           ;main.c: 94:     Lcd_Clear();
   903  0029  120A  118A  26D3  120A  118A  	fcall	_Lcd_Clear
   904                           
   905                           ;main.c: 95:     Lcd_Set_Cursor(1,1);
   906  002E  1283               	bcf	3,5	;RP0=0, select bank0
   907  002F  1303               	bcf	3,6	;RP1=0, select bank0
   908  0030  01A9               	clrf	Lcd_Set_Cursor@b
   909  0031  0AA9               	incf	Lcd_Set_Cursor@b,f
   910  0032  3001               	movlw	1
   911  0033  120A  118A  23EB  120A  118A  	fcall	_Lcd_Set_Cursor
   912  0038                     l1634:
   913                           
   914                           ;main.c: 96:     Lcd_Write_String("PESO: COLOR: BANDA:");
   915  0038  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   916  0039  120A  118A  25E9  120A  118A  	fcall	_Lcd_Write_String
   917  003E                     l1636:
   918                           
   919                           ;main.c: 98:         I2C_Master_Start();
   920  003E  120A  118A  2700  120A  118A  	fcall	_I2C_Master_Start
   921  0043                     l1638:
   922                           
   923                           ;main.c: 99:         I2C_Master_Write(0x50);
   924  0043  3050               	movlw	80
   925  0044  1283               	bcf	3,5	;RP0=0, select bank0
   926  0045  1303               	bcf	3,6	;RP1=0, select bank0
   927  0046  00A5               	movwf	I2C_Master_Write@d
   928  0047  3000               	movlw	0
   929  0048  00A6               	movwf	I2C_Master_Write@d+1
   930  0049  120A  118A  26ED  120A  118A  	fcall	_I2C_Master_Write
   931  004E                     l1640:
   932                           
   933                           ;main.c: 100:         I2C_Master_Write(0X01);
   934  004E  3001               	movlw	1
   935  004F  1283               	bcf	3,5	;RP0=0, select bank0
   936  0050  1303               	bcf	3,6	;RP1=0, select bank0
   937  0051  00A5               	movwf	I2C_Master_Write@d
   938  0052  3000               	movlw	0
   939  0053  00A6               	movwf	I2C_Master_Write@d+1
   940  0054  120A  118A  26ED  120A  118A  	fcall	_I2C_Master_Write
   941  0059                     l1642:
   942                           
   943                           ;main.c: 101:         I2C_Master_Stop();
   944  0059  120A  118A  26F7  120A  118A  	fcall	_I2C_Master_Stop
   945  005E                     l1644:
   946                           
   947                           ;main.c: 102:         _delay((unsigned long)((200)*(8000000/4000.0)));
   948  005E  3003               	movlw	3
   949  005F  1283               	bcf	3,5	;RP0=0, select bank0
   950  0060  1303               	bcf	3,6	;RP1=0, select bank0
   951  0061  00BD               	movwf	??_main+2
   952  0062  3008               	movlw	8
   953  0063  00BC               	movwf	??_main+1
   954  0064  3076               	movlw	118
   955  0065  00BB               	movwf	??_main
   956  0066                     u997:
   957  0066  0BBB               	decfsz	??_main,f
   958  0067  2866               	goto	u997
   959  0068  0BBC               	decfsz	??_main+1,f
   960  0069  2866               	goto	u997
   961  006A  0BBD               	decfsz	??_main+2,f
   962  006B  2866               	goto	u997
   963  006C  0000               	nop
   964  006D                     l1646:
   965                           
   966                           ;main.c: 104:         I2C_Master_Start();
   967  006D  120A  118A  2700  120A  118A  	fcall	_I2C_Master_Start
   968  0072                     l1648:
   969                           
   970                           ;main.c: 105:         I2C_Master_Write(0x51);
   971  0072  3051               	movlw	81
   972  0073  1283               	bcf	3,5	;RP0=0, select bank0
   973  0074  1303               	bcf	3,6	;RP1=0, select bank0
   974  0075  00A5               	movwf	I2C_Master_Write@d
   975  0076  3000               	movlw	0
   976  0077  00A6               	movwf	I2C_Master_Write@d+1
   977  0078  120A  118A  26ED  120A  118A  	fcall	_I2C_Master_Write
   978  007D                     l1650:
   979                           
   980                           ;main.c: 106:         VALOR_PESO = I2C_Master_Read(0);
   981  007D  3000               	movlw	0
   982  007E  1283               	bcf	3,5	;RP0=0, select bank0
   983  007F  1303               	bcf	3,6	;RP1=0, select bank0
   984  0080  00A5               	movwf	I2C_Master_Read@a
   985  0081  00A6               	movwf	I2C_Master_Read@a+1
   986  0082  120A  118A  25B7  120A  118A  	fcall	_I2C_Master_Read
   987  0087  1283               	bcf	3,5	;RP0=0, select bank0
   988  0088  1303               	bcf	3,6	;RP1=0, select bank0
   989  0089  0825               	movf	?_I2C_Master_Read,w
   990  008A  00BB               	movwf	??_main
   991  008B  083B               	movf	??_main,w
   992  008C  00C0               	movwf	_VALOR_PESO
   993  008D                     l1652:
   994                           
   995                           ;main.c: 107:         I2C_Master_Stop();
   996  008D  120A  118A  26F7  120A  118A  	fcall	_I2C_Master_Stop
   997  0092                     l1654:
   998                           
   999                           ;main.c: 108:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1000  0092  3003               	movlw	3
  1001  0093  1283               	bcf	3,5	;RP0=0, select bank0
  1002  0094  1303               	bcf	3,6	;RP1=0, select bank0
  1003  0095  00BD               	movwf	??_main+2
  1004  0096  3008               	movlw	8
  1005  0097  00BC               	movwf	??_main+1
  1006  0098  3076               	movlw	118
  1007  0099  00BB               	movwf	??_main
  1008  009A                     u1007:
  1009  009A  0BBB               	decfsz	??_main,f
  1010  009B  289A               	goto	u1007
  1011  009C  0BBC               	decfsz	??_main+1,f
  1012  009D  289A               	goto	u1007
  1013  009E  0BBD               	decfsz	??_main+2,f
  1014  009F  289A               	goto	u1007
  1015  00A0  0000               	nop
  1016  00A1                     l1656:
  1017                           
  1018                           ;main.c: 110:         I2C_Master_Start();
  1019  00A1  120A  118A  2700  120A  118A  	fcall	_I2C_Master_Start
  1020  00A6                     l1658:
  1021                           
  1022                           ;main.c: 111:         I2C_Master_Write(0x71);
  1023  00A6  3071               	movlw	113
  1024  00A7  1283               	bcf	3,5	;RP0=0, select bank0
  1025  00A8  1303               	bcf	3,6	;RP1=0, select bank0
  1026  00A9  00A5               	movwf	I2C_Master_Write@d
  1027  00AA  3000               	movlw	0
  1028  00AB  00A6               	movwf	I2C_Master_Write@d+1
  1029  00AC  120A  118A  26ED  120A  118A  	fcall	_I2C_Master_Write
  1030  00B1                     l1660:
  1031                           
  1032                           ;main.c: 112:         COLOR = I2C_Master_Read(0);
  1033  00B1  3000               	movlw	0
  1034  00B2  1283               	bcf	3,5	;RP0=0, select bank0
  1035  00B3  1303               	bcf	3,6	;RP1=0, select bank0
  1036  00B4  00A5               	movwf	I2C_Master_Read@a
  1037  00B5  00A6               	movwf	I2C_Master_Read@a+1
  1038  00B6  120A  118A  25B7  120A  118A  	fcall	_I2C_Master_Read
  1039  00BB  1283               	bcf	3,5	;RP0=0, select bank0
  1040  00BC  1303               	bcf	3,6	;RP1=0, select bank0
  1041  00BD  0825               	movf	?_I2C_Master_Read,w
  1042  00BE  00BB               	movwf	??_main
  1043  00BF  083B               	movf	??_main,w
  1044  00C0  00BE               	movwf	_COLOR
  1045  00C1                     l1662:
  1046                           
  1047                           ;main.c: 113:         I2C_Master_Stop();
  1048  00C1  120A  118A  26F7  120A  118A  	fcall	_I2C_Master_Stop
  1049  00C6                     l1664:
  1050                           
  1051                           ;main.c: 114:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1052  00C6  3003               	movlw	3
  1053  00C7  1283               	bcf	3,5	;RP0=0, select bank0
  1054  00C8  1303               	bcf	3,6	;RP1=0, select bank0
  1055  00C9  00BD               	movwf	??_main+2
  1056  00CA  3008               	movlw	8
  1057  00CB  00BC               	movwf	??_main+1
  1058  00CC  3076               	movlw	118
  1059  00CD  00BB               	movwf	??_main
  1060  00CE                     u1017:
  1061  00CE  0BBB               	decfsz	??_main,f
  1062  00CF  28CE               	goto	u1017
  1063  00D0  0BBC               	decfsz	??_main+1,f
  1064  00D1  28CE               	goto	u1017
  1065  00D2  0BBD               	decfsz	??_main+2,f
  1066  00D3  28CE               	goto	u1017
  1067  00D4  0000               	nop
  1068                           
  1069                           ;main.c: 116:         switch (COLOR){
  1070  00D5  2909               	goto	l1680
  1071  00D6                     l1666:
  1072                           
  1073                           ;main.c: 118:                 Lcd_Set_Cursor(2,6);
  1074  00D6  3006               	movlw	6
  1075  00D7  00BB               	movwf	??_main
  1076  00D8  083B               	movf	??_main,w
  1077  00D9  00A9               	movwf	Lcd_Set_Cursor@b
  1078  00DA  3002               	movlw	2
  1079  00DB  120A  118A  23EB  120A  118A  	fcall	_Lcd_Set_Cursor
  1080  00E0                     l1668:
  1081                           
  1082                           ;main.c: 119:                 Lcd_Write_String("BLANCO");
  1083  00E0  3023               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1084  00E1  120A  118A  25E9  120A  118A  	fcall	_Lcd_Write_String
  1085                           
  1086                           ;main.c: 120:                 break;
  1087  00E6  291E               	goto	l1682
  1088  00E7                     l1670:
  1089                           
  1090                           ;main.c: 122:                 Lcd_Set_Cursor(2,6);
  1091  00E7  3006               	movlw	6
  1092  00E8  00BB               	movwf	??_main
  1093  00E9  083B               	movf	??_main,w
  1094  00EA  00A9               	movwf	Lcd_Set_Cursor@b
  1095  00EB  3002               	movlw	2
  1096  00EC  120A  118A  23EB  120A  118A  	fcall	_Lcd_Set_Cursor
  1097  00F1                     l1672:
  1098                           
  1099                           ;main.c: 123:                 Lcd_Write_String("VERDE ");
  1100  00F1  301C               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1101  00F2  120A  118A  25E9  120A  118A  	fcall	_Lcd_Write_String
  1102                           
  1103                           ;main.c: 124:                 break;
  1104  00F7  291E               	goto	l1682
  1105  00F8                     l1674:
  1106                           
  1107                           ;main.c: 126:                 Lcd_Set_Cursor(2,6);
  1108  00F8  3006               	movlw	6
  1109  00F9  00BB               	movwf	??_main
  1110  00FA  083B               	movf	??_main,w
  1111  00FB  00A9               	movwf	Lcd_Set_Cursor@b
  1112  00FC  3002               	movlw	2
  1113  00FD  120A  118A  23EB  120A  118A  	fcall	_Lcd_Set_Cursor
  1114  0102                     l1676:
  1115                           
  1116                           ;main.c: 127:                 Lcd_Write_String("ROJO  ");
  1117  0102  3015               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1118  0103  120A  118A  25E9  120A  118A  	fcall	_Lcd_Write_String
  1119                           
  1120                           ;main.c: 128:                 break;
  1121  0108  291E               	goto	l1682
  1122  0109                     l1680:
  1123  0109  1283               	bcf	3,5	;RP0=0, select bank0
  1124  010A  1303               	bcf	3,6	;RP1=0, select bank0
  1125  010B  083E               	movf	_COLOR,w
  1126  010C  00BB               	movwf	??_main
  1127  010D  01BC               	clrf	??_main+1
  1128                           
  1129                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1130                           ; Switch size 1, requested type "simple"
  1131                           ; Number of cases is 1, Range of values is 0 to 0
  1132                           ; switch strategies available:
  1133                           ; Name         Instructions Cycles
  1134                           ; simple_byte            4     3 (average)
  1135                           ; direct_byte           11     8 (fixed)
  1136                           ; jumptable            260     6 (fixed)
  1137                           ;	Chosen strategy is simple_byte
  1138  010E  083C               	movf	??_main+1,w
  1139  010F  3A00               	xorlw	0	; case 0
  1140  0110  1903               	skipnz
  1141  0111  2913               	goto	l1760
  1142  0112  291E               	goto	l1682
  1143  0113                     l1760:
  1144                           
  1145                           ; Switch size 1, requested type "simple"
  1146                           ; Number of cases is 3, Range of values is 1 to 3
  1147                           ; switch strategies available:
  1148                           ; Name         Instructions Cycles
  1149                           ; simple_byte           10     6 (average)
  1150                           ; direct_byte           20    11 (fixed)
  1151                           ; jumptable            263     9 (fixed)
  1152                           ;	Chosen strategy is simple_byte
  1153  0113  083B               	movf	??_main,w
  1154  0114  3A01               	xorlw	1	; case 1
  1155  0115  1903               	skipnz
  1156  0116  28D6               	goto	l1666
  1157  0117  3A03               	xorlw	3	; case 2
  1158  0118  1903               	skipnz
  1159  0119  28E7               	goto	l1670
  1160  011A  3A01               	xorlw	1	; case 3
  1161  011B  1903               	skipnz
  1162  011C  28F8               	goto	l1674
  1163  011D  291E               	goto	l1682
  1164  011E                     l1682:
  1165                           
  1166                           ;main.c: 131:         if (VALOR_PESO != 0 && SENSOR_MOV == 1){
  1167  011E  1283               	bcf	3,5	;RP0=0, select bank0
  1168  011F  1303               	bcf	3,6	;RP1=0, select bank0
  1169  0120  0840               	movf	_VALOR_PESO,w
  1170  0121  1903               	btfsc	3,2
  1171  0122  2924               	goto	u971
  1172  0123  2925               	goto	u970
  1173  0124                     u971:
  1174  0124  2973               	goto	l1704
  1175  0125                     u970:
  1176  0125                     l1684:
  1177  0125  033F               	decf	_SENSOR_MOV,w
  1178  0126  1D03               	btfss	3,2
  1179  0127  2929               	goto	u981
  1180  0128  292A               	goto	u980
  1181  0129                     u981:
  1182  0129  2973               	goto	l1704
  1183  012A                     u980:
  1184  012A                     l1686:
  1185                           
  1186                           ;main.c: 132:             PORTD = VALOR_PESO;
  1187  012A  0840               	movf	_VALOR_PESO,w
  1188  012B  0088               	movwf	8	;volatile
  1189  012C                     l1688:
  1190                           
  1191                           ;main.c: 134:             Lcd_Set_Cursor(2,1);
  1192  012C  01A9               	clrf	Lcd_Set_Cursor@b
  1193  012D  0AA9               	incf	Lcd_Set_Cursor@b,f
  1194  012E  3002               	movlw	2
  1195  012F  120A  118A  23EB  120A  118A  	fcall	_Lcd_Set_Cursor
  1196  0134                     l1690:
  1197                           
  1198                           ;main.c: 135:             VAL(VALOR_PESO);
  1199  0134  1283               	bcf	3,5	;RP0=0, select bank0
  1200  0135  1303               	bcf	3,6	;RP1=0, select bank0
  1201  0136  0840               	movf	_VALOR_PESO,w
  1202  0137  00BB               	movwf	??_main
  1203  0138  01BC               	clrf	??_main+1
  1204  0139  083B               	movf	??_main,w
  1205  013A  00AD               	movwf	VAL@variable
  1206  013B  083C               	movf	??_main+1,w
  1207  013C  00AE               	movwf	VAL@variable+1
  1208  013D  120A  118A  223D  120A  118A  	fcall	_VAL
  1209  0142                     l1692:
  1210                           
  1211                           ;main.c: 136:             Lcd_Write_Char(POS1);
  1212  0142  1283               	bcf	3,5	;RP0=0, select bank0
  1213  0143  1303               	bcf	3,6	;RP1=0, select bank0
  1214  0144  0843               	movf	_POS1,w
  1215  0145  120A  118A  24CD  120A  118A  	fcall	_Lcd_Write_Char
  1216  014A                     l1694:
  1217                           
  1218                           ;main.c: 137:             Lcd_Write_Char(POS2);
  1219  014A  1283               	bcf	3,5	;RP0=0, select bank0
  1220  014B  1303               	bcf	3,6	;RP1=0, select bank0
  1221  014C  0842               	movf	_POS2,w
  1222  014D  120A  118A  24CD  120A  118A  	fcall	_Lcd_Write_Char
  1223  0152                     l1696:
  1224                           
  1225                           ;main.c: 138:             Lcd_Write_Char(POS3);
  1226  0152  1283               	bcf	3,5	;RP0=0, select bank0
  1227  0153  1303               	bcf	3,6	;RP1=0, select bank0
  1228  0154  0841               	movf	_POS3,w
  1229  0155  120A  118A  24CD  120A  118A  	fcall	_Lcd_Write_Char
  1230  015A                     l1698:
  1231                           
  1232                           ;main.c: 139:             Lcd_Write_String("gr ");
  1233  015A  302E               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1234  015B  120A  118A  25E9  120A  118A  	fcall	_Lcd_Write_String
  1235  0160                     l1700:
  1236                           
  1237                           ;main.c: 140:             Lcd_Set_Cursor(2,14);
  1238  0160  300E               	movlw	14
  1239  0161  1283               	bcf	3,5	;RP0=0, select bank0
  1240  0162  1303               	bcf	3,6	;RP1=0, select bank0
  1241  0163  00BB               	movwf	??_main
  1242  0164  083B               	movf	??_main,w
  1243  0165  00A9               	movwf	Lcd_Set_Cursor@b
  1244  0166  3002               	movlw	2
  1245  0167  120A  118A  23EB  120A  118A  	fcall	_Lcd_Set_Cursor
  1246  016C                     l1702:
  1247                           
  1248                           ;main.c: 141:             Lcd_Write_String("ON ");
  1249  016C  302A               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1250  016D  120A  118A  25E9  120A  118A  	fcall	_Lcd_Write_String
  1251                           
  1252                           ;main.c: 162:         }
  1253  0172  283E               	goto	l1636
  1254  0173                     l1704:
  1255                           
  1256                           ;main.c: 164:             Lcd_Set_Cursor(2,14);
  1257  0173  300E               	movlw	14
  1258  0174  00BB               	movwf	??_main
  1259  0175  083B               	movf	??_main,w
  1260  0176  00A9               	movwf	Lcd_Set_Cursor@b
  1261  0177  3002               	movlw	2
  1262  0178  120A  118A  23EB  120A  118A  	fcall	_Lcd_Set_Cursor
  1263  017D                     l1706:
  1264                           
  1265                           ;main.c: 165:             Lcd_Write_String("OFF");
  1266  017D  3032               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1267  017E  120A  118A  25E9  120A  118A  	fcall	_Lcd_Write_String
  1268  0183  283E               	goto	l1636
  1269  0184  120A  118A  2810   	ljmp	start
  1270  0187                     __end_of_main:
  1271                           
  1272                           	psect	text1
  1273  057F                     __ptext1:	
  1274 ;; *************** function _setup *****************
  1275 ;; Defined at:
  1276 ;;		line 187 in file "main.c"
  1277 ;; Parameters:    Size  Location     Type
  1278 ;;		None
  1279 ;; Auto vars:     Size  Location     Type
  1280 ;;		None
  1281 ;; Return value:  Size  Location     Type
  1282 ;;                  1    wreg      void 
  1283 ;; Registers used:
  1284 ;;		wreg, status,2, status,0, pclath, cstack
  1285 ;; Tracked objects:
  1286 ;;		On entry : 0/0
  1287 ;;		On exit  : 0/0
  1288 ;;		Unchanged: 0/0
  1289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1290 ;;      Params:         0       0       0       0       0
  1291 ;;      Locals:         0       0       0       0       0
  1292 ;;      Temps:          0       0       0       0       0
  1293 ;;      Totals:         0       0       0       0       0
  1294 ;;Total ram usage:        0 bytes
  1295 ;; Hardware stack levels used:    1
  1296 ;; Hardware stack levels required when called:    5
  1297 ;; This function calls:
  1298 ;;		_EUSART_INIT
  1299 ;;		_I2C_Master_Init
  1300 ;; This function is called by:
  1301 ;;		_main
  1302 ;; This function uses a non-reentrant model
  1303 ;;
  1304                           
  1305                           
  1306                           ;psect for function _setup
  1307  057F                     _setup:
  1308  057F                     l1490:	
  1309                           ;incstack = 0
  1310                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1311                           
  1312                           
  1313                           ;main.c: 189:     ANSEL = 0B0000000;
  1314  057F  1683               	bsf	3,5	;RP0=1, select bank3
  1315  0580  1703               	bsf	3,6	;RP1=1, select bank3
  1316  0581  0188               	clrf	8	;volatile
  1317                           
  1318                           ;main.c: 190:     ANSELH = 0X00;
  1319  0582  0189               	clrf	9	;volatile
  1320                           
  1321                           ;main.c: 192:     TRISA = 0B0000000;
  1322  0583  1683               	bsf	3,5	;RP0=1, select bank1
  1323  0584  1303               	bcf	3,6	;RP1=0, select bank1
  1324  0585  0185               	clrf	5	;volatile
  1325                           
  1326                           ;main.c: 193:     TRISD = 0X00;
  1327  0586  0188               	clrf	8	;volatile
  1328                           
  1329                           ;main.c: 194:     TRISE = 0X00;
  1330  0587  0189               	clrf	9	;volatile
  1331                           
  1332                           ;main.c: 195:     TRISB = 0X00;
  1333  0588  0186               	clrf	6	;volatile
  1334                           
  1335                           ;main.c: 198:     PORTA = 0X00;
  1336  0589  1283               	bcf	3,5	;RP0=0, select bank0
  1337  058A  1303               	bcf	3,6	;RP1=0, select bank0
  1338  058B  0185               	clrf	5	;volatile
  1339                           
  1340                           ;main.c: 199:     PORTB = 0X00;
  1341  058C  0186               	clrf	6	;volatile
  1342                           
  1343                           ;main.c: 200:     PORTC = 0X00;
  1344  058D  0187               	clrf	7	;volatile
  1345                           
  1346                           ;main.c: 201:     PORTD = 0X00;
  1347  058E  0188               	clrf	8	;volatile
  1348                           
  1349                           ;main.c: 202:     PORTE = 0X00;
  1350  058F  0189               	clrf	9	;volatile
  1351  0590                     l1492:
  1352                           
  1353                           ;main.c: 205:     OSCCONbits.IRCF2 = 1;
  1354  0590  1683               	bsf	3,5	;RP0=1, select bank1
  1355  0591  1303               	bcf	3,6	;RP1=0, select bank1
  1356  0592  170F               	bsf	15,6	;volatile
  1357  0593                     l1494:
  1358                           
  1359                           ;main.c: 206:     OSCCONbits.IRCF1 = 1;
  1360  0593  168F               	bsf	15,5	;volatile
  1361  0594                     l1496:
  1362                           
  1363                           ;main.c: 207:     OSCCONbits.IRCF0 = 1;
  1364  0594  160F               	bsf	15,4	;volatile
  1365  0595                     l1498:
  1366                           
  1367                           ;main.c: 208:     OSCCONbits.SCS = 1;
  1368  0595  140F               	bsf	15,0	;volatile
  1369  0596                     l1500:
  1370                           
  1371                           ;main.c: 210:     TRISC7 = 1;
  1372  0596  1787               	bsf	7,7	;volatile
  1373  0597                     l1502:
  1374                           
  1375                           ;main.c: 211:     EUSART_INIT(0,1);
  1376  0597  3000               	movlw	0
  1377  0598  1283               	bcf	3,5	;RP0=0, select bank0
  1378  0599  1303               	bcf	3,6	;RP1=0, select bank0
  1379  059A  00A5               	movwf	EUSART_INIT@tx
  1380  059B  00A6               	movwf	EUSART_INIT@tx+1
  1381  059C  3001               	movlw	1
  1382  059D  00A7               	movwf	EUSART_INIT@rx
  1383  059E  3000               	movlw	0
  1384  059F  00A8               	movwf	EUSART_INIT@rx+1
  1385  05A0  120A  118A  2639  120A  118A  	fcall	_EUSART_INIT
  1386  05A5                     l1504:
  1387                           
  1388                           ;main.c: 214:     I2C_Master_Init(100000);
  1389  05A5  3000               	movlw	0
  1390  05A6  1283               	bcf	3,5	;RP0=0, select bank0
  1391  05A7  1303               	bcf	3,6	;RP1=0, select bank0
  1392  05A8  00B6               	movwf	I2C_Master_Init@c+3
  1393  05A9  3001               	movlw	1
  1394  05AA  00B5               	movwf	I2C_Master_Init@c+2
  1395  05AB  3086               	movlw	134
  1396  05AC  00B4               	movwf	I2C_Master_Init@c+1
  1397  05AD  30A0               	movlw	160
  1398  05AE  00B3               	movwf	I2C_Master_Init@c
  1399  05AF  120A  118A  2545  120A  118A  	fcall	_I2C_Master_Init
  1400  05B4                     l1506:
  1401                           
  1402                           ;main.c: 217:     INTCONbits.GIE = 1;
  1403  05B4  178B               	bsf	11,7	;volatile
  1404  05B5                     l1508:
  1405                           
  1406                           ;main.c: 218:     INTCONbits.PEIE = 1;
  1407  05B5  170B               	bsf	11,6	;volatile
  1408  05B6                     l121:
  1409  05B6  0008               	return
  1410  05B7                     __end_of_setup:
  1411                           
  1412                           	psect	text2
  1413  0545                     __ptext2:	
  1414 ;; *************** function _I2C_Master_Init *****************
  1415 ;; Defined at:
  1416 ;;		line 16 in file "I2C.c"
  1417 ;; Parameters:    Size  Location     Type
  1418 ;;  c               4   19[BANK0 ] const unsigned long 
  1419 ;; Auto vars:     Size  Location     Type
  1420 ;;		None
  1421 ;; Return value:  Size  Location     Type
  1422 ;;                  1    wreg      void 
  1423 ;; Registers used:
  1424 ;;		wreg, status,2, status,0, pclath, cstack
  1425 ;; Tracked objects:
  1426 ;;		On entry : 0/0
  1427 ;;		On exit  : 0/0
  1428 ;;		Unchanged: 0/0
  1429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1430 ;;      Params:         0       4       0       0       0
  1431 ;;      Locals:         0       0       0       0       0
  1432 ;;      Temps:          0       4       0       0       0
  1433 ;;      Totals:         0       8       0       0       0
  1434 ;;Total ram usage:        8 bytes
  1435 ;; Hardware stack levels used:    1
  1436 ;; Hardware stack levels required when called:    4
  1437 ;; This function calls:
  1438 ;;		___lldiv
  1439 ;; This function is called by:
  1440 ;;		_setup
  1441 ;; This function uses a non-reentrant model
  1442 ;;
  1443                           
  1444                           
  1445                           ;psect for function _I2C_Master_Init
  1446  0545                     _I2C_Master_Init:
  1447  0545                     l1364:	
  1448                           ;incstack = 0
  1449                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  1450                           
  1451                           
  1452                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  1453  0545  3028               	movlw	40
  1454  0546  1283               	bcf	3,5	;RP0=0, select bank0
  1455  0547  1303               	bcf	3,6	;RP1=0, select bank0
  1456  0548  0094               	movwf	20	;volatile
  1457  0549                     l1366:
  1458                           
  1459                           ;I2C.c: 19:     SSPCON2 = 0;
  1460  0549  1683               	bsf	3,5	;RP0=1, select bank1
  1461  054A  1303               	bcf	3,6	;RP1=0, select bank1
  1462  054B  0191               	clrf	17	;volatile
  1463  054C                     l1368:
  1464                           
  1465                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  1466  054C  1283               	bcf	3,5	;RP0=0, select bank0
  1467  054D  1303               	bcf	3,6	;RP1=0, select bank0
  1468  054E  0833               	movf	I2C_Master_Init@c,w
  1469  054F  00B7               	movwf	??_I2C_Master_Init
  1470  0550  0834               	movf	I2C_Master_Init@c+1,w
  1471  0551  00B8               	movwf	??_I2C_Master_Init+1
  1472  0552  0835               	movf	I2C_Master_Init@c+2,w
  1473  0553  00B9               	movwf	??_I2C_Master_Init+2
  1474  0554  0836               	movf	I2C_Master_Init@c+3,w
  1475  0555  00BA               	movwf	??_I2C_Master_Init+3
  1476  0556  3002               	movlw	2
  1477  0557                     u625:
  1478  0557  1003               	clrc
  1479  0558  0DB7               	rlf	??_I2C_Master_Init,f
  1480  0559  0DB8               	rlf	??_I2C_Master_Init+1,f
  1481  055A  0DB9               	rlf	??_I2C_Master_Init+2,f
  1482  055B  0DBA               	rlf	??_I2C_Master_Init+3,f
  1483  055C                     u620:
  1484  055C  3EFF               	addlw	-1
  1485  055D  1D03               	skipz
  1486  055E  2D57               	goto	u625
  1487  055F  083A               	movf	??_I2C_Master_Init+3,w
  1488  0560  00A8               	movwf	___lldiv@divisor+3
  1489  0561  0839               	movf	??_I2C_Master_Init+2,w
  1490  0562  00A7               	movwf	___lldiv@divisor+2
  1491  0563  0838               	movf	??_I2C_Master_Init+1,w
  1492  0564  00A6               	movwf	___lldiv@divisor+1
  1493  0565  0837               	movf	??_I2C_Master_Init,w
  1494  0566  00A5               	movwf	___lldiv@divisor
  1495  0567  3000               	movlw	0
  1496  0568  00AC               	movwf	___lldiv@dividend+3
  1497  0569  307A               	movlw	122
  1498  056A  00AB               	movwf	___lldiv@dividend+2
  1499  056B  3012               	movlw	18
  1500  056C  00AA               	movwf	___lldiv@dividend+1
  1501  056D  3000               	movlw	0
  1502  056E  00A9               	movwf	___lldiv@dividend
  1503  056F  120A  118A  2321  120A  118A  	fcall	___lldiv
  1504  0574  1283               	bcf	3,5	;RP0=0, select bank0
  1505  0575  1303               	bcf	3,6	;RP1=0, select bank0
  1506  0576  0825               	movf	?___lldiv,w
  1507  0577  3EFF               	addlw	255
  1508  0578  1683               	bsf	3,5	;RP0=1, select bank1
  1509  0579  1303               	bcf	3,6	;RP1=0, select bank1
  1510  057A  0093               	movwf	19	;volatile
  1511  057B                     l1370:
  1512                           
  1513                           ;I2C.c: 21:     SSPSTAT = 0;
  1514  057B  0194               	clrf	20	;volatile
  1515  057C                     l1372:
  1516                           
  1517                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  1518  057C  1587               	bsf	7,3	;volatile
  1519  057D                     l1374:
  1520                           
  1521                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  1522  057D  1607               	bsf	7,4	;volatile
  1523  057E                     l208:
  1524  057E  0008               	return
  1525  057F                     __end_of_I2C_Master_Init:
  1526                           
  1527                           	psect	text3
  1528  0321                     __ptext3:	
  1529 ;; *************** function ___lldiv *****************
  1530 ;; Defined at:
  1531 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  1532 ;; Parameters:    Size  Location     Type
  1533 ;;  divisor         4    5[BANK0 ] unsigned long 
  1534 ;;  dividend        4    9[BANK0 ] unsigned long 
  1535 ;; Auto vars:     Size  Location     Type
  1536 ;;  quotient        4   14[BANK0 ] unsigned long 
  1537 ;;  counter         1   18[BANK0 ] unsigned char 
  1538 ;; Return value:  Size  Location     Type
  1539 ;;                  4    5[BANK0 ] unsigned long 
  1540 ;; Registers used:
  1541 ;;		wreg, status,2, status,0
  1542 ;; Tracked objects:
  1543 ;;		On entry : 0/0
  1544 ;;		On exit  : 0/0
  1545 ;;		Unchanged: 0/0
  1546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1547 ;;      Params:         0       8       0       0       0
  1548 ;;      Locals:         0       5       0       0       0
  1549 ;;      Temps:          0       1       0       0       0
  1550 ;;      Totals:         0      14       0       0       0
  1551 ;;Total ram usage:       14 bytes
  1552 ;; Hardware stack levels used:    1
  1553 ;; Hardware stack levels required when called:    3
  1554 ;; This function calls:
  1555 ;;		Nothing
  1556 ;; This function is called by:
  1557 ;;		_I2C_Master_Init
  1558 ;; This function uses a non-reentrant model
  1559 ;;
  1560                           
  1561                           
  1562                           ;psect for function ___lldiv
  1563  0321                     ___lldiv:
  1564  0321                     l1310:	
  1565                           ;incstack = 0
  1566                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1567                           
  1568  0321  3000               	movlw	0
  1569  0322  1283               	bcf	3,5	;RP0=0, select bank0
  1570  0323  1303               	bcf	3,6	;RP1=0, select bank0
  1571  0324  00B1               	movwf	___lldiv@quotient+3
  1572  0325  3000               	movlw	0
  1573  0326  00B0               	movwf	___lldiv@quotient+2
  1574  0327  3000               	movlw	0
  1575  0328  00AF               	movwf	___lldiv@quotient+1
  1576  0329  3000               	movlw	0
  1577  032A  00AE               	movwf	___lldiv@quotient
  1578  032B  0828               	movf	___lldiv@divisor+3,w
  1579  032C  0427               	iorwf	___lldiv@divisor+2,w
  1580  032D  0426               	iorwf	___lldiv@divisor+1,w
  1581  032E  0425               	iorwf	___lldiv@divisor,w
  1582  032F  1903               	skipnz
  1583  0330  2B32               	goto	u541
  1584  0331  2B33               	goto	u540
  1585  0332                     u541:
  1586  0332  2B80               	goto	l1330
  1587  0333                     u540:
  1588  0333                     l1312:
  1589  0333  01B2               	clrf	___lldiv@counter
  1590  0334  0AB2               	incf	___lldiv@counter,f
  1591  0335  2B43               	goto	l1316
  1592  0336                     l1314:
  1593  0336  3001               	movlw	1
  1594  0337  00AD               	movwf	??___lldiv
  1595  0338                     u555:
  1596  0338  1003               	clrc
  1597  0339  0DA5               	rlf	___lldiv@divisor,f
  1598  033A  0DA6               	rlf	___lldiv@divisor+1,f
  1599  033B  0DA7               	rlf	___lldiv@divisor+2,f
  1600  033C  0DA8               	rlf	___lldiv@divisor+3,f
  1601  033D  0BAD               	decfsz	??___lldiv,f
  1602  033E  2B38               	goto	u555
  1603  033F  3001               	movlw	1
  1604  0340  00AD               	movwf	??___lldiv
  1605  0341  082D               	movf	??___lldiv,w
  1606  0342  07B2               	addwf	___lldiv@counter,f
  1607  0343                     l1316:
  1608  0343  1FA8               	btfss	___lldiv@divisor+3,7
  1609  0344  2B46               	goto	u561
  1610  0345  2B47               	goto	u560
  1611  0346                     u561:
  1612  0346  2B36               	goto	l1314
  1613  0347                     u560:
  1614  0347                     l1318:
  1615  0347  3001               	movlw	1
  1616  0348  00AD               	movwf	??___lldiv
  1617  0349                     u575:
  1618  0349  1003               	clrc
  1619  034A  0DAE               	rlf	___lldiv@quotient,f
  1620  034B  0DAF               	rlf	___lldiv@quotient+1,f
  1621  034C  0DB0               	rlf	___lldiv@quotient+2,f
  1622  034D  0DB1               	rlf	___lldiv@quotient+3,f
  1623  034E  0BAD               	decfsz	??___lldiv,f
  1624  034F  2B49               	goto	u575
  1625  0350                     l1320:
  1626  0350  0828               	movf	___lldiv@divisor+3,w
  1627  0351  022C               	subwf	___lldiv@dividend+3,w
  1628  0352  1D03               	skipz
  1629  0353  2B5E               	goto	u585
  1630  0354  0827               	movf	___lldiv@divisor+2,w
  1631  0355  022B               	subwf	___lldiv@dividend+2,w
  1632  0356  1D03               	skipz
  1633  0357  2B5E               	goto	u585
  1634  0358  0826               	movf	___lldiv@divisor+1,w
  1635  0359  022A               	subwf	___lldiv@dividend+1,w
  1636  035A  1D03               	skipz
  1637  035B  2B5E               	goto	u585
  1638  035C  0825               	movf	___lldiv@divisor,w
  1639  035D  0229               	subwf	___lldiv@dividend,w
  1640  035E                     u585:
  1641  035E  1C03               	skipc
  1642  035F  2B61               	goto	u581
  1643  0360  2B62               	goto	u580
  1644  0361                     u581:
  1645  0361  2B71               	goto	l1326
  1646  0362                     u580:
  1647  0362                     l1322:
  1648  0362  0825               	movf	___lldiv@divisor,w
  1649  0363  02A9               	subwf	___lldiv@dividend,f
  1650  0364  0826               	movf	___lldiv@divisor+1,w
  1651  0365  1C03               	skipc
  1652  0366  0F26               	incfsz	___lldiv@divisor+1,w
  1653  0367  02AA               	subwf	___lldiv@dividend+1,f
  1654  0368  0827               	movf	___lldiv@divisor+2,w
  1655  0369  1C03               	skipc
  1656  036A  0F27               	incfsz	___lldiv@divisor+2,w
  1657  036B  02AB               	subwf	___lldiv@dividend+2,f
  1658  036C  0828               	movf	___lldiv@divisor+3,w
  1659  036D  1C03               	skipc
  1660  036E  0F28               	incfsz	___lldiv@divisor+3,w
  1661  036F  02AC               	subwf	___lldiv@dividend+3,f
  1662  0370                     l1324:
  1663  0370  142E               	bsf	___lldiv@quotient,0
  1664  0371                     l1326:
  1665  0371  3001               	movlw	1
  1666  0372                     u595:
  1667  0372  1003               	clrc
  1668  0373  0CA8               	rrf	___lldiv@divisor+3,f
  1669  0374  0CA7               	rrf	___lldiv@divisor+2,f
  1670  0375  0CA6               	rrf	___lldiv@divisor+1,f
  1671  0376  0CA5               	rrf	___lldiv@divisor,f
  1672  0377  3EFF               	addlw	-1
  1673  0378  1D03               	skipz
  1674  0379  2B72               	goto	u595
  1675  037A                     l1328:
  1676  037A  3001               	movlw	1
  1677  037B  02B2               	subwf	___lldiv@counter,f
  1678  037C  1D03               	btfss	3,2
  1679  037D  2B7F               	goto	u601
  1680  037E  2B80               	goto	u600
  1681  037F                     u601:
  1682  037F  2B47               	goto	l1318
  1683  0380                     u600:
  1684  0380                     l1330:
  1685  0380  0831               	movf	___lldiv@quotient+3,w
  1686  0381  00A8               	movwf	?___lldiv+3
  1687  0382  0830               	movf	___lldiv@quotient+2,w
  1688  0383  00A7               	movwf	?___lldiv+2
  1689  0384  082F               	movf	___lldiv@quotient+1,w
  1690  0385  00A6               	movwf	?___lldiv+1
  1691  0386  082E               	movf	___lldiv@quotient,w
  1692  0387  00A5               	movwf	?___lldiv
  1693  0388                     l356:
  1694  0388  0008               	return
  1695  0389                     __end_of___lldiv:
  1696                           
  1697                           	psect	text4
  1698  0639                     __ptext4:	
  1699 ;; *************** function _EUSART_INIT *****************
  1700 ;; Defined at:
  1701 ;;		line 13 in file "./EUSART_LIB.h"
  1702 ;; Parameters:    Size  Location     Type
  1703 ;;  tx              2    5[BANK0 ] unsigned int 
  1704 ;;  rx              2    7[BANK0 ] unsigned int 
  1705 ;; Auto vars:     Size  Location     Type
  1706 ;;		None
  1707 ;; Return value:  Size  Location     Type
  1708 ;;                  1    wreg      void 
  1709 ;; Registers used:
  1710 ;;		wreg, status,2, status,0
  1711 ;; Tracked objects:
  1712 ;;		On entry : 0/0
  1713 ;;		On exit  : 0/0
  1714 ;;		Unchanged: 0/0
  1715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1716 ;;      Params:         0       4       0       0       0
  1717 ;;      Locals:         0       0       0       0       0
  1718 ;;      Temps:          0       0       0       0       0
  1719 ;;      Totals:         0       4       0       0       0
  1720 ;;Total ram usage:        4 bytes
  1721 ;; Hardware stack levels used:    1
  1722 ;; Hardware stack levels required when called:    3
  1723 ;; This function calls:
  1724 ;;		Nothing
  1725 ;; This function is called by:
  1726 ;;		_setup
  1727 ;; This function uses a non-reentrant model
  1728 ;;
  1729                           
  1730                           
  1731                           ;psect for function _EUSART_INIT
  1732  0639                     _EUSART_INIT:
  1733  0639                     l1334:	
  1734                           ;incstack = 0
  1735                           ; Regs used in _EUSART_INIT: [wreg+status,2+status,0]
  1736                           
  1737                           
  1738                           ;./EUSART_LIB.h: 17:   TXSTAbits.SYNC = 0;
  1739  0639  1683               	bsf	3,5	;RP0=1, select bank1
  1740  063A  1303               	bcf	3,6	;RP1=0, select bank1
  1741  063B  1218               	bcf	24,4	;volatile
  1742                           
  1743                           ;./EUSART_LIB.h: 18:   TXSTAbits.BRGH = 0;
  1744  063C  1118               	bcf	24,2	;volatile
  1745                           
  1746                           ;./EUSART_LIB.h: 19:   TXSTAbits.TX9 = 0;
  1747  063D  1318               	bcf	24,6	;volatile
  1748                           
  1749                           ;./EUSART_LIB.h: 20:   TXSTAbits.TXEN= 1;
  1750  063E  1698               	bsf	24,5	;volatile
  1751                           
  1752                           ;./EUSART_LIB.h: 21:   RCSTAbits.SPEN = 1;
  1753  063F  1283               	bcf	3,5	;RP0=0, select bank0
  1754  0640  1303               	bcf	3,6	;RP1=0, select bank0
  1755  0641  1798               	bsf	24,7	;volatile
  1756                           
  1757                           ;./EUSART_LIB.h: 24:   RCSTAbits.RX9 = 0;
  1758  0642  1318               	bcf	24,6	;volatile
  1759                           
  1760                           ;./EUSART_LIB.h: 25:   RCSTAbits.CREN = 1;
  1761  0643  1618               	bsf	24,4	;volatile
  1762                           
  1763                           ;./EUSART_LIB.h: 28:     BAUDCTLbits.BRG16 = 0;
  1764  0644  1683               	bsf	3,5	;RP0=1, select bank3
  1765  0645  1703               	bsf	3,6	;RP1=1, select bank3
  1766  0646  1187               	bcf	7,3	;volatile
  1767  0647                     l1336:
  1768                           
  1769                           ;./EUSART_LIB.h: 29:     SPBRG =12;
  1770  0647  300C               	movlw	12
  1771  0648  1683               	bsf	3,5	;RP0=1, select bank1
  1772  0649  1303               	bcf	3,6	;RP1=0, select bank1
  1773  064A  0099               	movwf	25	;volatile
  1774  064B                     l1338:
  1775                           
  1776                           ;./EUSART_LIB.h: 30:     SPBRGH = 0;
  1777  064B  019A               	clrf	26	;volatile
  1778  064C                     l1340:
  1779                           
  1780                           ;./EUSART_LIB.h: 32:     PIE1bits.TXIE =tx;
  1781  064C  1283               	bcf	3,5	;RP0=0, select bank0
  1782  064D  1303               	bcf	3,6	;RP1=0, select bank0
  1783  064E  0C25               	rrf	EUSART_INIT@tx,w
  1784  064F  1683               	bsf	3,5	;RP0=1, select bank1
  1785  0650  1303               	bcf	3,6	;RP1=0, select bank1
  1786  0651  1C03               	skipc
  1787  0652  120C               	bcf	12,4	;volatile
  1788  0653  1803               	skipnc
  1789  0654  160C               	bsf	12,4	;volatile
  1790  0655                     l1342:
  1791                           
  1792                           ;./EUSART_LIB.h: 33:     PIE1bits.RCIE =rx;
  1793  0655  1283               	bcf	3,5	;RP0=0, select bank0
  1794  0656  1303               	bcf	3,6	;RP1=0, select bank0
  1795  0657  0C27               	rrf	EUSART_INIT@rx,w
  1796  0658  1683               	bsf	3,5	;RP0=1, select bank1
  1797  0659  1303               	bcf	3,6	;RP1=0, select bank1
  1798  065A  1C03               	skipc
  1799  065B  128C               	bcf	12,5	;volatile
  1800  065C  1803               	skipnc
  1801  065D  168C               	bsf	12,5	;volatile
  1802  065E                     l75:
  1803  065E  0008               	return
  1804  065F                     __end_of_EUSART_INIT:
  1805                           
  1806                           	psect	text5
  1807  023D                     __ptext5:	
  1808 ;; *************** function _VAL *****************
  1809 ;; Defined at:
  1810 ;;		line 223 in file "main.c"
  1811 ;; Parameters:    Size  Location     Type
  1812 ;;  variable        2   13[BANK0 ] unsigned int 
  1813 ;; Auto vars:     Size  Location     Type
  1814 ;;  valor           2   17[BANK0 ] unsigned int 
  1815 ;; Return value:  Size  Location     Type
  1816 ;;                  1    wreg      void 
  1817 ;; Registers used:
  1818 ;;		wreg, status,2, status,0, pclath, cstack
  1819 ;; Tracked objects:
  1820 ;;		On entry : 0/0
  1821 ;;		On exit  : 0/0
  1822 ;;		Unchanged: 0/0
  1823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1824 ;;      Params:         0       2       0       0       0
  1825 ;;      Locals:         0       2       0       0       0
  1826 ;;      Temps:          0       2       0       0       0
  1827 ;;      Totals:         0       6       0       0       0
  1828 ;;Total ram usage:        6 bytes
  1829 ;; Hardware stack levels used:    1
  1830 ;; Hardware stack levels required when called:    4
  1831 ;; This function calls:
  1832 ;;		___lwdiv
  1833 ;;		___wmul
  1834 ;; This function is called by:
  1835 ;;		_main
  1836 ;; This function uses a non-reentrant model
  1837 ;;
  1838                           
  1839                           
  1840                           ;psect for function _VAL
  1841  023D                     _VAL:
  1842  023D                     l1474:	
  1843                           ;incstack = 0
  1844                           ; Regs used in _VAL: [wreg+status,2+status,0+pclath+cstack]
  1845                           
  1846                           
  1847                           ;main.c: 224:     uint16_t valor;;main.c: 225:     valor = variable;
  1848  023D  1283               	bcf	3,5	;RP0=0, select bank0
  1849  023E  1303               	bcf	3,6	;RP1=0, select bank0
  1850  023F  082E               	movf	VAL@variable+1,w
  1851  0240  00B2               	movwf	VAL@valor+1
  1852  0241  082D               	movf	VAL@variable,w
  1853  0242  00B1               	movwf	VAL@valor
  1854  0243                     l1476:
  1855                           
  1856                           ;main.c: 226:     POS1 = (valor/100) ;
  1857  0243  3064               	movlw	100
  1858  0244  00A5               	movwf	___lwdiv@divisor
  1859  0245  3000               	movlw	0
  1860  0246  00A6               	movwf	___lwdiv@divisor+1
  1861  0247  0832               	movf	VAL@valor+1,w
  1862  0248  00A8               	movwf	___lwdiv@dividend+1
  1863  0249  0831               	movf	VAL@valor,w
  1864  024A  00A7               	movwf	___lwdiv@dividend
  1865  024B  120A  118A  2443  120A  118A  	fcall	___lwdiv
  1866  0250  1283               	bcf	3,5	;RP0=0, select bank0
  1867  0251  1303               	bcf	3,6	;RP1=0, select bank0
  1868  0252  0825               	movf	?___lwdiv,w
  1869  0253  00AF               	movwf	??_VAL
  1870  0254  082F               	movf	??_VAL,w
  1871  0255  00C3               	movwf	_POS1
  1872  0256                     l1478:
  1873                           
  1874                           ;main.c: 227:     valor = (valor - (POS1*100));
  1875  0256  0843               	movf	_POS1,w
  1876  0257  00AF               	movwf	??_VAL
  1877  0258  01B0               	clrf	??_VAL+1
  1878  0259  082F               	movf	??_VAL,w
  1879  025A  00A5               	movwf	___wmul@multiplier
  1880  025B  0830               	movf	??_VAL+1,w
  1881  025C  00A6               	movwf	___wmul@multiplier+1
  1882  025D  309C               	movlw	156
  1883  025E  00A7               	movwf	___wmul@multiplicand
  1884  025F  30FF               	movlw	255
  1885  0260  00A8               	movwf	___wmul@multiplicand+1
  1886  0261  120A  118A  2612  120A  118A  	fcall	___wmul
  1887  0266  1283               	bcf	3,5	;RP0=0, select bank0
  1888  0267  1303               	bcf	3,6	;RP1=0, select bank0
  1889  0268  0831               	movf	VAL@valor,w
  1890  0269  0725               	addwf	?___wmul,w
  1891  026A  00B1               	movwf	VAL@valor
  1892  026B  0832               	movf	VAL@valor+1,w
  1893  026C  1803               	skipnc
  1894  026D  0A32               	incf	VAL@valor+1,w
  1895  026E  0726               	addwf	?___wmul+1,w
  1896  026F  00B2               	movwf	VAL@valor+1
  1897  0270                     l1480:
  1898                           
  1899                           ;main.c: 228:     POS2 = (valor/10);
  1900  0270  300A               	movlw	10
  1901  0271  00A5               	movwf	___lwdiv@divisor
  1902  0272  3000               	movlw	0
  1903  0273  00A6               	movwf	___lwdiv@divisor+1
  1904  0274  0832               	movf	VAL@valor+1,w
  1905  0275  00A8               	movwf	___lwdiv@dividend+1
  1906  0276  0831               	movf	VAL@valor,w
  1907  0277  00A7               	movwf	___lwdiv@dividend
  1908  0278  120A  118A  2443  120A  118A  	fcall	___lwdiv
  1909  027D  1283               	bcf	3,5	;RP0=0, select bank0
  1910  027E  1303               	bcf	3,6	;RP1=0, select bank0
  1911  027F  0825               	movf	?___lwdiv,w
  1912  0280  00AF               	movwf	??_VAL
  1913  0281  082F               	movf	??_VAL,w
  1914  0282  00C2               	movwf	_POS2
  1915  0283                     l1482:
  1916                           
  1917                           ;main.c: 229:     valor = (valor - (POS2*10));
  1918  0283  0842               	movf	_POS2,w
  1919  0284  00AF               	movwf	??_VAL
  1920  0285  01B0               	clrf	??_VAL+1
  1921  0286  082F               	movf	??_VAL,w
  1922  0287  00A5               	movwf	___wmul@multiplier
  1923  0288  0830               	movf	??_VAL+1,w
  1924  0289  00A6               	movwf	___wmul@multiplier+1
  1925  028A  30F6               	movlw	246
  1926  028B  00A7               	movwf	___wmul@multiplicand
  1927  028C  30FF               	movlw	255
  1928  028D  00A8               	movwf	___wmul@multiplicand+1
  1929  028E  120A  118A  2612  120A  118A  	fcall	___wmul
  1930  0293  1283               	bcf	3,5	;RP0=0, select bank0
  1931  0294  1303               	bcf	3,6	;RP1=0, select bank0
  1932  0295  0831               	movf	VAL@valor,w
  1933  0296  0725               	addwf	?___wmul,w
  1934  0297  00B1               	movwf	VAL@valor
  1935  0298  0832               	movf	VAL@valor+1,w
  1936  0299  1803               	skipnc
  1937  029A  0A32               	incf	VAL@valor+1,w
  1938  029B  0726               	addwf	?___wmul+1,w
  1939  029C  00B2               	movwf	VAL@valor+1
  1940                           
  1941                           ;main.c: 230:     POS3 = (valor);
  1942  029D  0831               	movf	VAL@valor,w
  1943  029E  00AF               	movwf	??_VAL
  1944  029F  082F               	movf	??_VAL,w
  1945  02A0  00C1               	movwf	_POS3
  1946  02A1                     l1484:
  1947                           
  1948                           ;main.c: 232:     POS1 = POS1 + 48;
  1949  02A1  0843               	movf	_POS1,w
  1950  02A2  3E30               	addlw	48
  1951  02A3  00AF               	movwf	??_VAL
  1952  02A4  082F               	movf	??_VAL,w
  1953  02A5  00C3               	movwf	_POS1
  1954  02A6                     l1486:
  1955                           
  1956                           ;main.c: 233:     POS2 = POS2 + 48;
  1957  02A6  0842               	movf	_POS2,w
  1958  02A7  3E30               	addlw	48
  1959  02A8  00AF               	movwf	??_VAL
  1960  02A9  082F               	movf	??_VAL,w
  1961  02AA  00C2               	movwf	_POS2
  1962  02AB                     l1488:
  1963                           
  1964                           ;main.c: 234:     POS3 = POS3 + 48;
  1965  02AB  0841               	movf	_POS3,w
  1966  02AC  3E30               	addlw	48
  1967  02AD  00AF               	movwf	??_VAL
  1968  02AE  082F               	movf	??_VAL,w
  1969  02AF  00C1               	movwf	_POS3
  1970  02B0                     l124:
  1971  02B0  0008               	return
  1972  02B1                     __end_of_VAL:
  1973                           
  1974                           	psect	text6
  1975  0612                     __ptext6:	
  1976 ;; *************** function ___wmul *****************
  1977 ;; Defined at:
  1978 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  1979 ;; Parameters:    Size  Location     Type
  1980 ;;  multiplier      2    5[BANK0 ] unsigned int 
  1981 ;;  multiplicand    2    7[BANK0 ] unsigned int 
  1982 ;; Auto vars:     Size  Location     Type
  1983 ;;  product         2    9[BANK0 ] unsigned int 
  1984 ;; Return value:  Size  Location     Type
  1985 ;;                  2    5[BANK0 ] unsigned int 
  1986 ;; Registers used:
  1987 ;;		wreg, status,2, status,0
  1988 ;; Tracked objects:
  1989 ;;		On entry : 0/0
  1990 ;;		On exit  : 0/0
  1991 ;;		Unchanged: 0/0
  1992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1993 ;;      Params:         0       4       0       0       0
  1994 ;;      Locals:         0       2       0       0       0
  1995 ;;      Temps:          0       0       0       0       0
  1996 ;;      Totals:         0       6       0       0       0
  1997 ;;Total ram usage:        6 bytes
  1998 ;; Hardware stack levels used:    1
  1999 ;; Hardware stack levels required when called:    3
  2000 ;; This function calls:
  2001 ;;		Nothing
  2002 ;; This function is called by:
  2003 ;;		_VAL
  2004 ;; This function uses a non-reentrant model
  2005 ;;
  2006                           
  2007                           
  2008                           ;psect for function ___wmul
  2009  0612                     ___wmul:
  2010  0612                     l1390:	
  2011                           ;incstack = 0
  2012                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2013                           
  2014  0612  1283               	bcf	3,5	;RP0=0, select bank0
  2015  0613  1303               	bcf	3,6	;RP1=0, select bank0
  2016  0614  01A9               	clrf	___wmul@product
  2017  0615  01AA               	clrf	___wmul@product+1
  2018  0616                     l1392:
  2019  0616  1C25               	btfss	___wmul@multiplier,0
  2020  0617  2E19               	goto	u651
  2021  0618  2E1A               	goto	u650
  2022  0619                     u651:
  2023  0619  2E20               	goto	l320
  2024  061A                     u650:
  2025  061A                     l1394:
  2026  061A  0827               	movf	___wmul@multiplicand,w
  2027  061B  07A9               	addwf	___wmul@product,f
  2028  061C  1803               	skipnc
  2029  061D  0AAA               	incf	___wmul@product+1,f
  2030  061E  0828               	movf	___wmul@multiplicand+1,w
  2031  061F  07AA               	addwf	___wmul@product+1,f
  2032  0620                     l320:
  2033  0620  3001               	movlw	1
  2034  0621                     u665:
  2035  0621  1003               	clrc
  2036  0622  0DA7               	rlf	___wmul@multiplicand,f
  2037  0623  0DA8               	rlf	___wmul@multiplicand+1,f
  2038  0624  3EFF               	addlw	-1
  2039  0625  1D03               	skipz
  2040  0626  2E21               	goto	u665
  2041  0627                     l1396:
  2042  0627  3001               	movlw	1
  2043  0628                     u675:
  2044  0628  1003               	clrc
  2045  0629  0CA6               	rrf	___wmul@multiplier+1,f
  2046  062A  0CA5               	rrf	___wmul@multiplier,f
  2047  062B  3EFF               	addlw	-1
  2048  062C  1D03               	skipz
  2049  062D  2E28               	goto	u675
  2050  062E                     l1398:
  2051  062E  0825               	movf	___wmul@multiplier,w
  2052  062F  0426               	iorwf	___wmul@multiplier+1,w
  2053  0630  1D03               	btfss	3,2
  2054  0631  2E33               	goto	u681
  2055  0632  2E34               	goto	u680
  2056  0633                     u681:
  2057  0633  2E16               	goto	l1392
  2058  0634                     u680:
  2059  0634                     l1400:
  2060  0634  082A               	movf	___wmul@product+1,w
  2061  0635  00A6               	movwf	?___wmul+1
  2062  0636  0829               	movf	___wmul@product,w
  2063  0637  00A5               	movwf	?___wmul
  2064  0638                     l322:
  2065  0638  0008               	return
  2066  0639                     __end_of___wmul:
  2067                           
  2068                           	psect	text7
  2069  0443                     __ptext7:	
  2070 ;; *************** function ___lwdiv *****************
  2071 ;; Defined at:
  2072 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  2073 ;; Parameters:    Size  Location     Type
  2074 ;;  divisor         2    5[BANK0 ] unsigned int 
  2075 ;;  dividend        2    7[BANK0 ] unsigned int 
  2076 ;; Auto vars:     Size  Location     Type
  2077 ;;  quotient        2   10[BANK0 ] unsigned int 
  2078 ;;  counter         1   12[BANK0 ] unsigned char 
  2079 ;; Return value:  Size  Location     Type
  2080 ;;                  2    5[BANK0 ] unsigned int 
  2081 ;; Registers used:
  2082 ;;		wreg, status,2, status,0
  2083 ;; Tracked objects:
  2084 ;;		On entry : 0/0
  2085 ;;		On exit  : 0/0
  2086 ;;		Unchanged: 0/0
  2087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2088 ;;      Params:         0       4       0       0       0
  2089 ;;      Locals:         0       3       0       0       0
  2090 ;;      Temps:          0       1       0       0       0
  2091 ;;      Totals:         0       8       0       0       0
  2092 ;;Total ram usage:        8 bytes
  2093 ;; Hardware stack levels used:    1
  2094 ;; Hardware stack levels required when called:    3
  2095 ;; This function calls:
  2096 ;;		Nothing
  2097 ;; This function is called by:
  2098 ;;		_VAL
  2099 ;; This function uses a non-reentrant model
  2100 ;;
  2101                           
  2102                           
  2103                           ;psect for function ___lwdiv
  2104  0443                     ___lwdiv:
  2105  0443                     l1404:	
  2106                           ;incstack = 0
  2107                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2108                           
  2109  0443  1283               	bcf	3,5	;RP0=0, select bank0
  2110  0444  1303               	bcf	3,6	;RP1=0, select bank0
  2111  0445  01AA               	clrf	___lwdiv@quotient
  2112  0446  01AB               	clrf	___lwdiv@quotient+1
  2113  0447                     l1406:
  2114  0447  0825               	movf	___lwdiv@divisor,w
  2115  0448  0426               	iorwf	___lwdiv@divisor+1,w
  2116  0449  1903               	btfsc	3,2
  2117  044A  2C4C               	goto	u691
  2118  044B  2C4D               	goto	u690
  2119  044C                     u691:
  2120  044C  2C84               	goto	l1426
  2121  044D                     u690:
  2122  044D                     l1408:
  2123  044D  01AC               	clrf	___lwdiv@counter
  2124  044E  0AAC               	incf	___lwdiv@counter,f
  2125  044F  2C5B               	goto	l1414
  2126  0450                     l1410:
  2127  0450  3001               	movlw	1
  2128  0451                     u705:
  2129  0451  1003               	clrc
  2130  0452  0DA5               	rlf	___lwdiv@divisor,f
  2131  0453  0DA6               	rlf	___lwdiv@divisor+1,f
  2132  0454  3EFF               	addlw	-1
  2133  0455  1D03               	skipz
  2134  0456  2C51               	goto	u705
  2135  0457                     l1412:
  2136  0457  3001               	movlw	1
  2137  0458  00A9               	movwf	??___lwdiv
  2138  0459  0829               	movf	??___lwdiv,w
  2139  045A  07AC               	addwf	___lwdiv@counter,f
  2140  045B                     l1414:
  2141  045B  1FA6               	btfss	___lwdiv@divisor+1,7
  2142  045C  2C5E               	goto	u711
  2143  045D  2C5F               	goto	u710
  2144  045E                     u711:
  2145  045E  2C50               	goto	l1410
  2146  045F                     u710:
  2147  045F                     l1416:
  2148  045F  3001               	movlw	1
  2149  0460                     u725:
  2150  0460  1003               	clrc
  2151  0461  0DAA               	rlf	___lwdiv@quotient,f
  2152  0462  0DAB               	rlf	___lwdiv@quotient+1,f
  2153  0463  3EFF               	addlw	-1
  2154  0464  1D03               	skipz
  2155  0465  2C60               	goto	u725
  2156  0466  0826               	movf	___lwdiv@divisor+1,w
  2157  0467  0228               	subwf	___lwdiv@dividend+1,w
  2158  0468  1D03               	skipz
  2159  0469  2C6C               	goto	u735
  2160  046A  0825               	movf	___lwdiv@divisor,w
  2161  046B  0227               	subwf	___lwdiv@dividend,w
  2162  046C                     u735:
  2163  046C  1C03               	skipc
  2164  046D  2C6F               	goto	u731
  2165  046E  2C70               	goto	u730
  2166  046F                     u731:
  2167  046F  2C77               	goto	l1422
  2168  0470                     u730:
  2169  0470                     l1418:
  2170  0470  0825               	movf	___lwdiv@divisor,w
  2171  0471  02A7               	subwf	___lwdiv@dividend,f
  2172  0472  0826               	movf	___lwdiv@divisor+1,w
  2173  0473  1C03               	skipc
  2174  0474  03A8               	decf	___lwdiv@dividend+1,f
  2175  0475  02A8               	subwf	___lwdiv@dividend+1,f
  2176  0476                     l1420:
  2177  0476  142A               	bsf	___lwdiv@quotient,0
  2178  0477                     l1422:
  2179  0477  3001               	movlw	1
  2180  0478                     u745:
  2181  0478  1003               	clrc
  2182  0479  0CA6               	rrf	___lwdiv@divisor+1,f
  2183  047A  0CA5               	rrf	___lwdiv@divisor,f
  2184  047B  3EFF               	addlw	-1
  2185  047C  1D03               	skipz
  2186  047D  2C78               	goto	u745
  2187  047E                     l1424:
  2188  047E  3001               	movlw	1
  2189  047F  02AC               	subwf	___lwdiv@counter,f
  2190  0480  1D03               	btfss	3,2
  2191  0481  2C83               	goto	u751
  2192  0482  2C84               	goto	u750
  2193  0483                     u751:
  2194  0483  2C5F               	goto	l1416
  2195  0484                     u750:
  2196  0484                     l1426:
  2197  0484  082B               	movf	___lwdiv@quotient+1,w
  2198  0485  00A6               	movwf	?___lwdiv+1
  2199  0486  082A               	movf	___lwdiv@quotient,w
  2200  0487  00A5               	movwf	?___lwdiv
  2201  0488                     l592:
  2202  0488  0008               	return
  2203  0489                     __end_of___lwdiv:
  2204                           
  2205                           	psect	text8
  2206  05E9                     __ptext8:	
  2207 ;; *************** function _Lcd_Write_String *****************
  2208 ;; Defined at:
  2209 ;;		line 98 in file "LCD.c"
  2210 ;; Parameters:    Size  Location     Type
  2211 ;;  a               1    wreg     PTR unsigned char 
  2212 ;;		 -> STR_7(4), STR_6(4), STR_5(4), STR_4(7), 
  2213 ;;		 -> STR_3(7), STR_2(7), STR_1(20), 
  2214 ;; Auto vars:     Size  Location     Type
  2215 ;;  a               1   12[BANK0 ] PTR unsigned char 
  2216 ;;		 -> STR_7(4), STR_6(4), STR_5(4), STR_4(7), 
  2217 ;;		 -> STR_3(7), STR_2(7), STR_1(20), 
  2218 ;;  i               2   10[BANK0 ] int 
  2219 ;; Return value:  Size  Location     Type
  2220 ;;                  1    wreg      void 
  2221 ;; Registers used:
  2222 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2223 ;; Tracked objects:
  2224 ;;		On entry : 0/0
  2225 ;;		On exit  : 0/0
  2226 ;;		Unchanged: 0/0
  2227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2228 ;;      Params:         0       0       0       0       0
  2229 ;;      Locals:         0       3       0       0       0
  2230 ;;      Temps:          0       0       0       0       0
  2231 ;;      Totals:         0       3       0       0       0
  2232 ;;Total ram usage:        3 bytes
  2233 ;; Hardware stack levels used:    1
  2234 ;; Hardware stack levels required when called:    5
  2235 ;; This function calls:
  2236 ;;		_Lcd_Write_Char
  2237 ;; This function is called by:
  2238 ;;		_main
  2239 ;; This function uses a non-reentrant model
  2240 ;;
  2241                           
  2242                           
  2243                           ;psect for function _Lcd_Write_String
  2244  05E9                     _Lcd_Write_String:
  2245                           
  2246                           ;incstack = 0
  2247                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2248                           ;Lcd_Write_String@a stored from wreg
  2249  05E9  1283               	bcf	3,5	;RP0=0, select bank0
  2250  05EA  1303               	bcf	3,6	;RP1=0, select bank0
  2251  05EB  00AC               	movwf	Lcd_Write_String@a
  2252  05EC                     l1542:
  2253                           
  2254                           ;LCD.c: 99:     int i;;LCD.c: 100:     for (i = 0; a[i] != '\0'; i++)
  2255  05EC  01AA               	clrf	Lcd_Write_String@i
  2256  05ED  01AB               	clrf	Lcd_Write_String@i+1
  2257  05EE  2E04               	goto	l1548
  2258  05EF                     l1544:
  2259                           
  2260                           ;LCD.c: 101:         Lcd_Write_Char(a[i]);
  2261  05EF  082A               	movf	Lcd_Write_String@i,w
  2262  05F0  072C               	addwf	Lcd_Write_String@a,w
  2263  05F1  0084               	movwf	4
  2264  05F2  120A  118A  250A  120A  118A  	fcall	stringdir
  2265  05F7  120A  118A  24CD  120A  118A  	fcall	_Lcd_Write_Char
  2266  05FC                     l1546:
  2267  05FC  3001               	movlw	1
  2268  05FD  1283               	bcf	3,5	;RP0=0, select bank0
  2269  05FE  1303               	bcf	3,6	;RP1=0, select bank0
  2270  05FF  07AA               	addwf	Lcd_Write_String@i,f
  2271  0600  1803               	skipnc
  2272  0601  0AAB               	incf	Lcd_Write_String@i+1,f
  2273  0602  3000               	movlw	0
  2274  0603  07AB               	addwf	Lcd_Write_String@i+1,f
  2275  0604                     l1548:
  2276  0604  082A               	movf	Lcd_Write_String@i,w
  2277  0605  072C               	addwf	Lcd_Write_String@a,w
  2278  0606  0084               	movwf	4
  2279  0607  120A  118A  250A  120A  118A  	fcall	stringdir
  2280  060C  3A00               	xorlw	0
  2281  060D  1D03               	skipz
  2282  060E  2E10               	goto	u921
  2283  060F  2E11               	goto	u920
  2284  0610                     u921:
  2285  0610  2DEF               	goto	l1544
  2286  0611                     u920:
  2287  0611                     l173:
  2288  0611  0008               	return
  2289  0612                     __end_of_Lcd_Write_String:
  2290                           
  2291                           	psect	text9
  2292  04CD                     __ptext9:	
  2293 ;; *************** function _Lcd_Write_Char *****************
  2294 ;; Defined at:
  2295 ;;		line 83 in file "LCD.c"
  2296 ;; Parameters:    Size  Location     Type
  2297 ;;  a               1    wreg     unsigned char 
  2298 ;; Auto vars:     Size  Location     Type
  2299 ;;  a               1    9[BANK0 ] unsigned char 
  2300 ;;  y               1    8[BANK0 ] unsigned char 
  2301 ;;  temp            1    7[BANK0 ] unsigned char 
  2302 ;; Return value:  Size  Location     Type
  2303 ;;                  1    wreg      void 
  2304 ;; Registers used:
  2305 ;;		wreg, status,2, status,0, pclath, cstack
  2306 ;; Tracked objects:
  2307 ;;		On entry : 0/0
  2308 ;;		On exit  : 0/0
  2309 ;;		Unchanged: 0/0
  2310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2311 ;;      Params:         0       0       0       0       0
  2312 ;;      Locals:         0       3       0       0       0
  2313 ;;      Temps:          0       1       0       0       0
  2314 ;;      Totals:         0       4       0       0       0
  2315 ;;Total ram usage:        4 bytes
  2316 ;; Hardware stack levels used:    1
  2317 ;; Hardware stack levels required when called:    4
  2318 ;; This function calls:
  2319 ;;		_Lcd_Port
  2320 ;; This function is called by:
  2321 ;;		_main
  2322 ;;		_Lcd_Write_String
  2323 ;; This function uses a non-reentrant model
  2324 ;;
  2325                           
  2326                           
  2327                           ;psect for function _Lcd_Write_Char
  2328  04CD                     _Lcd_Write_Char:
  2329                           
  2330                           ;incstack = 0
  2331                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2332                           ;Lcd_Write_Char@a stored from wreg
  2333  04CD  1283               	bcf	3,5	;RP0=0, select bank0
  2334  04CE  1303               	bcf	3,6	;RP1=0, select bank0
  2335  04CF  00A9               	movwf	Lcd_Write_Char@a
  2336  04D0                     l1344:
  2337                           
  2338                           ;LCD.c: 84:     char temp, y;;LCD.c: 85:     temp = a & 0x0F;
  2339  04D0  0829               	movf	Lcd_Write_Char@a,w
  2340  04D1  390F               	andlw	15
  2341  04D2  00A6               	movwf	??_Lcd_Write_Char
  2342  04D3  0826               	movf	??_Lcd_Write_Char,w
  2343  04D4  00A7               	movwf	Lcd_Write_Char@temp
  2344                           
  2345                           ;LCD.c: 86:     y = a & 0xF0;
  2346  04D5  0829               	movf	Lcd_Write_Char@a,w
  2347  04D6  39F0               	andlw	240
  2348  04D7  00A6               	movwf	??_Lcd_Write_Char
  2349  04D8  0826               	movf	??_Lcd_Write_Char,w
  2350  04D9  00A8               	movwf	Lcd_Write_Char@y
  2351  04DA                     l1346:
  2352                           
  2353                           ;LCD.c: 87:     PORTBbits.RB4 = 1;
  2354  04DA  1606               	bsf	6,4	;volatile
  2355  04DB                     l1348:
  2356                           
  2357                           ;LCD.c: 88:     Lcd_Port(y >> 4);
  2358  04DB  0828               	movf	Lcd_Write_Char@y,w
  2359  04DC  00A6               	movwf	??_Lcd_Write_Char
  2360  04DD  3004               	movlw	4
  2361  04DE                     u615:
  2362  04DE  1003               	clrc
  2363  04DF  0CA6               	rrf	??_Lcd_Write_Char,f
  2364  04E0  3EFF               	addlw	-1
  2365  04E1  1D03               	skipz
  2366  04E2  2CDE               	goto	u615
  2367  04E3  0826               	movf	??_Lcd_Write_Char,w
  2368  04E4  120A  118A  2684  120A  118A  	fcall	_Lcd_Port
  2369  04E9                     l1350:
  2370                           
  2371                           ;LCD.c: 89:     RB5 = 1;
  2372  04E9  1283               	bcf	3,5	;RP0=0, select bank0
  2373  04EA  1303               	bcf	3,6	;RP1=0, select bank0
  2374  04EB  1686               	bsf	6,5	;volatile
  2375  04EC                     l1352:
  2376                           
  2377                           ;LCD.c: 90:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2378  04EC  3019               	movlw	25
  2379  04ED  1283               	bcf	3,5	;RP0=0, select bank0
  2380  04EE  1303               	bcf	3,6	;RP1=0, select bank0
  2381  04EF  00A6               	movwf	??_Lcd_Write_Char
  2382  04F0                     u1027:
  2383  04F0  0BA6               	decfsz	??_Lcd_Write_Char,f
  2384  04F1  2CF0               	goto	u1027
  2385  04F2  2CF3               	nop2
  2386  04F3                     l1354:
  2387                           
  2388                           ;LCD.c: 91:     RB5 = 0;
  2389  04F3  1283               	bcf	3,5	;RP0=0, select bank0
  2390  04F4  1303               	bcf	3,6	;RP1=0, select bank0
  2391  04F5  1286               	bcf	6,5	;volatile
  2392  04F6                     l1356:
  2393                           
  2394                           ;LCD.c: 92:     Lcd_Port(temp);
  2395  04F6  0827               	movf	Lcd_Write_Char@temp,w
  2396  04F7  120A  118A  2684  120A  118A  	fcall	_Lcd_Port
  2397  04FC                     l1358:
  2398                           
  2399                           ;LCD.c: 93:     RB5 = 1;
  2400  04FC  1283               	bcf	3,5	;RP0=0, select bank0
  2401  04FD  1303               	bcf	3,6	;RP1=0, select bank0
  2402  04FE  1686               	bsf	6,5	;volatile
  2403  04FF                     l1360:
  2404                           
  2405                           ;LCD.c: 94:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2406  04FF  3019               	movlw	25
  2407  0500  1283               	bcf	3,5	;RP0=0, select bank0
  2408  0501  1303               	bcf	3,6	;RP1=0, select bank0
  2409  0502  00A6               	movwf	??_Lcd_Write_Char
  2410  0503                     u1037:
  2411  0503  0BA6               	decfsz	??_Lcd_Write_Char,f
  2412  0504  2D03               	goto	u1037
  2413  0505  2D06               	nop2
  2414  0506                     l1362:
  2415                           
  2416                           ;LCD.c: 95:     RB5 = 0;
  2417  0506  1283               	bcf	3,5	;RP0=0, select bank0
  2418  0507  1303               	bcf	3,6	;RP1=0, select bank0
  2419  0508  1286               	bcf	6,5	;volatile
  2420  0509                     l167:
  2421  0509  0008               	return
  2422  050A                     __end_of_Lcd_Write_Char:
  2423                           
  2424                           	psect	text10
  2425  03EB                     __ptext10:	
  2426 ;; *************** function _Lcd_Set_Cursor *****************
  2427 ;; Defined at:
  2428 ;;		line 48 in file "LCD.c"
  2429 ;; Parameters:    Size  Location     Type
  2430 ;;  a               1    wreg     unsigned char 
  2431 ;;  b               1    9[BANK0 ] unsigned char 
  2432 ;; Auto vars:     Size  Location     Type
  2433 ;;  a               1   12[BANK0 ] unsigned char 
  2434 ;;  temp            1   15[BANK0 ] unsigned char 
  2435 ;;  y               1   14[BANK0 ] unsigned char 
  2436 ;;  z               1   13[BANK0 ] unsigned char 
  2437 ;; Return value:  Size  Location     Type
  2438 ;;                  1    wreg      void 
  2439 ;; Registers used:
  2440 ;;		wreg, status,2, status,0, pclath, cstack
  2441 ;; Tracked objects:
  2442 ;;		On entry : 0/0
  2443 ;;		On exit  : 0/0
  2444 ;;		Unchanged: 0/0
  2445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2446 ;;      Params:         0       1       0       0       0
  2447 ;;      Locals:         0       4       0       0       0
  2448 ;;      Temps:          0       2       0       0       0
  2449 ;;      Totals:         0       7       0       0       0
  2450 ;;Total ram usage:        7 bytes
  2451 ;; Hardware stack levels used:    1
  2452 ;; Hardware stack levels required when called:    5
  2453 ;; This function calls:
  2454 ;;		_Lcd_Cmd
  2455 ;; This function is called by:
  2456 ;;		_main
  2457 ;; This function uses a non-reentrant model
  2458 ;;
  2459                           
  2460                           
  2461                           ;psect for function _Lcd_Set_Cursor
  2462  03EB                     _Lcd_Set_Cursor:
  2463                           
  2464                           ;incstack = 0
  2465                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2466                           ;Lcd_Set_Cursor@a stored from wreg
  2467  03EB  1283               	bcf	3,5	;RP0=0, select bank0
  2468  03EC  1303               	bcf	3,6	;RP1=0, select bank0
  2469  03ED  00AC               	movwf	Lcd_Set_Cursor@a
  2470  03EE                     l1522:
  2471                           
  2472                           ;LCD.c: 49:     char temp, z, y;;LCD.c: 50:     if (a == 1) {
  2473  03EE  032C               	decf	Lcd_Set_Cursor@a,w
  2474  03EF  1D03               	btfss	3,2
  2475  03F0  2BF2               	goto	u881
  2476  03F1  2BF3               	goto	u880
  2477  03F2                     u881:
  2478  03F2  2C18               	goto	l1532
  2479  03F3                     u880:
  2480  03F3                     l1524:
  2481                           
  2482                           ;LCD.c: 51:         temp = 0x80 + b - 1;
  2483  03F3  0829               	movf	Lcd_Set_Cursor@b,w
  2484  03F4  3E7F               	addlw	127
  2485  03F5  00AA               	movwf	??_Lcd_Set_Cursor
  2486  03F6  082A               	movf	??_Lcd_Set_Cursor,w
  2487  03F7  00AF               	movwf	Lcd_Set_Cursor@temp
  2488                           
  2489                           ;LCD.c: 52:         z = temp >> 4;
  2490  03F8  082F               	movf	Lcd_Set_Cursor@temp,w
  2491  03F9  00AA               	movwf	??_Lcd_Set_Cursor
  2492  03FA  3004               	movlw	4
  2493  03FB                     u895:
  2494  03FB  1003               	clrc
  2495  03FC  0CAA               	rrf	??_Lcd_Set_Cursor,f
  2496  03FD  3EFF               	addlw	-1
  2497  03FE  1D03               	skipz
  2498  03FF  2BFB               	goto	u895
  2499  0400  082A               	movf	??_Lcd_Set_Cursor,w
  2500  0401  00AB               	movwf	??_Lcd_Set_Cursor+1
  2501  0402  082B               	movf	??_Lcd_Set_Cursor+1,w
  2502  0403  00AD               	movwf	Lcd_Set_Cursor@z
  2503  0404                     l1526:
  2504                           
  2505                           ;LCD.c: 53:         y = temp & 0x0F;
  2506  0404  082F               	movf	Lcd_Set_Cursor@temp,w
  2507  0405  390F               	andlw	15
  2508  0406  00AA               	movwf	??_Lcd_Set_Cursor
  2509  0407  082A               	movf	??_Lcd_Set_Cursor,w
  2510  0408  00AE               	movwf	Lcd_Set_Cursor@y
  2511  0409                     l1528:
  2512                           
  2513                           ;LCD.c: 54:         Lcd_Cmd(z);
  2514  0409  082D               	movf	Lcd_Set_Cursor@z,w
  2515  040A  120A  118A  26A4  120A  118A  	fcall	_Lcd_Cmd
  2516  040F                     l1530:
  2517                           
  2518                           ;LCD.c: 55:         Lcd_Cmd(y);
  2519  040F  1283               	bcf	3,5	;RP0=0, select bank0
  2520  0410  1303               	bcf	3,6	;RP1=0, select bank0
  2521  0411  082E               	movf	Lcd_Set_Cursor@y,w
  2522  0412  120A  118A  26A4  120A  118A  	fcall	_Lcd_Cmd
  2523                           
  2524                           ;LCD.c: 56:     } else if (a == 2) {
  2525  0417  2C42               	goto	l161
  2526  0418                     l1532:
  2527  0418  3002               	movlw	2
  2528  0419  062C               	xorwf	Lcd_Set_Cursor@a,w
  2529  041A  1D03               	btfss	3,2
  2530  041B  2C1D               	goto	u901
  2531  041C  2C1E               	goto	u900
  2532  041D                     u901:
  2533  041D  2C42               	goto	l161
  2534  041E                     u900:
  2535  041E                     l1534:
  2536                           
  2537                           ;LCD.c: 57:         temp = 0xC0 + b - 1;
  2538  041E  0829               	movf	Lcd_Set_Cursor@b,w
  2539  041F  3EBF               	addlw	191
  2540  0420  00AA               	movwf	??_Lcd_Set_Cursor
  2541  0421  082A               	movf	??_Lcd_Set_Cursor,w
  2542  0422  00AF               	movwf	Lcd_Set_Cursor@temp
  2543                           
  2544                           ;LCD.c: 58:         z = temp >> 4;
  2545  0423  082F               	movf	Lcd_Set_Cursor@temp,w
  2546  0424  00AA               	movwf	??_Lcd_Set_Cursor
  2547  0425  3004               	movlw	4
  2548  0426                     u915:
  2549  0426  1003               	clrc
  2550  0427  0CAA               	rrf	??_Lcd_Set_Cursor,f
  2551  0428  3EFF               	addlw	-1
  2552  0429  1D03               	skipz
  2553  042A  2C26               	goto	u915
  2554  042B  082A               	movf	??_Lcd_Set_Cursor,w
  2555  042C  00AB               	movwf	??_Lcd_Set_Cursor+1
  2556  042D  082B               	movf	??_Lcd_Set_Cursor+1,w
  2557  042E  00AD               	movwf	Lcd_Set_Cursor@z
  2558  042F                     l1536:
  2559                           
  2560                           ;LCD.c: 59:         y = temp & 0x0F;
  2561  042F  082F               	movf	Lcd_Set_Cursor@temp,w
  2562  0430  390F               	andlw	15
  2563  0431  00AA               	movwf	??_Lcd_Set_Cursor
  2564  0432  082A               	movf	??_Lcd_Set_Cursor,w
  2565  0433  00AE               	movwf	Lcd_Set_Cursor@y
  2566  0434                     l1538:
  2567                           
  2568                           ;LCD.c: 60:         Lcd_Cmd(z);
  2569  0434  082D               	movf	Lcd_Set_Cursor@z,w
  2570  0435  120A  118A  26A4  120A  118A  	fcall	_Lcd_Cmd
  2571  043A                     l1540:
  2572                           
  2573                           ;LCD.c: 61:         Lcd_Cmd(y);
  2574  043A  1283               	bcf	3,5	;RP0=0, select bank0
  2575  043B  1303               	bcf	3,6	;RP1=0, select bank0
  2576  043C  082E               	movf	Lcd_Set_Cursor@y,w
  2577  043D  120A  118A  26A4  120A  118A  	fcall	_Lcd_Cmd
  2578  0442                     l161:
  2579  0442  0008               	return
  2580  0443                     __end_of_Lcd_Set_Cursor:
  2581                           
  2582                           	psect	text11
  2583  0389                     __ptext11:	
  2584 ;; *************** function _Lcd_Init *****************
  2585 ;; Defined at:
  2586 ;;		line 65 in file "LCD.c"
  2587 ;; Parameters:    Size  Location     Type
  2588 ;;		None
  2589 ;; Auto vars:     Size  Location     Type
  2590 ;;		None
  2591 ;; Return value:  Size  Location     Type
  2592 ;;                  1    wreg      void 
  2593 ;; Registers used:
  2594 ;;		wreg, status,2, status,0, pclath, cstack
  2595 ;; Tracked objects:
  2596 ;;		On entry : 0/0
  2597 ;;		On exit  : 0/0
  2598 ;;		Unchanged: 0/0
  2599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2600 ;;      Params:         0       0       0       0       0
  2601 ;;      Locals:         0       0       0       0       0
  2602 ;;      Temps:          0       2       0       0       0
  2603 ;;      Totals:         0       2       0       0       0
  2604 ;;Total ram usage:        2 bytes
  2605 ;; Hardware stack levels used:    1
  2606 ;; Hardware stack levels required when called:    5
  2607 ;; This function calls:
  2608 ;;		_Lcd_Cmd
  2609 ;;		_Lcd_Port
  2610 ;; This function is called by:
  2611 ;;		_main
  2612 ;; This function uses a non-reentrant model
  2613 ;;
  2614                           
  2615                           
  2616                           ;psect for function _Lcd_Init
  2617  0389                     _Lcd_Init:
  2618  0389                     l1510:	
  2619                           ;incstack = 0
  2620                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2621                           
  2622                           
  2623                           ;LCD.c: 66:     Lcd_Port(0x00);
  2624  0389  3000               	movlw	0
  2625  038A  120A  118A  2684  120A  118A  	fcall	_Lcd_Port
  2626  038F                     l1512:
  2627                           
  2628                           ;LCD.c: 67:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2629  038F  3034               	movlw	52
  2630  0390  1283               	bcf	3,5	;RP0=0, select bank0
  2631  0391  1303               	bcf	3,6	;RP1=0, select bank0
  2632  0392  00AA               	movwf	??_Lcd_Init+1
  2633  0393  30F1               	movlw	241
  2634  0394  00A9               	movwf	??_Lcd_Init
  2635  0395                     u1047:
  2636  0395  0BA9               	decfsz	??_Lcd_Init,f
  2637  0396  2B95               	goto	u1047
  2638  0397  0BAA               	decfsz	??_Lcd_Init+1,f
  2639  0398  2B95               	goto	u1047
  2640  0399                     l1514:
  2641                           
  2642                           ;LCD.c: 68:     Lcd_Cmd(0x03);
  2643  0399  3003               	movlw	3
  2644  039A  120A  118A  26A4  120A  118A  	fcall	_Lcd_Cmd
  2645                           
  2646                           ;LCD.c: 69:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2647  039F  300D               	movlw	13
  2648  03A0  1283               	bcf	3,5	;RP0=0, select bank0
  2649  03A1  1303               	bcf	3,6	;RP1=0, select bank0
  2650  03A2  00AA               	movwf	??_Lcd_Init+1
  2651  03A3  30FB               	movlw	251
  2652  03A4  00A9               	movwf	??_Lcd_Init
  2653  03A5                     u1057:
  2654  03A5  0BA9               	decfsz	??_Lcd_Init,f
  2655  03A6  2BA5               	goto	u1057
  2656  03A7  0BAA               	decfsz	??_Lcd_Init+1,f
  2657  03A8  2BA5               	goto	u1057
  2658  03A9                     l1516:
  2659                           
  2660                           ;LCD.c: 70:     Lcd_Cmd(0x03);
  2661  03A9  3003               	movlw	3
  2662  03AA  120A  118A  26A4  120A  118A  	fcall	_Lcd_Cmd
  2663  03AF                     l1518:
  2664                           
  2665                           ;LCD.c: 71:     _delay((unsigned long)((11)*(8000000/4000.0)));
  2666  03AF  301D               	movlw	29
  2667  03B0  1283               	bcf	3,5	;RP0=0, select bank0
  2668  03B1  1303               	bcf	3,6	;RP1=0, select bank0
  2669  03B2  00AA               	movwf	??_Lcd_Init+1
  2670  03B3  3090               	movlw	144
  2671  03B4  00A9               	movwf	??_Lcd_Init
  2672  03B5                     u1067:
  2673  03B5  0BA9               	decfsz	??_Lcd_Init,f
  2674  03B6  2BB5               	goto	u1067
  2675  03B7  0BAA               	decfsz	??_Lcd_Init+1,f
  2676  03B8  2BB5               	goto	u1067
  2677  03B9  0000               	nop
  2678                           
  2679                           ;LCD.c: 72:     Lcd_Cmd(0x03);
  2680  03BA  3003               	movlw	3
  2681  03BB  120A  118A  26A4  120A  118A  	fcall	_Lcd_Cmd
  2682                           
  2683                           ;LCD.c: 74:     Lcd_Cmd(0x02);
  2684  03C0  3002               	movlw	2
  2685  03C1  120A  118A  26A4  120A  118A  	fcall	_Lcd_Cmd
  2686                           
  2687                           ;LCD.c: 75:     Lcd_Cmd(0x02);
  2688  03C6  3002               	movlw	2
  2689  03C7  120A  118A  26A4  120A  118A  	fcall	_Lcd_Cmd
  2690                           
  2691                           ;LCD.c: 76:     Lcd_Cmd(0x08);
  2692  03CC  3008               	movlw	8
  2693  03CD  120A  118A  26A4  120A  118A  	fcall	_Lcd_Cmd
  2694                           
  2695                           ;LCD.c: 77:     Lcd_Cmd(0x00);
  2696  03D2  3000               	movlw	0
  2697  03D3  120A  118A  26A4  120A  118A  	fcall	_Lcd_Cmd
  2698                           
  2699                           ;LCD.c: 78:     Lcd_Cmd(0x0C);
  2700  03D8  300C               	movlw	12
  2701  03D9  120A  118A  26A4  120A  118A  	fcall	_Lcd_Cmd
  2702                           
  2703                           ;LCD.c: 79:     Lcd_Cmd(0x00);
  2704  03DE  3000               	movlw	0
  2705  03DF  120A  118A  26A4  120A  118A  	fcall	_Lcd_Cmd
  2706                           
  2707                           ;LCD.c: 80:     Lcd_Cmd(0x06);
  2708  03E4  3006               	movlw	6
  2709  03E5  120A  118A  26A4  120A  118A  	fcall	_Lcd_Cmd
  2710  03EA                     l164:
  2711  03EA  0008               	return
  2712  03EB                     __end_of_Lcd_Init:
  2713                           
  2714                           	psect	text12
  2715  06D3                     __ptext12:	
  2716 ;; *************** function _Lcd_Clear *****************
  2717 ;; Defined at:
  2718 ;;		line 43 in file "LCD.c"
  2719 ;; Parameters:    Size  Location     Type
  2720 ;;		None
  2721 ;; Auto vars:     Size  Location     Type
  2722 ;;		None
  2723 ;; Return value:  Size  Location     Type
  2724 ;;                  1    wreg      void 
  2725 ;; Registers used:
  2726 ;;		wreg, status,2, status,0, pclath, cstack
  2727 ;; Tracked objects:
  2728 ;;		On entry : 0/0
  2729 ;;		On exit  : 0/0
  2730 ;;		Unchanged: 0/0
  2731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2732 ;;      Params:         0       0       0       0       0
  2733 ;;      Locals:         0       0       0       0       0
  2734 ;;      Temps:          0       0       0       0       0
  2735 ;;      Totals:         0       0       0       0       0
  2736 ;;Total ram usage:        0 bytes
  2737 ;; Hardware stack levels used:    1
  2738 ;; Hardware stack levels required when called:    5
  2739 ;; This function calls:
  2740 ;;		_Lcd_Cmd
  2741 ;; This function is called by:
  2742 ;;		_main
  2743 ;; This function uses a non-reentrant model
  2744 ;;
  2745                           
  2746                           
  2747                           ;psect for function _Lcd_Clear
  2748  06D3                     _Lcd_Clear:
  2749  06D3                     l1520:	
  2750                           ;incstack = 0
  2751                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2752                           
  2753                           
  2754                           ;LCD.c: 44:     Lcd_Cmd(0);
  2755  06D3  3000               	movlw	0
  2756  06D4  120A  118A  26A4  120A  118A  	fcall	_Lcd_Cmd
  2757                           
  2758                           ;LCD.c: 45:     Lcd_Cmd(1);
  2759  06D9  3001               	movlw	1
  2760  06DA  120A  118A  26A4  120A  118A  	fcall	_Lcd_Cmd
  2761  06DF                     l155:
  2762  06DF  0008               	return
  2763  06E0                     __end_of_Lcd_Clear:
  2764                           
  2765                           	psect	text13
  2766  06A4                     __ptext13:	
  2767 ;; *************** function _Lcd_Cmd *****************
  2768 ;; Defined at:
  2769 ;;		line 35 in file "LCD.c"
  2770 ;; Parameters:    Size  Location     Type
  2771 ;;  a               1    wreg     unsigned char 
  2772 ;; Auto vars:     Size  Location     Type
  2773 ;;  a               1    8[BANK0 ] unsigned char 
  2774 ;; Return value:  Size  Location     Type
  2775 ;;                  1    wreg      void 
  2776 ;; Registers used:
  2777 ;;		wreg, status,2, status,0, pclath, cstack
  2778 ;; Tracked objects:
  2779 ;;		On entry : 0/0
  2780 ;;		On exit  : 0/0
  2781 ;;		Unchanged: 0/0
  2782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2783 ;;      Params:         0       0       0       0       0
  2784 ;;      Locals:         0       1       0       0       0
  2785 ;;      Temps:          0       2       0       0       0
  2786 ;;      Totals:         0       3       0       0       0
  2787 ;;Total ram usage:        3 bytes
  2788 ;; Hardware stack levels used:    1
  2789 ;; Hardware stack levels required when called:    4
  2790 ;; This function calls:
  2791 ;;		_Lcd_Port
  2792 ;; This function is called by:
  2793 ;;		_Lcd_Clear
  2794 ;;		_Lcd_Set_Cursor
  2795 ;;		_Lcd_Init
  2796 ;;		_Lcd_Shift_Right
  2797 ;;		_Lcd_Shift_Left
  2798 ;; This function uses a non-reentrant model
  2799 ;;
  2800                           
  2801                           
  2802                           ;psect for function _Lcd_Cmd
  2803  06A4                     _Lcd_Cmd:
  2804                           
  2805                           ;incstack = 0
  2806                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2807                           ;Lcd_Cmd@a stored from wreg
  2808  06A4  1283               	bcf	3,5	;RP0=0, select bank0
  2809  06A5  1303               	bcf	3,6	;RP1=0, select bank0
  2810  06A6  00A8               	movwf	Lcd_Cmd@a
  2811  06A7                     l1376:
  2812                           
  2813                           ;LCD.c: 36:     PORTBbits.RB4 = 0;
  2814  06A7  1206               	bcf	6,4	;volatile
  2815  06A8                     l1378:
  2816                           
  2817                           ;LCD.c: 37:     Lcd_Port(a);
  2818  06A8  0828               	movf	Lcd_Cmd@a,w
  2819  06A9  120A  118A  2684  120A  118A  	fcall	_Lcd_Port
  2820  06AE                     l1380:
  2821                           
  2822                           ;LCD.c: 38:     RB5 = 1;
  2823  06AE  1283               	bcf	3,5	;RP0=0, select bank0
  2824  06AF  1303               	bcf	3,6	;RP1=0, select bank0
  2825  06B0  1686               	bsf	6,5	;volatile
  2826  06B1                     l1382:
  2827                           
  2828                           ;LCD.c: 39:     _delay((unsigned long)((4)*(8000000/4000.0)));
  2829  06B1  300B               	movlw	11
  2830  06B2  1283               	bcf	3,5	;RP0=0, select bank0
  2831  06B3  1303               	bcf	3,6	;RP1=0, select bank0
  2832  06B4  00A7               	movwf	??_Lcd_Cmd+1
  2833  06B5  3061               	movlw	97
  2834  06B6  00A6               	movwf	??_Lcd_Cmd
  2835  06B7                     u1077:
  2836  06B7  0BA6               	decfsz	??_Lcd_Cmd,f
  2837  06B8  2EB7               	goto	u1077
  2838  06B9  0BA7               	decfsz	??_Lcd_Cmd+1,f
  2839  06BA  2EB7               	goto	u1077
  2840  06BB  2EBC               	nop2
  2841  06BC                     l1384:
  2842                           
  2843                           ;LCD.c: 40:     RB5 = 0;
  2844  06BC  1283               	bcf	3,5	;RP0=0, select bank0
  2845  06BD  1303               	bcf	3,6	;RP1=0, select bank0
  2846  06BE  1286               	bcf	6,5	;volatile
  2847  06BF                     l152:
  2848  06BF  0008               	return
  2849  06C0                     __end_of_Lcd_Cmd:
  2850                           
  2851                           	psect	text14
  2852  0684                     __ptext14:	
  2853 ;; *************** function _Lcd_Port *****************
  2854 ;; Defined at:
  2855 ;;		line 13 in file "LCD.c"
  2856 ;; Parameters:    Size  Location     Type
  2857 ;;  a               1    wreg     unsigned char 
  2858 ;; Auto vars:     Size  Location     Type
  2859 ;;  a               1    5[BANK0 ] unsigned char 
  2860 ;; Return value:  Size  Location     Type
  2861 ;;                  1    wreg      void 
  2862 ;; Registers used:
  2863 ;;		wreg
  2864 ;; Tracked objects:
  2865 ;;		On entry : 0/0
  2866 ;;		On exit  : 0/0
  2867 ;;		Unchanged: 0/0
  2868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2869 ;;      Params:         0       0       0       0       0
  2870 ;;      Locals:         0       1       0       0       0
  2871 ;;      Temps:          0       0       0       0       0
  2872 ;;      Totals:         0       1       0       0       0
  2873 ;;Total ram usage:        1 bytes
  2874 ;; Hardware stack levels used:    1
  2875 ;; Hardware stack levels required when called:    3
  2876 ;; This function calls:
  2877 ;;		Nothing
  2878 ;; This function is called by:
  2879 ;;		_Lcd_Cmd
  2880 ;;		_Lcd_Init
  2881 ;;		_Lcd_Write_Char
  2882 ;; This function uses a non-reentrant model
  2883 ;;
  2884                           
  2885                           
  2886                           ;psect for function _Lcd_Port
  2887  0684                     _Lcd_Port:
  2888                           
  2889                           ;incstack = 0
  2890                           ; Regs used in _Lcd_Port: [wreg]
  2891                           ;Lcd_Port@a stored from wreg
  2892  0684  1283               	bcf	3,5	;RP0=0, select bank0
  2893  0685  1303               	bcf	3,6	;RP1=0, select bank0
  2894  0686  00A5               	movwf	Lcd_Port@a
  2895  0687                     l1300:
  2896                           
  2897                           ;LCD.c: 14:     if (a & 1)
  2898  0687  1C25               	btfss	Lcd_Port@a,0
  2899  0688  2E8A               	goto	u501
  2900  0689  2E8B               	goto	u500
  2901  068A                     u501:
  2902  068A  2E8D               	goto	l141
  2903  068B                     u500:
  2904  068B                     l1302:
  2905                           
  2906                           ;LCD.c: 15:         RB0 = 1;
  2907  068B  1406               	bsf	6,0	;volatile
  2908  068C  2E8E               	goto	l142
  2909  068D                     l141:	
  2910                           ;LCD.c: 16:     else
  2911                           
  2912                           
  2913                           ;LCD.c: 17:         RB0 = 0;
  2914  068D  1006               	bcf	6,0	;volatile
  2915  068E                     l142:
  2916                           
  2917                           ;LCD.c: 19:     if (a & 2)
  2918  068E  1CA5               	btfss	Lcd_Port@a,1
  2919  068F  2E91               	goto	u511
  2920  0690  2E92               	goto	u510
  2921  0691                     u511:
  2922  0691  2E94               	goto	l143
  2923  0692                     u510:
  2924  0692                     l1304:
  2925                           
  2926                           ;LCD.c: 20:         RB1 = 1;
  2927  0692  1486               	bsf	6,1	;volatile
  2928  0693  2E95               	goto	l144
  2929  0694                     l143:	
  2930                           ;LCD.c: 21:     else
  2931                           
  2932                           
  2933                           ;LCD.c: 22:         RB1 = 0;
  2934  0694  1086               	bcf	6,1	;volatile
  2935  0695                     l144:
  2936                           
  2937                           ;LCD.c: 24:     if (a & 4)
  2938  0695  1D25               	btfss	Lcd_Port@a,2
  2939  0696  2E98               	goto	u521
  2940  0697  2E99               	goto	u520
  2941  0698                     u521:
  2942  0698  2E9B               	goto	l145
  2943  0699                     u520:
  2944  0699                     l1306:
  2945                           
  2946                           ;LCD.c: 25:         RB2 = 1;
  2947  0699  1506               	bsf	6,2	;volatile
  2948  069A  2E9C               	goto	l146
  2949  069B                     l145:	
  2950                           ;LCD.c: 26:     else
  2951                           
  2952                           
  2953                           ;LCD.c: 27:         RB2 = 0;
  2954  069B  1106               	bcf	6,2	;volatile
  2955  069C                     l146:
  2956                           
  2957                           ;LCD.c: 29:     if (a & 8)
  2958  069C  1DA5               	btfss	Lcd_Port@a,3
  2959  069D  2E9F               	goto	u531
  2960  069E  2EA0               	goto	u530
  2961  069F                     u531:
  2962  069F  2EA2               	goto	l147
  2963  06A0                     u530:
  2964  06A0                     l1308:
  2965                           
  2966                           ;LCD.c: 30:         RB3 = 1;
  2967  06A0  1586               	bsf	6,3	;volatile
  2968  06A1  2EA3               	goto	l149
  2969  06A2                     l147:	
  2970                           ;LCD.c: 31:     else
  2971                           
  2972                           
  2973                           ;LCD.c: 32:         RB3 = 0;
  2974  06A2  1186               	bcf	6,3	;volatile
  2975  06A3                     l149:
  2976  06A3  0008               	return
  2977  06A4                     __end_of_Lcd_Port:
  2978                           
  2979                           	psect	text15
  2980  06ED                     __ptext15:	
  2981 ;; *************** function _I2C_Master_Write *****************
  2982 ;; Defined at:
  2983 ;;		line 65 in file "I2C.c"
  2984 ;; Parameters:    Size  Location     Type
  2985 ;;  d               2    5[BANK0 ] unsigned int 
  2986 ;; Auto vars:     Size  Location     Type
  2987 ;;		None
  2988 ;; Return value:  Size  Location     Type
  2989 ;;                  1    wreg      void 
  2990 ;; Registers used:
  2991 ;;		wreg, status,2, status,0, pclath, cstack
  2992 ;; Tracked objects:
  2993 ;;		On entry : 0/0
  2994 ;;		On exit  : 0/0
  2995 ;;		Unchanged: 0/0
  2996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2997 ;;      Params:         0       2       0       0       0
  2998 ;;      Locals:         0       0       0       0       0
  2999 ;;      Temps:          0       0       0       0       0
  3000 ;;      Totals:         0       2       0       0       0
  3001 ;;Total ram usage:        2 bytes
  3002 ;; Hardware stack levels used:    1
  3003 ;; Hardware stack levels required when called:    4
  3004 ;; This function calls:
  3005 ;;		_I2C_Master_Wait
  3006 ;; This function is called by:
  3007 ;;		_main
  3008 ;; This function uses a non-reentrant model
  3009 ;;
  3010                           
  3011                           
  3012                           ;psect for function _I2C_Master_Write
  3013  06ED                     _I2C_Master_Write:
  3014  06ED                     l1554:	
  3015                           ;incstack = 0
  3016                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  3017                           
  3018                           
  3019                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  3020  06ED  120A  118A  26E0  120A  118A  	fcall	_I2C_Master_Wait
  3021  06F2                     l1556:
  3022                           
  3023                           ;I2C.c: 68:     SSPBUF = d;
  3024  06F2  1283               	bcf	3,5	;RP0=0, select bank0
  3025  06F3  1303               	bcf	3,6	;RP1=0, select bank0
  3026  06F4  0825               	movf	I2C_Master_Write@d,w
  3027  06F5  0093               	movwf	19	;volatile
  3028  06F6                     l226:
  3029  06F6  0008               	return
  3030  06F7                     __end_of_I2C_Master_Write:
  3031                           
  3032                           	psect	text16
  3033  06F7                     __ptext16:	
  3034 ;; *************** function _I2C_Master_Stop *****************
  3035 ;; Defined at:
  3036 ;;		line 55 in file "I2C.c"
  3037 ;; Parameters:    Size  Location     Type
  3038 ;;		None
  3039 ;; Auto vars:     Size  Location     Type
  3040 ;;		None
  3041 ;; Return value:  Size  Location     Type
  3042 ;;                  1    wreg      void 
  3043 ;; Registers used:
  3044 ;;		wreg, status,2, status,0, pclath, cstack
  3045 ;; Tracked objects:
  3046 ;;		On entry : 0/0
  3047 ;;		On exit  : 0/0
  3048 ;;		Unchanged: 0/0
  3049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3050 ;;      Params:         0       0       0       0       0
  3051 ;;      Locals:         0       0       0       0       0
  3052 ;;      Temps:          0       0       0       0       0
  3053 ;;      Totals:         0       0       0       0       0
  3054 ;;Total ram usage:        0 bytes
  3055 ;; Hardware stack levels used:    1
  3056 ;; Hardware stack levels required when called:    4
  3057 ;; This function calls:
  3058 ;;		_I2C_Master_Wait
  3059 ;; This function is called by:
  3060 ;;		_main
  3061 ;; This function uses a non-reentrant model
  3062 ;;
  3063                           
  3064                           
  3065                           ;psect for function _I2C_Master_Stop
  3066  06F7                     _I2C_Master_Stop:
  3067  06F7                     l1558:	
  3068                           ;incstack = 0
  3069                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  3070                           
  3071                           
  3072                           ;I2C.c: 57:     I2C_Master_Wait();
  3073  06F7  120A  118A  26E0  120A  118A  	fcall	_I2C_Master_Wait
  3074  06FC                     l1560:
  3075                           
  3076                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  3077  06FC  1683               	bsf	3,5	;RP0=1, select bank1
  3078  06FD  1303               	bcf	3,6	;RP1=0, select bank1
  3079  06FE  1511               	bsf	17,2	;volatile
  3080  06FF                     l223:
  3081  06FF  0008               	return
  3082  0700                     __end_of_I2C_Master_Stop:
  3083                           
  3084                           	psect	text17
  3085  0700                     __ptext17:	
  3086 ;; *************** function _I2C_Master_Start *****************
  3087 ;; Defined at:
  3088 ;;		line 39 in file "I2C.c"
  3089 ;; Parameters:    Size  Location     Type
  3090 ;;		None
  3091 ;; Auto vars:     Size  Location     Type
  3092 ;;		None
  3093 ;; Return value:  Size  Location     Type
  3094 ;;                  1    wreg      void 
  3095 ;; Registers used:
  3096 ;;		wreg, status,2, status,0, pclath, cstack
  3097 ;; Tracked objects:
  3098 ;;		On entry : 0/0
  3099 ;;		On exit  : 0/0
  3100 ;;		Unchanged: 0/0
  3101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3102 ;;      Params:         0       0       0       0       0
  3103 ;;      Locals:         0       0       0       0       0
  3104 ;;      Temps:          0       0       0       0       0
  3105 ;;      Totals:         0       0       0       0       0
  3106 ;;Total ram usage:        0 bytes
  3107 ;; Hardware stack levels used:    1
  3108 ;; Hardware stack levels required when called:    4
  3109 ;; This function calls:
  3110 ;;		_I2C_Master_Wait
  3111 ;; This function is called by:
  3112 ;;		_main
  3113 ;; This function uses a non-reentrant model
  3114 ;;
  3115                           
  3116                           
  3117                           ;psect for function _I2C_Master_Start
  3118  0700                     _I2C_Master_Start:
  3119  0700                     l1550:	
  3120                           ;incstack = 0
  3121                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  3122                           
  3123                           
  3124                           ;I2C.c: 41:     I2C_Master_Wait();
  3125  0700  120A  118A  26E0  120A  118A  	fcall	_I2C_Master_Wait
  3126  0705                     l1552:
  3127                           
  3128                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  3129  0705  1683               	bsf	3,5	;RP0=1, select bank1
  3130  0706  1303               	bcf	3,6	;RP1=0, select bank1
  3131  0707  1411               	bsf	17,0	;volatile
  3132  0708                     l217:
  3133  0708  0008               	return
  3134  0709                     __end_of_I2C_Master_Start:
  3135                           
  3136                           	psect	text18
  3137  05B7                     __ptext18:	
  3138 ;; *************** function _I2C_Master_Read *****************
  3139 ;; Defined at:
  3140 ;;		line 74 in file "I2C.c"
  3141 ;; Parameters:    Size  Location     Type
  3142 ;;  a               2    5[BANK0 ] unsigned short 
  3143 ;; Auto vars:     Size  Location     Type
  3144 ;;  temp            2    9[BANK0 ] unsigned short 
  3145 ;; Return value:  Size  Location     Type
  3146 ;;                  2    5[BANK0 ] unsigned short 
  3147 ;; Registers used:
  3148 ;;		wreg, status,2, status,0, pclath, cstack
  3149 ;; Tracked objects:
  3150 ;;		On entry : 0/0
  3151 ;;		On exit  : 0/0
  3152 ;;		Unchanged: 0/0
  3153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3154 ;;      Params:         0       2       0       0       0
  3155 ;;      Locals:         0       2       0       0       0
  3156 ;;      Temps:          0       2       0       0       0
  3157 ;;      Totals:         0       6       0       0       0
  3158 ;;Total ram usage:        6 bytes
  3159 ;; Hardware stack levels used:    1
  3160 ;; Hardware stack levels required when called:    4
  3161 ;; This function calls:
  3162 ;;		_I2C_Master_Wait
  3163 ;; This function is called by:
  3164 ;;		_main
  3165 ;; This function uses a non-reentrant model
  3166 ;;
  3167                           
  3168                           
  3169                           ;psect for function _I2C_Master_Read
  3170  05B7                     _I2C_Master_Read:
  3171  05B7                     l1562:	
  3172                           ;incstack = 0
  3173                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  3174                           
  3175                           
  3176                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  3177  05B7  120A  118A  26E0  120A  118A  	fcall	_I2C_Master_Wait
  3178  05BC                     l1564:
  3179                           
  3180                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  3181  05BC  1683               	bsf	3,5	;RP0=1, select bank1
  3182  05BD  1303               	bcf	3,6	;RP1=0, select bank1
  3183  05BE  1591               	bsf	17,3	;volatile
  3184                           
  3185                           ;I2C.c: 79:     I2C_Master_Wait();
  3186  05BF  120A  118A  26E0  120A  118A  	fcall	_I2C_Master_Wait
  3187  05C4                     l1566:
  3188                           
  3189                           ;I2C.c: 80:     temp = SSPBUF;
  3190  05C4  1283               	bcf	3,5	;RP0=0, select bank0
  3191  05C5  1303               	bcf	3,6	;RP1=0, select bank0
  3192  05C6  0813               	movf	19,w	;volatile
  3193  05C7  00A7               	movwf	??_I2C_Master_Read
  3194  05C8  01A8               	clrf	??_I2C_Master_Read+1
  3195  05C9  0827               	movf	??_I2C_Master_Read,w
  3196  05CA  00A9               	movwf	I2C_Master_Read@temp
  3197  05CB  0828               	movf	??_I2C_Master_Read+1,w
  3198  05CC  00AA               	movwf	I2C_Master_Read@temp+1
  3199  05CD                     l1568:
  3200                           
  3201                           ;I2C.c: 81:     I2C_Master_Wait();
  3202  05CD  120A  118A  26E0  120A  118A  	fcall	_I2C_Master_Wait
  3203  05D2                     l1570:
  3204                           
  3205                           ;I2C.c: 82:     if(a == 1){
  3206  05D2  1283               	bcf	3,5	;RP0=0, select bank0
  3207  05D3  1303               	bcf	3,6	;RP1=0, select bank0
  3208  05D4  0325               	decf	I2C_Master_Read@a,w
  3209  05D5  0426               	iorwf	I2C_Master_Read@a+1,w
  3210  05D6  1D03               	btfss	3,2
  3211  05D7  2DD9               	goto	u931
  3212  05D8  2DDA               	goto	u930
  3213  05D9                     u931:
  3214  05D9  2DDE               	goto	l229
  3215  05DA                     u930:
  3216  05DA                     l1572:
  3217                           
  3218                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  3219  05DA  1683               	bsf	3,5	;RP0=1, select bank1
  3220  05DB  1303               	bcf	3,6	;RP1=0, select bank1
  3221  05DC  1291               	bcf	17,5	;volatile
  3222                           
  3223                           ;I2C.c: 84:     }else{
  3224  05DD  2DE1               	goto	l230
  3225  05DE                     l229:
  3226                           
  3227                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  3228  05DE  1683               	bsf	3,5	;RP0=1, select bank1
  3229  05DF  1303               	bcf	3,6	;RP1=0, select bank1
  3230  05E0  1691               	bsf	17,5	;volatile
  3231  05E1                     l230:	
  3232                           ;I2C.c: 86:     }
  3233                           
  3234                           
  3235                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  3236  05E1  1611               	bsf	17,4	;volatile
  3237  05E2                     l1574:
  3238                           
  3239                           ;I2C.c: 88:     return temp;
  3240  05E2  1283               	bcf	3,5	;RP0=0, select bank0
  3241  05E3  1303               	bcf	3,6	;RP1=0, select bank0
  3242  05E4  082A               	movf	I2C_Master_Read@temp+1,w
  3243  05E5  00A6               	movwf	?_I2C_Master_Read+1
  3244  05E6  0829               	movf	I2C_Master_Read@temp,w
  3245  05E7  00A5               	movwf	?_I2C_Master_Read
  3246  05E8                     l231:
  3247  05E8  0008               	return
  3248  05E9                     __end_of_I2C_Master_Read:
  3249                           
  3250                           	psect	text19
  3251  06E0                     __ptext19:	
  3252 ;; *************** function _I2C_Master_Wait *****************
  3253 ;; Defined at:
  3254 ;;		line 32 in file "I2C.c"
  3255 ;; Parameters:    Size  Location     Type
  3256 ;;		None
  3257 ;; Auto vars:     Size  Location     Type
  3258 ;;		None
  3259 ;; Return value:  Size  Location     Type
  3260 ;;                  1    wreg      void 
  3261 ;; Registers used:
  3262 ;;		wreg, status,2
  3263 ;; Tracked objects:
  3264 ;;		On entry : 0/0
  3265 ;;		On exit  : 0/0
  3266 ;;		Unchanged: 0/0
  3267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3268 ;;      Params:         0       0       0       0       0
  3269 ;;      Locals:         0       0       0       0       0
  3270 ;;      Temps:          0       0       0       0       0
  3271 ;;      Totals:         0       0       0       0       0
  3272 ;;Total ram usage:        0 bytes
  3273 ;; Hardware stack levels used:    1
  3274 ;; Hardware stack levels required when called:    3
  3275 ;; This function calls:
  3276 ;;		Nothing
  3277 ;; This function is called by:
  3278 ;;		_I2C_Master_Start
  3279 ;;		_I2C_Master_Stop
  3280 ;;		_I2C_Master_Write
  3281 ;;		_I2C_Master_Read
  3282 ;;		_I2C_Master_RepeatedStart
  3283 ;; This function uses a non-reentrant model
  3284 ;;
  3285                           
  3286                           
  3287                           ;psect for function _I2C_Master_Wait
  3288  06E0                     _I2C_Master_Wait:
  3289  06E0                     l1386:	
  3290                           ;incstack = 0
  3291                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3292                           
  3293  06E0                     l211:	
  3294                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3295                           
  3296  06E0  1683               	bsf	3,5	;RP0=1, select bank1
  3297  06E1  1303               	bcf	3,6	;RP1=0, select bank1
  3298  06E2  1914               	btfsc	20,2	;volatile
  3299  06E3  2EE5               	goto	u631
  3300  06E4  2EE6               	goto	u630
  3301  06E5                     u631:
  3302  06E5  2EE0               	goto	l211
  3303  06E6                     u630:
  3304  06E6                     l1388:
  3305  06E6  0811               	movf	17,w	;volatile
  3306  06E7  391F               	andlw	31
  3307  06E8  1D03               	btfss	3,2
  3308  06E9  2EEB               	goto	u641
  3309  06EA  2EEC               	goto	u640
  3310  06EB                     u641:
  3311  06EB  2EE0               	goto	l211
  3312  06EC                     u640:
  3313  06EC                     l214:
  3314  06EC  0008               	return
  3315  06ED                     __end_of_I2C_Master_Wait:
  3316                           
  3317                           	psect	text20
  3318  0187                     __ptext20:	
  3319 ;; *************** function _isr *****************
  3320 ;; Defined at:
  3321 ;;		line 55 in file "main.c"
  3322 ;; Parameters:    Size  Location     Type
  3323 ;;		None
  3324 ;; Auto vars:     Size  Location     Type
  3325 ;;		None
  3326 ;; Return value:  Size  Location     Type
  3327 ;;                  1    wreg      void 
  3328 ;; Registers used:
  3329 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3330 ;; Tracked objects:
  3331 ;;		On entry : 0/0
  3332 ;;		On exit  : 0/0
  3333 ;;		Unchanged: 0/0
  3334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3335 ;;      Params:         0       0       0       0       0
  3336 ;;      Locals:         0       0       0       0       0
  3337 ;;      Temps:          0       5       0       0       0
  3338 ;;      Totals:         0       5       0       0       0
  3339 ;;Total ram usage:        5 bytes
  3340 ;; Hardware stack levels used:    1
  3341 ;; Hardware stack levels required when called:    2
  3342 ;; This function calls:
  3343 ;;		_EUSART_ENVIAR
  3344 ;;		i1_VAL
  3345 ;; This function is called by:
  3346 ;;		Interrupt level 1
  3347 ;; This function uses a non-reentrant model
  3348 ;;
  3349                           
  3350                           
  3351                           ;psect for function _isr
  3352  0187                     _isr:
  3353  0187                     i1l1594:
  3354                           
  3355                           ;main.c: 56:     (INTCONbits.GIE = 0);
  3356  0187  138B               	bcf	11,7	;volatile
  3357                           
  3358                           ;main.c: 57:     if (PIR1bits.RCIF){
  3359  0188  1E8C               	btfss	12,5	;volatile
  3360  0189  298B               	goto	u94_21
  3361  018A  298C               	goto	u94_20
  3362  018B                     u94_21:
  3363  018B  2A31               	goto	i1l96
  3364  018C                     u94_20:
  3365  018C                     i1l1596:
  3366                           
  3367                           ;main.c: 58:         if (RCREG >= 65 && RCREG <= 67 ){
  3368  018C  3041               	movlw	65
  3369  018D  021A               	subwf	26,w	;volatile
  3370  018E  1C03               	skipc
  3371  018F  2991               	goto	u95_21
  3372  0190  2992               	goto	u95_20
  3373  0191                     u95_21:
  3374  0191  2A31               	goto	i1l96
  3375  0192                     u95_20:
  3376  0192                     i1l1598:
  3377  0192  3044               	movlw	68
  3378  0193  021A               	subwf	26,w	;volatile
  3379  0194  1803               	skipnc
  3380  0195  2997               	goto	u96_21
  3381  0196  2998               	goto	u96_20
  3382  0197                     u96_21:
  3383  0197  2A31               	goto	i1l96
  3384  0198                     u96_20:
  3385  0198  2A1E               	goto	i1l1626
  3386  0199                     i1l1602:
  3387                           
  3388                           ;main.c: 62:                     VAL(VALOR_PESO);
  3389  0199  0840               	movf	_VALOR_PESO,w
  3390  019A  00A0               	movwf	??_isr
  3391  019B  01A1               	clrf	??_isr+1
  3392  019C  0820               	movf	??_isr,w
  3393  019D  00F8               	movwf	i1VAL@variable
  3394  019E  0821               	movf	??_isr+1,w
  3395  019F  00F9               	movwf	i1VAL@variable+1
  3396  01A0  120A  118A  22B1  120A  118A  	fcall	i1_VAL
  3397                           
  3398                           ;main.c: 63:                     EUSART_ENVIAR(POS1);
  3399  01A5  1283               	bcf	3,5	;RP0=0, select bank0
  3400  01A6  1303               	bcf	3,6	;RP1=0, select bank0
  3401  01A7  0843               	movf	_POS1,w
  3402  01A8  120A  118A  26C0  120A  118A  	fcall	_EUSART_ENVIAR
  3403  01AD                     i1l1604:
  3404                           
  3405                           ;main.c: 64:                     _delay((unsigned long)((200)*(8000000/4000000.0)));
  3406  01AD  3084               	movlw	132
  3407  01AE  1283               	bcf	3,5	;RP0=0, select bank0
  3408  01AF  1303               	bcf	3,6	;RP1=0, select bank0
  3409  01B0  00A0               	movwf	??_isr
  3410  01B1                     u108_27:
  3411  01B1  0BA0               	decfsz	??_isr,f
  3412  01B2  29B1               	goto	u108_27
  3413  01B3  0000               	nop
  3414  01B4                     i1l1606:
  3415                           
  3416                           ;main.c: 65:                     EUSART_ENVIAR(POS2);
  3417  01B4  1283               	bcf	3,5	;RP0=0, select bank0
  3418  01B5  1303               	bcf	3,6	;RP1=0, select bank0
  3419  01B6  0842               	movf	_POS2,w
  3420  01B7  120A  118A  26C0  120A  118A  	fcall	_EUSART_ENVIAR
  3421                           
  3422                           ;main.c: 66:                     _delay((unsigned long)((200)*(8000000/4000000.0)));
  3423  01BC  3084               	movlw	132
  3424  01BD  1283               	bcf	3,5	;RP0=0, select bank0
  3425  01BE  1303               	bcf	3,6	;RP1=0, select bank0
  3426  01BF  00A0               	movwf	??_isr
  3427  01C0                     u109_27:
  3428  01C0  0BA0               	decfsz	??_isr,f
  3429  01C1  29C0               	goto	u109_27
  3430  01C2  0000               	nop
  3431  01C3                     i1l1608:
  3432                           
  3433                           ;main.c: 67:                     EUSART_ENVIAR(POS3);
  3434  01C3  1283               	bcf	3,5	;RP0=0, select bank0
  3435  01C4  1303               	bcf	3,6	;RP1=0, select bank0
  3436  01C5  0841               	movf	_POS3,w
  3437  01C6  120A  118A  26C0  120A  118A  	fcall	_EUSART_ENVIAR
  3438  01CB                     i1l1610:
  3439                           
  3440                           ;main.c: 68:                     _delay((unsigned long)((200)*(8000000/4000000.0)));
  3441  01CB  3084               	movlw	132
  3442  01CC  1283               	bcf	3,5	;RP0=0, select bank0
  3443  01CD  1303               	bcf	3,6	;RP1=0, select bank0
  3444  01CE  00A0               	movwf	??_isr
  3445  01CF                     u110_27:
  3446  01CF  0BA0               	decfsz	??_isr,f
  3447  01D0  29CF               	goto	u110_27
  3448  01D1  0000               	nop
  3449                           
  3450                           ;main.c: 69:                     EUSART_ENVIAR(13);
  3451  01D2  300D               	movlw	13
  3452  01D3  120A  118A  26C0  120A  118A  	fcall	_EUSART_ENVIAR
  3453  01D8                     i1l1612:
  3454                           
  3455                           ;main.c: 70:                     _delay((unsigned long)((200)*(8000000/4000000.0)));
  3456  01D8  3084               	movlw	132
  3457  01D9  1283               	bcf	3,5	;RP0=0, select bank0
  3458  01DA  1303               	bcf	3,6	;RP1=0, select bank0
  3459  01DB  00A0               	movwf	??_isr
  3460  01DC                     u111_27:
  3461  01DC  0BA0               	decfsz	??_isr,f
  3462  01DD  29DC               	goto	u111_27
  3463  01DE  0000               	nop
  3464                           
  3465                           ;main.c: 71:                     break;
  3466  01DF  2A31               	goto	i1l96
  3467  01E0                     i1l1614:
  3468                           
  3469                           ;main.c: 73:                      VAL(COLOR);
  3470  01E0  083E               	movf	_COLOR,w
  3471  01E1  00A0               	movwf	??_isr
  3472  01E2  01A1               	clrf	??_isr+1
  3473  01E3  0820               	movf	??_isr,w
  3474  01E4  00F8               	movwf	i1VAL@variable
  3475  01E5  0821               	movf	??_isr+1,w
  3476  01E6  00F9               	movwf	i1VAL@variable+1
  3477  01E7  120A  118A  22B1  120A  118A  	fcall	i1_VAL
  3478                           
  3479                           ;main.c: 74:                      EUSART_ENVIAR(POS3);
  3480  01EC  1283               	bcf	3,5	;RP0=0, select bank0
  3481  01ED  1303               	bcf	3,6	;RP1=0, select bank0
  3482  01EE  0841               	movf	_POS3,w
  3483  01EF  120A  118A  26C0  120A  118A  	fcall	_EUSART_ENVIAR
  3484  01F4  29D8               	goto	i1l1612
  3485  01F5                     i1l1618:
  3486                           
  3487                           ;main.c: 78:                     VAL(SENSOR_MOV);
  3488  01F5  083F               	movf	_SENSOR_MOV,w
  3489  01F6  00A0               	movwf	??_isr
  3490  01F7  01A1               	clrf	??_isr+1
  3491  01F8  0820               	movf	??_isr,w
  3492  01F9  00F8               	movwf	i1VAL@variable
  3493  01FA  0821               	movf	??_isr+1,w
  3494  01FB  00F9               	movwf	i1VAL@variable+1
  3495  01FC  120A  118A  22B1  120A  118A  	fcall	i1_VAL
  3496                           
  3497                           ;main.c: 79:                     EUSART_ENVIAR(POS3);
  3498  0201  1283               	bcf	3,5	;RP0=0, select bank0
  3499  0202  1303               	bcf	3,6	;RP1=0, select bank0
  3500  0203  0841               	movf	_POS3,w
  3501  0204  120A  118A  26C0  120A  118A  	fcall	_EUSART_ENVIAR
  3502  0209                     i1l1620:
  3503                           
  3504                           ;main.c: 80:                     _delay((unsigned long)((200)*(8000000/4000000.0)));
  3505  0209  3084               	movlw	132
  3506  020A  1283               	bcf	3,5	;RP0=0, select bank0
  3507  020B  1303               	bcf	3,6	;RP1=0, select bank0
  3508  020C  00A0               	movwf	??_isr
  3509  020D                     u112_27:
  3510  020D  0BA0               	decfsz	??_isr,f
  3511  020E  2A0D               	goto	u112_27
  3512  020F  0000               	nop
  3513  0210                     i1l1622:
  3514                           
  3515                           ;main.c: 81:                     EUSART_ENVIAR(13);
  3516  0210  300D               	movlw	13
  3517  0211  120A  118A  26C0  120A  118A  	fcall	_EUSART_ENVIAR
  3518                           
  3519                           ;main.c: 82:                     _delay((unsigned long)((200)*(8000000/4000000.0)));
  3520  0216  3084               	movlw	132
  3521  0217  1283               	bcf	3,5	;RP0=0, select bank0
  3522  0218  1303               	bcf	3,6	;RP1=0, select bank0
  3523  0219  00A0               	movwf	??_isr
  3524  021A                     u113_27:
  3525  021A  0BA0               	decfsz	??_isr,f
  3526  021B  2A1A               	goto	u113_27
  3527  021C  0000               	nop
  3528                           
  3529                           ;main.c: 83:                     break;
  3530  021D  2A31               	goto	i1l96
  3531  021E                     i1l1626:
  3532  021E  081A               	movf	26,w	;volatile
  3533  021F  00A0               	movwf	??_isr
  3534  0220  01A1               	clrf	??_isr+1
  3535                           
  3536                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3537                           ; Switch size 1, requested type "simple"
  3538                           ; Number of cases is 1, Range of values is 0 to 0
  3539                           ; switch strategies available:
  3540                           ; Name         Instructions Cycles
  3541                           ; simple_byte            4     3 (average)
  3542                           ; direct_byte           11     8 (fixed)
  3543                           ; jumptable            260     6 (fixed)
  3544                           ;	Chosen strategy is simple_byte
  3545  0221  0821               	movf	??_isr+1,w
  3546  0222  3A00               	xorlw	0	; case 0
  3547  0223  1903               	skipnz
  3548  0224  2A26               	goto	i1l1762
  3549  0225  2A31               	goto	i1l96
  3550  0226                     i1l1762:
  3551                           
  3552                           ; Switch size 1, requested type "simple"
  3553                           ; Number of cases is 3, Range of values is 65 to 67
  3554                           ; switch strategies available:
  3555                           ; Name         Instructions Cycles
  3556                           ; simple_byte           10     6 (average)
  3557                           ; direct_byte           20    11 (fixed)
  3558                           ; jumptable            263     9 (fixed)
  3559                           ;	Chosen strategy is simple_byte
  3560  0226  0820               	movf	??_isr,w
  3561  0227  3A41               	xorlw	65	; case 65
  3562  0228  1903               	skipnz
  3563  0229  2999               	goto	i1l1602
  3564  022A  3A03               	xorlw	3	; case 66
  3565  022B  1903               	skipnz
  3566  022C  29E0               	goto	i1l1614
  3567  022D  3A01               	xorlw	1	; case 67
  3568  022E  1903               	skipnz
  3569  022F  29F5               	goto	i1l1618
  3570  0230  2A31               	goto	i1l96
  3571  0231                     i1l96:	
  3572                           ;main.c: 86:      }
  3573                           
  3574                           
  3575                           ;main.c: 88:     (INTCONbits.GIE = 1);
  3576  0231  178B               	bsf	11,7	;volatile
  3577  0232                     i1l103:
  3578  0232  1283               	bcf	3,5	;RP0=0, select bank0
  3579  0233  1303               	bcf	3,6	;RP1=0, select bank0
  3580  0234  0824               	movf	??_isr+4,w
  3581  0235  008A               	movwf	10
  3582  0236  0823               	movf	??_isr+3,w
  3583  0237  0084               	movwf	4
  3584  0238  0E22               	swapf	??_isr+2,w
  3585  0239  0083               	movwf	3
  3586  023A  0EFE               	swapf	btemp,f
  3587  023B  0E7E               	swapf	btemp,w
  3588  023C  0009               	retfie
  3589  023D                     __end_of_isr:
  3590                           
  3591                           	psect	intentry
  3592  0004                     __pintentry:	
  3593                           ;incstack = 0
  3594                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3595                           
  3596  0004                     interrupt_function:
  3597  007E                     saved_w	set	btemp
  3598  0004  00FE               	movwf	btemp
  3599  0005  0E03               	swapf	3,w
  3600  0006  1283               	bcf	3,5	;RP0=0, select bank0
  3601  0007  1303               	bcf	3,6	;RP1=0, select bank0
  3602  0008  00A2               	movwf	??_isr+2
  3603  0009  0804               	movf	4,w
  3604  000A  00A3               	movwf	??_isr+3
  3605  000B  080A               	movf	10,w
  3606  000C  00A4               	movwf	??_isr+4
  3607  000D  120A  118A  2987   	ljmp	_isr
  3608                           
  3609                           	psect	text21
  3610  02B1                     __ptext21:	
  3611 ;; *************** function i1_VAL *****************
  3612 ;; Defined at:
  3613 ;;		line 223 in file "main.c"
  3614 ;; Parameters:    Size  Location     Type
  3615 ;;  variable        2    8[COMMON] unsigned int 
  3616 ;; Auto vars:     Size  Location     Type
  3617 ;;  valor           2   12[COMMON] unsigned int 
  3618 ;; Return value:  Size  Location     Type
  3619 ;;                  1    wreg      void 
  3620 ;; Registers used:
  3621 ;;		wreg, status,2, status,0, pclath, cstack
  3622 ;; Tracked objects:
  3623 ;;		On entry : 0/0
  3624 ;;		On exit  : 0/0
  3625 ;;		Unchanged: 0/0
  3626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3627 ;;      Params:         2       0       0       0       0
  3628 ;;      Locals:         2       0       0       0       0
  3629 ;;      Temps:          2       0       0       0       0
  3630 ;;      Totals:         6       0       0       0       0
  3631 ;;Total ram usage:        6 bytes
  3632 ;; Hardware stack levels used:    1
  3633 ;; Hardware stack levels required when called:    1
  3634 ;; This function calls:
  3635 ;;		i1___lwdiv
  3636 ;;		i1___wmul
  3637 ;; This function is called by:
  3638 ;;		_isr
  3639 ;; This function uses a non-reentrant model
  3640 ;;
  3641                           
  3642                           
  3643                           ;psect for function i1_VAL
  3644  02B1                     i1_VAL:
  3645  02B1                     i1l1578:	
  3646                           ;incstack = 0
  3647                           ; Regs used in i1_VAL: [wreg+status,2+status,0+pclath+cstack]
  3648                           
  3649                           
  3650                           ;main.c: 224:     uint16_t valor;;main.c: 225:     valor = variable;
  3651  02B1  0879               	movf	i1VAL@variable+1,w
  3652  02B2  00FD               	movwf	i1VAL@valor+1
  3653  02B3  0878               	movf	i1VAL@variable,w
  3654  02B4  00FC               	movwf	i1VAL@valor
  3655  02B5                     i1l1580:
  3656                           
  3657                           ;main.c: 226:     POS1 = (valor/100) ;
  3658  02B5  3064               	movlw	100
  3659  02B6  00F0               	movwf	i1___lwdiv@divisor
  3660  02B7  3000               	movlw	0
  3661  02B8  00F1               	movwf	i1___lwdiv@divisor+1
  3662  02B9  087D               	movf	i1VAL@valor+1,w
  3663  02BA  00F3               	movwf	i1___lwdiv@dividend+1
  3664  02BB  087C               	movf	i1VAL@valor,w
  3665  02BC  00F2               	movwf	i1___lwdiv@dividend
  3666  02BD  120A  118A  2489  120A  118A  	fcall	i1___lwdiv
  3667  02C2  0870               	movf	?i1___lwdiv,w
  3668  02C3  00FA               	movwf	??i1_VAL
  3669  02C4  087A               	movf	??i1_VAL,w
  3670  02C5  1283               	bcf	3,5	;RP0=0, select bank0
  3671  02C6  1303               	bcf	3,6	;RP1=0, select bank0
  3672  02C7  00C3               	movwf	_POS1
  3673  02C8                     i1l1582:
  3674                           
  3675                           ;main.c: 227:     valor = (valor - (POS1*100));
  3676  02C8  0843               	movf	_POS1,w
  3677  02C9  00FA               	movwf	??i1_VAL
  3678  02CA  01FB               	clrf	??i1_VAL+1
  3679  02CB  087A               	movf	??i1_VAL,w
  3680  02CC  00F0               	movwf	i1___wmul@multiplier
  3681  02CD  087B               	movf	??i1_VAL+1,w
  3682  02CE  00F1               	movwf	i1___wmul@multiplier+1
  3683  02CF  309C               	movlw	156
  3684  02D0  00F2               	movwf	i1___wmul@multiplicand
  3685  02D1  30FF               	movlw	255
  3686  02D2  00F3               	movwf	i1___wmul@multiplicand+1
  3687  02D3  120A  118A  265F  120A  118A  	fcall	i1___wmul
  3688  02D8  087C               	movf	i1VAL@valor,w
  3689  02D9  0770               	addwf	?i1___wmul,w
  3690  02DA  00FC               	movwf	i1VAL@valor
  3691  02DB  087D               	movf	i1VAL@valor+1,w
  3692  02DC  1803               	skipnc
  3693  02DD  0A7D               	incf	i1VAL@valor+1,w
  3694  02DE  0771               	addwf	?i1___wmul+1,w
  3695  02DF  00FD               	movwf	i1VAL@valor+1
  3696  02E0                     i1l1584:
  3697                           
  3698                           ;main.c: 228:     POS2 = (valor/10);
  3699  02E0  300A               	movlw	10
  3700  02E1  00F0               	movwf	i1___lwdiv@divisor
  3701  02E2  3000               	movlw	0
  3702  02E3  00F1               	movwf	i1___lwdiv@divisor+1
  3703  02E4  087D               	movf	i1VAL@valor+1,w
  3704  02E5  00F3               	movwf	i1___lwdiv@dividend+1
  3705  02E6  087C               	movf	i1VAL@valor,w
  3706  02E7  00F2               	movwf	i1___lwdiv@dividend
  3707  02E8  120A  118A  2489  120A  118A  	fcall	i1___lwdiv
  3708  02ED  0870               	movf	?i1___lwdiv,w
  3709  02EE  00FA               	movwf	??i1_VAL
  3710  02EF  087A               	movf	??i1_VAL,w
  3711  02F0  1283               	bcf	3,5	;RP0=0, select bank0
  3712  02F1  1303               	bcf	3,6	;RP1=0, select bank0
  3713  02F2  00C2               	movwf	_POS2
  3714  02F3                     i1l1586:
  3715                           
  3716                           ;main.c: 229:     valor = (valor - (POS2*10));
  3717  02F3  0842               	movf	_POS2,w
  3718  02F4  00FA               	movwf	??i1_VAL
  3719  02F5  01FB               	clrf	??i1_VAL+1
  3720  02F6  087A               	movf	??i1_VAL,w
  3721  02F7  00F0               	movwf	i1___wmul@multiplier
  3722  02F8  087B               	movf	??i1_VAL+1,w
  3723  02F9  00F1               	movwf	i1___wmul@multiplier+1
  3724  02FA  30F6               	movlw	246
  3725  02FB  00F2               	movwf	i1___wmul@multiplicand
  3726  02FC  30FF               	movlw	255
  3727  02FD  00F3               	movwf	i1___wmul@multiplicand+1
  3728  02FE  120A  118A  265F  120A  118A  	fcall	i1___wmul
  3729  0303  087C               	movf	i1VAL@valor,w
  3730  0304  0770               	addwf	?i1___wmul,w
  3731  0305  00FC               	movwf	i1VAL@valor
  3732  0306  087D               	movf	i1VAL@valor+1,w
  3733  0307  1803               	skipnc
  3734  0308  0A7D               	incf	i1VAL@valor+1,w
  3735  0309  0771               	addwf	?i1___wmul+1,w
  3736  030A  00FD               	movwf	i1VAL@valor+1
  3737                           
  3738                           ;main.c: 230:     POS3 = (valor);
  3739  030B  087C               	movf	i1VAL@valor,w
  3740  030C  00FA               	movwf	??i1_VAL
  3741  030D  087A               	movf	??i1_VAL,w
  3742  030E  1283               	bcf	3,5	;RP0=0, select bank0
  3743  030F  1303               	bcf	3,6	;RP1=0, select bank0
  3744  0310  00C1               	movwf	_POS3
  3745  0311                     i1l1588:
  3746                           
  3747                           ;main.c: 232:     POS1 = POS1 + 48;
  3748  0311  0843               	movf	_POS1,w
  3749  0312  3E30               	addlw	48
  3750  0313  00FA               	movwf	??i1_VAL
  3751  0314  087A               	movf	??i1_VAL,w
  3752  0315  00C3               	movwf	_POS1
  3753  0316                     i1l1590:
  3754                           
  3755                           ;main.c: 233:     POS2 = POS2 + 48;
  3756  0316  0842               	movf	_POS2,w
  3757  0317  3E30               	addlw	48
  3758  0318  00FA               	movwf	??i1_VAL
  3759  0319  087A               	movf	??i1_VAL,w
  3760  031A  00C2               	movwf	_POS2
  3761  031B                     i1l1592:
  3762                           
  3763                           ;main.c: 234:     POS3 = POS3 + 48;
  3764  031B  0841               	movf	_POS3,w
  3765  031C  3E30               	addlw	48
  3766  031D  00FA               	movwf	??i1_VAL
  3767  031E  087A               	movf	??i1_VAL,w
  3768  031F  00C1               	movwf	_POS3
  3769  0320                     i1l124:
  3770  0320  0008               	return
  3771  0321                     __end_ofi1_VAL:
  3772                           
  3773                           	psect	text22
  3774  065F                     __ptext22:	
  3775 ;; *************** function i1___wmul *****************
  3776 ;; Defined at:
  3777 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  3778 ;; Parameters:    Size  Location     Type
  3779 ;;  multiplier      2    0[COMMON] unsigned int 
  3780 ;;  multiplicand    2    2[COMMON] unsigned int 
  3781 ;; Auto vars:     Size  Location     Type
  3782 ;;  product         2    4[COMMON] unsigned int 
  3783 ;; Return value:  Size  Location     Type
  3784 ;;                  2    0[COMMON] unsigned int 
  3785 ;; Registers used:
  3786 ;;		wreg, status,2, status,0
  3787 ;; Tracked objects:
  3788 ;;		On entry : 0/0
  3789 ;;		On exit  : 0/0
  3790 ;;		Unchanged: 0/0
  3791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3792 ;;      Params:         4       0       0       0       0
  3793 ;;      Locals:         2       0       0       0       0
  3794 ;;      Temps:          0       0       0       0       0
  3795 ;;      Totals:         6       0       0       0       0
  3796 ;;Total ram usage:        6 bytes
  3797 ;; Hardware stack levels used:    1
  3798 ;; This function calls:
  3799 ;;		Nothing
  3800 ;; This function is called by:
  3801 ;;		i1_VAL
  3802 ;; This function uses a non-reentrant model
  3803 ;;
  3804                           
  3805                           
  3806                           ;psect for function i1___wmul
  3807  065F                     i1___wmul:
  3808  065F                     i1l1430:	
  3809                           ;incstack = 0
  3810                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
  3811                           
  3812  065F  01F4               	clrf	i1___wmul@product
  3813  0660  01F5               	clrf	i1___wmul@product+1
  3814  0661                     i1l1432:
  3815  0661  1C70               	btfss	i1___wmul@multiplier,0
  3816  0662  2E64               	goto	u76_21
  3817  0663  2E65               	goto	u76_20
  3818  0664                     u76_21:
  3819  0664  2E6B               	goto	i1l320
  3820  0665                     u76_20:
  3821  0665                     i1l1434:
  3822  0665  0872               	movf	i1___wmul@multiplicand,w
  3823  0666  07F4               	addwf	i1___wmul@product,f
  3824  0667  1803               	skipnc
  3825  0668  0AF5               	incf	i1___wmul@product+1,f
  3826  0669  0873               	movf	i1___wmul@multiplicand+1,w
  3827  066A  07F5               	addwf	i1___wmul@product+1,f
  3828  066B                     i1l320:
  3829  066B  3001               	movlw	1
  3830  066C                     u77_25:
  3831  066C  1003               	clrc
  3832  066D  0DF2               	rlf	i1___wmul@multiplicand,f
  3833  066E  0DF3               	rlf	i1___wmul@multiplicand+1,f
  3834  066F  3EFF               	addlw	-1
  3835  0670  1D03               	skipz
  3836  0671  2E6C               	goto	u77_25
  3837  0672                     i1l1436:
  3838  0672  3001               	movlw	1
  3839  0673                     u78_25:
  3840  0673  1003               	clrc
  3841  0674  0CF1               	rrf	i1___wmul@multiplier+1,f
  3842  0675  0CF0               	rrf	i1___wmul@multiplier,f
  3843  0676  3EFF               	addlw	-1
  3844  0677  1D03               	skipz
  3845  0678  2E73               	goto	u78_25
  3846  0679                     i1l1438:
  3847  0679  0870               	movf	i1___wmul@multiplier,w
  3848  067A  0471               	iorwf	i1___wmul@multiplier+1,w
  3849  067B  1D03               	btfss	3,2
  3850  067C  2E7E               	goto	u79_21
  3851  067D  2E7F               	goto	u79_20
  3852  067E                     u79_21:
  3853  067E  2E61               	goto	i1l1432
  3854  067F                     u79_20:
  3855  067F                     i1l1440:
  3856  067F  0875               	movf	i1___wmul@product+1,w
  3857  0680  00F1               	movwf	?i1___wmul+1
  3858  0681  0874               	movf	i1___wmul@product,w
  3859  0682  00F0               	movwf	?i1___wmul
  3860  0683                     i1l322:
  3861  0683  0008               	return
  3862  0684                     __end_ofi1___wmul:
  3863                           
  3864                           	psect	text23
  3865  0489                     __ptext23:	
  3866 ;; *************** function i1___lwdiv *****************
  3867 ;; Defined at:
  3868 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  3869 ;; Parameters:    Size  Location     Type
  3870 ;;  divisor         2    0[COMMON] unsigned int 
  3871 ;;  dividend        2    2[COMMON] unsigned int 
  3872 ;; Auto vars:     Size  Location     Type
  3873 ;;  quotient        2    5[COMMON] unsigned int 
  3874 ;;  counter         1    7[COMMON] unsigned char 
  3875 ;; Return value:  Size  Location     Type
  3876 ;;                  2    0[COMMON] unsigned int 
  3877 ;; Registers used:
  3878 ;;		wreg, status,2, status,0
  3879 ;; Tracked objects:
  3880 ;;		On entry : 0/0
  3881 ;;		On exit  : 0/0
  3882 ;;		Unchanged: 0/0
  3883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3884 ;;      Params:         4       0       0       0       0
  3885 ;;      Locals:         3       0       0       0       0
  3886 ;;      Temps:          1       0       0       0       0
  3887 ;;      Totals:         8       0       0       0       0
  3888 ;;Total ram usage:        8 bytes
  3889 ;; Hardware stack levels used:    1
  3890 ;; This function calls:
  3891 ;;		Nothing
  3892 ;; This function is called by:
  3893 ;;		i1_VAL
  3894 ;; This function uses a non-reentrant model
  3895 ;;
  3896                           
  3897                           
  3898                           ;psect for function i1___lwdiv
  3899  0489                     i1___lwdiv:
  3900  0489                     i1l1444:	
  3901                           ;incstack = 0
  3902                           ; Regs used in i1___lwdiv: [wreg+status,2+status,0]
  3903                           
  3904  0489  01F5               	clrf	i1___lwdiv@quotient
  3905  048A  01F6               	clrf	i1___lwdiv@quotient+1
  3906  048B                     i1l1446:
  3907  048B  0870               	movf	i1___lwdiv@divisor,w
  3908  048C  0471               	iorwf	i1___lwdiv@divisor+1,w
  3909  048D  1903               	btfsc	3,2
  3910  048E  2C90               	goto	u80_21
  3911  048F  2C91               	goto	u80_20
  3912  0490                     u80_21:
  3913  0490  2CC8               	goto	i1l1466
  3914  0491                     u80_20:
  3915  0491                     i1l1448:
  3916  0491  01F7               	clrf	i1___lwdiv@counter
  3917  0492  0AF7               	incf	i1___lwdiv@counter,f
  3918  0493  2C9F               	goto	i1l1454
  3919  0494                     i1l1450:
  3920  0494  3001               	movlw	1
  3921  0495                     u81_25:
  3922  0495  1003               	clrc
  3923  0496  0DF0               	rlf	i1___lwdiv@divisor,f
  3924  0497  0DF1               	rlf	i1___lwdiv@divisor+1,f
  3925  0498  3EFF               	addlw	-1
  3926  0499  1D03               	skipz
  3927  049A  2C95               	goto	u81_25
  3928  049B                     i1l1452:
  3929  049B  3001               	movlw	1
  3930  049C  00F4               	movwf	??i1___lwdiv
  3931  049D  0874               	movf	??i1___lwdiv,w
  3932  049E  07F7               	addwf	i1___lwdiv@counter,f
  3933  049F                     i1l1454:
  3934  049F  1FF1               	btfss	i1___lwdiv@divisor+1,7
  3935  04A0  2CA2               	goto	u82_21
  3936  04A1  2CA3               	goto	u82_20
  3937  04A2                     u82_21:
  3938  04A2  2C94               	goto	i1l1450
  3939  04A3                     u82_20:
  3940  04A3                     i1l1456:
  3941  04A3  3001               	movlw	1
  3942  04A4                     u83_25:
  3943  04A4  1003               	clrc
  3944  04A5  0DF5               	rlf	i1___lwdiv@quotient,f
  3945  04A6  0DF6               	rlf	i1___lwdiv@quotient+1,f
  3946  04A7  3EFF               	addlw	-1
  3947  04A8  1D03               	skipz
  3948  04A9  2CA4               	goto	u83_25
  3949  04AA  0871               	movf	i1___lwdiv@divisor+1,w
  3950  04AB  0273               	subwf	i1___lwdiv@dividend+1,w
  3951  04AC  1D03               	skipz
  3952  04AD  2CB0               	goto	u84_25
  3953  04AE  0870               	movf	i1___lwdiv@divisor,w
  3954  04AF  0272               	subwf	i1___lwdiv@dividend,w
  3955  04B0                     u84_25:
  3956  04B0  1C03               	skipc
  3957  04B1  2CB3               	goto	u84_21
  3958  04B2  2CB4               	goto	u84_20
  3959  04B3                     u84_21:
  3960  04B3  2CBB               	goto	i1l1462
  3961  04B4                     u84_20:
  3962  04B4                     i1l1458:
  3963  04B4  0870               	movf	i1___lwdiv@divisor,w
  3964  04B5  02F2               	subwf	i1___lwdiv@dividend,f
  3965  04B6  0871               	movf	i1___lwdiv@divisor+1,w
  3966  04B7  1C03               	skipc
  3967  04B8  03F3               	decf	i1___lwdiv@dividend+1,f
  3968  04B9  02F3               	subwf	i1___lwdiv@dividend+1,f
  3969  04BA                     i1l1460:
  3970  04BA  1475               	bsf	i1___lwdiv@quotient,0
  3971  04BB                     i1l1462:
  3972  04BB  3001               	movlw	1
  3973  04BC                     u85_25:
  3974  04BC  1003               	clrc
  3975  04BD  0CF1               	rrf	i1___lwdiv@divisor+1,f
  3976  04BE  0CF0               	rrf	i1___lwdiv@divisor,f
  3977  04BF  3EFF               	addlw	-1
  3978  04C0  1D03               	skipz
  3979  04C1  2CBC               	goto	u85_25
  3980  04C2                     i1l1464:
  3981  04C2  3001               	movlw	1
  3982  04C3  02F7               	subwf	i1___lwdiv@counter,f
  3983  04C4  1D03               	btfss	3,2
  3984  04C5  2CC7               	goto	u86_21
  3985  04C6  2CC8               	goto	u86_20
  3986  04C7                     u86_21:
  3987  04C7  2CA3               	goto	i1l1456
  3988  04C8                     u86_20:
  3989  04C8                     i1l1466:
  3990  04C8  0876               	movf	i1___lwdiv@quotient+1,w
  3991  04C9  00F1               	movwf	?i1___lwdiv+1
  3992  04CA  0875               	movf	i1___lwdiv@quotient,w
  3993  04CB  00F0               	movwf	?i1___lwdiv
  3994  04CC                     i1l592:
  3995  04CC  0008               	return
  3996  04CD                     __end_ofi1___lwdiv:
  3997                           
  3998                           	psect	text24
  3999  06C0                     __ptext24:	
  4000 ;; *************** function _EUSART_ENVIAR *****************
  4001 ;; Defined at:
  4002 ;;		line 36 in file "./EUSART_LIB.h"
  4003 ;; Parameters:    Size  Location     Type
  4004 ;;  dato            1    wreg     unsigned char 
  4005 ;; Auto vars:     Size  Location     Type
  4006 ;;  dato            1    2[COMMON] unsigned char 
  4007 ;; Return value:  Size  Location     Type
  4008 ;;                  1    wreg      void 
  4009 ;; Registers used:
  4010 ;;		wreg
  4011 ;; Tracked objects:
  4012 ;;		On entry : 0/0
  4013 ;;		On exit  : 0/0
  4014 ;;		Unchanged: 0/0
  4015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4016 ;;      Params:         0       0       0       0       0
  4017 ;;      Locals:         1       0       0       0       0
  4018 ;;      Temps:          2       0       0       0       0
  4019 ;;      Totals:         3       0       0       0       0
  4020 ;;Total ram usage:        3 bytes
  4021 ;; Hardware stack levels used:    1
  4022 ;; This function calls:
  4023 ;;		Nothing
  4024 ;; This function is called by:
  4025 ;;		_isr
  4026 ;; This function uses a non-reentrant model
  4027 ;;
  4028                           
  4029                           
  4030                           ;psect for function _EUSART_ENVIAR
  4031  06C0                     _EUSART_ENVIAR:
  4032                           
  4033                           ;incstack = 0
  4034                           ; Regs used in _EUSART_ENVIAR: [wreg]
  4035                           ;EUSART_ENVIAR@dato stored from wreg
  4036  06C0  00F2               	movwf	EUSART_ENVIAR@dato
  4037  06C1                     i1l1470:
  4038                           
  4039                           ;./EUSART_LIB.h: 37:     if (PIR1bits.TXIF){
  4040  06C1  1283               	bcf	3,5	;RP0=0, select bank0
  4041  06C2  1303               	bcf	3,6	;RP1=0, select bank0
  4042  06C3  1E0C               	btfss	12,4	;volatile
  4043  06C4  2EC6               	goto	u87_21
  4044  06C5  2EC7               	goto	u87_20
  4045  06C6                     u87_21:
  4046  06C6  2ED2               	goto	i1l79
  4047  06C7                     u87_20:
  4048  06C7                     i1l1472:
  4049                           
  4050                           ;./EUSART_LIB.h: 38:         TXREG = dato;
  4051  06C7  0872               	movf	EUSART_ENVIAR@dato,w
  4052  06C8  0099               	movwf	25	;volatile
  4053                           
  4054                           ;./EUSART_LIB.h: 39:         _delay((unsigned long)((10)*(8000000/4000.0)));}
  4055  06C9  301A               	movlw	26
  4056  06CA  00F1               	movwf	??_EUSART_ENVIAR+1
  4057  06CB  30F8               	movlw	248
  4058  06CC  00F0               	movwf	??_EUSART_ENVIAR
  4059  06CD                     u114_27:
  4060  06CD  0BF0               	decfsz	??_EUSART_ENVIAR,f
  4061  06CE  2ECD               	goto	u114_27
  4062  06CF  0BF1               	decfsz	??_EUSART_ENVIAR+1,f
  4063  06D0  2ECD               	goto	u114_27
  4064  06D1  0000               	nop
  4065  06D2                     i1l79:
  4066  06D2  0008               	return
  4067  06D3                     __end_of_EUSART_ENVIAR:
  4068  007E                     btemp	set	126	;btemp
  4069  007E                     wtemp0	set	126
  4070                           
  4071                           	psect	config
  4072                           
  4073                           ;Config register CONFIG1 @ 0x2007
  4074                           ;	Oscillator Selection bits
  4075                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
  4076                           ;	Watchdog Timer Enable bit
  4077                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4078                           ;	Power-up Timer Enable bit
  4079                           ;	PWRTE = OFF, PWRT disabled
  4080                           ;	RE3/MCLR pin function select bit
  4081                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4082                           ;	Code Protection bit
  4083                           ;	CP = OFF, Program memory code protection is disabled
  4084                           ;	Data Code Protection bit
  4085                           ;	CPD = OFF, Data memory code protection is disabled
  4086                           ;	Brown Out Reset Selection bits
  4087                           ;	BOREN = OFF, BOR disabled
  4088                           ;	Internal External Switchover bit
  4089                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4090                           ;	Fail-Safe Clock Monitor Enabled bit
  4091                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4092                           ;	Low Voltage Programming Enable bit
  4093                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4094                           ;	In-Circuit Debugger Mode bit
  4095                           ;	DEBUG = 0x1, unprogrammed default
  4096  2007                     	org	8199
  4097  2007  20D5               	dw	8405
  4098                           
  4099                           ;Config register CONFIG2 @ 0x2008
  4100                           ;	Brown-out Reset Selection bit
  4101                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4102                           ;	Flash Program Memory Self Write Enable bits
  4103                           ;	WRT = OFF, Write protection off
  4104  2008                     	org	8200
  4105  2008  3FFF               	dw	16383

Data Sizes:
    Strings     53
    Constant    0
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     30      36
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 20
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[4]), STR_4(CODE[7]), 
		 -> STR_3(CODE[7]), STR_2(CODE[7]), STR_1(CODE[20]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->i1_VAL
    i1_VAL->i1___lwdiv

Critical Paths under _main in BANK0

    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv
    _VAL->___lwdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    4251
                                             27 BANK0      3     3      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                                _VAL
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     608
                        _EUSART_INIT
                    _I2C_Master_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                             19 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              5 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) _EUSART_INIT                                          4     0      4     196
                                              5 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _VAL                                                  6     4      2    1223
                                             13 BANK0      6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     396
                                              5 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     466
                                              5 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     499
                                             10 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              6 BANK0      4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     912
                                              9 BANK0      7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              9 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              6 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              5 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     326
                                              5 BANK0      2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     197
                                              5 BANK0      6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  5     5      0     697
                                              0 BANK0      5     5      0
                      _EUSART_ENVIAR
                              i1_VAL
 ---------------------------------------------------------------------------------
 (5) i1_VAL                                                6     4      2     675
                                              8 COMMON     6     4      2
                          i1___lwdiv
                           i1___wmul
 ---------------------------------------------------------------------------------
 (6) i1___wmul                                             6     2      4     196
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (6) i1___lwdiv                                            8     4      4     266
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (5) _EUSART_ENVIAR                                        3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _VAL
     ___lwdiv
     ___wmul
   _setup
     _EUSART_INIT
     _I2C_Master_Init
       ___lldiv

 _isr (ROOT)
   _EUSART_ENVIAR
   i1_VAL
     i1___lwdiv
     i1___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      32       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1E      24       5       45.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      32      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sat Sep 04 21:38:28 2021

                        pc 0002                         l75 065E                         fsr 0004  
      ___wmul@multiplicand 0027           i1___wmul@product 0074                        l121 05B6  
                      l211 06E0                        l124 02B0                        l141 068D  
                      l214 06EC                        l230 05E1                        l142 068E  
                      l231 05E8                        l223 06FF                        l143 0694  
                      l144 0695                        l152 06BF                        l320 0620  
                      l208 057E                        l217 0708                        l145 069B  
                      l161 0442                        l226 06F6                        l146 069C  
                      l322 0638                        l147 06A2                        l155 06DF  
                      l164 03EA                        l229 05DE                        l149 06A3  
                      l173 0611                        l167 0509                        l356 0388  
                      l592 0488                        _GIE 005F                        _RB0 0030  
                      _RB1 0031                        _RB2 0032                        _RB3 0033  
                      _RB5 0035                        u500 068B                        u501 068A  
                      u510 0692                        u511 0691                        u520 0699  
                      u600 0380                        u521 0698                        u601 037F  
                      u530 06A0                        u531 069F                        u540 0333  
                      u620 055C                        u541 0332                        u630 06E6  
                      u710 045F                        u631 06E5                        u615 04DE  
                      u711 045E                        u640 06EC                        u560 0347  
                      u641 06EB                        u705 0451                        u561 0346  
                      u625 0557                        u730 0470                        u650 061A  
                      u731 046F                        u651 0619                        u555 0338  
                      u900 041E                        u580 0362                        u901 041D  
                      u725 0460                        u581 0361                        u750 0484  
                      _VAL 023D                        u751 0483                        u735 046C  
                      u575 0349                        u920 0611                        u680 0634  
                      u921 0610                        u745 0478                        u681 0633  
                      u665 0621                        u585 035E                        u930 05DA  
                      u690 044D                        u931 05D9                        u915 0426  
                      u691 044C                        u675 0628                        u595 0372  
                      u880 03F3                        u881 03F2                        u970 0125  
                      u971 0124                        u980 012A                        u981 0129  
                      u895 03FB                        u997 0066                        _isr 0187  
                      fsr0 0004               ?_EUSART_INIT 0025                       ?_VAL 002D  
                     l1300 0687                       l1302 068B                       l1310 0321  
                     l1304 0692                       l1400 0634                       l1320 0350  
                     l1312 0333                       l1306 0699                       l1410 0450  
                     l1322 0362                       l1314 0336                       l1330 0380  
                     l1308 06A0                       l1420 0476                       l1412 0457  
                     l1404 0443                       l1340 064C                       l1324 0370  
                     l1316 0343                       l1500 0596                       l1510 0389  
                     l1350 04E9                       l1422 0477                       l1414 045B  
                     l1406 0447                       l1342 0655                       l1334 0639  
                     l1326 0371                       l1318 0347                       l1502 0597  
                     l1520 06D3                       l1512 038F                       l1360 04FF  
                     l1352 04EC                       l1344 04D0                       l1424 047E  
                     l1416 045F                       l1408 044D                       l1336 0647  
                     l1328 037A                       l1504 05A5                       l1514 0399  
                     l1530 040F                       l1522 03EE                       l1362 0506  
                     l1354 04F3                       l1346 04DA                       l1418 0470  
                     l1426 0484                       l1338 064B                       l1370 057B  
                     l1506 05B4                       l1380 06AE                       l1516 03A9  
                     l1540 043A                       l1524 03F3                       l1532 0418  
                     l1356 04F6                       l1348 04DB                       l1372 057C  
                     l1364 0545                       l1508 05B5                       l1700 0160  
                     l1550 0700                       l1382 06B1                       l1518 03AF  
                     l1534 041E                       l1526 0404                       l1358 04FC  
                     l1542 05EC                       l1390 0612                       l1374 057D  
                     l1366 0549                       l1702 016C                       l1552 0705  
                     l1560 06FC                       l1384 06BC                       l1376 06A7  
                     l1536 042F                       l1528 0409                       l1544 05EF  
                     l1392 0616                       l1480 0270                       l1368 054C  
                     l1704 0173                       l1640 004E                       l1632 001F  
                     l1386 06E0                       l1570 05D2                       l1562 05B7  
                     l1554 06ED                       l1378 06A8                       l1538 0434  
                     l1546 05FC                       l1394 061A                       l1482 0283  
                     l1474 023D                       l1490 057F                       l1706 017D  
                     l1650 007D                       l1642 0059                       l1634 0038  
                     l1388 06E6                       l1572 05DA                       l1564 05BC  
                     l1556 06F2                       l1548 0604                       l1396 0627  
                     l1484 02A1                       l1476 0243                       l1492 0590  
                     l1660 00B1                       l1652 008D                       l1644 005E  
                     l1636 003E                       l1574 05E2                       l1566 05C4  
                     l1558 06F7                       l1398 062E                       l1486 02A6  
                     l1478 0256                       l1494 0593                       l1670 00E7  
                     l1662 00C1                       l1654 0092                       l1646 006D  
                     l1638 0043                       l1568 05CD                       l1488 02AB  
                     l1496 0594                       l1760 0113                       l1672 00F1  
                     l1680 0109                       l1664 00C6                       l1656 00A1  
                     l1648 0072                       l1498 0595                       l1690 0134  
                     l1674 00F8                       l1682 011E                       l1666 00D6  
                     l1658 00A6                       l1692 0142                       l1684 0125  
                     l1676 0102                       l1668 00E0                       l1694 014A  
                     l1686 012A                       l1696 0152                       l1688 012C  
                     l1698 015A                       ?_isr 0070                       STR_1 0510  
                     STR_2 0532                       STR_3 052B                       STR_4 0524  
                     STR_5 053D                       STR_6 0539                       STR_7 0541  
                     u1007 009A                       u1017 00CE                       u1027 04F0  
                     u1037 0503                       u1047 0395                       u1057 03A5  
                     u1067 03B5                       u1077 06B7                       _PEIE 005E  
                     i1l79 06D2                       i1l96 0231                       _POS1 0043  
                     _POS2 0042                       _POS3 0041          ?_Lcd_Write_String 0070  
                     _main 001F                       btemp 007E                       start 0010  
       ??_Lcd_Write_String 002A            __end_of_Lcd_Cmd 06C0                      ??_VAL 002F  
            _EUSART_ENVIAR 06C0                      ??_isr 0020           ?_I2C_Master_Init 0033  
         ?_I2C_Master_Read 0025           ?_I2C_Master_Wait 0070           ?_I2C_Master_Stop 0070  
                    ?_main 0070                      _ANSEL 0188            __end_of___lldiv 0389  
                    _COLOR 003E            __end_of___lwdiv 0489                      i1l103 0232  
                    i1l124 0320                      i1l320 066B                      i1l322 0683  
                    i1l592 04CC                      _RCREG 001A                      i1_VAL 02B1  
                    _SPBRG 0099                      _PORTA 0005                      _PORTB 0006  
                    _PORTC 0007                      _PORTD 0008                      _PORTE 0009  
                    u80_20 0491                      u80_21 0490    __size_of_Lcd_Set_Cursor 0058  
                    _TRISA 0085                      _TRISB 0086                      u81_25 0495  
                    _TRISD 0088                      _SSPIE 0463                      _TRISE 0089  
                    u82_20 04A3                      _SSPIF 0063                      u82_21 04A2  
                    u83_25 04A4                      u84_20 04B4                      u76_20 0665  
                    u84_21 04B3                      u76_21 0664                      u84_25 04B0  
                    u85_25 04BC                      u77_25 066C                      u86_20 04C8  
                    u94_20 018C                      u86_21 04C7                      u94_21 018B  
                    u78_25 0673                      u87_20 06C7                      u79_20 067F  
                    u95_20 0192                      u87_21 06C6                      u79_21 067E  
                    u95_21 0191                      u96_20 0198                      u96_21 0197  
                    _TXREG 0019                      _setup 057F                      pclath 000A  
         __end_ofi1___wmul 0684                      status 0003        i1___wmul@multiplier 0070  
                    wtemp0 007E         __size_ofi1___lwdiv 0044           __end_of_Lcd_Init 03EB  
         __end_of_Lcd_Port 06A4            __initialization 0013             ?_EUSART_ENVIAR 0070  
             __end_of_main 0187                     ??_main 003B         __size_of_Lcd_Clear 000D  
                   ?i1_VAL 0078          ?_I2C_Master_Start 0070          ?_I2C_Master_Write 0025  
       ??_I2C_Master_Start 0025         ??_I2C_Master_Write 0027                     ?_setup 0070  
                   _ANSELH 0189                     u110_27 01CF                     i1l1430 065F  
                   u111_27 01DC                     i1l1440 067F                     i1l1432 0661  
                   i1l1450 0494                     i1l1434 0665                     i1l1610 01CB  
                   i1l1602 0199                     i1l1460 04BA                     i1l1452 049B  
                   i1l1444 0489                     i1l1436 0672                     i1l1620 0209  
                   i1l1612 01D8                     i1l1604 01AD                     i1l1470 06C1  
                   i1l1462 04BB                     i1l1454 049F                     i1l1446 048B  
                   i1l1438 0679                     i1l1622 0210                     i1l1614 01E0  
                   i1l1606 01B4                     u112_27 020D                     i1l1472 06C7  
                   i1l1464 04C2                     i1l1456 04A3                     i1l1448 0491  
                   i1l1608 01C3                     i1l1458 04B4                     i1l1466 04C8  
                   i1l1618 01F5                     i1l1626 021E                     i1l1580 02B5  
                   i1l1590 0316                     i1l1582 02C8                     u113_27 021A  
                   i1l1592 031B                     i1l1584 02E0                     i1l1586 02F3  
                   i1l1578 02B1                     i1l1762 0226                     i1l1594 0187  
                   i1l1588 0311                     i1l1596 018C                     i1l1598 0192  
                   u114_27 06CD                     u108_27 01B1                     u109_27 01C0  
                ??_Lcd_Cmd 0026                     _SPBRGH 009A    __size_of_Lcd_Write_Char 003D  
                   _SSPADD 0093                     _TRISC3 043B                     _TRISC4 043C  
                   _TRISC7 043F                     _SSPCON 0014                     _SSPBUF 0013  
                   ___wmul 0612                  ??___lldiv 002D                  ??___lwdiv 0029  
        __end_ofi1___lwdiv 04CD                     saved_w 007E            Lcd_Set_Cursor@a 002C  
          Lcd_Set_Cursor@b 0029            Lcd_Set_Cursor@y 002E            Lcd_Set_Cursor@z 002D  
     __size_of_EUSART_INIT 0026    __end_of__initialization 001B          __end_of_Lcd_Clear 06E0  
            __end_ofi1_VAL 0321            ??_EUSART_ENVIAR 0070             __pcstackCOMMON 0070  
            __end_of_setup 05B7                  ?i1___wmul 0070             _Lcd_Set_Cursor 03EB  
                  ??i1_VAL 007A                  ?_Lcd_Init 0070                  ?_Lcd_Port 0070  
                  ??_setup 003B                 __pbssBANK0 003E                 __pmaintext 001F  
                  ?___wmul 0025                 __pintentry 0004  __size_of_Lcd_Write_String 0029  
   __end_of_Lcd_Set_Cursor 0443                 ??i1___wmul 0074                 ??_Lcd_Init 0029  
               ??_Lcd_Port 0025                    _SSPCON2 0091                    _SSPSTAT 0094  
               __stringtab 050A             _Lcd_Write_Char 04CD                    _Lcd_Cmd 06A4  
              VAL@variable 002D                    ___lldiv 0321            __size_of___wmul 0027  
                  ___lwdiv 0443            ?_Lcd_Set_Cursor 0029                    __ptext1 057F  
                  __ptext2 0545                    __ptext3 0321                    __ptext4 0639  
                  __ptext5 023D                    __ptext6 0612                    __ptext7 0443  
                  __ptext8 05E9                    __ptext9 04CD              EUSART_INIT@rx 0027  
            EUSART_INIT@tx 0025               __size_of_VAL 0074          i1___lwdiv@divisor 0070  
             __size_of_isr 00B6          i1___lwdiv@counter 0077   __size_of_I2C_Master_Init 003A  
 __size_of_I2C_Master_Read 0032   __size_of_I2C_Master_Wait 000D   __size_of_I2C_Master_Stop 0009  
   __end_of_Lcd_Write_Char 050A       end_of_initialization 001B  __size_of_I2C_Master_Start 0009  
__size_of_I2C_Master_Write 000A            ___lldiv@divisor 0025            ___lldiv@counter 0032  
                _RCSTAbits 0018           I2C_Master_Init@c 0033           I2C_Master_Read@a 0025  
                Lcd_Port@a 0025      i1___wmul@multiplicand 0072                  _PORTBbits 0006  
                _TRISCbits 0087                  i1___lwdiv 0489            ?_Lcd_Write_Char 0070  
        Lcd_Write_String@a 002C          Lcd_Write_String@i 002A                  _TXSTAbits 0098  
                _Lcd_Clear 06D3             __end_of___wmul 0639           _Lcd_Write_String 05E9  
              _BAUDCTLbits 0187        start_initialization 0013          __size_ofi1___wmul 0025  
              __end_of_VAL 02B1              ??_EUSART_INIT 0029                __end_of_isr 023D  
               ?i1___lwdiv 0070          __size_of_Lcd_Init 0062          __size_of_Lcd_Port 0020  
        ??_I2C_Master_Init 0037          ??_I2C_Master_Read 0027          ??_I2C_Master_Wait 0025  
        ??_I2C_Master_Stop 0025      __end_of_EUSART_ENVIAR 06D3                 ?_Lcd_Clear 0070  
                 ??___wmul 0029            Lcd_Write_Char@a 0029            Lcd_Write_Char@y 0028  
                ___latbits 0002              __pcstackBANK0 0020                   ?_Lcd_Cmd 0070  
      __end_of_EUSART_INIT 065F           _I2C_Master_Start 0700           _I2C_Master_Write 06ED  
         ___lwdiv@dividend 0027          EUSART_ENVIAR@dato 0072           ??_Lcd_Set_Cursor 002A  
                 VAL@valor 0031                   ?___lldiv 0025                   ?___lwdiv 0025  
                __pstrings 050A             __size_ofi1_VAL 0070           ___lwdiv@quotient 002A  
              ??i1___lwdiv 0074             __size_of_setup 0038          interrupt_function 0004  
           ___wmul@product 0029                   _PIE1bits 008C                   Lcd_Cmd@a 0028  
                 _PIR1bits 000C                ??_Lcd_Clear 0029                __stringbase 050F  
        ___wmul@multiplier 0025                   i1___wmul 065F           ??_Lcd_Write_Char 0026  
              _EUSART_INIT 0639                   _Lcd_Init 0389                   _Lcd_Port 0684  
      I2C_Master_Read@temp 0029   __end_of_Lcd_Write_String 0612           __size_of_Lcd_Cmd 001C  
         __size_of___lldiv 0068           __size_of___lwdiv 0046         __end_of__stringtab 0510  
          _I2C_Master_Init 0545            _I2C_Master_Read 05B7            _I2C_Master_Wait 06E0  
          _I2C_Master_Stop 06F7            ___lwdiv@divisor 0025            ___lwdiv@counter 002C  
                 __ptext10 03EB                   __ptext11 0389                   __ptext20 0187  
                 __ptext12 06D3                   __ptext21 02B1                   __ptext13 06A4  
                 __ptext22 065F                   __ptext14 0684                   __ptext23 0489  
                 __ptext15 06ED                   __ptext24 06C0                   __ptext16 06F7  
                 __ptext17 0700                   __ptext18 05B7                   __ptext19 06E0  
       i1___lwdiv@dividend 0072              __size_of_main 0168                 i1VAL@valor 007C  
       i1___lwdiv@quotient 0075   __end_of_I2C_Master_Start 0709   __end_of_I2C_Master_Write 06F7  
               _INTCONbits 000B         Lcd_Write_Char@temp 0027                   intlevel1 0000  
         ___lldiv@dividend 0029                  stringcode 050A              i1VAL@variable 0078  
               _OSCCONbits 008F                 _SENSOR_MOV 003F                 _VALOR_PESO 0040  
  __end_of_I2C_Master_Init 057F    __end_of_I2C_Master_Read 05E9    __end_of_I2C_Master_Wait 06ED  
  __end_of_I2C_Master_Stop 0700         Lcd_Set_Cursor@temp 002F           ___lldiv@quotient 002E  
        I2C_Master_Write@d 0025                   stringdir 050A                   stringtab 050A  
              _SSPCON2bits 0091     __size_of_EUSART_ENVIAR 0013  
