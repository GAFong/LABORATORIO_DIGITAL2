

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sat Aug 21 22:30:56 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    21                           	dabs	1,0x7E,2
    22  0000                     
    23                           ; Version 2.20
    24                           ; Generated 12/02/2020 GMT
    25                           ; 
    26                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F887 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     	;# 
    58  0001                     	;# 
    59  0002                     	;# 
    60  0003                     	;# 
    61  0004                     	;# 
    62  0005                     	;# 
    63  0006                     	;# 
    64  0007                     	;# 
    65  0008                     	;# 
    66  0009                     	;# 
    67  000A                     	;# 
    68  000B                     	;# 
    69  000C                     	;# 
    70  000D                     	;# 
    71  000E                     	;# 
    72  000E                     	;# 
    73  000F                     	;# 
    74  0010                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0013                     	;# 
    78  0014                     	;# 
    79  0015                     	;# 
    80  0015                     	;# 
    81  0016                     	;# 
    82  0017                     	;# 
    83  0018                     	;# 
    84  0019                     	;# 
    85  001A                     	;# 
    86  001B                     	;# 
    87  001B                     	;# 
    88  001C                     	;# 
    89  001D                     	;# 
    90  001E                     	;# 
    91  001F                     	;# 
    92  0081                     	;# 
    93  0085                     	;# 
    94  0086                     	;# 
    95  0087                     	;# 
    96  0088                     	;# 
    97  0089                     	;# 
    98  008C                     	;# 
    99  008D                     	;# 
   100  008E                     	;# 
   101  008F                     	;# 
   102  0090                     	;# 
   103  0091                     	;# 
   104  0092                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0094                     	;# 
   109  0095                     	;# 
   110  0096                     	;# 
   111  0097                     	;# 
   112  0098                     	;# 
   113  0099                     	;# 
   114  009A                     	;# 
   115  009B                     	;# 
   116  009C                     	;# 
   117  009D                     	;# 
   118  009E                     	;# 
   119  009F                     	;# 
   120  0105                     	;# 
   121  0107                     	;# 
   122  0108                     	;# 
   123  0109                     	;# 
   124  010C                     	;# 
   125  010C                     	;# 
   126  010D                     	;# 
   127  010E                     	;# 
   128  010F                     	;# 
   129  0185                     	;# 
   130  0187                     	;# 
   131  0188                     	;# 
   132  0189                     	;# 
   133  018C                     	;# 
   134  018D                     	;# 
   135  0000                     	;# 
   136  0001                     	;# 
   137  0002                     	;# 
   138  0003                     	;# 
   139  0004                     	;# 
   140  0005                     	;# 
   141  0006                     	;# 
   142  0007                     	;# 
   143  0008                     	;# 
   144  0009                     	;# 
   145  000A                     	;# 
   146  000B                     	;# 
   147  000C                     	;# 
   148  000D                     	;# 
   149  000E                     	;# 
   150  000E                     	;# 
   151  000F                     	;# 
   152  0010                     	;# 
   153  0011                     	;# 
   154  0012                     	;# 
   155  0013                     	;# 
   156  0014                     	;# 
   157  0015                     	;# 
   158  0015                     	;# 
   159  0016                     	;# 
   160  0017                     	;# 
   161  0018                     	;# 
   162  0019                     	;# 
   163  001A                     	;# 
   164  001B                     	;# 
   165  001B                     	;# 
   166  001C                     	;# 
   167  001D                     	;# 
   168  001E                     	;# 
   169  001F                     	;# 
   170  0081                     	;# 
   171  0085                     	;# 
   172  0086                     	;# 
   173  0087                     	;# 
   174  0088                     	;# 
   175  0089                     	;# 
   176  008C                     	;# 
   177  008D                     	;# 
   178  008E                     	;# 
   179  008F                     	;# 
   180  0090                     	;# 
   181  0091                     	;# 
   182  0092                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0094                     	;# 
   187  0095                     	;# 
   188  0096                     	;# 
   189  0097                     	;# 
   190  0098                     	;# 
   191  0099                     	;# 
   192  009A                     	;# 
   193  009B                     	;# 
   194  009C                     	;# 
   195  009D                     	;# 
   196  009E                     	;# 
   197  009F                     	;# 
   198  0105                     	;# 
   199  0107                     	;# 
   200  0108                     	;# 
   201  0109                     	;# 
   202  010C                     	;# 
   203  010C                     	;# 
   204  010D                     	;# 
   205  010E                     	;# 
   206  010F                     	;# 
   207  0185                     	;# 
   208  0187                     	;# 
   209  0188                     	;# 
   210  0189                     	;# 
   211  018C                     	;# 
   212  018D                     	;# 
   213  0000                     	;# 
   214  0001                     	;# 
   215  0002                     	;# 
   216  0003                     	;# 
   217  0004                     	;# 
   218  0005                     	;# 
   219  0006                     	;# 
   220  0007                     	;# 
   221  0008                     	;# 
   222  0009                     	;# 
   223  000A                     	;# 
   224  000B                     	;# 
   225  000C                     	;# 
   226  000D                     	;# 
   227  000E                     	;# 
   228  000E                     	;# 
   229  000F                     	;# 
   230  0010                     	;# 
   231  0011                     	;# 
   232  0012                     	;# 
   233  0013                     	;# 
   234  0014                     	;# 
   235  0015                     	;# 
   236  0015                     	;# 
   237  0016                     	;# 
   238  0017                     	;# 
   239  0018                     	;# 
   240  0019                     	;# 
   241  001A                     	;# 
   242  001B                     	;# 
   243  001B                     	;# 
   244  001C                     	;# 
   245  001D                     	;# 
   246  001E                     	;# 
   247  001F                     	;# 
   248  0081                     	;# 
   249  0085                     	;# 
   250  0086                     	;# 
   251  0087                     	;# 
   252  0088                     	;# 
   253  0089                     	;# 
   254  008C                     	;# 
   255  008D                     	;# 
   256  008E                     	;# 
   257  008F                     	;# 
   258  0090                     	;# 
   259  0091                     	;# 
   260  0092                     	;# 
   261  0093                     	;# 
   262  0093                     	;# 
   263  0093                     	;# 
   264  0094                     	;# 
   265  0095                     	;# 
   266  0096                     	;# 
   267  0097                     	;# 
   268  0098                     	;# 
   269  0099                     	;# 
   270  009A                     	;# 
   271  009B                     	;# 
   272  009C                     	;# 
   273  009D                     	;# 
   274  009E                     	;# 
   275  009F                     	;# 
   276  0105                     	;# 
   277  0107                     	;# 
   278  0108                     	;# 
   279  0109                     	;# 
   280  010C                     	;# 
   281  010C                     	;# 
   282  010D                     	;# 
   283  010E                     	;# 
   284  010F                     	;# 
   285  0185                     	;# 
   286  0187                     	;# 
   287  0188                     	;# 
   288  0189                     	;# 
   289  018C                     	;# 
   290  018D                     	;# 
   291  0000                     	;# 
   292  0001                     	;# 
   293  0002                     	;# 
   294  0003                     	;# 
   295  0004                     	;# 
   296  0005                     	;# 
   297  0006                     	;# 
   298  0007                     	;# 
   299  0008                     	;# 
   300  0009                     	;# 
   301  000A                     	;# 
   302  000B                     	;# 
   303  000C                     	;# 
   304  000D                     	;# 
   305  000E                     	;# 
   306  000E                     	;# 
   307  000F                     	;# 
   308  0010                     	;# 
   309  0011                     	;# 
   310  0012                     	;# 
   311  0013                     	;# 
   312  0014                     	;# 
   313  0015                     	;# 
   314  0015                     	;# 
   315  0016                     	;# 
   316  0017                     	;# 
   317  0018                     	;# 
   318  0019                     	;# 
   319  001A                     	;# 
   320  001B                     	;# 
   321  001B                     	;# 
   322  001C                     	;# 
   323  001D                     	;# 
   324  001E                     	;# 
   325  001F                     	;# 
   326  0081                     	;# 
   327  0085                     	;# 
   328  0086                     	;# 
   329  0087                     	;# 
   330  0088                     	;# 
   331  0089                     	;# 
   332  008C                     	;# 
   333  008D                     	;# 
   334  008E                     	;# 
   335  008F                     	;# 
   336  0090                     	;# 
   337  0091                     	;# 
   338  0092                     	;# 
   339  0093                     	;# 
   340  0093                     	;# 
   341  0093                     	;# 
   342  0094                     	;# 
   343  0095                     	;# 
   344  0096                     	;# 
   345  0097                     	;# 
   346  0098                     	;# 
   347  0099                     	;# 
   348  009A                     	;# 
   349  009B                     	;# 
   350  009C                     	;# 
   351  009D                     	;# 
   352  009E                     	;# 
   353  009F                     	;# 
   354  0105                     	;# 
   355  0107                     	;# 
   356  0108                     	;# 
   357  0109                     	;# 
   358  010C                     	;# 
   359  010C                     	;# 
   360  010D                     	;# 
   361  010E                     	;# 
   362  010F                     	;# 
   363  0185                     	;# 
   364  0187                     	;# 
   365  0188                     	;# 
   366  0189                     	;# 
   367  018C                     	;# 
   368  018D                     	;# 
   369  0013                     _SSPBUF	set	19
   370  0014                     _SSPCON	set	20
   371  0006                     _PORTBbits	set	6
   372  0009                     _PORTE	set	9
   373  0008                     _PORTD	set	8
   374  0007                     _PORTC	set	7
   375  0006                     _PORTB	set	6
   376  0005                     _PORTA	set	5
   377  000B                     _INTCONbits	set	11
   378  0019                     _TXREG	set	25
   379  000C                     _PIR1bits	set	12
   380  0018                     _RCSTAbits	set	24
   381  0063                     _SSPIF	set	99
   382  005E                     _PEIE	set	94
   383  005F                     _GIE	set	95
   384  0035                     _RB5	set	53
   385  0033                     _RB3	set	51
   386  0032                     _RB2	set	50
   387  0031                     _RB1	set	49
   388  0030                     _RB0	set	48
   389  0091                     _SSPCON2bits	set	145
   390  0087                     _TRISCbits	set	135
   391  0094                     _SSPSTAT	set	148
   392  0093                     _SSPADD	set	147
   393  0091                     _SSPCON2	set	145
   394  008F                     _OSCCONbits	set	143
   395  0086                     _TRISB	set	134
   396  0089                     _TRISE	set	137
   397  0088                     _TRISD	set	136
   398  0085                     _TRISA	set	133
   399  008C                     _PIE1bits	set	140
   400  009A                     _SPBRGH	set	154
   401  0099                     _SPBRG	set	153
   402  0098                     _TXSTAbits	set	152
   403  0463                     _SSPIE	set	1123
   404  043C                     _TRISC4	set	1084
   405  043B                     _TRISC3	set	1083
   406  0189                     _ANSELH	set	393
   407  0188                     _ANSEL	set	392
   408  0187                     _BAUDCTLbits	set	391
   409                           
   410                           	psect	strings
   411  0170                     __pstrings:
   412  0170                     stringtab:
   413  0170                     __stringtab:
   414  0170                     stringcode:	
   415                           ;	String table - string pointers are 1 byte each
   416                           
   417  0170                     stringdir:
   418  0170  3001               	movlw	high stringdir
   419  0171  008A               	movwf	10
   420  0172  0804               	movf	4,w
   421  0173  0A84               	incf	4,f
   422  0174  0782               	addwf	2,f
   423  0175                     __stringbase:
   424  0175  3400               	retlw	0
   425  0176                     __end_of__stringtab:
   426  0176                     STR_1:
   427  0176  3450               	retlw	80	;'P'
   428  0177  3445               	retlw	69	;'E'
   429  0178  3453               	retlw	83	;'S'
   430  0179  344F               	retlw	79	;'O'
   431  017A  343A               	retlw	58	;':'
   432  017B  3420               	retlw	32	;' '
   433  017C  3443               	retlw	67	;'C'
   434  017D  344F               	retlw	79	;'O'
   435  017E  344C               	retlw	76	;'L'
   436  017F  344F               	retlw	79	;'O'
   437  0180  3452               	retlw	82	;'R'
   438  0181  343A               	retlw	58	;':'
   439  0182  3420               	retlw	32	;' '
   440  0183  3442               	retlw	66	;'B'
   441  0184  3441               	retlw	65	;'A'
   442  0185  344E               	retlw	78	;'N'
   443  0186  3444               	retlw	68	;'D'
   444  0187  3441               	retlw	65	;'A'
   445  0188  343A               	retlw	58	;':'
   446  0189  3400               	retlw	0
   447                           
   448                           	psect	cinit
   449  000F                     start_initialization:	
   450                           ; #config settings
   451                           
   452  000F                     __initialization:
   453                           
   454                           ; Clear objects allocated to COMMON
   455  000F  01F9               	clrf	__pbssCOMMON& (0+127)
   456  0010  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   457  0011  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
   458  0012                     end_of_initialization:	
   459                           ;End of C runtime variable initialization code
   460                           
   461  0012                     __end_of__initialization:
   462  0012  0183               	clrf	3
   463  0013  120A  118A  294F   	ljmp	_main	;jump to C main() function
   464                           
   465                           	psect	bssCOMMON
   466  0079                     __pbssCOMMON:
   467  0079                     _POS3:
   468  0079                     	ds	1
   469  007A                     _POS2:
   470  007A                     	ds	1
   471  007B                     _POS1:
   472  007B                     	ds	1
   473                           
   474                           	psect	cstackCOMMON
   475  0070                     __pcstackCOMMON:
   476  0070                     ?_setup:
   477  0070                     ?_Lcd_Init:	
   478                           ; 1 bytes @ 0x0
   479                           
   480  0070                     ?_Lcd_Clear:	
   481                           ; 1 bytes @ 0x0
   482                           
   483  0070                     ?_Lcd_Write_String:	
   484                           ; 1 bytes @ 0x0
   485                           
   486  0070                     ?_isr:	
   487                           ; 1 bytes @ 0x0
   488                           
   489  0070                     ??_isr:	
   490                           ; 1 bytes @ 0x0
   491                           
   492  0070                     ?_main:	
   493                           ; 1 bytes @ 0x0
   494                           
   495  0070                     ?_Lcd_Port:	
   496                           ; 1 bytes @ 0x0
   497                           
   498  0070                     ?_Lcd_Cmd:	
   499                           ; 1 bytes @ 0x0
   500                           
   501  0070                     ?_Lcd_Write_Char:	
   502                           ; 1 bytes @ 0x0
   503                           
   504                           
   505                           ; 1 bytes @ 0x0
   506  0070                     	ds	2
   507  0072                     ??_setup:
   508  0072                     ??_Lcd_Port:	
   509                           ; 1 bytes @ 0x2
   510                           
   511  0072                     Lcd_Port@a:	
   512                           ; 1 bytes @ 0x2
   513                           
   514                           
   515                           ; 1 bytes @ 0x2
   516  0072                     	ds	1
   517  0073                     ??_Lcd_Cmd:
   518  0073                     ??_Lcd_Write_Char:	
   519                           ; 1 bytes @ 0x3
   520                           
   521                           
   522                           ; 1 bytes @ 0x3
   523  0073                     	ds	1
   524  0074                     Lcd_Write_Char@temp:
   525                           
   526                           ; 1 bytes @ 0x4
   527  0074                     	ds	1
   528  0075                     Lcd_Cmd@a:
   529  0075                     Lcd_Write_Char@y:	
   530                           ; 1 bytes @ 0x5
   531                           
   532                           
   533                           ; 1 bytes @ 0x5
   534  0075                     	ds	1
   535  0076                     ??_Lcd_Init:
   536  0076                     ??_Lcd_Clear:	
   537                           ; 1 bytes @ 0x6
   538                           
   539  0076                     ?_Lcd_Set_Cursor:	
   540                           ; 1 bytes @ 0x6
   541                           
   542  0076                     Lcd_Set_Cursor@b:	
   543                           ; 1 bytes @ 0x6
   544                           
   545  0076                     Lcd_Write_Char@a:	
   546                           ; 1 bytes @ 0x6
   547                           
   548                           
   549                           ; 1 bytes @ 0x6
   550  0076                     	ds	1
   551  0077                     ??_Lcd_Set_Cursor:
   552  0077                     ??_Lcd_Write_String:	
   553                           ; 1 bytes @ 0x7
   554                           
   555                           
   556                           ; 1 bytes @ 0x7
   557  0077                     	ds	2
   558  0079                     ??_main:
   559                           
   560                           	psect	cstackBANK0
   561  0020                     __pcstackBANK0:	
   562                           ; 1 bytes @ 0x9
   563                           
   564  0020                     Lcd_Set_Cursor@a:
   565  0020                     Lcd_Write_String@a:	
   566                           ; 1 bytes @ 0x0
   567                           
   568                           
   569                           ; 1 bytes @ 0x0
   570  0020                     	ds	1
   571  0021                     Lcd_Set_Cursor@z:
   572  0021                     Lcd_Write_String@i:	
   573                           ; 1 bytes @ 0x1
   574                           
   575                           
   576                           ; 2 bytes @ 0x1
   577  0021                     	ds	1
   578  0022                     Lcd_Set_Cursor@y:
   579                           
   580                           ; 1 bytes @ 0x2
   581  0022                     	ds	1
   582  0023                     Lcd_Set_Cursor@temp:
   583                           
   584                           ; 1 bytes @ 0x3
   585  0023                     	ds	1
   586                           
   587                           	psect	maintext
   588  014F                     __pmaintext:	
   589 ;;
   590 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   591 ;;
   592 ;; *************** function _main *****************
   593 ;; Defined at:
   594 ;;		line 57 in file "main.c"
   595 ;; Parameters:    Size  Location     Type
   596 ;;		None
   597 ;; Auto vars:     Size  Location     Type
   598 ;;		None
   599 ;; Return value:  Size  Location     Type
   600 ;;                  1    wreg      void 
   601 ;; Registers used:
   602 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   603 ;; Tracked objects:
   604 ;;		On entry : B00/0
   605 ;;		On exit  : 0/0
   606 ;;		Unchanged: 0/0
   607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   608 ;;      Params:         0       0       0       0       0
   609 ;;      Locals:         0       0       0       0       0
   610 ;;      Temps:          0       0       0       0       0
   611 ;;      Totals:         0       0       0       0       0
   612 ;;Total ram usage:        0 bytes
   613 ;; Hardware stack levels required when called:    4
   614 ;; This function calls:
   615 ;;		_Lcd_Clear
   616 ;;		_Lcd_Init
   617 ;;		_Lcd_Set_Cursor
   618 ;;		_Lcd_Write_String
   619 ;;		_setup
   620 ;; This function is called by:
   621 ;;		Startup code after reset
   622 ;; This function uses a non-reentrant model
   623 ;;
   624                           
   625                           
   626                           ;psect for function _main
   627  014F                     _main:
   628  014F                     l1158:	
   629                           ;incstack = 0
   630                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   631                           
   632                           
   633                           ;main.c: 58:     setup();
   634  014F  120A  118A  218A  120A  118A  	fcall	_setup
   635  0154                     l1160:
   636                           
   637                           ;main.c: 59:     Lcd_Init();
   638  0154  120A  118A  2016  120A  118A  	fcall	_Lcd_Init
   639  0159                     l1162:
   640                           
   641                           ;main.c: 60:     Lcd_Clear();
   642  0159  120A  118A  21BE  120A  118A  	fcall	_Lcd_Clear
   643  015E                     l1164:
   644                           
   645                           ;main.c: 61:     Lcd_Set_Cursor(1,1);
   646  015E  01F6               	clrf	Lcd_Set_Cursor@b
   647  015F  0AF6               	incf	Lcd_Set_Cursor@b,f
   648  0160  3001               	movlw	1
   649  0161  120A  118A  2073  120A  118A  	fcall	_Lcd_Set_Cursor
   650  0166                     l1166:
   651                           
   652                           ;main.c: 62:     Lcd_Write_String("PESO: COLOR: BANDA:");
   653  0166  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   654  0167  120A  118A  2104  120A  118A  	fcall	_Lcd_Write_String
   655  016C                     l77:	
   656                           ;main.c: 63:     while(1){
   657                           
   658  016C                     l78:	
   659                           ;main.c: 65:     }
   660                           
   661  016C  296C               	goto	l77
   662  016D  120A  118A  280C   	ljmp	start
   663  0170                     __end_of_main:
   664                           
   665                           	psect	text1
   666  018A                     __ptext1:	
   667 ;; *************** function _setup *****************
   668 ;; Defined at:
   669 ;;		line 70 in file "main.c"
   670 ;; Parameters:    Size  Location     Type
   671 ;;		None
   672 ;; Auto vars:     Size  Location     Type
   673 ;;		None
   674 ;; Return value:  Size  Location     Type
   675 ;;                  1    wreg      void 
   676 ;; Registers used:
   677 ;;		status,2
   678 ;; Tracked objects:
   679 ;;		On entry : 0/0
   680 ;;		On exit  : 0/0
   681 ;;		Unchanged: 0/0
   682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   683 ;;      Params:         0       0       0       0       0
   684 ;;      Locals:         0       0       0       0       0
   685 ;;      Temps:          0       0       0       0       0
   686 ;;      Totals:         0       0       0       0       0
   687 ;;Total ram usage:        0 bytes
   688 ;; Hardware stack levels used:    1
   689 ;; Hardware stack levels required when called:    1
   690 ;; This function calls:
   691 ;;		Nothing
   692 ;; This function is called by:
   693 ;;		_main
   694 ;; This function uses a non-reentrant model
   695 ;;
   696                           
   697                           
   698                           ;psect for function _setup
   699  018A                     _setup:
   700  018A                     l828:	
   701                           ;incstack = 0
   702                           ; Regs used in _setup: [status,2]
   703                           
   704                           
   705                           ;main.c: 72:     ANSEL = 0B0000000;
   706  018A  1683               	bsf	3,5	;RP0=1, select bank3
   707  018B  1703               	bsf	3,6	;RP1=1, select bank3
   708  018C  0188               	clrf	8	;volatile
   709                           
   710                           ;main.c: 73:     ANSELH = 0X00;
   711  018D  0189               	clrf	9	;volatile
   712                           
   713                           ;main.c: 75:     TRISA = 0B0000000;
   714  018E  1683               	bsf	3,5	;RP0=1, select bank1
   715  018F  1303               	bcf	3,6	;RP1=0, select bank1
   716  0190  0185               	clrf	5	;volatile
   717                           
   718                           ;main.c: 76:     TRISD = 0X00;
   719  0191  0188               	clrf	8	;volatile
   720                           
   721                           ;main.c: 77:     TRISE = 0X00;
   722  0192  0189               	clrf	9	;volatile
   723                           
   724                           ;main.c: 78:     TRISB = 0X00;
   725  0193  0186               	clrf	6	;volatile
   726                           
   727                           ;main.c: 81:     PORTA = 0X00;
   728  0194  1283               	bcf	3,5	;RP0=0, select bank0
   729  0195  1303               	bcf	3,6	;RP1=0, select bank0
   730  0196  0185               	clrf	5	;volatile
   731                           
   732                           ;main.c: 82:     PORTB = 0X00;
   733  0197  0186               	clrf	6	;volatile
   734                           
   735                           ;main.c: 83:     PORTC = 0X00;
   736  0198  0187               	clrf	7	;volatile
   737                           
   738                           ;main.c: 84:     PORTD = 0X00;
   739  0199  0188               	clrf	8	;volatile
   740                           
   741                           ;main.c: 85:     PORTE = 0X00;
   742  019A  0189               	clrf	9	;volatile
   743  019B                     l830:
   744                           
   745                           ;main.c: 88:     OSCCONbits.IRCF2 = 1;
   746  019B  1683               	bsf	3,5	;RP0=1, select bank1
   747  019C  1303               	bcf	3,6	;RP1=0, select bank1
   748  019D  170F               	bsf	15,6	;volatile
   749  019E                     l832:
   750                           
   751                           ;main.c: 89:     OSCCONbits.IRCF1 = 1;
   752  019E  168F               	bsf	15,5	;volatile
   753  019F                     l834:
   754                           
   755                           ;main.c: 90:     OSCCONbits.IRCF0 = 1;
   756  019F  160F               	bsf	15,4	;volatile
   757  01A0                     l836:
   758                           
   759                           ;main.c: 91:     OSCCONbits.SCS = 1;
   760  01A0  140F               	bsf	15,0	;volatile
   761  01A1                     l838:
   762                           
   763                           ;main.c: 95:     INTCONbits.GIE = 1;
   764  01A1  178B               	bsf	11,7	;volatile
   765  01A2                     l840:
   766                           
   767                           ;main.c: 96:     INTCONbits.PEIE = 1;
   768  01A2  170B               	bsf	11,6	;volatile
   769  01A3                     l83:
   770  01A3  0008               	return
   771  01A4                     __end_of_setup:
   772                           
   773                           	psect	text2
   774  0104                     __ptext2:	
   775 ;; *************** function _Lcd_Write_String *****************
   776 ;; Defined at:
   777 ;;		line 98 in file "LCD.c"
   778 ;; Parameters:    Size  Location     Type
   779 ;;  a               1    wreg     PTR unsigned char 
   780 ;;		 -> STR_1(20), 
   781 ;; Auto vars:     Size  Location     Type
   782 ;;  a               1    0[BANK0 ] PTR unsigned char 
   783 ;;		 -> STR_1(20), 
   784 ;;  i               2    1[BANK0 ] int 
   785 ;; Return value:  Size  Location     Type
   786 ;;                  1    wreg      void 
   787 ;; Registers used:
   788 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   789 ;; Tracked objects:
   790 ;;		On entry : 0/0
   791 ;;		On exit  : 0/0
   792 ;;		Unchanged: 0/0
   793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   794 ;;      Params:         0       0       0       0       0
   795 ;;      Locals:         0       3       0       0       0
   796 ;;      Temps:          0       0       0       0       0
   797 ;;      Totals:         0       3       0       0       0
   798 ;;Total ram usage:        3 bytes
   799 ;; Hardware stack levels used:    1
   800 ;; Hardware stack levels required when called:    3
   801 ;; This function calls:
   802 ;;		_Lcd_Write_Char
   803 ;; This function is called by:
   804 ;;		_main
   805 ;; This function uses a non-reentrant model
   806 ;;
   807                           
   808                           
   809                           ;psect for function _Lcd_Write_String
   810  0104                     _Lcd_Write_String:
   811                           
   812                           ;incstack = 0
   813                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   814                           ;Lcd_Write_String@a stored from wreg
   815  0104  1283               	bcf	3,5	;RP0=0, select bank0
   816  0105  1303               	bcf	3,6	;RP1=0, select bank0
   817  0106  00A0               	movwf	Lcd_Write_String@a
   818  0107                     l1150:
   819                           
   820                           ;LCD.c: 99:     int i;;LCD.c: 100:     for (i = 0; a[i] != '\0'; i++)
   821  0107  01A1               	clrf	Lcd_Write_String@i
   822  0108  01A2               	clrf	Lcd_Write_String@i+1
   823  0109  291F               	goto	l1156
   824  010A                     l1152:
   825                           
   826                           ;LCD.c: 101:         Lcd_Write_Char(a[i]);
   827  010A  0821               	movf	Lcd_Write_String@i,w
   828  010B  0720               	addwf	Lcd_Write_String@a,w
   829  010C  0084               	movwf	4
   830  010D  120A  118A  2170  120A  118A  	fcall	stringdir
   831  0112  120A  118A  20CB  120A  118A  	fcall	_Lcd_Write_Char
   832  0117                     l1154:
   833  0117  3001               	movlw	1
   834  0118  1283               	bcf	3,5	;RP0=0, select bank0
   835  0119  1303               	bcf	3,6	;RP1=0, select bank0
   836  011A  07A1               	addwf	Lcd_Write_String@i,f
   837  011B  1803               	skipnc
   838  011C  0AA2               	incf	Lcd_Write_String@i+1,f
   839  011D  3000               	movlw	0
   840  011E  07A2               	addwf	Lcd_Write_String@i+1,f
   841  011F                     l1156:
   842  011F  0821               	movf	Lcd_Write_String@i,w
   843  0120  0720               	addwf	Lcd_Write_String@a,w
   844  0121  0084               	movwf	4
   845  0122  120A  118A  2170  120A  118A  	fcall	stringdir
   846  0127  3A00               	xorlw	0
   847  0128  1D03               	skipz
   848  0129  292B               	goto	u351
   849  012A  292C               	goto	u350
   850  012B                     u351:
   851  012B  290A               	goto	l1152
   852  012C                     u350:
   853  012C                     l135:
   854  012C  0008               	return
   855  012D                     __end_of_Lcd_Write_String:
   856                           
   857                           	psect	text3
   858  00CB                     __ptext3:	
   859 ;; *************** function _Lcd_Write_Char *****************
   860 ;; Defined at:
   861 ;;		line 83 in file "LCD.c"
   862 ;; Parameters:    Size  Location     Type
   863 ;;  a               1    wreg     unsigned char 
   864 ;; Auto vars:     Size  Location     Type
   865 ;;  a               1    6[COMMON] unsigned char 
   866 ;;  y               1    5[COMMON] unsigned char 
   867 ;;  temp            1    4[COMMON] unsigned char 
   868 ;; Return value:  Size  Location     Type
   869 ;;                  1    wreg      void 
   870 ;; Registers used:
   871 ;;		wreg, status,2, status,0, pclath, cstack
   872 ;; Tracked objects:
   873 ;;		On entry : 0/0
   874 ;;		On exit  : 0/0
   875 ;;		Unchanged: 0/0
   876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   877 ;;      Params:         0       0       0       0       0
   878 ;;      Locals:         3       0       0       0       0
   879 ;;      Temps:          1       0       0       0       0
   880 ;;      Totals:         4       0       0       0       0
   881 ;;Total ram usage:        4 bytes
   882 ;; Hardware stack levels used:    1
   883 ;; Hardware stack levels required when called:    2
   884 ;; This function calls:
   885 ;;		_Lcd_Port
   886 ;; This function is called by:
   887 ;;		_Lcd_Write_String
   888 ;; This function uses a non-reentrant model
   889 ;;
   890                           
   891                           
   892                           ;psect for function _Lcd_Write_Char
   893  00CB                     _Lcd_Write_Char:
   894                           
   895                           ;incstack = 0
   896                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
   897                           ;Lcd_Write_Char@a stored from wreg
   898  00CB  00F6               	movwf	Lcd_Write_Char@a
   899  00CC                     l1098:
   900                           
   901                           ;LCD.c: 84:     char temp, y;;LCD.c: 85:     temp = a & 0x0F;
   902  00CC  0876               	movf	Lcd_Write_Char@a,w
   903  00CD  390F               	andlw	15
   904  00CE  00F3               	movwf	??_Lcd_Write_Char
   905  00CF  0873               	movf	??_Lcd_Write_Char,w
   906  00D0  00F4               	movwf	Lcd_Write_Char@temp
   907                           
   908                           ;LCD.c: 86:     y = a & 0xF0;
   909  00D1  0876               	movf	Lcd_Write_Char@a,w
   910  00D2  39F0               	andlw	240
   911  00D3  00F3               	movwf	??_Lcd_Write_Char
   912  00D4  0873               	movf	??_Lcd_Write_Char,w
   913  00D5  00F5               	movwf	Lcd_Write_Char@y
   914  00D6                     l1100:
   915                           
   916                           ;LCD.c: 87:     PORTBbits.RB4 = 1;
   917  00D6  1283               	bcf	3,5	;RP0=0, select bank0
   918  00D7  1303               	bcf	3,6	;RP1=0, select bank0
   919  00D8  1606               	bsf	6,4	;volatile
   920  00D9                     l1102:
   921                           
   922                           ;LCD.c: 88:     Lcd_Port(y >> 4);
   923  00D9  0875               	movf	Lcd_Write_Char@y,w
   924  00DA  00F3               	movwf	??_Lcd_Write_Char
   925  00DB  3004               	movlw	4
   926  00DC                     u305:
   927  00DC  1003               	clrc
   928  00DD  0CF3               	rrf	??_Lcd_Write_Char,f
   929  00DE  3EFF               	addlw	-1
   930  00DF  1D03               	skipz
   931  00E0  28DC               	goto	u305
   932  00E1  0873               	movf	??_Lcd_Write_Char,w
   933  00E2  120A  118A  212D  120A  118A  	fcall	_Lcd_Port
   934  00E7                     l1104:
   935                           
   936                           ;LCD.c: 89:     RB5 = 1;
   937  00E7  1283               	bcf	3,5	;RP0=0, select bank0
   938  00E8  1303               	bcf	3,6	;RP1=0, select bank0
   939  00E9  1686               	bsf	6,5	;volatile
   940  00EA                     l1106:
   941                           
   942                           ;LCD.c: 90:     _delay((unsigned long)((40)*(8000000/4000000.0)));
   943  00EA  301A               	movlw	26
   944  00EB  00F3               	movwf	??_Lcd_Write_Char
   945  00EC                     u367:
   946  00EC  0BF3               	decfsz	??_Lcd_Write_Char,f
   947  00ED  28EC               	goto	u367
   948  00EE  0000               	nop
   949  00EF                     l1108:
   950                           
   951                           ;LCD.c: 91:     RB5 = 0;
   952  00EF  1283               	bcf	3,5	;RP0=0, select bank0
   953  00F0  1303               	bcf	3,6	;RP1=0, select bank0
   954  00F1  1286               	bcf	6,5	;volatile
   955  00F2                     l1110:
   956                           
   957                           ;LCD.c: 92:     Lcd_Port(temp);
   958  00F2  0874               	movf	Lcd_Write_Char@temp,w
   959  00F3  120A  118A  212D  120A  118A  	fcall	_Lcd_Port
   960  00F8                     l1112:
   961                           
   962                           ;LCD.c: 93:     RB5 = 1;
   963  00F8  1283               	bcf	3,5	;RP0=0, select bank0
   964  00F9  1303               	bcf	3,6	;RP1=0, select bank0
   965  00FA  1686               	bsf	6,5	;volatile
   966  00FB                     l1114:
   967                           
   968                           ;LCD.c: 94:     _delay((unsigned long)((40)*(8000000/4000000.0)));
   969  00FB  301A               	movlw	26
   970  00FC  00F3               	movwf	??_Lcd_Write_Char
   971  00FD                     u377:
   972  00FD  0BF3               	decfsz	??_Lcd_Write_Char,f
   973  00FE  28FD               	goto	u377
   974  00FF  0000               	nop
   975  0100                     l1116:
   976                           
   977                           ;LCD.c: 95:     RB5 = 0;
   978  0100  1283               	bcf	3,5	;RP0=0, select bank0
   979  0101  1303               	bcf	3,6	;RP1=0, select bank0
   980  0102  1286               	bcf	6,5	;volatile
   981  0103                     l129:
   982  0103  0008               	return
   983  0104                     __end_of_Lcd_Write_Char:
   984                           
   985                           	psect	text4
   986  0073                     __ptext4:	
   987 ;; *************** function _Lcd_Set_Cursor *****************
   988 ;; Defined at:
   989 ;;		line 48 in file "LCD.c"
   990 ;; Parameters:    Size  Location     Type
   991 ;;  a               1    wreg     unsigned char 
   992 ;;  b               1    6[COMMON] unsigned char 
   993 ;; Auto vars:     Size  Location     Type
   994 ;;  a               1    0[BANK0 ] unsigned char 
   995 ;;  temp            1    3[BANK0 ] unsigned char 
   996 ;;  y               1    2[BANK0 ] unsigned char 
   997 ;;  z               1    1[BANK0 ] unsigned char 
   998 ;; Return value:  Size  Location     Type
   999 ;;                  1    wreg      void 
  1000 ;; Registers used:
  1001 ;;		wreg, status,2, status,0, pclath, cstack
  1002 ;; Tracked objects:
  1003 ;;		On entry : 0/0
  1004 ;;		On exit  : 0/0
  1005 ;;		Unchanged: 0/0
  1006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1007 ;;      Params:         1       0       0       0       0
  1008 ;;      Locals:         0       4       0       0       0
  1009 ;;      Temps:          2       0       0       0       0
  1010 ;;      Totals:         3       4       0       0       0
  1011 ;;Total ram usage:        7 bytes
  1012 ;; Hardware stack levels used:    1
  1013 ;; Hardware stack levels required when called:    3
  1014 ;; This function calls:
  1015 ;;		_Lcd_Cmd
  1016 ;; This function is called by:
  1017 ;;		_main
  1018 ;; This function uses a non-reentrant model
  1019 ;;
  1020                           
  1021                           
  1022                           ;psect for function _Lcd_Set_Cursor
  1023  0073                     _Lcd_Set_Cursor:
  1024                           
  1025                           ;incstack = 0
  1026                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1027                           ;Lcd_Set_Cursor@a stored from wreg
  1028  0073  1283               	bcf	3,5	;RP0=0, select bank0
  1029  0074  1303               	bcf	3,6	;RP1=0, select bank0
  1030  0075  00A0               	movwf	Lcd_Set_Cursor@a
  1031  0076                     l1130:
  1032                           
  1033                           ;LCD.c: 49:     char temp, z, y;;LCD.c: 50:     if (a == 1) {
  1034  0076  0320               	decf	Lcd_Set_Cursor@a,w
  1035  0077  1D03               	btfss	3,2
  1036  0078  287A               	goto	u311
  1037  0079  287B               	goto	u310
  1038  007A                     u311:
  1039  007A  28A0               	goto	l1140
  1040  007B                     u310:
  1041  007B                     l1132:
  1042                           
  1043                           ;LCD.c: 51:         temp = 0x80 + b - 1;
  1044  007B  0876               	movf	Lcd_Set_Cursor@b,w
  1045  007C  3E7F               	addlw	127
  1046  007D  00F7               	movwf	??_Lcd_Set_Cursor
  1047  007E  0877               	movf	??_Lcd_Set_Cursor,w
  1048  007F  00A3               	movwf	Lcd_Set_Cursor@temp
  1049                           
  1050                           ;LCD.c: 52:         z = temp >> 4;
  1051  0080  0823               	movf	Lcd_Set_Cursor@temp,w
  1052  0081  00F7               	movwf	??_Lcd_Set_Cursor
  1053  0082  3004               	movlw	4
  1054  0083                     u325:
  1055  0083  1003               	clrc
  1056  0084  0CF7               	rrf	??_Lcd_Set_Cursor,f
  1057  0085  3EFF               	addlw	-1
  1058  0086  1D03               	skipz
  1059  0087  2883               	goto	u325
  1060  0088  0877               	movf	??_Lcd_Set_Cursor,w
  1061  0089  00F8               	movwf	??_Lcd_Set_Cursor+1
  1062  008A  0878               	movf	??_Lcd_Set_Cursor+1,w
  1063  008B  00A1               	movwf	Lcd_Set_Cursor@z
  1064  008C                     l1134:
  1065                           
  1066                           ;LCD.c: 53:         y = temp & 0x0F;
  1067  008C  0823               	movf	Lcd_Set_Cursor@temp,w
  1068  008D  390F               	andlw	15
  1069  008E  00F7               	movwf	??_Lcd_Set_Cursor
  1070  008F  0877               	movf	??_Lcd_Set_Cursor,w
  1071  0090  00A2               	movwf	Lcd_Set_Cursor@y
  1072  0091                     l1136:
  1073                           
  1074                           ;LCD.c: 54:         Lcd_Cmd(z);
  1075  0091  0821               	movf	Lcd_Set_Cursor@z,w
  1076  0092  120A  118A  21A4  120A  118A  	fcall	_Lcd_Cmd
  1077  0097                     l1138:
  1078                           
  1079                           ;LCD.c: 55:         Lcd_Cmd(y);
  1080  0097  1283               	bcf	3,5	;RP0=0, select bank0
  1081  0098  1303               	bcf	3,6	;RP1=0, select bank0
  1082  0099  0822               	movf	Lcd_Set_Cursor@y,w
  1083  009A  120A  118A  21A4  120A  118A  	fcall	_Lcd_Cmd
  1084                           
  1085                           ;LCD.c: 56:     } else if (a == 2) {
  1086  009F  28CA               	goto	l123
  1087  00A0                     l1140:
  1088  00A0  3002               	movlw	2
  1089  00A1  0620               	xorwf	Lcd_Set_Cursor@a,w
  1090  00A2  1D03               	btfss	3,2
  1091  00A3  28A5               	goto	u331
  1092  00A4  28A6               	goto	u330
  1093  00A5                     u331:
  1094  00A5  28CA               	goto	l123
  1095  00A6                     u330:
  1096  00A6                     l1142:
  1097                           
  1098                           ;LCD.c: 57:         temp = 0xC0 + b - 1;
  1099  00A6  0876               	movf	Lcd_Set_Cursor@b,w
  1100  00A7  3EBF               	addlw	191
  1101  00A8  00F7               	movwf	??_Lcd_Set_Cursor
  1102  00A9  0877               	movf	??_Lcd_Set_Cursor,w
  1103  00AA  00A3               	movwf	Lcd_Set_Cursor@temp
  1104                           
  1105                           ;LCD.c: 58:         z = temp >> 4;
  1106  00AB  0823               	movf	Lcd_Set_Cursor@temp,w
  1107  00AC  00F7               	movwf	??_Lcd_Set_Cursor
  1108  00AD  3004               	movlw	4
  1109  00AE                     u345:
  1110  00AE  1003               	clrc
  1111  00AF  0CF7               	rrf	??_Lcd_Set_Cursor,f
  1112  00B0  3EFF               	addlw	-1
  1113  00B1  1D03               	skipz
  1114  00B2  28AE               	goto	u345
  1115  00B3  0877               	movf	??_Lcd_Set_Cursor,w
  1116  00B4  00F8               	movwf	??_Lcd_Set_Cursor+1
  1117  00B5  0878               	movf	??_Lcd_Set_Cursor+1,w
  1118  00B6  00A1               	movwf	Lcd_Set_Cursor@z
  1119  00B7                     l1144:
  1120                           
  1121                           ;LCD.c: 59:         y = temp & 0x0F;
  1122  00B7  0823               	movf	Lcd_Set_Cursor@temp,w
  1123  00B8  390F               	andlw	15
  1124  00B9  00F7               	movwf	??_Lcd_Set_Cursor
  1125  00BA  0877               	movf	??_Lcd_Set_Cursor,w
  1126  00BB  00A2               	movwf	Lcd_Set_Cursor@y
  1127  00BC                     l1146:
  1128                           
  1129                           ;LCD.c: 60:         Lcd_Cmd(z);
  1130  00BC  0821               	movf	Lcd_Set_Cursor@z,w
  1131  00BD  120A  118A  21A4  120A  118A  	fcall	_Lcd_Cmd
  1132  00C2                     l1148:
  1133                           
  1134                           ;LCD.c: 61:         Lcd_Cmd(y);
  1135  00C2  1283               	bcf	3,5	;RP0=0, select bank0
  1136  00C3  1303               	bcf	3,6	;RP1=0, select bank0
  1137  00C4  0822               	movf	Lcd_Set_Cursor@y,w
  1138  00C5  120A  118A  21A4  120A  118A  	fcall	_Lcd_Cmd
  1139  00CA                     l123:
  1140  00CA  0008               	return
  1141  00CB                     __end_of_Lcd_Set_Cursor:
  1142                           
  1143                           	psect	text5
  1144  0016                     __ptext5:	
  1145 ;; *************** function _Lcd_Init *****************
  1146 ;; Defined at:
  1147 ;;		line 65 in file "LCD.c"
  1148 ;; Parameters:    Size  Location     Type
  1149 ;;		None
  1150 ;; Auto vars:     Size  Location     Type
  1151 ;;		None
  1152 ;; Return value:  Size  Location     Type
  1153 ;;                  1    wreg      void 
  1154 ;; Registers used:
  1155 ;;		wreg, status,2, status,0, pclath, cstack
  1156 ;; Tracked objects:
  1157 ;;		On entry : 0/0
  1158 ;;		On exit  : 0/0
  1159 ;;		Unchanged: 0/0
  1160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1161 ;;      Params:         0       0       0       0       0
  1162 ;;      Locals:         0       0       0       0       0
  1163 ;;      Temps:          2       0       0       0       0
  1164 ;;      Totals:         2       0       0       0       0
  1165 ;;Total ram usage:        2 bytes
  1166 ;; Hardware stack levels used:    1
  1167 ;; Hardware stack levels required when called:    3
  1168 ;; This function calls:
  1169 ;;		_Lcd_Cmd
  1170 ;;		_Lcd_Port
  1171 ;; This function is called by:
  1172 ;;		_main
  1173 ;; This function uses a non-reentrant model
  1174 ;;
  1175                           
  1176                           
  1177                           ;psect for function _Lcd_Init
  1178  0016                     _Lcd_Init:
  1179  0016                     l1118:	
  1180                           ;incstack = 0
  1181                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1182                           
  1183                           
  1184                           ;LCD.c: 66:     Lcd_Port(0x00);
  1185  0016  3000               	movlw	0
  1186  0017  120A  118A  212D  120A  118A  	fcall	_Lcd_Port
  1187  001C                     l1120:
  1188                           
  1189                           ;LCD.c: 67:     _delay((unsigned long)((20)*(8000000/4000.0)));
  1190  001C  3034               	movlw	52
  1191  001D  00F7               	movwf	??_Lcd_Init+1
  1192  001E  30F1               	movlw	241
  1193  001F  00F6               	movwf	??_Lcd_Init
  1194  0020                     u387:
  1195  0020  0BF6               	decfsz	??_Lcd_Init,f
  1196  0021  2820               	goto	u387
  1197  0022  0BF7               	decfsz	??_Lcd_Init+1,f
  1198  0023  2820               	goto	u387
  1199  0024  2825               	nop2
  1200  0025                     l1122:
  1201                           
  1202                           ;LCD.c: 68:     Lcd_Cmd(0x03);
  1203  0025  3003               	movlw	3
  1204  0026  120A  118A  21A4  120A  118A  	fcall	_Lcd_Cmd
  1205                           
  1206                           ;LCD.c: 69:     _delay((unsigned long)((5)*(8000000/4000.0)));
  1207  002B  300D               	movlw	13
  1208  002C  00F7               	movwf	??_Lcd_Init+1
  1209  002D  30FB               	movlw	251
  1210  002E  00F6               	movwf	??_Lcd_Init
  1211  002F                     u397:
  1212  002F  0BF6               	decfsz	??_Lcd_Init,f
  1213  0030  282F               	goto	u397
  1214  0031  0BF7               	decfsz	??_Lcd_Init+1,f
  1215  0032  282F               	goto	u397
  1216  0033  2834               	nop2
  1217  0034                     l1124:
  1218                           
  1219                           ;LCD.c: 70:     Lcd_Cmd(0x03);
  1220  0034  3003               	movlw	3
  1221  0035  120A  118A  21A4  120A  118A  	fcall	_Lcd_Cmd
  1222  003A                     l1126:
  1223                           
  1224                           ;LCD.c: 71:     _delay((unsigned long)((11)*(8000000/4000.0)));
  1225  003A  301D               	movlw	29
  1226  003B  00F7               	movwf	??_Lcd_Init+1
  1227  003C  3091               	movlw	145
  1228  003D  00F6               	movwf	??_Lcd_Init
  1229  003E                     u407:
  1230  003E  0BF6               	decfsz	??_Lcd_Init,f
  1231  003F  283E               	goto	u407
  1232  0040  0BF7               	decfsz	??_Lcd_Init+1,f
  1233  0041  283E               	goto	u407
  1234                           
  1235                           ;LCD.c: 72:     Lcd_Cmd(0x03);
  1236  0042  3003               	movlw	3
  1237  0043  120A  118A  21A4  120A  118A  	fcall	_Lcd_Cmd
  1238                           
  1239                           ;LCD.c: 74:     Lcd_Cmd(0x02);
  1240  0048  3002               	movlw	2
  1241  0049  120A  118A  21A4  120A  118A  	fcall	_Lcd_Cmd
  1242                           
  1243                           ;LCD.c: 75:     Lcd_Cmd(0x02);
  1244  004E  3002               	movlw	2
  1245  004F  120A  118A  21A4  120A  118A  	fcall	_Lcd_Cmd
  1246                           
  1247                           ;LCD.c: 76:     Lcd_Cmd(0x08);
  1248  0054  3008               	movlw	8
  1249  0055  120A  118A  21A4  120A  118A  	fcall	_Lcd_Cmd
  1250                           
  1251                           ;LCD.c: 77:     Lcd_Cmd(0x00);
  1252  005A  3000               	movlw	0
  1253  005B  120A  118A  21A4  120A  118A  	fcall	_Lcd_Cmd
  1254                           
  1255                           ;LCD.c: 78:     Lcd_Cmd(0x0C);
  1256  0060  300C               	movlw	12
  1257  0061  120A  118A  21A4  120A  118A  	fcall	_Lcd_Cmd
  1258                           
  1259                           ;LCD.c: 79:     Lcd_Cmd(0x00);
  1260  0066  3000               	movlw	0
  1261  0067  120A  118A  21A4  120A  118A  	fcall	_Lcd_Cmd
  1262                           
  1263                           ;LCD.c: 80:     Lcd_Cmd(0x06);
  1264  006C  3006               	movlw	6
  1265  006D  120A  118A  21A4  120A  118A  	fcall	_Lcd_Cmd
  1266  0072                     l126:
  1267  0072  0008               	return
  1268  0073                     __end_of_Lcd_Init:
  1269                           
  1270                           	psect	text6
  1271  01BE                     __ptext6:	
  1272 ;; *************** function _Lcd_Clear *****************
  1273 ;; Defined at:
  1274 ;;		line 43 in file "LCD.c"
  1275 ;; Parameters:    Size  Location     Type
  1276 ;;		None
  1277 ;; Auto vars:     Size  Location     Type
  1278 ;;		None
  1279 ;; Return value:  Size  Location     Type
  1280 ;;                  1    wreg      void 
  1281 ;; Registers used:
  1282 ;;		wreg, status,2, status,0, pclath, cstack
  1283 ;; Tracked objects:
  1284 ;;		On entry : 0/0
  1285 ;;		On exit  : 0/0
  1286 ;;		Unchanged: 0/0
  1287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1288 ;;      Params:         0       0       0       0       0
  1289 ;;      Locals:         0       0       0       0       0
  1290 ;;      Temps:          0       0       0       0       0
  1291 ;;      Totals:         0       0       0       0       0
  1292 ;;Total ram usage:        0 bytes
  1293 ;; Hardware stack levels used:    1
  1294 ;; Hardware stack levels required when called:    3
  1295 ;; This function calls:
  1296 ;;		_Lcd_Cmd
  1297 ;; This function is called by:
  1298 ;;		_main
  1299 ;; This function uses a non-reentrant model
  1300 ;;
  1301                           
  1302                           
  1303                           ;psect for function _Lcd_Clear
  1304  01BE                     _Lcd_Clear:
  1305  01BE                     l1128:	
  1306                           ;incstack = 0
  1307                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  1308                           
  1309                           
  1310                           ;LCD.c: 44:     Lcd_Cmd(0);
  1311  01BE  3000               	movlw	0
  1312  01BF  120A  118A  21A4  120A  118A  	fcall	_Lcd_Cmd
  1313                           
  1314                           ;LCD.c: 45:     Lcd_Cmd(1);
  1315  01C4  3001               	movlw	1
  1316  01C5  120A  118A  21A4  120A  118A  	fcall	_Lcd_Cmd
  1317  01CA                     l117:
  1318  01CA  0008               	return
  1319  01CB                     __end_of_Lcd_Clear:
  1320                           
  1321                           	psect	text7
  1322  01A4                     __ptext7:	
  1323 ;; *************** function _Lcd_Cmd *****************
  1324 ;; Defined at:
  1325 ;;		line 35 in file "LCD.c"
  1326 ;; Parameters:    Size  Location     Type
  1327 ;;  a               1    wreg     unsigned char 
  1328 ;; Auto vars:     Size  Location     Type
  1329 ;;  a               1    5[COMMON] unsigned char 
  1330 ;; Return value:  Size  Location     Type
  1331 ;;                  1    wreg      void 
  1332 ;; Registers used:
  1333 ;;		wreg, status,2, status,0, pclath, cstack
  1334 ;; Tracked objects:
  1335 ;;		On entry : 0/0
  1336 ;;		On exit  : 0/0
  1337 ;;		Unchanged: 0/0
  1338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1339 ;;      Params:         0       0       0       0       0
  1340 ;;      Locals:         1       0       0       0       0
  1341 ;;      Temps:          2       0       0       0       0
  1342 ;;      Totals:         3       0       0       0       0
  1343 ;;Total ram usage:        3 bytes
  1344 ;; Hardware stack levels used:    1
  1345 ;; Hardware stack levels required when called:    2
  1346 ;; This function calls:
  1347 ;;		_Lcd_Port
  1348 ;; This function is called by:
  1349 ;;		_Lcd_Clear
  1350 ;;		_Lcd_Set_Cursor
  1351 ;;		_Lcd_Init
  1352 ;;		_Lcd_Shift_Right
  1353 ;;		_Lcd_Shift_Left
  1354 ;; This function uses a non-reentrant model
  1355 ;;
  1356                           
  1357                           
  1358                           ;psect for function _Lcd_Cmd
  1359  01A4                     _Lcd_Cmd:
  1360                           
  1361                           ;incstack = 0
  1362                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  1363                           ;Lcd_Cmd@a stored from wreg
  1364  01A4  00F5               	movwf	Lcd_Cmd@a
  1365  01A5                     l1088:
  1366                           
  1367                           ;LCD.c: 36:     PORTBbits.RB4 = 0;
  1368  01A5  1283               	bcf	3,5	;RP0=0, select bank0
  1369  01A6  1303               	bcf	3,6	;RP1=0, select bank0
  1370  01A7  1206               	bcf	6,4	;volatile
  1371  01A8                     l1090:
  1372                           
  1373                           ;LCD.c: 37:     Lcd_Port(a);
  1374  01A8  0875               	movf	Lcd_Cmd@a,w
  1375  01A9  120A  118A  212D  120A  118A  	fcall	_Lcd_Port
  1376  01AE                     l1092:
  1377                           
  1378                           ;LCD.c: 38:     RB5 = 1;
  1379  01AE  1283               	bcf	3,5	;RP0=0, select bank0
  1380  01AF  1303               	bcf	3,6	;RP1=0, select bank0
  1381  01B0  1686               	bsf	6,5	;volatile
  1382  01B1                     l1094:
  1383                           
  1384                           ;LCD.c: 39:     _delay((unsigned long)((4)*(8000000/4000.0)));
  1385  01B1  300B               	movlw	11
  1386  01B2  00F4               	movwf	??_Lcd_Cmd+1
  1387  01B3  3062               	movlw	98
  1388  01B4  00F3               	movwf	??_Lcd_Cmd
  1389  01B5                     u417:
  1390  01B5  0BF3               	decfsz	??_Lcd_Cmd,f
  1391  01B6  29B5               	goto	u417
  1392  01B7  0BF4               	decfsz	??_Lcd_Cmd+1,f
  1393  01B8  29B5               	goto	u417
  1394  01B9  0000               	nop
  1395  01BA                     l1096:
  1396                           
  1397                           ;LCD.c: 40:     RB5 = 0;
  1398  01BA  1283               	bcf	3,5	;RP0=0, select bank0
  1399  01BB  1303               	bcf	3,6	;RP1=0, select bank0
  1400  01BC  1286               	bcf	6,5	;volatile
  1401  01BD                     l114:
  1402  01BD  0008               	return
  1403  01BE                     __end_of_Lcd_Cmd:
  1404                           
  1405                           	psect	text8
  1406  012D                     __ptext8:	
  1407 ;; *************** function _Lcd_Port *****************
  1408 ;; Defined at:
  1409 ;;		line 13 in file "LCD.c"
  1410 ;; Parameters:    Size  Location     Type
  1411 ;;  a               1    wreg     unsigned char 
  1412 ;; Auto vars:     Size  Location     Type
  1413 ;;  a               1    2[COMMON] unsigned char 
  1414 ;; Return value:  Size  Location     Type
  1415 ;;                  1    wreg      void 
  1416 ;; Registers used:
  1417 ;;		wreg
  1418 ;; Tracked objects:
  1419 ;;		On entry : 0/0
  1420 ;;		On exit  : 0/0
  1421 ;;		Unchanged: 0/0
  1422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1423 ;;      Params:         0       0       0       0       0
  1424 ;;      Locals:         1       0       0       0       0
  1425 ;;      Temps:          0       0       0       0       0
  1426 ;;      Totals:         1       0       0       0       0
  1427 ;;Total ram usage:        1 bytes
  1428 ;; Hardware stack levels used:    1
  1429 ;; Hardware stack levels required when called:    1
  1430 ;; This function calls:
  1431 ;;		Nothing
  1432 ;; This function is called by:
  1433 ;;		_Lcd_Cmd
  1434 ;;		_Lcd_Init
  1435 ;;		_Lcd_Write_Char
  1436 ;; This function uses a non-reentrant model
  1437 ;;
  1438                           
  1439                           
  1440                           ;psect for function _Lcd_Port
  1441  012D                     _Lcd_Port:
  1442                           
  1443                           ;incstack = 0
  1444                           ; Regs used in _Lcd_Port: [wreg]
  1445                           ;Lcd_Port@a stored from wreg
  1446  012D  00F2               	movwf	Lcd_Port@a
  1447  012E                     l1078:
  1448                           
  1449                           ;LCD.c: 14:     if (a & 1)
  1450  012E  1C72               	btfss	Lcd_Port@a,0
  1451  012F  2931               	goto	u261
  1452  0130  2932               	goto	u260
  1453  0131                     u261:
  1454  0131  2936               	goto	l103
  1455  0132                     u260:
  1456  0132                     l1080:
  1457                           
  1458                           ;LCD.c: 15:         RB0 = 1;
  1459  0132  1283               	bcf	3,5	;RP0=0, select bank0
  1460  0133  1303               	bcf	3,6	;RP1=0, select bank0
  1461  0134  1406               	bsf	6,0	;volatile
  1462  0135  2939               	goto	l104
  1463  0136                     l103:	
  1464                           ;LCD.c: 16:     else
  1465                           
  1466                           
  1467                           ;LCD.c: 17:         RB0 = 0;
  1468  0136  1283               	bcf	3,5	;RP0=0, select bank0
  1469  0137  1303               	bcf	3,6	;RP1=0, select bank0
  1470  0138  1006               	bcf	6,0	;volatile
  1471  0139                     l104:
  1472                           
  1473                           ;LCD.c: 19:     if (a & 2)
  1474  0139  1CF2               	btfss	Lcd_Port@a,1
  1475  013A  293C               	goto	u271
  1476  013B  293D               	goto	u270
  1477  013C                     u271:
  1478  013C  293F               	goto	l105
  1479  013D                     u270:
  1480  013D                     l1082:
  1481                           
  1482                           ;LCD.c: 20:         RB1 = 1;
  1483  013D  1486               	bsf	6,1	;volatile
  1484  013E  2940               	goto	l106
  1485  013F                     l105:	
  1486                           ;LCD.c: 21:     else
  1487                           
  1488                           
  1489                           ;LCD.c: 22:         RB1 = 0;
  1490  013F  1086               	bcf	6,1	;volatile
  1491  0140                     l106:
  1492                           
  1493                           ;LCD.c: 24:     if (a & 4)
  1494  0140  1D72               	btfss	Lcd_Port@a,2
  1495  0141  2943               	goto	u281
  1496  0142  2944               	goto	u280
  1497  0143                     u281:
  1498  0143  2946               	goto	l107
  1499  0144                     u280:
  1500  0144                     l1084:
  1501                           
  1502                           ;LCD.c: 25:         RB2 = 1;
  1503  0144  1506               	bsf	6,2	;volatile
  1504  0145  2947               	goto	l108
  1505  0146                     l107:	
  1506                           ;LCD.c: 26:     else
  1507                           
  1508                           
  1509                           ;LCD.c: 27:         RB2 = 0;
  1510  0146  1106               	bcf	6,2	;volatile
  1511  0147                     l108:
  1512                           
  1513                           ;LCD.c: 29:     if (a & 8)
  1514  0147  1DF2               	btfss	Lcd_Port@a,3
  1515  0148  294A               	goto	u291
  1516  0149  294B               	goto	u290
  1517  014A                     u291:
  1518  014A  294D               	goto	l109
  1519  014B                     u290:
  1520  014B                     l1086:
  1521                           
  1522                           ;LCD.c: 30:         RB3 = 1;
  1523  014B  1586               	bsf	6,3	;volatile
  1524  014C  294E               	goto	l111
  1525  014D                     l109:	
  1526                           ;LCD.c: 31:     else
  1527                           
  1528                           
  1529                           ;LCD.c: 32:         RB3 = 0;
  1530  014D  1186               	bcf	6,3	;volatile
  1531  014E                     l111:
  1532  014E  0008               	return
  1533  014F                     __end_of_Lcd_Port:
  1534                           
  1535                           	psect	text9
  1536  01CB                     __ptext9:	
  1537 ;; *************** function _isr *****************
  1538 ;; Defined at:
  1539 ;;		line 50 in file "main.c"
  1540 ;; Parameters:    Size  Location     Type
  1541 ;;		None
  1542 ;; Auto vars:     Size  Location     Type
  1543 ;;		None
  1544 ;; Return value:  Size  Location     Type
  1545 ;;                  1    wreg      void 
  1546 ;; Registers used:
  1547 ;;		None
  1548 ;; Tracked objects:
  1549 ;;		On entry : 0/0
  1550 ;;		On exit  : 0/0
  1551 ;;		Unchanged: 0/0
  1552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1553 ;;      Params:         0       0       0       0       0
  1554 ;;      Locals:         0       0       0       0       0
  1555 ;;      Temps:          2       0       0       0       0
  1556 ;;      Totals:         2       0       0       0       0
  1557 ;;Total ram usage:        2 bytes
  1558 ;; Hardware stack levels used:    1
  1559 ;; This function calls:
  1560 ;;		Nothing
  1561 ;; This function is called by:
  1562 ;;		Interrupt level 1
  1563 ;; This function uses a non-reentrant model
  1564 ;;
  1565                           
  1566                           
  1567                           ;psect for function _isr
  1568  01CB                     _isr:
  1569  01CB                     i1l898:
  1570                           
  1571                           ;main.c: 51:     (INTCONbits.GIE = 0);
  1572  01CB  138B               	bcf	11,7	;volatile
  1573                           
  1574                           ;main.c: 54:     (INTCONbits.GIE = 1);
  1575  01CC  178B               	bsf	11,7	;volatile
  1576  01CD                     i1l72:
  1577  01CD  0871               	movf	??_isr+1,w
  1578  01CE  008A               	movwf	10
  1579  01CF  0E70               	swapf	??_isr,w
  1580  01D0  0083               	movwf	3
  1581  01D1  0EFE               	swapf	btemp,f
  1582  01D2  0E7E               	swapf	btemp,w
  1583  01D3  0009               	retfie
  1584  01D4                     __end_of_isr:
  1585  007E                     btemp	set	126	;btemp
  1586  007E                     wtemp0	set	126
  1587                           
  1588                           	psect	intentry
  1589  0004                     __pintentry:	
  1590                           ;incstack = 0
  1591                           ; Regs used in _isr: []
  1592                           
  1593  0004                     interrupt_function:
  1594  007E                     saved_w	set	btemp
  1595  0004  00FE               	movwf	btemp
  1596  0005  0E03               	swapf	3,w
  1597  0006  00F0               	movwf	??_isr
  1598  0007  080A               	movf	10,w
  1599  0008  00F1               	movwf	??_isr+1
  1600  0009  120A  118A  29CB   	ljmp	_isr
  1601                           
  1602                           	psect	config
  1603                           
  1604                           ;Config register CONFIG1 @ 0x2007
  1605                           ;	Oscillator Selection bits
  1606                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
  1607                           ;	Watchdog Timer Enable bit
  1608                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1609                           ;	Power-up Timer Enable bit
  1610                           ;	PWRTE = OFF, PWRT disabled
  1611                           ;	RE3/MCLR pin function select bit
  1612                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1613                           ;	Code Protection bit
  1614                           ;	CP = OFF, Program memory code protection is disabled
  1615                           ;	Data Code Protection bit
  1616                           ;	CPD = OFF, Data memory code protection is disabled
  1617                           ;	Brown Out Reset Selection bits
  1618                           ;	BOREN = OFF, BOR disabled
  1619                           ;	Internal External Switchover bit
  1620                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1621                           ;	Fail-Safe Clock Monitor Enabled bit
  1622                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1623                           ;	Low Voltage Programming Enable bit
  1624                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1625                           ;	In-Circuit Debugger Mode bit
  1626                           ;	DEBUG = 0x1, unprogrammed default
  1627  2007                     	org	8199
  1628  2007  20D5               	dw	8405
  1629                           
  1630                           ;Config register CONFIG2 @ 0x2008
  1631                           ;	Brown-out Reset Selection bit
  1632                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1633                           ;	Flash Program Memory Self Write Enable bits
  1634                           ;	WRT = OFF, Write protection off
  1635  2008                     	org	8200
  1636  2008  3FFF               	dw	16383

Data Sizes:
    Strings     20
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      12
    BANK0            80      4       4
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 20
		 -> STR_1(CODE[20]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Set_Cursor
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_Lcd_Set_Cursor

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1489
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     420
                                              0 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     254
                                              3 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     635
                                              6 COMMON     3     2      1
                                              0 BANK0      4     4      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     279
                                              6 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     155
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     155
                                              3 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0     124
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      10       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      4       4       5        5.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      10      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sat Aug 21 22:30:56 2021

                        pc 0002                         l83 01A3                         l77 016C  
                       l78 016C                         fsr 0004                        l111 014E  
                      l103 0136                        l104 0139                        l105 013F  
                      l106 0140                        l114 01BD                        l107 0146  
                      l123 00CA                        l108 0147                        l109 014D  
                      l117 01CA                        l126 0072                        l135 012C  
                      l129 0103                        l830 019B                        l840 01A2  
                      l832 019E                        l834 019F                        l836 01A0  
                      l828 018A                        l838 01A1                        _GIE 005F  
                      _RB0 0030                        _RB1 0031                        _RB2 0032  
                      _RB3 0033                        _RB5 0035                        u310 007B  
                      u311 007A                        u305 00DC                        u330 00A6  
                      u331 00A5                        u260 0132                        u261 0131  
                      u325 0083                        u270 013D                        u350 012C  
                      u271 013C                        u407 003E                        u351 012B  
                      u280 0144                        u281 0143                        u417 01B5  
                      u345 00AE                        u290 014B                        u291 014A  
                      u367 00EC                        u377 00FD                        u387 0020  
                      u397 002F                        _isr 01CB                        fsr0 0004  
                     l1100 00D6                       l1110 00F2                       l1102 00D9  
                     l1120 001C                       l1112 00F8                       l1104 00E7  
                     l1122 0025                       l1130 0076                       l1114 00FB  
                     l1106 00EA                       l1124 0034                       l1132 007B  
                     l1140 00A0                       l1116 0100                       l1108 00EF  
                     l1126 003A                       l1118 0016                       l1142 00A6  
                     l1134 008C                       l1150 0107                       l1080 0132  
                     l1128 01BE                       l1144 00B7                       l1136 0091  
                     l1152 010A                       l1160 0154                       l1082 013D  
                     l1090 01A8                       l1146 00BC                       l1138 0097  
                     l1154 0117                       l1162 0159                       l1084 0144  
                     l1092 01AE                       l1148 00C2                       l1156 011F  
                     l1164 015E                       l1086 014B                       l1078 012E  
                     l1094 01B1                       l1166 0166                       l1158 014F  
                     l1096 01BA                       l1088 01A5                       l1098 00CC  
                     ?_isr 0070                       STR_1 0176                       _PEIE 005E  
                     i1l72 01CD                       _POS1 007B                       _POS2 007A  
                     _POS3 0079          ?_Lcd_Write_String 0070                       _main 014F  
                     btemp 007E                       start 000C         ??_Lcd_Write_String 0077  
          __end_of_Lcd_Cmd 01BE                      ??_isr 0070                      ?_main 0070  
                    _ANSEL 0188                      i1l898 01CB                      _SPBRG 0099  
                    _PORTA 0005                      _PORTB 0006                      _PORTC 0007  
                    _PORTD 0008                      _PORTE 0009    __size_of_Lcd_Set_Cursor 0058  
                    _TRISA 0085                      _TRISB 0086                      _TRISD 0088  
                    _SSPIE 0463                      _TRISE 0089                      _SSPIF 0063  
                    _TXREG 0019                      _setup 018A                      pclath 000A  
                    status 0003                      wtemp0 007E           __end_of_Lcd_Init 0073  
         __end_of_Lcd_Port 014F            __initialization 000F               __end_of_main 0170  
                   ??_main 0079         __size_of_Lcd_Clear 000D                     ?_setup 0070  
                   _ANSELH 0189                  ??_Lcd_Cmd 0073                     _SPBRGH 009A  
  __size_of_Lcd_Write_Char 0039                     _SSPADD 0093                     _TRISC3 043B  
                   _TRISC4 043C                     _SSPCON 0014                     _SSPBUF 0013  
                   saved_w 007E            Lcd_Set_Cursor@a 0020            Lcd_Set_Cursor@b 0076  
          Lcd_Set_Cursor@y 0022            Lcd_Set_Cursor@z 0021    __end_of__initialization 0012  
        __end_of_Lcd_Clear 01CB             __pcstackCOMMON 0070              __end_of_setup 01A4  
           _Lcd_Set_Cursor 0073                  ?_Lcd_Init 0070                  ?_Lcd_Port 0070  
                  ??_setup 0072                 __pmaintext 014F                 __pintentry 0004  
__size_of_Lcd_Write_String 0029     __end_of_Lcd_Set_Cursor 00CB                 ??_Lcd_Init 0076  
               ??_Lcd_Port 0072                    _SSPCON2 0091                    _SSPSTAT 0094  
               __stringtab 0170             _Lcd_Write_Char 00CB                    _Lcd_Cmd 01A4  
          ?_Lcd_Set_Cursor 0076                    __ptext1 018A                    __ptext2 0104  
                  __ptext3 00CB                    __ptext4 0073                    __ptext5 0016  
                  __ptext6 01BE                    __ptext7 01A4                    __ptext8 012D  
                  __ptext9 01CB               __size_of_isr 0009     __end_of_Lcd_Write_Char 0104  
     end_of_initialization 0012                  _RCSTAbits 0018                  Lcd_Port@a 0072  
                _PORTBbits 0006                  _TRISCbits 0087            ?_Lcd_Write_Char 0070  
        Lcd_Write_String@a 0020          Lcd_Write_String@i 0021                  _TXSTAbits 0098  
                _Lcd_Clear 01BE           _Lcd_Write_String 0104                _BAUDCTLbits 0187  
      start_initialization 000F                __end_of_isr 01D4          __size_of_Lcd_Init 005D  
        __size_of_Lcd_Port 0022                 ?_Lcd_Clear 0070            Lcd_Write_Char@a 0076  
          Lcd_Write_Char@y 0075                __pbssCOMMON 0079                  ___latbits 0002  
            __pcstackBANK0 0020                   ?_Lcd_Cmd 0070           ??_Lcd_Set_Cursor 0077  
                __pstrings 0170             __size_of_setup 001A          interrupt_function 0004  
                 _PIE1bits 008C                   Lcd_Cmd@a 0075                   _PIR1bits 000C  
              ??_Lcd_Clear 0076                __stringbase 0175           ??_Lcd_Write_Char 0073  
                 _Lcd_Init 0016                   _Lcd_Port 012D   __end_of_Lcd_Write_String 012D  
         __size_of_Lcd_Cmd 001A         __end_of__stringtab 0176              __size_of_main 0021  
               _INTCONbits 000B         Lcd_Write_Char@temp 0074                   intlevel1 0000  
                stringcode 0170                 _OSCCONbits 008F         Lcd_Set_Cursor@temp 0023  
                 stringdir 0170                   stringtab 0170                _SSPCON2bits 0091  
