

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Sep 06 11:46:26 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2
    27                           	psect	text18,local,class=CODE,merge=1,delta=2
    28                           	psect	text19,local,class=CODE,merge=1,delta=2
    29                           	psect	text20,local,class=CODE,merge=1,delta=2
    30                           	psect	intentry,global,class=CODE,delta=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2
    32                           	psect	text22,local,class=CODE,merge=1,delta=2
    33                           	psect	text23,local,class=CODE,merge=1,delta=2
    34                           	psect	text24,local,class=CODE,merge=1,delta=2
    35                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    36                           	dabs	1,0x7E,2
    37  0000                     
    38                           ; Version 2.20
    39                           ; Generated 12/02/2020 GMT
    40                           ; 
    41                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC16F887 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72  0000                     	;# 
    73  0001                     	;# 
    74  0002                     	;# 
    75  0003                     	;# 
    76  0004                     	;# 
    77  0005                     	;# 
    78  0006                     	;# 
    79  0007                     	;# 
    80  0008                     	;# 
    81  0009                     	;# 
    82  000A                     	;# 
    83  000B                     	;# 
    84  000C                     	;# 
    85  000D                     	;# 
    86  000E                     	;# 
    87  000E                     	;# 
    88  000F                     	;# 
    89  0010                     	;# 
    90  0011                     	;# 
    91  0012                     	;# 
    92  0013                     	;# 
    93  0014                     	;# 
    94  0015                     	;# 
    95  0015                     	;# 
    96  0016                     	;# 
    97  0017                     	;# 
    98  0018                     	;# 
    99  0019                     	;# 
   100  001A                     	;# 
   101  001B                     	;# 
   102  001B                     	;# 
   103  001C                     	;# 
   104  001D                     	;# 
   105  001E                     	;# 
   106  001F                     	;# 
   107  0081                     	;# 
   108  0085                     	;# 
   109  0086                     	;# 
   110  0087                     	;# 
   111  0088                     	;# 
   112  0089                     	;# 
   113  008C                     	;# 
   114  008D                     	;# 
   115  008E                     	;# 
   116  008F                     	;# 
   117  0090                     	;# 
   118  0091                     	;# 
   119  0092                     	;# 
   120  0093                     	;# 
   121  0093                     	;# 
   122  0093                     	;# 
   123  0094                     	;# 
   124  0095                     	;# 
   125  0096                     	;# 
   126  0097                     	;# 
   127  0098                     	;# 
   128  0099                     	;# 
   129  009A                     	;# 
   130  009B                     	;# 
   131  009C                     	;# 
   132  009D                     	;# 
   133  009E                     	;# 
   134  009F                     	;# 
   135  0105                     	;# 
   136  0107                     	;# 
   137  0108                     	;# 
   138  0109                     	;# 
   139  010C                     	;# 
   140  010C                     	;# 
   141  010D                     	;# 
   142  010E                     	;# 
   143  010F                     	;# 
   144  0185                     	;# 
   145  0187                     	;# 
   146  0188                     	;# 
   147  0189                     	;# 
   148  018C                     	;# 
   149  018D                     	;# 
   150  0000                     	;# 
   151  0001                     	;# 
   152  0002                     	;# 
   153  0003                     	;# 
   154  0004                     	;# 
   155  0005                     	;# 
   156  0006                     	;# 
   157  0007                     	;# 
   158  0008                     	;# 
   159  0009                     	;# 
   160  000A                     	;# 
   161  000B                     	;# 
   162  000C                     	;# 
   163  000D                     	;# 
   164  000E                     	;# 
   165  000E                     	;# 
   166  000F                     	;# 
   167  0010                     	;# 
   168  0011                     	;# 
   169  0012                     	;# 
   170  0013                     	;# 
   171  0014                     	;# 
   172  0015                     	;# 
   173  0015                     	;# 
   174  0016                     	;# 
   175  0017                     	;# 
   176  0018                     	;# 
   177  0019                     	;# 
   178  001A                     	;# 
   179  001B                     	;# 
   180  001B                     	;# 
   181  001C                     	;# 
   182  001D                     	;# 
   183  001E                     	;# 
   184  001F                     	;# 
   185  0081                     	;# 
   186  0085                     	;# 
   187  0086                     	;# 
   188  0087                     	;# 
   189  0088                     	;# 
   190  0089                     	;# 
   191  008C                     	;# 
   192  008D                     	;# 
   193  008E                     	;# 
   194  008F                     	;# 
   195  0090                     	;# 
   196  0091                     	;# 
   197  0092                     	;# 
   198  0093                     	;# 
   199  0093                     	;# 
   200  0093                     	;# 
   201  0094                     	;# 
   202  0095                     	;# 
   203  0096                     	;# 
   204  0097                     	;# 
   205  0098                     	;# 
   206  0099                     	;# 
   207  009A                     	;# 
   208  009B                     	;# 
   209  009C                     	;# 
   210  009D                     	;# 
   211  009E                     	;# 
   212  009F                     	;# 
   213  0105                     	;# 
   214  0107                     	;# 
   215  0108                     	;# 
   216  0109                     	;# 
   217  010C                     	;# 
   218  010C                     	;# 
   219  010D                     	;# 
   220  010E                     	;# 
   221  010F                     	;# 
   222  0185                     	;# 
   223  0187                     	;# 
   224  0188                     	;# 
   225  0189                     	;# 
   226  018C                     	;# 
   227  018D                     	;# 
   228  0000                     	;# 
   229  0001                     	;# 
   230  0002                     	;# 
   231  0003                     	;# 
   232  0004                     	;# 
   233  0005                     	;# 
   234  0006                     	;# 
   235  0007                     	;# 
   236  0008                     	;# 
   237  0009                     	;# 
   238  000A                     	;# 
   239  000B                     	;# 
   240  000C                     	;# 
   241  000D                     	;# 
   242  000E                     	;# 
   243  000E                     	;# 
   244  000F                     	;# 
   245  0010                     	;# 
   246  0011                     	;# 
   247  0012                     	;# 
   248  0013                     	;# 
   249  0014                     	;# 
   250  0015                     	;# 
   251  0015                     	;# 
   252  0016                     	;# 
   253  0017                     	;# 
   254  0018                     	;# 
   255  0019                     	;# 
   256  001A                     	;# 
   257  001B                     	;# 
   258  001B                     	;# 
   259  001C                     	;# 
   260  001D                     	;# 
   261  001E                     	;# 
   262  001F                     	;# 
   263  0081                     	;# 
   264  0085                     	;# 
   265  0086                     	;# 
   266  0087                     	;# 
   267  0088                     	;# 
   268  0089                     	;# 
   269  008C                     	;# 
   270  008D                     	;# 
   271  008E                     	;# 
   272  008F                     	;# 
   273  0090                     	;# 
   274  0091                     	;# 
   275  0092                     	;# 
   276  0093                     	;# 
   277  0093                     	;# 
   278  0093                     	;# 
   279  0094                     	;# 
   280  0095                     	;# 
   281  0096                     	;# 
   282  0097                     	;# 
   283  0098                     	;# 
   284  0099                     	;# 
   285  009A                     	;# 
   286  009B                     	;# 
   287  009C                     	;# 
   288  009D                     	;# 
   289  009E                     	;# 
   290  009F                     	;# 
   291  0105                     	;# 
   292  0107                     	;# 
   293  0108                     	;# 
   294  0109                     	;# 
   295  010C                     	;# 
   296  010C                     	;# 
   297  010D                     	;# 
   298  010E                     	;# 
   299  010F                     	;# 
   300  0185                     	;# 
   301  0187                     	;# 
   302  0188                     	;# 
   303  0189                     	;# 
   304  018C                     	;# 
   305  018D                     	;# 
   306  0000                     	;# 
   307  0001                     	;# 
   308  0002                     	;# 
   309  0003                     	;# 
   310  0004                     	;# 
   311  0005                     	;# 
   312  0006                     	;# 
   313  0007                     	;# 
   314  0008                     	;# 
   315  0009                     	;# 
   316  000A                     	;# 
   317  000B                     	;# 
   318  000C                     	;# 
   319  000D                     	;# 
   320  000E                     	;# 
   321  000E                     	;# 
   322  000F                     	;# 
   323  0010                     	;# 
   324  0011                     	;# 
   325  0012                     	;# 
   326  0013                     	;# 
   327  0014                     	;# 
   328  0015                     	;# 
   329  0015                     	;# 
   330  0016                     	;# 
   331  0017                     	;# 
   332  0018                     	;# 
   333  0019                     	;# 
   334  001A                     	;# 
   335  001B                     	;# 
   336  001B                     	;# 
   337  001C                     	;# 
   338  001D                     	;# 
   339  001E                     	;# 
   340  001F                     	;# 
   341  0081                     	;# 
   342  0085                     	;# 
   343  0086                     	;# 
   344  0087                     	;# 
   345  0088                     	;# 
   346  0089                     	;# 
   347  008C                     	;# 
   348  008D                     	;# 
   349  008E                     	;# 
   350  008F                     	;# 
   351  0090                     	;# 
   352  0091                     	;# 
   353  0092                     	;# 
   354  0093                     	;# 
   355  0093                     	;# 
   356  0093                     	;# 
   357  0094                     	;# 
   358  0095                     	;# 
   359  0096                     	;# 
   360  0097                     	;# 
   361  0098                     	;# 
   362  0099                     	;# 
   363  009A                     	;# 
   364  009B                     	;# 
   365  009C                     	;# 
   366  009D                     	;# 
   367  009E                     	;# 
   368  009F                     	;# 
   369  0105                     	;# 
   370  0107                     	;# 
   371  0108                     	;# 
   372  0109                     	;# 
   373  010C                     	;# 
   374  010C                     	;# 
   375  010D                     	;# 
   376  010E                     	;# 
   377  010F                     	;# 
   378  0185                     	;# 
   379  0187                     	;# 
   380  0188                     	;# 
   381  0189                     	;# 
   382  018C                     	;# 
   383  018D                     	;# 
   384  0013                     _SSPBUF	set	19
   385  0014                     _SSPCON	set	20
   386  0006                     _PORTBbits	set	6
   387  0009                     _PORTE	set	9
   388  0007                     _PORTC	set	7
   389  0006                     _PORTB	set	6
   390  0005                     _PORTA	set	5
   391  0008                     _PORTD	set	8
   392  001A                     _RCREG	set	26
   393  000B                     _INTCONbits	set	11
   394  0019                     _TXREG	set	25
   395  000C                     _PIR1bits	set	12
   396  0018                     _RCSTAbits	set	24
   397  0063                     _SSPIF	set	99
   398  005E                     _PEIE	set	94
   399  005F                     _GIE	set	95
   400  0035                     _RB5	set	53
   401  0033                     _RB3	set	51
   402  0032                     _RB2	set	50
   403  0031                     _RB1	set	49
   404  0030                     _RB0	set	48
   405  0091                     _SSPCON2bits	set	145
   406  0087                     _TRISCbits	set	135
   407  0094                     _SSPSTAT	set	148
   408  0093                     _SSPADD	set	147
   409  0091                     _SSPCON2	set	145
   410  008F                     _OSCCONbits	set	143
   411  0086                     _TRISB	set	134
   412  0089                     _TRISE	set	137
   413  0088                     _TRISD	set	136
   414  0085                     _TRISA	set	133
   415  008C                     _PIE1bits	set	140
   416  009A                     _SPBRGH	set	154
   417  0099                     _SPBRG	set	153
   418  0098                     _TXSTAbits	set	152
   419  0463                     _SSPIE	set	1123
   420  043C                     _TRISC4	set	1084
   421  043B                     _TRISC3	set	1083
   422  043F                     _TRISC7	set	1087
   423  0189                     _ANSELH	set	393
   424  0188                     _ANSEL	set	392
   425  0187                     _BAUDCTLbits	set	391
   426                           
   427                           	psect	strings
   428  0572                     __pstrings:
   429  0572                     stringtab:
   430  0572                     __stringtab:
   431  0572                     stringcode:	
   432                           ;	String table - string pointers are 1 byte each
   433                           
   434  0572                     stringdir:
   435  0572  3005               	movlw	high stringdir
   436  0573  008A               	movwf	10
   437  0574  0804               	movf	4,w
   438  0575  0A84               	incf	4,f
   439  0576  0782               	addwf	2,f
   440  0577                     __stringbase:
   441  0577  3400               	retlw	0
   442  0578                     __end_of__stringtab:
   443  0578                     STR_1:
   444  0578  3450               	retlw	80	;'P'
   445  0579  3445               	retlw	69	;'E'
   446  057A  3453               	retlw	83	;'S'
   447  057B  344F               	retlw	79	;'O'
   448  057C  343A               	retlw	58	;':'
   449  057D  3420               	retlw	32	;' '
   450  057E  3443               	retlw	67	;'C'
   451  057F  344F               	retlw	79	;'O'
   452  0580  344C               	retlw	76	;'L'
   453  0581  344F               	retlw	79	;'O'
   454  0582  3452               	retlw	82	;'R'
   455  0583  343A               	retlw	58	;':'
   456  0584  3420               	retlw	32	;' '
   457  0585  3442               	retlw	66	;'B'
   458  0586  3441               	retlw	65	;'A'
   459  0587  344E               	retlw	78	;'N'
   460  0588  3444               	retlw	68	;'D'
   461  0589  3441               	retlw	65	;'A'
   462  058A  343A               	retlw	58	;':'
   463  058B  3400               	retlw	0
   464  058C                     STR_3:
   465  058C  3441               	retlw	65	;'A'
   466  058D  345A               	retlw	90	;'Z'
   467  058E  3455               	retlw	85	;'U'
   468  058F  344C               	retlw	76	;'L'
   469  0590  3420               	retlw	32	;' '
   470  0591  3420               	retlw	32	;' '
   471  0592  3400               	retlw	0
   472  0593                     STR_4:
   473  0593  3452               	retlw	82	;'R'
   474  0594  344F               	retlw	79	;'O'
   475  0595  344A               	retlw	74	;'J'
   476  0596  344F               	retlw	79	;'O'
   477  0597  3420               	retlw	32	;' '
   478  0598  3420               	retlw	32	;' '
   479  0599  3400               	retlw	0
   480  059A                     STR_2:
   481  059A  3442               	retlw	66	;'B'
   482  059B  344C               	retlw	76	;'L'
   483  059C  3441               	retlw	65	;'A'
   484  059D  344E               	retlw	78	;'N'
   485  059E  3443               	retlw	67	;'C'
   486  059F  344F               	retlw	79	;'O'
   487  05A0  3400               	retlw	0
   488  05A1                     STR_6:
   489  05A1  344F               	retlw	79	;'O'
   490  05A2  344E               	retlw	78	;'N'
   491  05A3  3420               	retlw	32	;' '
   492  05A4  3400               	retlw	0
   493  05A5                     STR_5:
   494  05A5  3467               	retlw	103	;'g'
   495  05A6  3472               	retlw	114	;'r'
   496  05A7  3420               	retlw	32	;' '
   497  05A8  3400               	retlw	0
   498  05A9                     STR_7:
   499  05A9  344F               	retlw	79	;'O'
   500  05AA  3446               	retlw	70	;'F'
   501  05AB  3446               	retlw	70	;'F'
   502  05AC  3400               	retlw	0
   503                           
   504                           	psect	cinit
   505  0013                     start_initialization:	
   506                           ; #config settings
   507                           
   508  0013                     __initialization:
   509                           
   510                           ; Clear objects allocated to BANK0
   511  0013  1283               	bcf	3,5	;RP0=0, select bank0
   512  0014  1303               	bcf	3,6	;RP1=0, select bank0
   513  0015  01BE               	clrf	__pbssBANK0& (0+127)
   514  0016  01BF               	clrf	(__pbssBANK0+1)& (0+127)
   515  0017  01C0               	clrf	(__pbssBANK0+2)& (0+127)
   516  0018  01C1               	clrf	(__pbssBANK0+3)& (0+127)
   517  0019  01C2               	clrf	(__pbssBANK0+4)& (0+127)
   518  001A  01C3               	clrf	(__pbssBANK0+5)& (0+127)
   519  001B                     end_of_initialization:	
   520                           ;End of C runtime variable initialization code
   521                           
   522  001B                     __end_of__initialization:
   523  001B  0183               	clrf	3
   524  001C  120A  118A  281F   	ljmp	_main	;jump to C main() function
   525                           
   526                           	psect	bssBANK0
   527  003E                     __pbssBANK0:
   528  003E                     _COLOR:
   529  003E                     	ds	1
   530  003F                     _SENSOR_MOV:
   531  003F                     	ds	1
   532  0040                     _VALOR_PESO:
   533  0040                     	ds	1
   534  0041                     _POS3:
   535  0041                     	ds	1
   536  0042                     _POS2:
   537  0042                     	ds	1
   538  0043                     _POS1:
   539  0043                     	ds	1
   540                           
   541                           	psect	cstackCOMMON
   542  0070                     __pcstackCOMMON:
   543  0070                     ?_setup:
   544  0070                     ?_Lcd_Init:	
   545                           ; 1 bytes @ 0x0
   546                           
   547  0070                     ?_Lcd_Clear:	
   548                           ; 1 bytes @ 0x0
   549                           
   550  0070                     ?_Lcd_Write_String:	
   551                           ; 1 bytes @ 0x0
   552                           
   553  0070                     ?_I2C_Master_Start:	
   554                           ; 1 bytes @ 0x0
   555                           
   556  0070                     ?_I2C_Master_Stop:	
   557                           ; 1 bytes @ 0x0
   558                           
   559  0070                     ?_Lcd_Write_Char:	
   560                           ; 1 bytes @ 0x0
   561                           
   562  0070                     ?_EUSART_ENVIAR:	
   563                           ; 1 bytes @ 0x0
   564                           
   565  0070                     ??_EUSART_ENVIAR:	
   566                           ; 1 bytes @ 0x0
   567                           
   568  0070                     ?_isr:	
   569                           ; 1 bytes @ 0x0
   570                           
   571  0070                     ?_main:	
   572                           ; 1 bytes @ 0x0
   573                           
   574  0070                     ?_Lcd_Port:	
   575                           ; 1 bytes @ 0x0
   576                           
   577  0070                     ?_Lcd_Cmd:	
   578                           ; 1 bytes @ 0x0
   579                           
   580  0070                     ?_I2C_Master_Wait:	
   581                           ; 1 bytes @ 0x0
   582                           
   583  0070                     ?i1___wmul:	
   584                           ; 1 bytes @ 0x0
   585                           
   586  0070                     ?i1___lwdiv:	
   587                           ; 2 bytes @ 0x0
   588                           
   589  0070                     i1___wmul@multiplier:	
   590                           ; 2 bytes @ 0x0
   591                           
   592  0070                     i1___lwdiv@divisor:	
   593                           ; 2 bytes @ 0x0
   594                           
   595                           
   596                           ; 2 bytes @ 0x0
   597  0070                     	ds	2
   598  0072                     EUSART_ENVIAR@dato:
   599  0072                     i1___wmul@multiplicand:	
   600                           ; 1 bytes @ 0x2
   601                           
   602  0072                     i1___lwdiv@dividend:	
   603                           ; 2 bytes @ 0x2
   604                           
   605                           
   606                           ; 2 bytes @ 0x2
   607  0072                     	ds	2
   608  0074                     ??i1___wmul:
   609  0074                     ??i1___lwdiv:	
   610                           ; 1 bytes @ 0x4
   611                           
   612  0074                     i1___wmul@product:	
   613                           ; 1 bytes @ 0x4
   614                           
   615                           
   616                           ; 2 bytes @ 0x4
   617  0074                     	ds	1
   618  0075                     i1___lwdiv@quotient:
   619                           
   620                           ; 2 bytes @ 0x5
   621  0075                     	ds	2
   622  0077                     i1___lwdiv@counter:
   623                           
   624                           ; 1 bytes @ 0x7
   625  0077                     	ds	1
   626  0078                     ?i1_VAL:
   627  0078                     i1VAL@variable:	
   628                           ; 1 bytes @ 0x8
   629                           
   630                           
   631                           ; 2 bytes @ 0x8
   632  0078                     	ds	2
   633  007A                     ??i1_VAL:
   634                           
   635                           ; 1 bytes @ 0xA
   636  007A                     	ds	2
   637  007C                     i1VAL@valor:
   638                           
   639                           ; 2 bytes @ 0xC
   640  007C                     	ds	2
   641                           
   642                           	psect	cstackBANK0
   643  0020                     __pcstackBANK0:
   644  0020                     ??_isr:
   645                           
   646                           ; 1 bytes @ 0x0
   647  0020                     	ds	5
   648  0025                     ??_I2C_Master_Start:
   649  0025                     ?_I2C_Master_Write:	
   650                           ; 1 bytes @ 0x5
   651                           
   652  0025                     ??_I2C_Master_Stop:	
   653                           ; 1 bytes @ 0x5
   654                           
   655  0025                     ?_EUSART_INIT:	
   656                           ; 1 bytes @ 0x5
   657                           
   658  0025                     ??_Lcd_Port:	
   659                           ; 1 bytes @ 0x5
   660                           
   661  0025                     ??_I2C_Master_Wait:	
   662                           ; 1 bytes @ 0x5
   663                           
   664  0025                     ?_I2C_Master_Read:	
   665                           ; 1 bytes @ 0x5
   666                           
   667  0025                     ?___wmul:	
   668                           ; 2 bytes @ 0x5
   669                           
   670  0025                     ?___lwdiv:	
   671                           ; 2 bytes @ 0x5
   672                           
   673  0025                     ?___lldiv:	
   674                           ; 2 bytes @ 0x5
   675                           
   676  0025                     Lcd_Port@a:	
   677                           ; 4 bytes @ 0x5
   678                           
   679  0025                     EUSART_INIT@tx:	
   680                           ; 1 bytes @ 0x5
   681                           
   682  0025                     I2C_Master_Write@d:	
   683                           ; 2 bytes @ 0x5
   684                           
   685  0025                     I2C_Master_Read@a:	
   686                           ; 2 bytes @ 0x5
   687                           
   688  0025                     ___wmul@multiplier:	
   689                           ; 2 bytes @ 0x5
   690                           
   691  0025                     ___lwdiv@divisor:	
   692                           ; 2 bytes @ 0x5
   693                           
   694  0025                     ___lldiv@divisor:	
   695                           ; 2 bytes @ 0x5
   696                           
   697                           
   698                           ; 4 bytes @ 0x5
   699  0025                     	ds	1
   700  0026                     ??_Lcd_Write_Char:
   701  0026                     ??_Lcd_Cmd:	
   702                           ; 1 bytes @ 0x6
   703                           
   704                           
   705                           ; 1 bytes @ 0x6
   706  0026                     	ds	1
   707  0027                     ??_I2C_Master_Write:
   708  0027                     ??_I2C_Master_Read:	
   709                           ; 1 bytes @ 0x7
   710                           
   711  0027                     Lcd_Write_Char@temp:	
   712                           ; 1 bytes @ 0x7
   713                           
   714  0027                     EUSART_INIT@rx:	
   715                           ; 1 bytes @ 0x7
   716                           
   717  0027                     ___wmul@multiplicand:	
   718                           ; 2 bytes @ 0x7
   719                           
   720  0027                     ___lwdiv@dividend:	
   721                           ; 2 bytes @ 0x7
   722                           
   723                           
   724                           ; 2 bytes @ 0x7
   725  0027                     	ds	1
   726  0028                     Lcd_Cmd@a:
   727  0028                     Lcd_Write_Char@y:	
   728                           ; 1 bytes @ 0x8
   729                           
   730                           
   731                           ; 1 bytes @ 0x8
   732  0028                     	ds	1
   733  0029                     ??_Lcd_Init:
   734  0029                     ??_Lcd_Clear:	
   735                           ; 1 bytes @ 0x9
   736                           
   737  0029                     ?_Lcd_Set_Cursor:	
   738                           ; 1 bytes @ 0x9
   739                           
   740  0029                     ??_EUSART_INIT:	
   741                           ; 1 bytes @ 0x9
   742                           
   743  0029                     ??___wmul:	
   744                           ; 1 bytes @ 0x9
   745                           
   746  0029                     ??___lwdiv:	
   747                           ; 1 bytes @ 0x9
   748                           
   749  0029                     Lcd_Set_Cursor@b:	
   750                           ; 1 bytes @ 0x9
   751                           
   752  0029                     Lcd_Write_Char@a:	
   753                           ; 1 bytes @ 0x9
   754                           
   755  0029                     I2C_Master_Read@temp:	
   756                           ; 1 bytes @ 0x9
   757                           
   758  0029                     ___wmul@product:	
   759                           ; 2 bytes @ 0x9
   760                           
   761  0029                     ___lldiv@dividend:	
   762                           ; 2 bytes @ 0x9
   763                           
   764                           
   765                           ; 4 bytes @ 0x9
   766  0029                     	ds	1
   767  002A                     ??_Lcd_Set_Cursor:
   768  002A                     ??_Lcd_Write_String:	
   769                           ; 1 bytes @ 0xA
   770                           
   771  002A                     Lcd_Write_String@i:	
   772                           ; 1 bytes @ 0xA
   773                           
   774  002A                     ___lwdiv@quotient:	
   775                           ; 2 bytes @ 0xA
   776                           
   777                           
   778                           ; 2 bytes @ 0xA
   779  002A                     	ds	2
   780  002C                     Lcd_Set_Cursor@a:
   781  002C                     Lcd_Write_String@a:	
   782                           ; 1 bytes @ 0xC
   783                           
   784  002C                     ___lwdiv@counter:	
   785                           ; 1 bytes @ 0xC
   786                           
   787                           
   788                           ; 1 bytes @ 0xC
   789  002C                     	ds	1
   790  002D                     ?_VAL:
   791  002D                     ??___lldiv:	
   792                           ; 1 bytes @ 0xD
   793                           
   794  002D                     Lcd_Set_Cursor@z:	
   795                           ; 1 bytes @ 0xD
   796                           
   797  002D                     VAL@variable:	
   798                           ; 1 bytes @ 0xD
   799                           
   800                           
   801                           ; 2 bytes @ 0xD
   802  002D                     	ds	1
   803  002E                     Lcd_Set_Cursor@y:
   804  002E                     ___lldiv@quotient:	
   805                           ; 1 bytes @ 0xE
   806                           
   807                           
   808                           ; 4 bytes @ 0xE
   809  002E                     	ds	1
   810  002F                     ??_VAL:
   811  002F                     Lcd_Set_Cursor@temp:	
   812                           ; 1 bytes @ 0xF
   813                           
   814                           
   815                           ; 1 bytes @ 0xF
   816  002F                     	ds	2
   817  0031                     VAL@valor:
   818                           
   819                           ; 2 bytes @ 0x11
   820  0031                     	ds	1
   821  0032                     ___lldiv@counter:
   822                           
   823                           ; 1 bytes @ 0x12
   824  0032                     	ds	1
   825  0033                     ?_I2C_Master_Init:
   826  0033                     I2C_Master_Init@c:	
   827                           ; 1 bytes @ 0x13
   828                           
   829                           
   830                           ; 4 bytes @ 0x13
   831  0033                     	ds	4
   832  0037                     ??_I2C_Master_Init:
   833                           
   834                           ; 1 bytes @ 0x17
   835  0037                     	ds	4
   836  003B                     ??_setup:
   837  003B                     ??_main:	
   838                           ; 1 bytes @ 0x1B
   839                           
   840                           
   841                           ; 1 bytes @ 0x1B
   842  003B                     	ds	3
   843                           
   844                           	psect	maintext
   845  001F                     __pmaintext:	
   846 ;;
   847 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   848 ;;
   849 ;; *************** function _main *****************
   850 ;; Defined at:
   851 ;;		line 91 in file "main.c"
   852 ;; Parameters:    Size  Location     Type
   853 ;;		None
   854 ;; Auto vars:     Size  Location     Type
   855 ;;		None
   856 ;; Return value:  Size  Location     Type
   857 ;;                  1    wreg      void 
   858 ;; Registers used:
   859 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   860 ;; Tracked objects:
   861 ;;		On entry : B00/0
   862 ;;		On exit  : 0/0
   863 ;;		Unchanged: 0/0
   864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   865 ;;      Params:         0       0       0       0       0
   866 ;;      Locals:         0       0       0       0       0
   867 ;;      Temps:          0       3       0       0       0
   868 ;;      Totals:         0       3       0       0       0
   869 ;;Total ram usage:        3 bytes
   870 ;; Hardware stack levels required when called:    6
   871 ;; This function calls:
   872 ;;		_I2C_Master_Read
   873 ;;		_I2C_Master_Start
   874 ;;		_I2C_Master_Stop
   875 ;;		_I2C_Master_Write
   876 ;;		_Lcd_Clear
   877 ;;		_Lcd_Init
   878 ;;		_Lcd_Set_Cursor
   879 ;;		_Lcd_Write_Char
   880 ;;		_Lcd_Write_String
   881 ;;		_VAL
   882 ;;		_setup
   883 ;; This function is called by:
   884 ;;		Startup code after reset
   885 ;; This function uses a non-reentrant model
   886 ;;
   887                           
   888                           
   889                           ;psect for function _main
   890  001F                     _main:
   891  001F                     l1655:	
   892                           ;incstack = 0
   893                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   894                           
   895                           
   896                           ;main.c: 92:     setup();
   897  001F  120A  118A  25E7  120A  118A  	fcall	_setup
   898                           
   899                           ;main.c: 93:     Lcd_Init();
   900  0024  120A  118A  23F1  120A  118A  	fcall	_Lcd_Init
   901                           
   902                           ;main.c: 94:     Lcd_Clear();
   903  0029  120A  118A  273B  120A  118A  	fcall	_Lcd_Clear
   904                           
   905                           ;main.c: 95:     Lcd_Set_Cursor(1,1);
   906  002E  1283               	bcf	3,5	;RP0=0, select bank0
   907  002F  1303               	bcf	3,6	;RP1=0, select bank0
   908  0030  01A9               	clrf	Lcd_Set_Cursor@b
   909  0031  0AA9               	incf	Lcd_Set_Cursor@b,f
   910  0032  3001               	movlw	1
   911  0033  120A  118A  2453  120A  118A  	fcall	_Lcd_Set_Cursor
   912  0038                     l1657:
   913                           
   914                           ;main.c: 96:     Lcd_Write_String("PESO: COLOR: BANDA:");
   915  0038  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   916  0039  120A  118A  2651  120A  118A  	fcall	_Lcd_Write_String
   917  003E                     l1659:
   918                           
   919                           ;main.c: 98:         I2C_Master_Start();
   920  003E  120A  118A  2768  120A  118A  	fcall	_I2C_Master_Start
   921  0043                     l1661:
   922                           
   923                           ;main.c: 99:         I2C_Master_Write(0x50);
   924  0043  3050               	movlw	80
   925  0044  1283               	bcf	3,5	;RP0=0, select bank0
   926  0045  1303               	bcf	3,6	;RP1=0, select bank0
   927  0046  00A5               	movwf	I2C_Master_Write@d
   928  0047  3000               	movlw	0
   929  0048  00A6               	movwf	I2C_Master_Write@d+1
   930  0049  120A  118A  2755  120A  118A  	fcall	_I2C_Master_Write
   931  004E                     l1663:
   932                           
   933                           ;main.c: 100:         I2C_Master_Write(0X01);
   934  004E  3001               	movlw	1
   935  004F  1283               	bcf	3,5	;RP0=0, select bank0
   936  0050  1303               	bcf	3,6	;RP1=0, select bank0
   937  0051  00A5               	movwf	I2C_Master_Write@d
   938  0052  3000               	movlw	0
   939  0053  00A6               	movwf	I2C_Master_Write@d+1
   940  0054  120A  118A  2755  120A  118A  	fcall	_I2C_Master_Write
   941  0059                     l1665:
   942                           
   943                           ;main.c: 101:         I2C_Master_Stop();
   944  0059  120A  118A  275F  120A  118A  	fcall	_I2C_Master_Stop
   945  005E                     l1667:
   946                           
   947                           ;main.c: 102:         _delay((unsigned long)((200)*(8000000/4000.0)));
   948  005E  3003               	movlw	3
   949  005F  1283               	bcf	3,5	;RP0=0, select bank0
   950  0060  1303               	bcf	3,6	;RP1=0, select bank0
   951  0061  00BD               	movwf	??_main+2
   952  0062  3008               	movlw	8
   953  0063  00BC               	movwf	??_main+1
   954  0064  3076               	movlw	118
   955  0065  00BB               	movwf	??_main
   956  0066                     u1017:
   957  0066  0BBB               	decfsz	??_main,f
   958  0067  2866               	goto	u1017
   959  0068  0BBC               	decfsz	??_main+1,f
   960  0069  2866               	goto	u1017
   961  006A  0BBD               	decfsz	??_main+2,f
   962  006B  2866               	goto	u1017
   963  006C  0000               	nop
   964  006D                     l1669:
   965                           
   966                           ;main.c: 104:         I2C_Master_Start();
   967  006D  120A  118A  2768  120A  118A  	fcall	_I2C_Master_Start
   968  0072                     l1671:
   969                           
   970                           ;main.c: 105:         I2C_Master_Write(0x51);
   971  0072  3051               	movlw	81
   972  0073  1283               	bcf	3,5	;RP0=0, select bank0
   973  0074  1303               	bcf	3,6	;RP1=0, select bank0
   974  0075  00A5               	movwf	I2C_Master_Write@d
   975  0076  3000               	movlw	0
   976  0077  00A6               	movwf	I2C_Master_Write@d+1
   977  0078  120A  118A  2755  120A  118A  	fcall	_I2C_Master_Write
   978  007D                     l1673:
   979                           
   980                           ;main.c: 106:         VALOR_PESO = I2C_Master_Read(0);
   981  007D  3000               	movlw	0
   982  007E  1283               	bcf	3,5	;RP0=0, select bank0
   983  007F  1303               	bcf	3,6	;RP1=0, select bank0
   984  0080  00A5               	movwf	I2C_Master_Read@a
   985  0081  00A6               	movwf	I2C_Master_Read@a+1
   986  0082  120A  118A  261F  120A  118A  	fcall	_I2C_Master_Read
   987  0087  1283               	bcf	3,5	;RP0=0, select bank0
   988  0088  1303               	bcf	3,6	;RP1=0, select bank0
   989  0089  0825               	movf	?_I2C_Master_Read,w
   990  008A  00BB               	movwf	??_main
   991  008B  083B               	movf	??_main,w
   992  008C  00C0               	movwf	_VALOR_PESO
   993  008D                     l1675:
   994                           
   995                           ;main.c: 107:         I2C_Master_Stop();
   996  008D  120A  118A  275F  120A  118A  	fcall	_I2C_Master_Stop
   997  0092                     l1677:
   998                           
   999                           ;main.c: 108:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1000  0092  3003               	movlw	3
  1001  0093  1283               	bcf	3,5	;RP0=0, select bank0
  1002  0094  1303               	bcf	3,6	;RP1=0, select bank0
  1003  0095  00BD               	movwf	??_main+2
  1004  0096  3008               	movlw	8
  1005  0097  00BC               	movwf	??_main+1
  1006  0098  3076               	movlw	118
  1007  0099  00BB               	movwf	??_main
  1008  009A                     u1027:
  1009  009A  0BBB               	decfsz	??_main,f
  1010  009B  289A               	goto	u1027
  1011  009C  0BBC               	decfsz	??_main+1,f
  1012  009D  289A               	goto	u1027
  1013  009E  0BBD               	decfsz	??_main+2,f
  1014  009F  289A               	goto	u1027
  1015  00A0  0000               	nop
  1016  00A1                     l1679:
  1017                           
  1018                           ;main.c: 110:         I2C_Master_Start();
  1019  00A1  120A  118A  2768  120A  118A  	fcall	_I2C_Master_Start
  1020  00A6                     l1681:
  1021                           
  1022                           ;main.c: 111:         I2C_Master_Write(0x71);
  1023  00A6  3071               	movlw	113
  1024  00A7  1283               	bcf	3,5	;RP0=0, select bank0
  1025  00A8  1303               	bcf	3,6	;RP1=0, select bank0
  1026  00A9  00A5               	movwf	I2C_Master_Write@d
  1027  00AA  3000               	movlw	0
  1028  00AB  00A6               	movwf	I2C_Master_Write@d+1
  1029  00AC  120A  118A  2755  120A  118A  	fcall	_I2C_Master_Write
  1030  00B1                     l1683:
  1031                           
  1032                           ;main.c: 112:         COLOR = I2C_Master_Read(0);
  1033  00B1  3000               	movlw	0
  1034  00B2  1283               	bcf	3,5	;RP0=0, select bank0
  1035  00B3  1303               	bcf	3,6	;RP1=0, select bank0
  1036  00B4  00A5               	movwf	I2C_Master_Read@a
  1037  00B5  00A6               	movwf	I2C_Master_Read@a+1
  1038  00B6  120A  118A  261F  120A  118A  	fcall	_I2C_Master_Read
  1039  00BB  1283               	bcf	3,5	;RP0=0, select bank0
  1040  00BC  1303               	bcf	3,6	;RP1=0, select bank0
  1041  00BD  0825               	movf	?_I2C_Master_Read,w
  1042  00BE  00BB               	movwf	??_main
  1043  00BF  083B               	movf	??_main,w
  1044  00C0  00BE               	movwf	_COLOR
  1045  00C1                     l1685:
  1046                           
  1047                           ;main.c: 113:         I2C_Master_Stop();
  1048  00C1  120A  118A  275F  120A  118A  	fcall	_I2C_Master_Stop
  1049  00C6                     l1687:
  1050                           
  1051                           ;main.c: 114:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1052  00C6  3003               	movlw	3
  1053  00C7  1283               	bcf	3,5	;RP0=0, select bank0
  1054  00C8  1303               	bcf	3,6	;RP1=0, select bank0
  1055  00C9  00BD               	movwf	??_main+2
  1056  00CA  3008               	movlw	8
  1057  00CB  00BC               	movwf	??_main+1
  1058  00CC  3076               	movlw	118
  1059  00CD  00BB               	movwf	??_main
  1060  00CE                     u1037:
  1061  00CE  0BBB               	decfsz	??_main,f
  1062  00CF  28CE               	goto	u1037
  1063  00D0  0BBC               	decfsz	??_main+1,f
  1064  00D1  28CE               	goto	u1037
  1065  00D2  0BBD               	decfsz	??_main+2,f
  1066  00D3  28CE               	goto	u1037
  1067  00D4  0000               	nop
  1068                           
  1069                           ;main.c: 116:         switch (COLOR){
  1070  00D5  2909               	goto	l1703
  1071  00D6                     l1689:
  1072                           
  1073                           ;main.c: 118:                 Lcd_Set_Cursor(2,7);
  1074  00D6  3007               	movlw	7
  1075  00D7  00BB               	movwf	??_main
  1076  00D8  083B               	movf	??_main,w
  1077  00D9  00A9               	movwf	Lcd_Set_Cursor@b
  1078  00DA  3002               	movlw	2
  1079  00DB  120A  118A  2453  120A  118A  	fcall	_Lcd_Set_Cursor
  1080  00E0                     l1691:
  1081                           
  1082                           ;main.c: 119:                 Lcd_Write_String("BLANCO");
  1083  00E0  3023               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1084  00E1  120A  118A  2651  120A  118A  	fcall	_Lcd_Write_String
  1085                           
  1086                           ;main.c: 120:                 break;
  1087  00E6  291E               	goto	l1705
  1088  00E7                     l1693:
  1089                           
  1090                           ;main.c: 122:                 Lcd_Set_Cursor(2,7);
  1091  00E7  3007               	movlw	7
  1092  00E8  00BB               	movwf	??_main
  1093  00E9  083B               	movf	??_main,w
  1094  00EA  00A9               	movwf	Lcd_Set_Cursor@b
  1095  00EB  3002               	movlw	2
  1096  00EC  120A  118A  2453  120A  118A  	fcall	_Lcd_Set_Cursor
  1097  00F1                     l1695:
  1098                           
  1099                           ;main.c: 123:                 Lcd_Write_String("AZUL  ");
  1100  00F1  3015               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1101  00F2  120A  118A  2651  120A  118A  	fcall	_Lcd_Write_String
  1102                           
  1103                           ;main.c: 124:                 break;
  1104  00F7  291E               	goto	l1705
  1105  00F8                     l1697:
  1106                           
  1107                           ;main.c: 126:                 Lcd_Set_Cursor(2,7);
  1108  00F8  3007               	movlw	7
  1109  00F9  00BB               	movwf	??_main
  1110  00FA  083B               	movf	??_main,w
  1111  00FB  00A9               	movwf	Lcd_Set_Cursor@b
  1112  00FC  3002               	movlw	2
  1113  00FD  120A  118A  2453  120A  118A  	fcall	_Lcd_Set_Cursor
  1114  0102                     l1699:
  1115                           
  1116                           ;main.c: 127:                 Lcd_Write_String("ROJO  ");
  1117  0102  301C               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1118  0103  120A  118A  2651  120A  118A  	fcall	_Lcd_Write_String
  1119                           
  1120                           ;main.c: 128:                 break;
  1121  0108  291E               	goto	l1705
  1122  0109                     l1703:
  1123  0109  1283               	bcf	3,5	;RP0=0, select bank0
  1124  010A  1303               	bcf	3,6	;RP1=0, select bank0
  1125  010B  083E               	movf	_COLOR,w
  1126  010C  00BB               	movwf	??_main
  1127  010D  01BC               	clrf	??_main+1
  1128                           
  1129                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1130                           ; Switch size 1, requested type "simple"
  1131                           ; Number of cases is 1, Range of values is 0 to 0
  1132                           ; switch strategies available:
  1133                           ; Name         Instructions Cycles
  1134                           ; simple_byte            4     3 (average)
  1135                           ; direct_byte           11     8 (fixed)
  1136                           ; jumptable            260     6 (fixed)
  1137                           ;	Chosen strategy is simple_byte
  1138  010E  083C               	movf	??_main+1,w
  1139  010F  3A00               	xorlw	0	; case 0
  1140  0110  1903               	skipnz
  1141  0111  2913               	goto	l1805
  1142  0112  291E               	goto	l1705
  1143  0113                     l1805:
  1144                           
  1145                           ; Switch size 1, requested type "simple"
  1146                           ; Number of cases is 3, Range of values is 1 to 3
  1147                           ; switch strategies available:
  1148                           ; Name         Instructions Cycles
  1149                           ; simple_byte           10     6 (average)
  1150                           ; direct_byte           20    11 (fixed)
  1151                           ; jumptable            263     9 (fixed)
  1152                           ;	Chosen strategy is simple_byte
  1153  0113  083B               	movf	??_main,w
  1154  0114  3A01               	xorlw	1	; case 1
  1155  0115  1903               	skipnz
  1156  0116  28D6               	goto	l1689
  1157  0117  3A03               	xorlw	3	; case 2
  1158  0118  1903               	skipnz
  1159  0119  28E7               	goto	l1693
  1160  011A  3A01               	xorlw	1	; case 3
  1161  011B  1903               	skipnz
  1162  011C  28F8               	goto	l1697
  1163  011D  291E               	goto	l1705
  1164  011E                     l1705:
  1165                           
  1166                           ;main.c: 131:         if (VALOR_PESO != 0 && SENSOR_MOV == 1){
  1167  011E  1283               	bcf	3,5	;RP0=0, select bank0
  1168  011F  1303               	bcf	3,6	;RP1=0, select bank0
  1169  0120  0840               	movf	_VALOR_PESO,w
  1170  0121  1903               	btfsc	3,2
  1171  0122  2924               	goto	u981
  1172  0123  2925               	goto	u980
  1173  0124                     u981:
  1174  0124  2960               	goto	l1723
  1175  0125                     u980:
  1176  0125                     l1707:
  1177  0125  033F               	decf	_SENSOR_MOV,w
  1178  0126  1D03               	btfss	3,2
  1179  0127  2929               	goto	u991
  1180  0128  292A               	goto	u990
  1181  0129                     u991:
  1182  0129  2960               	goto	l1723
  1183  012A                     u990:
  1184  012A                     l1709:
  1185                           
  1186                           ;main.c: 132:             PORTD = VALOR_PESO;
  1187  012A  0840               	movf	_VALOR_PESO,w
  1188  012B  0088               	movwf	8	;volatile
  1189  012C                     l1711:
  1190                           
  1191                           ;main.c: 134:             Lcd_Set_Cursor(2,1);
  1192  012C  01A9               	clrf	Lcd_Set_Cursor@b
  1193  012D  0AA9               	incf	Lcd_Set_Cursor@b,f
  1194  012E  3002               	movlw	2
  1195  012F  120A  118A  2453  120A  118A  	fcall	_Lcd_Set_Cursor
  1196  0134                     l1713:
  1197                           
  1198                           ;main.c: 135:             VAL(VALOR_PESO);
  1199  0134  1283               	bcf	3,5	;RP0=0, select bank0
  1200  0135  1303               	bcf	3,6	;RP1=0, select bank0
  1201  0136  0840               	movf	_VALOR_PESO,w
  1202  0137  00BB               	movwf	??_main
  1203  0138  01BC               	clrf	??_main+1
  1204  0139  083B               	movf	??_main,w
  1205  013A  00AD               	movwf	VAL@variable
  1206  013B  083C               	movf	??_main+1,w
  1207  013C  00AE               	movwf	VAL@variable+1
  1208  013D  120A  118A  22A5  120A  118A  	fcall	_VAL
  1209  0142                     l1715:
  1210                           
  1211                           ;main.c: 136:             Lcd_Write_Char(POS1);
  1212  0142  1283               	bcf	3,5	;RP0=0, select bank0
  1213  0143  1303               	bcf	3,6	;RP1=0, select bank0
  1214  0144  0843               	movf	_POS1,w
  1215  0145  120A  118A  2535  120A  118A  	fcall	_Lcd_Write_Char
  1216  014A                     l1717:
  1217                           
  1218                           ;main.c: 137:             Lcd_Write_Char(POS2);
  1219  014A  1283               	bcf	3,5	;RP0=0, select bank0
  1220  014B  1303               	bcf	3,6	;RP1=0, select bank0
  1221  014C  0842               	movf	_POS2,w
  1222  014D  120A  118A  2535  120A  118A  	fcall	_Lcd_Write_Char
  1223  0152                     l1719:
  1224                           
  1225                           ;main.c: 138:             Lcd_Write_Char(POS3);
  1226  0152  1283               	bcf	3,5	;RP0=0, select bank0
  1227  0153  1303               	bcf	3,6	;RP1=0, select bank0
  1228  0154  0841               	movf	_POS3,w
  1229  0155  120A  118A  2535  120A  118A  	fcall	_Lcd_Write_Char
  1230  015A                     l1721:
  1231                           
  1232                           ;main.c: 139:             Lcd_Write_String("gr ");
  1233  015A  302E               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1234  015B  120A  118A  2651  120A  118A  	fcall	_Lcd_Write_String
  1235  0160                     l1723:
  1236                           
  1237                           ;main.c: 143:         if (SENSOR_MOV == 1){
  1238  0160  1283               	bcf	3,5	;RP0=0, select bank0
  1239  0161  1303               	bcf	3,6	;RP1=0, select bank0
  1240  0162  033F               	decf	_SENSOR_MOV,w
  1241  0163  1D03               	btfss	3,2
  1242  0164  2966               	goto	u1001
  1243  0165  2967               	goto	u1000
  1244  0166                     u1001:
  1245  0166  2978               	goto	l1729
  1246  0167                     u1000:
  1247  0167                     l1725:
  1248                           
  1249                           ;main.c: 144:             Lcd_Set_Cursor(2,14);
  1250  0167  300E               	movlw	14
  1251  0168  00BB               	movwf	??_main
  1252  0169  083B               	movf	??_main,w
  1253  016A  00A9               	movwf	Lcd_Set_Cursor@b
  1254  016B  3002               	movlw	2
  1255  016C  120A  118A  2453  120A  118A  	fcall	_Lcd_Set_Cursor
  1256  0171                     l1727:
  1257                           
  1258                           ;main.c: 145:             Lcd_Write_String("ON ");
  1259  0171  302A               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1260  0172  120A  118A  2651  120A  118A  	fcall	_Lcd_Write_String
  1261                           
  1262                           ;main.c: 146:         }
  1263  0177  2988               	goto	l1733
  1264  0178                     l1729:
  1265                           
  1266                           ;main.c: 148:             Lcd_Set_Cursor(2,14);
  1267  0178  300E               	movlw	14
  1268  0179  00BB               	movwf	??_main
  1269  017A  083B               	movf	??_main,w
  1270  017B  00A9               	movwf	Lcd_Set_Cursor@b
  1271  017C  3002               	movlw	2
  1272  017D  120A  118A  2453  120A  118A  	fcall	_Lcd_Set_Cursor
  1273  0182                     l1731:
  1274                           
  1275                           ;main.c: 149:             Lcd_Write_String("OFF");
  1276  0182  3032               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1277  0183  120A  118A  2651  120A  118A  	fcall	_Lcd_Write_String
  1278  0188                     l1733:
  1279                           
  1280                           ;main.c: 152:         I2C_Master_Start();
  1281  0188  120A  118A  2768  120A  118A  	fcall	_I2C_Master_Start
  1282  018D                     l1735:
  1283                           
  1284                           ;main.c: 153:         I2C_Master_Write(0x50);
  1285  018D  3050               	movlw	80
  1286  018E  1283               	bcf	3,5	;RP0=0, select bank0
  1287  018F  1303               	bcf	3,6	;RP1=0, select bank0
  1288  0190  00A5               	movwf	I2C_Master_Write@d
  1289  0191  3000               	movlw	0
  1290  0192  00A6               	movwf	I2C_Master_Write@d+1
  1291  0193  120A  118A  2755  120A  118A  	fcall	_I2C_Master_Write
  1292  0198                     l1737:
  1293                           
  1294                           ;main.c: 154:         I2C_Master_Write(0X02);
  1295  0198  3002               	movlw	2
  1296  0199  1283               	bcf	3,5	;RP0=0, select bank0
  1297  019A  1303               	bcf	3,6	;RP1=0, select bank0
  1298  019B  00A5               	movwf	I2C_Master_Write@d
  1299  019C  3000               	movlw	0
  1300  019D  00A6               	movwf	I2C_Master_Write@d+1
  1301  019E  120A  118A  2755  120A  118A  	fcall	_I2C_Master_Write
  1302  01A3                     l1739:
  1303                           
  1304                           ;main.c: 155:         I2C_Master_Stop();
  1305  01A3  120A  118A  275F  120A  118A  	fcall	_I2C_Master_Stop
  1306  01A8                     l1741:
  1307                           
  1308                           ;main.c: 156:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1309  01A8  3003               	movlw	3
  1310  01A9  1283               	bcf	3,5	;RP0=0, select bank0
  1311  01AA  1303               	bcf	3,6	;RP1=0, select bank0
  1312  01AB  00BD               	movwf	??_main+2
  1313  01AC  3008               	movlw	8
  1314  01AD  00BC               	movwf	??_main+1
  1315  01AE  3076               	movlw	118
  1316  01AF  00BB               	movwf	??_main
  1317  01B0                     u1047:
  1318  01B0  0BBB               	decfsz	??_main,f
  1319  01B1  29B0               	goto	u1047
  1320  01B2  0BBC               	decfsz	??_main+1,f
  1321  01B3  29B0               	goto	u1047
  1322  01B4  0BBD               	decfsz	??_main+2,f
  1323  01B5  29B0               	goto	u1047
  1324  01B6  0000               	nop
  1325  01B7                     l1743:
  1326                           
  1327                           ;main.c: 158:         I2C_Master_Start();
  1328  01B7  120A  118A  2768  120A  118A  	fcall	_I2C_Master_Start
  1329  01BC                     l1745:
  1330                           
  1331                           ;main.c: 159:         I2C_Master_Write(0x51);
  1332  01BC  3051               	movlw	81
  1333  01BD  1283               	bcf	3,5	;RP0=0, select bank0
  1334  01BE  1303               	bcf	3,6	;RP1=0, select bank0
  1335  01BF  00A5               	movwf	I2C_Master_Write@d
  1336  01C0  3000               	movlw	0
  1337  01C1  00A6               	movwf	I2C_Master_Write@d+1
  1338  01C2  120A  118A  2755  120A  118A  	fcall	_I2C_Master_Write
  1339  01C7                     l1747:
  1340                           
  1341                           ;main.c: 160:         SENSOR_MOV = I2C_Master_Read(0);
  1342  01C7  3000               	movlw	0
  1343  01C8  1283               	bcf	3,5	;RP0=0, select bank0
  1344  01C9  1303               	bcf	3,6	;RP1=0, select bank0
  1345  01CA  00A5               	movwf	I2C_Master_Read@a
  1346  01CB  00A6               	movwf	I2C_Master_Read@a+1
  1347  01CC  120A  118A  261F  120A  118A  	fcall	_I2C_Master_Read
  1348  01D1  1283               	bcf	3,5	;RP0=0, select bank0
  1349  01D2  1303               	bcf	3,6	;RP1=0, select bank0
  1350  01D3  0825               	movf	?_I2C_Master_Read,w
  1351  01D4  00BB               	movwf	??_main
  1352  01D5  083B               	movf	??_main,w
  1353  01D6  00BF               	movwf	_SENSOR_MOV
  1354  01D7                     l1749:
  1355                           
  1356                           ;main.c: 161:         I2C_Master_Stop();
  1357  01D7  120A  118A  275F  120A  118A  	fcall	_I2C_Master_Stop
  1358  01DC                     l1751:
  1359                           
  1360                           ;main.c: 162:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1361  01DC  3003               	movlw	3
  1362  01DD  1283               	bcf	3,5	;RP0=0, select bank0
  1363  01DE  1303               	bcf	3,6	;RP1=0, select bank0
  1364  01DF  00BD               	movwf	??_main+2
  1365  01E0  3008               	movlw	8
  1366  01E1  00BC               	movwf	??_main+1
  1367  01E2  3076               	movlw	118
  1368  01E3  00BB               	movwf	??_main
  1369  01E4                     u1057:
  1370  01E4  0BBB               	decfsz	??_main,f
  1371  01E5  29E4               	goto	u1057
  1372  01E6  0BBC               	decfsz	??_main+1,f
  1373  01E7  29E4               	goto	u1057
  1374  01E8  0BBD               	decfsz	??_main+2,f
  1375  01E9  29E4               	goto	u1057
  1376  01EA  0000               	nop
  1377  01EB  283E               	goto	l1659
  1378  01EC  120A  118A  2810   	ljmp	start
  1379  01EF                     __end_of_main:
  1380                           
  1381                           	psect	text1
  1382  05E7                     __ptext1:	
  1383 ;; *************** function _setup *****************
  1384 ;; Defined at:
  1385 ;;		line 171 in file "main.c"
  1386 ;; Parameters:    Size  Location     Type
  1387 ;;		None
  1388 ;; Auto vars:     Size  Location     Type
  1389 ;;		None
  1390 ;; Return value:  Size  Location     Type
  1391 ;;                  1    wreg      void 
  1392 ;; Registers used:
  1393 ;;		wreg, status,2, status,0, pclath, cstack
  1394 ;; Tracked objects:
  1395 ;;		On entry : 0/0
  1396 ;;		On exit  : 0/0
  1397 ;;		Unchanged: 0/0
  1398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1399 ;;      Params:         0       0       0       0       0
  1400 ;;      Locals:         0       0       0       0       0
  1401 ;;      Temps:          0       0       0       0       0
  1402 ;;      Totals:         0       0       0       0       0
  1403 ;;Total ram usage:        0 bytes
  1404 ;; Hardware stack levels used:    1
  1405 ;; Hardware stack levels required when called:    5
  1406 ;; This function calls:
  1407 ;;		_EUSART_INIT
  1408 ;;		_I2C_Master_Init
  1409 ;; This function is called by:
  1410 ;;		_main
  1411 ;; This function uses a non-reentrant model
  1412 ;;
  1413                           
  1414                           
  1415                           ;psect for function _setup
  1416  05E7                     _setup:
  1417  05E7                     l1513:	
  1418                           ;incstack = 0
  1419                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1420                           
  1421                           
  1422                           ;main.c: 173:     ANSEL = 0B0000000;
  1423  05E7  1683               	bsf	3,5	;RP0=1, select bank3
  1424  05E8  1703               	bsf	3,6	;RP1=1, select bank3
  1425  05E9  0188               	clrf	8	;volatile
  1426                           
  1427                           ;main.c: 174:     ANSELH = 0X00;
  1428  05EA  0189               	clrf	9	;volatile
  1429                           
  1430                           ;main.c: 176:     TRISA = 0B0000000;
  1431  05EB  1683               	bsf	3,5	;RP0=1, select bank1
  1432  05EC  1303               	bcf	3,6	;RP1=0, select bank1
  1433  05ED  0185               	clrf	5	;volatile
  1434                           
  1435                           ;main.c: 177:     TRISD = 0X00;
  1436  05EE  0188               	clrf	8	;volatile
  1437                           
  1438                           ;main.c: 178:     TRISE = 0X00;
  1439  05EF  0189               	clrf	9	;volatile
  1440                           
  1441                           ;main.c: 179:     TRISB = 0X00;
  1442  05F0  0186               	clrf	6	;volatile
  1443                           
  1444                           ;main.c: 182:     PORTA = 0X00;
  1445  05F1  1283               	bcf	3,5	;RP0=0, select bank0
  1446  05F2  1303               	bcf	3,6	;RP1=0, select bank0
  1447  05F3  0185               	clrf	5	;volatile
  1448                           
  1449                           ;main.c: 183:     PORTB = 0X00;
  1450  05F4  0186               	clrf	6	;volatile
  1451                           
  1452                           ;main.c: 184:     PORTC = 0X00;
  1453  05F5  0187               	clrf	7	;volatile
  1454                           
  1455                           ;main.c: 185:     PORTD = 0X00;
  1456  05F6  0188               	clrf	8	;volatile
  1457                           
  1458                           ;main.c: 186:     PORTE = 0X00;
  1459  05F7  0189               	clrf	9	;volatile
  1460  05F8                     l1515:
  1461                           
  1462                           ;main.c: 189:     OSCCONbits.IRCF2 = 1;
  1463  05F8  1683               	bsf	3,5	;RP0=1, select bank1
  1464  05F9  1303               	bcf	3,6	;RP1=0, select bank1
  1465  05FA  170F               	bsf	15,6	;volatile
  1466  05FB                     l1517:
  1467                           
  1468                           ;main.c: 190:     OSCCONbits.IRCF1 = 1;
  1469  05FB  168F               	bsf	15,5	;volatile
  1470  05FC                     l1519:
  1471                           
  1472                           ;main.c: 191:     OSCCONbits.IRCF0 = 1;
  1473  05FC  160F               	bsf	15,4	;volatile
  1474  05FD                     l1521:
  1475                           
  1476                           ;main.c: 192:     OSCCONbits.SCS = 1;
  1477  05FD  140F               	bsf	15,0	;volatile
  1478  05FE                     l1523:
  1479                           
  1480                           ;main.c: 194:     TRISC7 = 1;
  1481  05FE  1787               	bsf	7,7	;volatile
  1482  05FF                     l1525:
  1483                           
  1484                           ;main.c: 195:     EUSART_INIT(0,1);
  1485  05FF  3000               	movlw	0
  1486  0600  1283               	bcf	3,5	;RP0=0, select bank0
  1487  0601  1303               	bcf	3,6	;RP1=0, select bank0
  1488  0602  00A5               	movwf	EUSART_INIT@tx
  1489  0603  00A6               	movwf	EUSART_INIT@tx+1
  1490  0604  3001               	movlw	1
  1491  0605  00A7               	movwf	EUSART_INIT@rx
  1492  0606  3000               	movlw	0
  1493  0607  00A8               	movwf	EUSART_INIT@rx+1
  1494  0608  120A  118A  26A1  120A  118A  	fcall	_EUSART_INIT
  1495  060D                     l1527:
  1496                           
  1497                           ;main.c: 198:     I2C_Master_Init(100000);
  1498  060D  3000               	movlw	0
  1499  060E  1283               	bcf	3,5	;RP0=0, select bank0
  1500  060F  1303               	bcf	3,6	;RP1=0, select bank0
  1501  0610  00B6               	movwf	I2C_Master_Init@c+3
  1502  0611  3001               	movlw	1
  1503  0612  00B5               	movwf	I2C_Master_Init@c+2
  1504  0613  3086               	movlw	134
  1505  0614  00B4               	movwf	I2C_Master_Init@c+1
  1506  0615  30A0               	movlw	160
  1507  0616  00B3               	movwf	I2C_Master_Init@c
  1508  0617  120A  118A  25AD  120A  118A  	fcall	_I2C_Master_Init
  1509  061C                     l1529:
  1510                           
  1511                           ;main.c: 201:     INTCONbits.GIE = 1;
  1512  061C  178B               	bsf	11,7	;volatile
  1513  061D                     l1531:
  1514                           
  1515                           ;main.c: 202:     INTCONbits.PEIE = 1;
  1516  061D  170B               	bsf	11,6	;volatile
  1517  061E                     l122:
  1518  061E  0008               	return
  1519  061F                     __end_of_setup:
  1520                           
  1521                           	psect	text2
  1522  05AD                     __ptext2:	
  1523 ;; *************** function _I2C_Master_Init *****************
  1524 ;; Defined at:
  1525 ;;		line 16 in file "I2C.c"
  1526 ;; Parameters:    Size  Location     Type
  1527 ;;  c               4   19[BANK0 ] const unsigned long 
  1528 ;; Auto vars:     Size  Location     Type
  1529 ;;		None
  1530 ;; Return value:  Size  Location     Type
  1531 ;;                  1    wreg      void 
  1532 ;; Registers used:
  1533 ;;		wreg, status,2, status,0, pclath, cstack
  1534 ;; Tracked objects:
  1535 ;;		On entry : 0/0
  1536 ;;		On exit  : 0/0
  1537 ;;		Unchanged: 0/0
  1538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1539 ;;      Params:         0       4       0       0       0
  1540 ;;      Locals:         0       0       0       0       0
  1541 ;;      Temps:          0       4       0       0       0
  1542 ;;      Totals:         0       8       0       0       0
  1543 ;;Total ram usage:        8 bytes
  1544 ;; Hardware stack levels used:    1
  1545 ;; Hardware stack levels required when called:    4
  1546 ;; This function calls:
  1547 ;;		___lldiv
  1548 ;; This function is called by:
  1549 ;;		_setup
  1550 ;; This function uses a non-reentrant model
  1551 ;;
  1552                           
  1553                           
  1554                           ;psect for function _I2C_Master_Init
  1555  05AD                     _I2C_Master_Init:
  1556  05AD                     l1387:	
  1557                           ;incstack = 0
  1558                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  1559                           
  1560                           
  1561                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  1562  05AD  3028               	movlw	40
  1563  05AE  1283               	bcf	3,5	;RP0=0, select bank0
  1564  05AF  1303               	bcf	3,6	;RP1=0, select bank0
  1565  05B0  0094               	movwf	20	;volatile
  1566  05B1                     l1389:
  1567                           
  1568                           ;I2C.c: 19:     SSPCON2 = 0;
  1569  05B1  1683               	bsf	3,5	;RP0=1, select bank1
  1570  05B2  1303               	bcf	3,6	;RP1=0, select bank1
  1571  05B3  0191               	clrf	17	;volatile
  1572  05B4                     l1391:
  1573                           
  1574                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  1575  05B4  1283               	bcf	3,5	;RP0=0, select bank0
  1576  05B5  1303               	bcf	3,6	;RP1=0, select bank0
  1577  05B6  0833               	movf	I2C_Master_Init@c,w
  1578  05B7  00B7               	movwf	??_I2C_Master_Init
  1579  05B8  0834               	movf	I2C_Master_Init@c+1,w
  1580  05B9  00B8               	movwf	??_I2C_Master_Init+1
  1581  05BA  0835               	movf	I2C_Master_Init@c+2,w
  1582  05BB  00B9               	movwf	??_I2C_Master_Init+2
  1583  05BC  0836               	movf	I2C_Master_Init@c+3,w
  1584  05BD  00BA               	movwf	??_I2C_Master_Init+3
  1585  05BE  3002               	movlw	2
  1586  05BF                     u635:
  1587  05BF  1003               	clrc
  1588  05C0  0DB7               	rlf	??_I2C_Master_Init,f
  1589  05C1  0DB8               	rlf	??_I2C_Master_Init+1,f
  1590  05C2  0DB9               	rlf	??_I2C_Master_Init+2,f
  1591  05C3  0DBA               	rlf	??_I2C_Master_Init+3,f
  1592  05C4                     u630:
  1593  05C4  3EFF               	addlw	-1
  1594  05C5  1D03               	skipz
  1595  05C6  2DBF               	goto	u635
  1596  05C7  083A               	movf	??_I2C_Master_Init+3,w
  1597  05C8  00A8               	movwf	___lldiv@divisor+3
  1598  05C9  0839               	movf	??_I2C_Master_Init+2,w
  1599  05CA  00A7               	movwf	___lldiv@divisor+2
  1600  05CB  0838               	movf	??_I2C_Master_Init+1,w
  1601  05CC  00A6               	movwf	___lldiv@divisor+1
  1602  05CD  0837               	movf	??_I2C_Master_Init,w
  1603  05CE  00A5               	movwf	___lldiv@divisor
  1604  05CF  3000               	movlw	0
  1605  05D0  00AC               	movwf	___lldiv@dividend+3
  1606  05D1  307A               	movlw	122
  1607  05D2  00AB               	movwf	___lldiv@dividend+2
  1608  05D3  3012               	movlw	18
  1609  05D4  00AA               	movwf	___lldiv@dividend+1
  1610  05D5  3000               	movlw	0
  1611  05D6  00A9               	movwf	___lldiv@dividend
  1612  05D7  120A  118A  2389  120A  118A  	fcall	___lldiv
  1613  05DC  1283               	bcf	3,5	;RP0=0, select bank0
  1614  05DD  1303               	bcf	3,6	;RP1=0, select bank0
  1615  05DE  0825               	movf	?___lldiv,w
  1616  05DF  3EFF               	addlw	255
  1617  05E0  1683               	bsf	3,5	;RP0=1, select bank1
  1618  05E1  1303               	bcf	3,6	;RP1=0, select bank1
  1619  05E2  0093               	movwf	19	;volatile
  1620  05E3                     l1393:
  1621                           
  1622                           ;I2C.c: 21:     SSPSTAT = 0;
  1623  05E3  0194               	clrf	20	;volatile
  1624  05E4                     l1395:
  1625                           
  1626                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  1627  05E4  1587               	bsf	7,3	;volatile
  1628  05E5                     l1397:
  1629                           
  1630                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  1631  05E5  1607               	bsf	7,4	;volatile
  1632  05E6                     l209:
  1633  05E6  0008               	return
  1634  05E7                     __end_of_I2C_Master_Init:
  1635                           
  1636                           	psect	text3
  1637  0389                     __ptext3:	
  1638 ;; *************** function ___lldiv *****************
  1639 ;; Defined at:
  1640 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  1641 ;; Parameters:    Size  Location     Type
  1642 ;;  divisor         4    5[BANK0 ] unsigned long 
  1643 ;;  dividend        4    9[BANK0 ] unsigned long 
  1644 ;; Auto vars:     Size  Location     Type
  1645 ;;  quotient        4   14[BANK0 ] unsigned long 
  1646 ;;  counter         1   18[BANK0 ] unsigned char 
  1647 ;; Return value:  Size  Location     Type
  1648 ;;                  4    5[BANK0 ] unsigned long 
  1649 ;; Registers used:
  1650 ;;		wreg, status,2, status,0
  1651 ;; Tracked objects:
  1652 ;;		On entry : 0/0
  1653 ;;		On exit  : 0/0
  1654 ;;		Unchanged: 0/0
  1655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1656 ;;      Params:         0       8       0       0       0
  1657 ;;      Locals:         0       5       0       0       0
  1658 ;;      Temps:          0       1       0       0       0
  1659 ;;      Totals:         0      14       0       0       0
  1660 ;;Total ram usage:       14 bytes
  1661 ;; Hardware stack levels used:    1
  1662 ;; Hardware stack levels required when called:    3
  1663 ;; This function calls:
  1664 ;;		Nothing
  1665 ;; This function is called by:
  1666 ;;		_I2C_Master_Init
  1667 ;; This function uses a non-reentrant model
  1668 ;;
  1669                           
  1670                           
  1671                           ;psect for function ___lldiv
  1672  0389                     ___lldiv:
  1673  0389                     l1333:	
  1674                           ;incstack = 0
  1675                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1676                           
  1677  0389  3000               	movlw	0
  1678  038A  1283               	bcf	3,5	;RP0=0, select bank0
  1679  038B  1303               	bcf	3,6	;RP1=0, select bank0
  1680  038C  00B1               	movwf	___lldiv@quotient+3
  1681  038D  3000               	movlw	0
  1682  038E  00B0               	movwf	___lldiv@quotient+2
  1683  038F  3000               	movlw	0
  1684  0390  00AF               	movwf	___lldiv@quotient+1
  1685  0391  3000               	movlw	0
  1686  0392  00AE               	movwf	___lldiv@quotient
  1687  0393  0828               	movf	___lldiv@divisor+3,w
  1688  0394  0427               	iorwf	___lldiv@divisor+2,w
  1689  0395  0426               	iorwf	___lldiv@divisor+1,w
  1690  0396  0425               	iorwf	___lldiv@divisor,w
  1691  0397  1903               	skipnz
  1692  0398  2B9A               	goto	u551
  1693  0399  2B9B               	goto	u550
  1694  039A                     u551:
  1695  039A  2BE8               	goto	l1353
  1696  039B                     u550:
  1697  039B                     l1335:
  1698  039B  01B2               	clrf	___lldiv@counter
  1699  039C  0AB2               	incf	___lldiv@counter,f
  1700  039D  2BAB               	goto	l1339
  1701  039E                     l1337:
  1702  039E  3001               	movlw	1
  1703  039F  00AD               	movwf	??___lldiv
  1704  03A0                     u565:
  1705  03A0  1003               	clrc
  1706  03A1  0DA5               	rlf	___lldiv@divisor,f
  1707  03A2  0DA6               	rlf	___lldiv@divisor+1,f
  1708  03A3  0DA7               	rlf	___lldiv@divisor+2,f
  1709  03A4  0DA8               	rlf	___lldiv@divisor+3,f
  1710  03A5  0BAD               	decfsz	??___lldiv,f
  1711  03A6  2BA0               	goto	u565
  1712  03A7  3001               	movlw	1
  1713  03A8  00AD               	movwf	??___lldiv
  1714  03A9  082D               	movf	??___lldiv,w
  1715  03AA  07B2               	addwf	___lldiv@counter,f
  1716  03AB                     l1339:
  1717  03AB  1FA8               	btfss	___lldiv@divisor+3,7
  1718  03AC  2BAE               	goto	u571
  1719  03AD  2BAF               	goto	u570
  1720  03AE                     u571:
  1721  03AE  2B9E               	goto	l1337
  1722  03AF                     u570:
  1723  03AF                     l1341:
  1724  03AF  3001               	movlw	1
  1725  03B0  00AD               	movwf	??___lldiv
  1726  03B1                     u585:
  1727  03B1  1003               	clrc
  1728  03B2  0DAE               	rlf	___lldiv@quotient,f
  1729  03B3  0DAF               	rlf	___lldiv@quotient+1,f
  1730  03B4  0DB0               	rlf	___lldiv@quotient+2,f
  1731  03B5  0DB1               	rlf	___lldiv@quotient+3,f
  1732  03B6  0BAD               	decfsz	??___lldiv,f
  1733  03B7  2BB1               	goto	u585
  1734  03B8                     l1343:
  1735  03B8  0828               	movf	___lldiv@divisor+3,w
  1736  03B9  022C               	subwf	___lldiv@dividend+3,w
  1737  03BA  1D03               	skipz
  1738  03BB  2BC6               	goto	u595
  1739  03BC  0827               	movf	___lldiv@divisor+2,w
  1740  03BD  022B               	subwf	___lldiv@dividend+2,w
  1741  03BE  1D03               	skipz
  1742  03BF  2BC6               	goto	u595
  1743  03C0  0826               	movf	___lldiv@divisor+1,w
  1744  03C1  022A               	subwf	___lldiv@dividend+1,w
  1745  03C2  1D03               	skipz
  1746  03C3  2BC6               	goto	u595
  1747  03C4  0825               	movf	___lldiv@divisor,w
  1748  03C5  0229               	subwf	___lldiv@dividend,w
  1749  03C6                     u595:
  1750  03C6  1C03               	skipc
  1751  03C7  2BC9               	goto	u591
  1752  03C8  2BCA               	goto	u590
  1753  03C9                     u591:
  1754  03C9  2BD9               	goto	l1349
  1755  03CA                     u590:
  1756  03CA                     l1345:
  1757  03CA  0825               	movf	___lldiv@divisor,w
  1758  03CB  02A9               	subwf	___lldiv@dividend,f
  1759  03CC  0826               	movf	___lldiv@divisor+1,w
  1760  03CD  1C03               	skipc
  1761  03CE  0F26               	incfsz	___lldiv@divisor+1,w
  1762  03CF  02AA               	subwf	___lldiv@dividend+1,f
  1763  03D0  0827               	movf	___lldiv@divisor+2,w
  1764  03D1  1C03               	skipc
  1765  03D2  0F27               	incfsz	___lldiv@divisor+2,w
  1766  03D3  02AB               	subwf	___lldiv@dividend+2,f
  1767  03D4  0828               	movf	___lldiv@divisor+3,w
  1768  03D5  1C03               	skipc
  1769  03D6  0F28               	incfsz	___lldiv@divisor+3,w
  1770  03D7  02AC               	subwf	___lldiv@dividend+3,f
  1771  03D8                     l1347:
  1772  03D8  142E               	bsf	___lldiv@quotient,0
  1773  03D9                     l1349:
  1774  03D9  3001               	movlw	1
  1775  03DA                     u605:
  1776  03DA  1003               	clrc
  1777  03DB  0CA8               	rrf	___lldiv@divisor+3,f
  1778  03DC  0CA7               	rrf	___lldiv@divisor+2,f
  1779  03DD  0CA6               	rrf	___lldiv@divisor+1,f
  1780  03DE  0CA5               	rrf	___lldiv@divisor,f
  1781  03DF  3EFF               	addlw	-1
  1782  03E0  1D03               	skipz
  1783  03E1  2BDA               	goto	u605
  1784  03E2                     l1351:
  1785  03E2  3001               	movlw	1
  1786  03E3  02B2               	subwf	___lldiv@counter,f
  1787  03E4  1D03               	btfss	3,2
  1788  03E5  2BE7               	goto	u611
  1789  03E6  2BE8               	goto	u610
  1790  03E7                     u611:
  1791  03E7  2BAF               	goto	l1341
  1792  03E8                     u610:
  1793  03E8                     l1353:
  1794  03E8  0831               	movf	___lldiv@quotient+3,w
  1795  03E9  00A8               	movwf	?___lldiv+3
  1796  03EA  0830               	movf	___lldiv@quotient+2,w
  1797  03EB  00A7               	movwf	?___lldiv+2
  1798  03EC  082F               	movf	___lldiv@quotient+1,w
  1799  03ED  00A6               	movwf	?___lldiv+1
  1800  03EE  082E               	movf	___lldiv@quotient,w
  1801  03EF  00A5               	movwf	?___lldiv
  1802  03F0                     l357:
  1803  03F0  0008               	return
  1804  03F1                     __end_of___lldiv:
  1805                           
  1806                           	psect	text4
  1807  06A1                     __ptext4:	
  1808 ;; *************** function _EUSART_INIT *****************
  1809 ;; Defined at:
  1810 ;;		line 13 in file "./EUSART_LIB.h"
  1811 ;; Parameters:    Size  Location     Type
  1812 ;;  tx              2    5[BANK0 ] unsigned int 
  1813 ;;  rx              2    7[BANK0 ] unsigned int 
  1814 ;; Auto vars:     Size  Location     Type
  1815 ;;		None
  1816 ;; Return value:  Size  Location     Type
  1817 ;;                  1    wreg      void 
  1818 ;; Registers used:
  1819 ;;		wreg, status,2, status,0
  1820 ;; Tracked objects:
  1821 ;;		On entry : 0/0
  1822 ;;		On exit  : 0/0
  1823 ;;		Unchanged: 0/0
  1824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1825 ;;      Params:         0       4       0       0       0
  1826 ;;      Locals:         0       0       0       0       0
  1827 ;;      Temps:          0       0       0       0       0
  1828 ;;      Totals:         0       4       0       0       0
  1829 ;;Total ram usage:        4 bytes
  1830 ;; Hardware stack levels used:    1
  1831 ;; Hardware stack levels required when called:    3
  1832 ;; This function calls:
  1833 ;;		Nothing
  1834 ;; This function is called by:
  1835 ;;		_setup
  1836 ;; This function uses a non-reentrant model
  1837 ;;
  1838                           
  1839                           
  1840                           ;psect for function _EUSART_INIT
  1841  06A1                     _EUSART_INIT:
  1842  06A1                     l1357:	
  1843                           ;incstack = 0
  1844                           ; Regs used in _EUSART_INIT: [wreg+status,2+status,0]
  1845                           
  1846                           
  1847                           ;./EUSART_LIB.h: 17:   TXSTAbits.SYNC = 0;
  1848  06A1  1683               	bsf	3,5	;RP0=1, select bank1
  1849  06A2  1303               	bcf	3,6	;RP1=0, select bank1
  1850  06A3  1218               	bcf	24,4	;volatile
  1851                           
  1852                           ;./EUSART_LIB.h: 18:   TXSTAbits.BRGH = 0;
  1853  06A4  1118               	bcf	24,2	;volatile
  1854                           
  1855                           ;./EUSART_LIB.h: 19:   TXSTAbits.TX9 = 0;
  1856  06A5  1318               	bcf	24,6	;volatile
  1857                           
  1858                           ;./EUSART_LIB.h: 20:   TXSTAbits.TXEN= 1;
  1859  06A6  1698               	bsf	24,5	;volatile
  1860                           
  1861                           ;./EUSART_LIB.h: 21:   RCSTAbits.SPEN = 1;
  1862  06A7  1283               	bcf	3,5	;RP0=0, select bank0
  1863  06A8  1303               	bcf	3,6	;RP1=0, select bank0
  1864  06A9  1798               	bsf	24,7	;volatile
  1865                           
  1866                           ;./EUSART_LIB.h: 24:   RCSTAbits.RX9 = 0;
  1867  06AA  1318               	bcf	24,6	;volatile
  1868                           
  1869                           ;./EUSART_LIB.h: 25:   RCSTAbits.CREN = 1;
  1870  06AB  1618               	bsf	24,4	;volatile
  1871                           
  1872                           ;./EUSART_LIB.h: 28:     BAUDCTLbits.BRG16 = 0;
  1873  06AC  1683               	bsf	3,5	;RP0=1, select bank3
  1874  06AD  1703               	bsf	3,6	;RP1=1, select bank3
  1875  06AE  1187               	bcf	7,3	;volatile
  1876  06AF                     l1359:
  1877                           
  1878                           ;./EUSART_LIB.h: 29:     SPBRG =12;
  1879  06AF  300C               	movlw	12
  1880  06B0  1683               	bsf	3,5	;RP0=1, select bank1
  1881  06B1  1303               	bcf	3,6	;RP1=0, select bank1
  1882  06B2  0099               	movwf	25	;volatile
  1883  06B3                     l1361:
  1884                           
  1885                           ;./EUSART_LIB.h: 30:     SPBRGH = 0;
  1886  06B3  019A               	clrf	26	;volatile
  1887  06B4                     l1363:
  1888                           
  1889                           ;./EUSART_LIB.h: 32:     PIE1bits.TXIE =tx;
  1890  06B4  1283               	bcf	3,5	;RP0=0, select bank0
  1891  06B5  1303               	bcf	3,6	;RP1=0, select bank0
  1892  06B6  0C25               	rrf	EUSART_INIT@tx,w
  1893  06B7  1683               	bsf	3,5	;RP0=1, select bank1
  1894  06B8  1303               	bcf	3,6	;RP1=0, select bank1
  1895  06B9  1C03               	skipc
  1896  06BA  120C               	bcf	12,4	;volatile
  1897  06BB  1803               	skipnc
  1898  06BC  160C               	bsf	12,4	;volatile
  1899  06BD                     l1365:
  1900                           
  1901                           ;./EUSART_LIB.h: 33:     PIE1bits.RCIE =rx;
  1902  06BD  1283               	bcf	3,5	;RP0=0, select bank0
  1903  06BE  1303               	bcf	3,6	;RP1=0, select bank0
  1904  06BF  0C27               	rrf	EUSART_INIT@rx,w
  1905  06C0  1683               	bsf	3,5	;RP0=1, select bank1
  1906  06C1  1303               	bcf	3,6	;RP1=0, select bank1
  1907  06C2  1C03               	skipc
  1908  06C3  128C               	bcf	12,5	;volatile
  1909  06C4  1803               	skipnc
  1910  06C5  168C               	bsf	12,5	;volatile
  1911  06C6                     l75:
  1912  06C6  0008               	return
  1913  06C7                     __end_of_EUSART_INIT:
  1914                           
  1915                           	psect	text5
  1916  02A5                     __ptext5:	
  1917 ;; *************** function _VAL *****************
  1918 ;; Defined at:
  1919 ;;		line 207 in file "main.c"
  1920 ;; Parameters:    Size  Location     Type
  1921 ;;  variable        2   13[BANK0 ] unsigned int 
  1922 ;; Auto vars:     Size  Location     Type
  1923 ;;  valor           2   17[BANK0 ] unsigned int 
  1924 ;; Return value:  Size  Location     Type
  1925 ;;                  1    wreg      void 
  1926 ;; Registers used:
  1927 ;;		wreg, status,2, status,0, pclath, cstack
  1928 ;; Tracked objects:
  1929 ;;		On entry : 0/0
  1930 ;;		On exit  : 0/0
  1931 ;;		Unchanged: 0/0
  1932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1933 ;;      Params:         0       2       0       0       0
  1934 ;;      Locals:         0       2       0       0       0
  1935 ;;      Temps:          0       2       0       0       0
  1936 ;;      Totals:         0       6       0       0       0
  1937 ;;Total ram usage:        6 bytes
  1938 ;; Hardware stack levels used:    1
  1939 ;; Hardware stack levels required when called:    4
  1940 ;; This function calls:
  1941 ;;		___lwdiv
  1942 ;;		___wmul
  1943 ;; This function is called by:
  1944 ;;		_main
  1945 ;; This function uses a non-reentrant model
  1946 ;;
  1947                           
  1948                           
  1949                           ;psect for function _VAL
  1950  02A5                     _VAL:
  1951  02A5                     l1497:	
  1952                           ;incstack = 0
  1953                           ; Regs used in _VAL: [wreg+status,2+status,0+pclath+cstack]
  1954                           
  1955                           
  1956                           ;main.c: 208:     uint16_t valor;;main.c: 209:     valor = variable;
  1957  02A5  1283               	bcf	3,5	;RP0=0, select bank0
  1958  02A6  1303               	bcf	3,6	;RP1=0, select bank0
  1959  02A7  082E               	movf	VAL@variable+1,w
  1960  02A8  00B2               	movwf	VAL@valor+1
  1961  02A9  082D               	movf	VAL@variable,w
  1962  02AA  00B1               	movwf	VAL@valor
  1963  02AB                     l1499:
  1964                           
  1965                           ;main.c: 210:     POS1 = (valor/100) ;
  1966  02AB  3064               	movlw	100
  1967  02AC  00A5               	movwf	___lwdiv@divisor
  1968  02AD  3000               	movlw	0
  1969  02AE  00A6               	movwf	___lwdiv@divisor+1
  1970  02AF  0832               	movf	VAL@valor+1,w
  1971  02B0  00A8               	movwf	___lwdiv@dividend+1
  1972  02B1  0831               	movf	VAL@valor,w
  1973  02B2  00A7               	movwf	___lwdiv@dividend
  1974  02B3  120A  118A  24AB  120A  118A  	fcall	___lwdiv
  1975  02B8  1283               	bcf	3,5	;RP0=0, select bank0
  1976  02B9  1303               	bcf	3,6	;RP1=0, select bank0
  1977  02BA  0825               	movf	?___lwdiv,w
  1978  02BB  00AF               	movwf	??_VAL
  1979  02BC  082F               	movf	??_VAL,w
  1980  02BD  00C3               	movwf	_POS1
  1981  02BE                     l1501:
  1982                           
  1983                           ;main.c: 211:     valor = (valor - (POS1*100));
  1984  02BE  0843               	movf	_POS1,w
  1985  02BF  00AF               	movwf	??_VAL
  1986  02C0  01B0               	clrf	??_VAL+1
  1987  02C1  082F               	movf	??_VAL,w
  1988  02C2  00A5               	movwf	___wmul@multiplier
  1989  02C3  0830               	movf	??_VAL+1,w
  1990  02C4  00A6               	movwf	___wmul@multiplier+1
  1991  02C5  309C               	movlw	156
  1992  02C6  00A7               	movwf	___wmul@multiplicand
  1993  02C7  30FF               	movlw	255
  1994  02C8  00A8               	movwf	___wmul@multiplicand+1
  1995  02C9  120A  118A  267A  120A  118A  	fcall	___wmul
  1996  02CE  1283               	bcf	3,5	;RP0=0, select bank0
  1997  02CF  1303               	bcf	3,6	;RP1=0, select bank0
  1998  02D0  0831               	movf	VAL@valor,w
  1999  02D1  0725               	addwf	?___wmul,w
  2000  02D2  00B1               	movwf	VAL@valor
  2001  02D3  0832               	movf	VAL@valor+1,w
  2002  02D4  1803               	skipnc
  2003  02D5  0A32               	incf	VAL@valor+1,w
  2004  02D6  0726               	addwf	?___wmul+1,w
  2005  02D7  00B2               	movwf	VAL@valor+1
  2006  02D8                     l1503:
  2007                           
  2008                           ;main.c: 212:     POS2 = (valor/10);
  2009  02D8  300A               	movlw	10
  2010  02D9  00A5               	movwf	___lwdiv@divisor
  2011  02DA  3000               	movlw	0
  2012  02DB  00A6               	movwf	___lwdiv@divisor+1
  2013  02DC  0832               	movf	VAL@valor+1,w
  2014  02DD  00A8               	movwf	___lwdiv@dividend+1
  2015  02DE  0831               	movf	VAL@valor,w
  2016  02DF  00A7               	movwf	___lwdiv@dividend
  2017  02E0  120A  118A  24AB  120A  118A  	fcall	___lwdiv
  2018  02E5  1283               	bcf	3,5	;RP0=0, select bank0
  2019  02E6  1303               	bcf	3,6	;RP1=0, select bank0
  2020  02E7  0825               	movf	?___lwdiv,w
  2021  02E8  00AF               	movwf	??_VAL
  2022  02E9  082F               	movf	??_VAL,w
  2023  02EA  00C2               	movwf	_POS2
  2024  02EB                     l1505:
  2025                           
  2026                           ;main.c: 213:     valor = (valor - (POS2*10));
  2027  02EB  0842               	movf	_POS2,w
  2028  02EC  00AF               	movwf	??_VAL
  2029  02ED  01B0               	clrf	??_VAL+1
  2030  02EE  082F               	movf	??_VAL,w
  2031  02EF  00A5               	movwf	___wmul@multiplier
  2032  02F0  0830               	movf	??_VAL+1,w
  2033  02F1  00A6               	movwf	___wmul@multiplier+1
  2034  02F2  30F6               	movlw	246
  2035  02F3  00A7               	movwf	___wmul@multiplicand
  2036  02F4  30FF               	movlw	255
  2037  02F5  00A8               	movwf	___wmul@multiplicand+1
  2038  02F6  120A  118A  267A  120A  118A  	fcall	___wmul
  2039  02FB  1283               	bcf	3,5	;RP0=0, select bank0
  2040  02FC  1303               	bcf	3,6	;RP1=0, select bank0
  2041  02FD  0831               	movf	VAL@valor,w
  2042  02FE  0725               	addwf	?___wmul,w
  2043  02FF  00B1               	movwf	VAL@valor
  2044  0300  0832               	movf	VAL@valor+1,w
  2045  0301  1803               	skipnc
  2046  0302  0A32               	incf	VAL@valor+1,w
  2047  0303  0726               	addwf	?___wmul+1,w
  2048  0304  00B2               	movwf	VAL@valor+1
  2049                           
  2050                           ;main.c: 214:     POS3 = (valor);
  2051  0305  0831               	movf	VAL@valor,w
  2052  0306  00AF               	movwf	??_VAL
  2053  0307  082F               	movf	??_VAL,w
  2054  0308  00C1               	movwf	_POS3
  2055  0309                     l1507:
  2056                           
  2057                           ;main.c: 216:     POS1 = POS1 + 48;
  2058  0309  0843               	movf	_POS1,w
  2059  030A  3E30               	addlw	48
  2060  030B  00AF               	movwf	??_VAL
  2061  030C  082F               	movf	??_VAL,w
  2062  030D  00C3               	movwf	_POS1
  2063  030E                     l1509:
  2064                           
  2065                           ;main.c: 217:     POS2 = POS2 + 48;
  2066  030E  0842               	movf	_POS2,w
  2067  030F  3E30               	addlw	48
  2068  0310  00AF               	movwf	??_VAL
  2069  0311  082F               	movf	??_VAL,w
  2070  0312  00C2               	movwf	_POS2
  2071  0313                     l1511:
  2072                           
  2073                           ;main.c: 218:     POS3 = POS3 + 48;
  2074  0313  0841               	movf	_POS3,w
  2075  0314  3E30               	addlw	48
  2076  0315  00AF               	movwf	??_VAL
  2077  0316  082F               	movf	??_VAL,w
  2078  0317  00C1               	movwf	_POS3
  2079  0318                     l125:
  2080  0318  0008               	return
  2081  0319                     __end_of_VAL:
  2082                           
  2083                           	psect	text6
  2084  067A                     __ptext6:	
  2085 ;; *************** function ___wmul *****************
  2086 ;; Defined at:
  2087 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  2088 ;; Parameters:    Size  Location     Type
  2089 ;;  multiplier      2    5[BANK0 ] unsigned int 
  2090 ;;  multiplicand    2    7[BANK0 ] unsigned int 
  2091 ;; Auto vars:     Size  Location     Type
  2092 ;;  product         2    9[BANK0 ] unsigned int 
  2093 ;; Return value:  Size  Location     Type
  2094 ;;                  2    5[BANK0 ] unsigned int 
  2095 ;; Registers used:
  2096 ;;		wreg, status,2, status,0
  2097 ;; Tracked objects:
  2098 ;;		On entry : 0/0
  2099 ;;		On exit  : 0/0
  2100 ;;		Unchanged: 0/0
  2101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2102 ;;      Params:         0       4       0       0       0
  2103 ;;      Locals:         0       2       0       0       0
  2104 ;;      Temps:          0       0       0       0       0
  2105 ;;      Totals:         0       6       0       0       0
  2106 ;;Total ram usage:        6 bytes
  2107 ;; Hardware stack levels used:    1
  2108 ;; Hardware stack levels required when called:    3
  2109 ;; This function calls:
  2110 ;;		Nothing
  2111 ;; This function is called by:
  2112 ;;		_VAL
  2113 ;; This function uses a non-reentrant model
  2114 ;;
  2115                           
  2116                           
  2117                           ;psect for function ___wmul
  2118  067A                     ___wmul:
  2119  067A                     l1413:	
  2120                           ;incstack = 0
  2121                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2122                           
  2123  067A  1283               	bcf	3,5	;RP0=0, select bank0
  2124  067B  1303               	bcf	3,6	;RP1=0, select bank0
  2125  067C  01A9               	clrf	___wmul@product
  2126  067D  01AA               	clrf	___wmul@product+1
  2127  067E                     l1415:
  2128  067E  1C25               	btfss	___wmul@multiplier,0
  2129  067F  2E81               	goto	u661
  2130  0680  2E82               	goto	u660
  2131  0681                     u661:
  2132  0681  2E88               	goto	l321
  2133  0682                     u660:
  2134  0682                     l1417:
  2135  0682  0827               	movf	___wmul@multiplicand,w
  2136  0683  07A9               	addwf	___wmul@product,f
  2137  0684  1803               	skipnc
  2138  0685  0AAA               	incf	___wmul@product+1,f
  2139  0686  0828               	movf	___wmul@multiplicand+1,w
  2140  0687  07AA               	addwf	___wmul@product+1,f
  2141  0688                     l321:
  2142  0688  3001               	movlw	1
  2143  0689                     u675:
  2144  0689  1003               	clrc
  2145  068A  0DA7               	rlf	___wmul@multiplicand,f
  2146  068B  0DA8               	rlf	___wmul@multiplicand+1,f
  2147  068C  3EFF               	addlw	-1
  2148  068D  1D03               	skipz
  2149  068E  2E89               	goto	u675
  2150  068F                     l1419:
  2151  068F  3001               	movlw	1
  2152  0690                     u685:
  2153  0690  1003               	clrc
  2154  0691  0CA6               	rrf	___wmul@multiplier+1,f
  2155  0692  0CA5               	rrf	___wmul@multiplier,f
  2156  0693  3EFF               	addlw	-1
  2157  0694  1D03               	skipz
  2158  0695  2E90               	goto	u685
  2159  0696                     l1421:
  2160  0696  0825               	movf	___wmul@multiplier,w
  2161  0697  0426               	iorwf	___wmul@multiplier+1,w
  2162  0698  1D03               	btfss	3,2
  2163  0699  2E9B               	goto	u691
  2164  069A  2E9C               	goto	u690
  2165  069B                     u691:
  2166  069B  2E7E               	goto	l1415
  2167  069C                     u690:
  2168  069C                     l1423:
  2169  069C  082A               	movf	___wmul@product+1,w
  2170  069D  00A6               	movwf	?___wmul+1
  2171  069E  0829               	movf	___wmul@product,w
  2172  069F  00A5               	movwf	?___wmul
  2173  06A0                     l323:
  2174  06A0  0008               	return
  2175  06A1                     __end_of___wmul:
  2176                           
  2177                           	psect	text7
  2178  04AB                     __ptext7:	
  2179 ;; *************** function ___lwdiv *****************
  2180 ;; Defined at:
  2181 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  2182 ;; Parameters:    Size  Location     Type
  2183 ;;  divisor         2    5[BANK0 ] unsigned int 
  2184 ;;  dividend        2    7[BANK0 ] unsigned int 
  2185 ;; Auto vars:     Size  Location     Type
  2186 ;;  quotient        2   10[BANK0 ] unsigned int 
  2187 ;;  counter         1   12[BANK0 ] unsigned char 
  2188 ;; Return value:  Size  Location     Type
  2189 ;;                  2    5[BANK0 ] unsigned int 
  2190 ;; Registers used:
  2191 ;;		wreg, status,2, status,0
  2192 ;; Tracked objects:
  2193 ;;		On entry : 0/0
  2194 ;;		On exit  : 0/0
  2195 ;;		Unchanged: 0/0
  2196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2197 ;;      Params:         0       4       0       0       0
  2198 ;;      Locals:         0       3       0       0       0
  2199 ;;      Temps:          0       1       0       0       0
  2200 ;;      Totals:         0       8       0       0       0
  2201 ;;Total ram usage:        8 bytes
  2202 ;; Hardware stack levels used:    1
  2203 ;; Hardware stack levels required when called:    3
  2204 ;; This function calls:
  2205 ;;		Nothing
  2206 ;; This function is called by:
  2207 ;;		_VAL
  2208 ;; This function uses a non-reentrant model
  2209 ;;
  2210                           
  2211                           
  2212                           ;psect for function ___lwdiv
  2213  04AB                     ___lwdiv:
  2214  04AB                     l1427:	
  2215                           ;incstack = 0
  2216                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2217                           
  2218  04AB  1283               	bcf	3,5	;RP0=0, select bank0
  2219  04AC  1303               	bcf	3,6	;RP1=0, select bank0
  2220  04AD  01AA               	clrf	___lwdiv@quotient
  2221  04AE  01AB               	clrf	___lwdiv@quotient+1
  2222  04AF                     l1429:
  2223  04AF  0825               	movf	___lwdiv@divisor,w
  2224  04B0  0426               	iorwf	___lwdiv@divisor+1,w
  2225  04B1  1903               	btfsc	3,2
  2226  04B2  2CB4               	goto	u701
  2227  04B3  2CB5               	goto	u700
  2228  04B4                     u701:
  2229  04B4  2CEC               	goto	l1449
  2230  04B5                     u700:
  2231  04B5                     l1431:
  2232  04B5  01AC               	clrf	___lwdiv@counter
  2233  04B6  0AAC               	incf	___lwdiv@counter,f
  2234  04B7  2CC3               	goto	l1437
  2235  04B8                     l1433:
  2236  04B8  3001               	movlw	1
  2237  04B9                     u715:
  2238  04B9  1003               	clrc
  2239  04BA  0DA5               	rlf	___lwdiv@divisor,f
  2240  04BB  0DA6               	rlf	___lwdiv@divisor+1,f
  2241  04BC  3EFF               	addlw	-1
  2242  04BD  1D03               	skipz
  2243  04BE  2CB9               	goto	u715
  2244  04BF                     l1435:
  2245  04BF  3001               	movlw	1
  2246  04C0  00A9               	movwf	??___lwdiv
  2247  04C1  0829               	movf	??___lwdiv,w
  2248  04C2  07AC               	addwf	___lwdiv@counter,f
  2249  04C3                     l1437:
  2250  04C3  1FA6               	btfss	___lwdiv@divisor+1,7
  2251  04C4  2CC6               	goto	u721
  2252  04C5  2CC7               	goto	u720
  2253  04C6                     u721:
  2254  04C6  2CB8               	goto	l1433
  2255  04C7                     u720:
  2256  04C7                     l1439:
  2257  04C7  3001               	movlw	1
  2258  04C8                     u735:
  2259  04C8  1003               	clrc
  2260  04C9  0DAA               	rlf	___lwdiv@quotient,f
  2261  04CA  0DAB               	rlf	___lwdiv@quotient+1,f
  2262  04CB  3EFF               	addlw	-1
  2263  04CC  1D03               	skipz
  2264  04CD  2CC8               	goto	u735
  2265  04CE  0826               	movf	___lwdiv@divisor+1,w
  2266  04CF  0228               	subwf	___lwdiv@dividend+1,w
  2267  04D0  1D03               	skipz
  2268  04D1  2CD4               	goto	u745
  2269  04D2  0825               	movf	___lwdiv@divisor,w
  2270  04D3  0227               	subwf	___lwdiv@dividend,w
  2271  04D4                     u745:
  2272  04D4  1C03               	skipc
  2273  04D5  2CD7               	goto	u741
  2274  04D6  2CD8               	goto	u740
  2275  04D7                     u741:
  2276  04D7  2CDF               	goto	l1445
  2277  04D8                     u740:
  2278  04D8                     l1441:
  2279  04D8  0825               	movf	___lwdiv@divisor,w
  2280  04D9  02A7               	subwf	___lwdiv@dividend,f
  2281  04DA  0826               	movf	___lwdiv@divisor+1,w
  2282  04DB  1C03               	skipc
  2283  04DC  03A8               	decf	___lwdiv@dividend+1,f
  2284  04DD  02A8               	subwf	___lwdiv@dividend+1,f
  2285  04DE                     l1443:
  2286  04DE  142A               	bsf	___lwdiv@quotient,0
  2287  04DF                     l1445:
  2288  04DF  3001               	movlw	1
  2289  04E0                     u755:
  2290  04E0  1003               	clrc
  2291  04E1  0CA6               	rrf	___lwdiv@divisor+1,f
  2292  04E2  0CA5               	rrf	___lwdiv@divisor,f
  2293  04E3  3EFF               	addlw	-1
  2294  04E4  1D03               	skipz
  2295  04E5  2CE0               	goto	u755
  2296  04E6                     l1447:
  2297  04E6  3001               	movlw	1
  2298  04E7  02AC               	subwf	___lwdiv@counter,f
  2299  04E8  1D03               	btfss	3,2
  2300  04E9  2CEB               	goto	u761
  2301  04EA  2CEC               	goto	u760
  2302  04EB                     u761:
  2303  04EB  2CC7               	goto	l1439
  2304  04EC                     u760:
  2305  04EC                     l1449:
  2306  04EC  082B               	movf	___lwdiv@quotient+1,w
  2307  04ED  00A6               	movwf	?___lwdiv+1
  2308  04EE  082A               	movf	___lwdiv@quotient,w
  2309  04EF  00A5               	movwf	?___lwdiv
  2310  04F0                     l593:
  2311  04F0  0008               	return
  2312  04F1                     __end_of___lwdiv:
  2313                           
  2314                           	psect	text8
  2315  0651                     __ptext8:	
  2316 ;; *************** function _Lcd_Write_String *****************
  2317 ;; Defined at:
  2318 ;;		line 98 in file "LCD.c"
  2319 ;; Parameters:    Size  Location     Type
  2320 ;;  a               1    wreg     PTR unsigned char 
  2321 ;;		 -> STR_7(4), STR_6(4), STR_5(4), STR_4(7), 
  2322 ;;		 -> STR_3(7), STR_2(7), STR_1(20), 
  2323 ;; Auto vars:     Size  Location     Type
  2324 ;;  a               1   12[BANK0 ] PTR unsigned char 
  2325 ;;		 -> STR_7(4), STR_6(4), STR_5(4), STR_4(7), 
  2326 ;;		 -> STR_3(7), STR_2(7), STR_1(20), 
  2327 ;;  i               2   10[BANK0 ] int 
  2328 ;; Return value:  Size  Location     Type
  2329 ;;                  1    wreg      void 
  2330 ;; Registers used:
  2331 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2332 ;; Tracked objects:
  2333 ;;		On entry : 0/0
  2334 ;;		On exit  : 0/0
  2335 ;;		Unchanged: 0/0
  2336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2337 ;;      Params:         0       0       0       0       0
  2338 ;;      Locals:         0       3       0       0       0
  2339 ;;      Temps:          0       0       0       0       0
  2340 ;;      Totals:         0       3       0       0       0
  2341 ;;Total ram usage:        3 bytes
  2342 ;; Hardware stack levels used:    1
  2343 ;; Hardware stack levels required when called:    5
  2344 ;; This function calls:
  2345 ;;		_Lcd_Write_Char
  2346 ;; This function is called by:
  2347 ;;		_main
  2348 ;; This function uses a non-reentrant model
  2349 ;;
  2350                           
  2351                           
  2352                           ;psect for function _Lcd_Write_String
  2353  0651                     _Lcd_Write_String:
  2354                           
  2355                           ;incstack = 0
  2356                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2357                           ;Lcd_Write_String@a stored from wreg
  2358  0651  1283               	bcf	3,5	;RP0=0, select bank0
  2359  0652  1303               	bcf	3,6	;RP1=0, select bank0
  2360  0653  00AC               	movwf	Lcd_Write_String@a
  2361  0654                     l1565:
  2362                           
  2363                           ;LCD.c: 99:     int i;;LCD.c: 100:     for (i = 0; a[i] != '\0'; i++)
  2364  0654  01AA               	clrf	Lcd_Write_String@i
  2365  0655  01AB               	clrf	Lcd_Write_String@i+1
  2366  0656  2E6C               	goto	l1571
  2367  0657                     l1567:
  2368                           
  2369                           ;LCD.c: 101:         Lcd_Write_Char(a[i]);
  2370  0657  082A               	movf	Lcd_Write_String@i,w
  2371  0658  072C               	addwf	Lcd_Write_String@a,w
  2372  0659  0084               	movwf	4
  2373  065A  120A  118A  2572  120A  118A  	fcall	stringdir
  2374  065F  120A  118A  2535  120A  118A  	fcall	_Lcd_Write_Char
  2375  0664                     l1569:
  2376  0664  3001               	movlw	1
  2377  0665  1283               	bcf	3,5	;RP0=0, select bank0
  2378  0666  1303               	bcf	3,6	;RP1=0, select bank0
  2379  0667  07AA               	addwf	Lcd_Write_String@i,f
  2380  0668  1803               	skipnc
  2381  0669  0AAB               	incf	Lcd_Write_String@i+1,f
  2382  066A  3000               	movlw	0
  2383  066B  07AB               	addwf	Lcd_Write_String@i+1,f
  2384  066C                     l1571:
  2385  066C  082A               	movf	Lcd_Write_String@i,w
  2386  066D  072C               	addwf	Lcd_Write_String@a,w
  2387  066E  0084               	movwf	4
  2388  066F  120A  118A  2572  120A  118A  	fcall	stringdir
  2389  0674  3A00               	xorlw	0
  2390  0675  1D03               	skipz
  2391  0676  2E78               	goto	u931
  2392  0677  2E79               	goto	u930
  2393  0678                     u931:
  2394  0678  2E57               	goto	l1567
  2395  0679                     u930:
  2396  0679                     l174:
  2397  0679  0008               	return
  2398  067A                     __end_of_Lcd_Write_String:
  2399                           
  2400                           	psect	text9
  2401  0535                     __ptext9:	
  2402 ;; *************** function _Lcd_Write_Char *****************
  2403 ;; Defined at:
  2404 ;;		line 83 in file "LCD.c"
  2405 ;; Parameters:    Size  Location     Type
  2406 ;;  a               1    wreg     unsigned char 
  2407 ;; Auto vars:     Size  Location     Type
  2408 ;;  a               1    9[BANK0 ] unsigned char 
  2409 ;;  y               1    8[BANK0 ] unsigned char 
  2410 ;;  temp            1    7[BANK0 ] unsigned char 
  2411 ;; Return value:  Size  Location     Type
  2412 ;;                  1    wreg      void 
  2413 ;; Registers used:
  2414 ;;		wreg, status,2, status,0, pclath, cstack
  2415 ;; Tracked objects:
  2416 ;;		On entry : 0/0
  2417 ;;		On exit  : 0/0
  2418 ;;		Unchanged: 0/0
  2419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2420 ;;      Params:         0       0       0       0       0
  2421 ;;      Locals:         0       3       0       0       0
  2422 ;;      Temps:          0       1       0       0       0
  2423 ;;      Totals:         0       4       0       0       0
  2424 ;;Total ram usage:        4 bytes
  2425 ;; Hardware stack levels used:    1
  2426 ;; Hardware stack levels required when called:    4
  2427 ;; This function calls:
  2428 ;;		_Lcd_Port
  2429 ;; This function is called by:
  2430 ;;		_main
  2431 ;;		_Lcd_Write_String
  2432 ;; This function uses a non-reentrant model
  2433 ;;
  2434                           
  2435                           
  2436                           ;psect for function _Lcd_Write_Char
  2437  0535                     _Lcd_Write_Char:
  2438                           
  2439                           ;incstack = 0
  2440                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2441                           ;Lcd_Write_Char@a stored from wreg
  2442  0535  1283               	bcf	3,5	;RP0=0, select bank0
  2443  0536  1303               	bcf	3,6	;RP1=0, select bank0
  2444  0537  00A9               	movwf	Lcd_Write_Char@a
  2445  0538                     l1367:
  2446                           
  2447                           ;LCD.c: 84:     char temp, y;;LCD.c: 85:     temp = a & 0x0F;
  2448  0538  0829               	movf	Lcd_Write_Char@a,w
  2449  0539  390F               	andlw	15
  2450  053A  00A6               	movwf	??_Lcd_Write_Char
  2451  053B  0826               	movf	??_Lcd_Write_Char,w
  2452  053C  00A7               	movwf	Lcd_Write_Char@temp
  2453                           
  2454                           ;LCD.c: 86:     y = a & 0xF0;
  2455  053D  0829               	movf	Lcd_Write_Char@a,w
  2456  053E  39F0               	andlw	240
  2457  053F  00A6               	movwf	??_Lcd_Write_Char
  2458  0540  0826               	movf	??_Lcd_Write_Char,w
  2459  0541  00A8               	movwf	Lcd_Write_Char@y
  2460  0542                     l1369:
  2461                           
  2462                           ;LCD.c: 87:     PORTBbits.RB4 = 1;
  2463  0542  1606               	bsf	6,4	;volatile
  2464  0543                     l1371:
  2465                           
  2466                           ;LCD.c: 88:     Lcd_Port(y >> 4);
  2467  0543  0828               	movf	Lcd_Write_Char@y,w
  2468  0544  00A6               	movwf	??_Lcd_Write_Char
  2469  0545  3004               	movlw	4
  2470  0546                     u625:
  2471  0546  1003               	clrc
  2472  0547  0CA6               	rrf	??_Lcd_Write_Char,f
  2473  0548  3EFF               	addlw	-1
  2474  0549  1D03               	skipz
  2475  054A  2D46               	goto	u625
  2476  054B  0826               	movf	??_Lcd_Write_Char,w
  2477  054C  120A  118A  26EC  120A  118A  	fcall	_Lcd_Port
  2478  0551                     l1373:
  2479                           
  2480                           ;LCD.c: 89:     RB5 = 1;
  2481  0551  1283               	bcf	3,5	;RP0=0, select bank0
  2482  0552  1303               	bcf	3,6	;RP1=0, select bank0
  2483  0553  1686               	bsf	6,5	;volatile
  2484  0554                     l1375:
  2485                           
  2486                           ;LCD.c: 90:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2487  0554  3019               	movlw	25
  2488  0555  1283               	bcf	3,5	;RP0=0, select bank0
  2489  0556  1303               	bcf	3,6	;RP1=0, select bank0
  2490  0557  00A6               	movwf	??_Lcd_Write_Char
  2491  0558                     u1067:
  2492  0558  0BA6               	decfsz	??_Lcd_Write_Char,f
  2493  0559  2D58               	goto	u1067
  2494  055A  2D5B               	nop2
  2495  055B                     l1377:
  2496                           
  2497                           ;LCD.c: 91:     RB5 = 0;
  2498  055B  1283               	bcf	3,5	;RP0=0, select bank0
  2499  055C  1303               	bcf	3,6	;RP1=0, select bank0
  2500  055D  1286               	bcf	6,5	;volatile
  2501  055E                     l1379:
  2502                           
  2503                           ;LCD.c: 92:     Lcd_Port(temp);
  2504  055E  0827               	movf	Lcd_Write_Char@temp,w
  2505  055F  120A  118A  26EC  120A  118A  	fcall	_Lcd_Port
  2506  0564                     l1381:
  2507                           
  2508                           ;LCD.c: 93:     RB5 = 1;
  2509  0564  1283               	bcf	3,5	;RP0=0, select bank0
  2510  0565  1303               	bcf	3,6	;RP1=0, select bank0
  2511  0566  1686               	bsf	6,5	;volatile
  2512  0567                     l1383:
  2513                           
  2514                           ;LCD.c: 94:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2515  0567  3019               	movlw	25
  2516  0568  1283               	bcf	3,5	;RP0=0, select bank0
  2517  0569  1303               	bcf	3,6	;RP1=0, select bank0
  2518  056A  00A6               	movwf	??_Lcd_Write_Char
  2519  056B                     u1077:
  2520  056B  0BA6               	decfsz	??_Lcd_Write_Char,f
  2521  056C  2D6B               	goto	u1077
  2522  056D  2D6E               	nop2
  2523  056E                     l1385:
  2524                           
  2525                           ;LCD.c: 95:     RB5 = 0;
  2526  056E  1283               	bcf	3,5	;RP0=0, select bank0
  2527  056F  1303               	bcf	3,6	;RP1=0, select bank0
  2528  0570  1286               	bcf	6,5	;volatile
  2529  0571                     l168:
  2530  0571  0008               	return
  2531  0572                     __end_of_Lcd_Write_Char:
  2532                           
  2533                           	psect	text10
  2534  0453                     __ptext10:	
  2535 ;; *************** function _Lcd_Set_Cursor *****************
  2536 ;; Defined at:
  2537 ;;		line 48 in file "LCD.c"
  2538 ;; Parameters:    Size  Location     Type
  2539 ;;  a               1    wreg     unsigned char 
  2540 ;;  b               1    9[BANK0 ] unsigned char 
  2541 ;; Auto vars:     Size  Location     Type
  2542 ;;  a               1   12[BANK0 ] unsigned char 
  2543 ;;  temp            1   15[BANK0 ] unsigned char 
  2544 ;;  y               1   14[BANK0 ] unsigned char 
  2545 ;;  z               1   13[BANK0 ] unsigned char 
  2546 ;; Return value:  Size  Location     Type
  2547 ;;                  1    wreg      void 
  2548 ;; Registers used:
  2549 ;;		wreg, status,2, status,0, pclath, cstack
  2550 ;; Tracked objects:
  2551 ;;		On entry : 0/0
  2552 ;;		On exit  : 0/0
  2553 ;;		Unchanged: 0/0
  2554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2555 ;;      Params:         0       1       0       0       0
  2556 ;;      Locals:         0       4       0       0       0
  2557 ;;      Temps:          0       2       0       0       0
  2558 ;;      Totals:         0       7       0       0       0
  2559 ;;Total ram usage:        7 bytes
  2560 ;; Hardware stack levels used:    1
  2561 ;; Hardware stack levels required when called:    5
  2562 ;; This function calls:
  2563 ;;		_Lcd_Cmd
  2564 ;; This function is called by:
  2565 ;;		_main
  2566 ;; This function uses a non-reentrant model
  2567 ;;
  2568                           
  2569                           
  2570                           ;psect for function _Lcd_Set_Cursor
  2571  0453                     _Lcd_Set_Cursor:
  2572                           
  2573                           ;incstack = 0
  2574                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2575                           ;Lcd_Set_Cursor@a stored from wreg
  2576  0453  1283               	bcf	3,5	;RP0=0, select bank0
  2577  0454  1303               	bcf	3,6	;RP1=0, select bank0
  2578  0455  00AC               	movwf	Lcd_Set_Cursor@a
  2579  0456                     l1545:
  2580                           
  2581                           ;LCD.c: 49:     char temp, z, y;;LCD.c: 50:     if (a == 1) {
  2582  0456  032C               	decf	Lcd_Set_Cursor@a,w
  2583  0457  1D03               	btfss	3,2
  2584  0458  2C5A               	goto	u891
  2585  0459  2C5B               	goto	u890
  2586  045A                     u891:
  2587  045A  2C80               	goto	l1555
  2588  045B                     u890:
  2589  045B                     l1547:
  2590                           
  2591                           ;LCD.c: 51:         temp = 0x80 + b - 1;
  2592  045B  0829               	movf	Lcd_Set_Cursor@b,w
  2593  045C  3E7F               	addlw	127
  2594  045D  00AA               	movwf	??_Lcd_Set_Cursor
  2595  045E  082A               	movf	??_Lcd_Set_Cursor,w
  2596  045F  00AF               	movwf	Lcd_Set_Cursor@temp
  2597                           
  2598                           ;LCD.c: 52:         z = temp >> 4;
  2599  0460  082F               	movf	Lcd_Set_Cursor@temp,w
  2600  0461  00AA               	movwf	??_Lcd_Set_Cursor
  2601  0462  3004               	movlw	4
  2602  0463                     u905:
  2603  0463  1003               	clrc
  2604  0464  0CAA               	rrf	??_Lcd_Set_Cursor,f
  2605  0465  3EFF               	addlw	-1
  2606  0466  1D03               	skipz
  2607  0467  2C63               	goto	u905
  2608  0468  082A               	movf	??_Lcd_Set_Cursor,w
  2609  0469  00AB               	movwf	??_Lcd_Set_Cursor+1
  2610  046A  082B               	movf	??_Lcd_Set_Cursor+1,w
  2611  046B  00AD               	movwf	Lcd_Set_Cursor@z
  2612  046C                     l1549:
  2613                           
  2614                           ;LCD.c: 53:         y = temp & 0x0F;
  2615  046C  082F               	movf	Lcd_Set_Cursor@temp,w
  2616  046D  390F               	andlw	15
  2617  046E  00AA               	movwf	??_Lcd_Set_Cursor
  2618  046F  082A               	movf	??_Lcd_Set_Cursor,w
  2619  0470  00AE               	movwf	Lcd_Set_Cursor@y
  2620  0471                     l1551:
  2621                           
  2622                           ;LCD.c: 54:         Lcd_Cmd(z);
  2623  0471  082D               	movf	Lcd_Set_Cursor@z,w
  2624  0472  120A  118A  270C  120A  118A  	fcall	_Lcd_Cmd
  2625  0477                     l1553:
  2626                           
  2627                           ;LCD.c: 55:         Lcd_Cmd(y);
  2628  0477  1283               	bcf	3,5	;RP0=0, select bank0
  2629  0478  1303               	bcf	3,6	;RP1=0, select bank0
  2630  0479  082E               	movf	Lcd_Set_Cursor@y,w
  2631  047A  120A  118A  270C  120A  118A  	fcall	_Lcd_Cmd
  2632                           
  2633                           ;LCD.c: 56:     } else if (a == 2) {
  2634  047F  2CAA               	goto	l162
  2635  0480                     l1555:
  2636  0480  3002               	movlw	2
  2637  0481  062C               	xorwf	Lcd_Set_Cursor@a,w
  2638  0482  1D03               	btfss	3,2
  2639  0483  2C85               	goto	u911
  2640  0484  2C86               	goto	u910
  2641  0485                     u911:
  2642  0485  2CAA               	goto	l162
  2643  0486                     u910:
  2644  0486                     l1557:
  2645                           
  2646                           ;LCD.c: 57:         temp = 0xC0 + b - 1;
  2647  0486  0829               	movf	Lcd_Set_Cursor@b,w
  2648  0487  3EBF               	addlw	191
  2649  0488  00AA               	movwf	??_Lcd_Set_Cursor
  2650  0489  082A               	movf	??_Lcd_Set_Cursor,w
  2651  048A  00AF               	movwf	Lcd_Set_Cursor@temp
  2652                           
  2653                           ;LCD.c: 58:         z = temp >> 4;
  2654  048B  082F               	movf	Lcd_Set_Cursor@temp,w
  2655  048C  00AA               	movwf	??_Lcd_Set_Cursor
  2656  048D  3004               	movlw	4
  2657  048E                     u925:
  2658  048E  1003               	clrc
  2659  048F  0CAA               	rrf	??_Lcd_Set_Cursor,f
  2660  0490  3EFF               	addlw	-1
  2661  0491  1D03               	skipz
  2662  0492  2C8E               	goto	u925
  2663  0493  082A               	movf	??_Lcd_Set_Cursor,w
  2664  0494  00AB               	movwf	??_Lcd_Set_Cursor+1
  2665  0495  082B               	movf	??_Lcd_Set_Cursor+1,w
  2666  0496  00AD               	movwf	Lcd_Set_Cursor@z
  2667  0497                     l1559:
  2668                           
  2669                           ;LCD.c: 59:         y = temp & 0x0F;
  2670  0497  082F               	movf	Lcd_Set_Cursor@temp,w
  2671  0498  390F               	andlw	15
  2672  0499  00AA               	movwf	??_Lcd_Set_Cursor
  2673  049A  082A               	movf	??_Lcd_Set_Cursor,w
  2674  049B  00AE               	movwf	Lcd_Set_Cursor@y
  2675  049C                     l1561:
  2676                           
  2677                           ;LCD.c: 60:         Lcd_Cmd(z);
  2678  049C  082D               	movf	Lcd_Set_Cursor@z,w
  2679  049D  120A  118A  270C  120A  118A  	fcall	_Lcd_Cmd
  2680  04A2                     l1563:
  2681                           
  2682                           ;LCD.c: 61:         Lcd_Cmd(y);
  2683  04A2  1283               	bcf	3,5	;RP0=0, select bank0
  2684  04A3  1303               	bcf	3,6	;RP1=0, select bank0
  2685  04A4  082E               	movf	Lcd_Set_Cursor@y,w
  2686  04A5  120A  118A  270C  120A  118A  	fcall	_Lcd_Cmd
  2687  04AA                     l162:
  2688  04AA  0008               	return
  2689  04AB                     __end_of_Lcd_Set_Cursor:
  2690                           
  2691                           	psect	text11
  2692  03F1                     __ptext11:	
  2693 ;; *************** function _Lcd_Init *****************
  2694 ;; Defined at:
  2695 ;;		line 65 in file "LCD.c"
  2696 ;; Parameters:    Size  Location     Type
  2697 ;;		None
  2698 ;; Auto vars:     Size  Location     Type
  2699 ;;		None
  2700 ;; Return value:  Size  Location     Type
  2701 ;;                  1    wreg      void 
  2702 ;; Registers used:
  2703 ;;		wreg, status,2, status,0, pclath, cstack
  2704 ;; Tracked objects:
  2705 ;;		On entry : 0/0
  2706 ;;		On exit  : 0/0
  2707 ;;		Unchanged: 0/0
  2708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2709 ;;      Params:         0       0       0       0       0
  2710 ;;      Locals:         0       0       0       0       0
  2711 ;;      Temps:          0       2       0       0       0
  2712 ;;      Totals:         0       2       0       0       0
  2713 ;;Total ram usage:        2 bytes
  2714 ;; Hardware stack levels used:    1
  2715 ;; Hardware stack levels required when called:    5
  2716 ;; This function calls:
  2717 ;;		_Lcd_Cmd
  2718 ;;		_Lcd_Port
  2719 ;; This function is called by:
  2720 ;;		_main
  2721 ;; This function uses a non-reentrant model
  2722 ;;
  2723                           
  2724                           
  2725                           ;psect for function _Lcd_Init
  2726  03F1                     _Lcd_Init:
  2727  03F1                     l1533:	
  2728                           ;incstack = 0
  2729                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2730                           
  2731                           
  2732                           ;LCD.c: 66:     Lcd_Port(0x00);
  2733  03F1  3000               	movlw	0
  2734  03F2  120A  118A  26EC  120A  118A  	fcall	_Lcd_Port
  2735  03F7                     l1535:
  2736                           
  2737                           ;LCD.c: 67:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2738  03F7  3034               	movlw	52
  2739  03F8  1283               	bcf	3,5	;RP0=0, select bank0
  2740  03F9  1303               	bcf	3,6	;RP1=0, select bank0
  2741  03FA  00AA               	movwf	??_Lcd_Init+1
  2742  03FB  30F1               	movlw	241
  2743  03FC  00A9               	movwf	??_Lcd_Init
  2744  03FD                     u1087:
  2745  03FD  0BA9               	decfsz	??_Lcd_Init,f
  2746  03FE  2BFD               	goto	u1087
  2747  03FF  0BAA               	decfsz	??_Lcd_Init+1,f
  2748  0400  2BFD               	goto	u1087
  2749  0401                     l1537:
  2750                           
  2751                           ;LCD.c: 68:     Lcd_Cmd(0x03);
  2752  0401  3003               	movlw	3
  2753  0402  120A  118A  270C  120A  118A  	fcall	_Lcd_Cmd
  2754                           
  2755                           ;LCD.c: 69:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2756  0407  300D               	movlw	13
  2757  0408  1283               	bcf	3,5	;RP0=0, select bank0
  2758  0409  1303               	bcf	3,6	;RP1=0, select bank0
  2759  040A  00AA               	movwf	??_Lcd_Init+1
  2760  040B  30FB               	movlw	251
  2761  040C  00A9               	movwf	??_Lcd_Init
  2762  040D                     u1097:
  2763  040D  0BA9               	decfsz	??_Lcd_Init,f
  2764  040E  2C0D               	goto	u1097
  2765  040F  0BAA               	decfsz	??_Lcd_Init+1,f
  2766  0410  2C0D               	goto	u1097
  2767  0411                     l1539:
  2768                           
  2769                           ;LCD.c: 70:     Lcd_Cmd(0x03);
  2770  0411  3003               	movlw	3
  2771  0412  120A  118A  270C  120A  118A  	fcall	_Lcd_Cmd
  2772  0417                     l1541:
  2773                           
  2774                           ;LCD.c: 71:     _delay((unsigned long)((11)*(8000000/4000.0)));
  2775  0417  301D               	movlw	29
  2776  0418  1283               	bcf	3,5	;RP0=0, select bank0
  2777  0419  1303               	bcf	3,6	;RP1=0, select bank0
  2778  041A  00AA               	movwf	??_Lcd_Init+1
  2779  041B  3090               	movlw	144
  2780  041C  00A9               	movwf	??_Lcd_Init
  2781  041D                     u1107:
  2782  041D  0BA9               	decfsz	??_Lcd_Init,f
  2783  041E  2C1D               	goto	u1107
  2784  041F  0BAA               	decfsz	??_Lcd_Init+1,f
  2785  0420  2C1D               	goto	u1107
  2786  0421  0000               	nop
  2787                           
  2788                           ;LCD.c: 72:     Lcd_Cmd(0x03);
  2789  0422  3003               	movlw	3
  2790  0423  120A  118A  270C  120A  118A  	fcall	_Lcd_Cmd
  2791                           
  2792                           ;LCD.c: 74:     Lcd_Cmd(0x02);
  2793  0428  3002               	movlw	2
  2794  0429  120A  118A  270C  120A  118A  	fcall	_Lcd_Cmd
  2795                           
  2796                           ;LCD.c: 75:     Lcd_Cmd(0x02);
  2797  042E  3002               	movlw	2
  2798  042F  120A  118A  270C  120A  118A  	fcall	_Lcd_Cmd
  2799                           
  2800                           ;LCD.c: 76:     Lcd_Cmd(0x08);
  2801  0434  3008               	movlw	8
  2802  0435  120A  118A  270C  120A  118A  	fcall	_Lcd_Cmd
  2803                           
  2804                           ;LCD.c: 77:     Lcd_Cmd(0x00);
  2805  043A  3000               	movlw	0
  2806  043B  120A  118A  270C  120A  118A  	fcall	_Lcd_Cmd
  2807                           
  2808                           ;LCD.c: 78:     Lcd_Cmd(0x0C);
  2809  0440  300C               	movlw	12
  2810  0441  120A  118A  270C  120A  118A  	fcall	_Lcd_Cmd
  2811                           
  2812                           ;LCD.c: 79:     Lcd_Cmd(0x00);
  2813  0446  3000               	movlw	0
  2814  0447  120A  118A  270C  120A  118A  	fcall	_Lcd_Cmd
  2815                           
  2816                           ;LCD.c: 80:     Lcd_Cmd(0x06);
  2817  044C  3006               	movlw	6
  2818  044D  120A  118A  270C  120A  118A  	fcall	_Lcd_Cmd
  2819  0452                     l165:
  2820  0452  0008               	return
  2821  0453                     __end_of_Lcd_Init:
  2822                           
  2823                           	psect	text12
  2824  073B                     __ptext12:	
  2825 ;; *************** function _Lcd_Clear *****************
  2826 ;; Defined at:
  2827 ;;		line 43 in file "LCD.c"
  2828 ;; Parameters:    Size  Location     Type
  2829 ;;		None
  2830 ;; Auto vars:     Size  Location     Type
  2831 ;;		None
  2832 ;; Return value:  Size  Location     Type
  2833 ;;                  1    wreg      void 
  2834 ;; Registers used:
  2835 ;;		wreg, status,2, status,0, pclath, cstack
  2836 ;; Tracked objects:
  2837 ;;		On entry : 0/0
  2838 ;;		On exit  : 0/0
  2839 ;;		Unchanged: 0/0
  2840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2841 ;;      Params:         0       0       0       0       0
  2842 ;;      Locals:         0       0       0       0       0
  2843 ;;      Temps:          0       0       0       0       0
  2844 ;;      Totals:         0       0       0       0       0
  2845 ;;Total ram usage:        0 bytes
  2846 ;; Hardware stack levels used:    1
  2847 ;; Hardware stack levels required when called:    5
  2848 ;; This function calls:
  2849 ;;		_Lcd_Cmd
  2850 ;; This function is called by:
  2851 ;;		_main
  2852 ;; This function uses a non-reentrant model
  2853 ;;
  2854                           
  2855                           
  2856                           ;psect for function _Lcd_Clear
  2857  073B                     _Lcd_Clear:
  2858  073B                     l1543:	
  2859                           ;incstack = 0
  2860                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2861                           
  2862                           
  2863                           ;LCD.c: 44:     Lcd_Cmd(0);
  2864  073B  3000               	movlw	0
  2865  073C  120A  118A  270C  120A  118A  	fcall	_Lcd_Cmd
  2866                           
  2867                           ;LCD.c: 45:     Lcd_Cmd(1);
  2868  0741  3001               	movlw	1
  2869  0742  120A  118A  270C  120A  118A  	fcall	_Lcd_Cmd
  2870  0747                     l156:
  2871  0747  0008               	return
  2872  0748                     __end_of_Lcd_Clear:
  2873                           
  2874                           	psect	text13
  2875  070C                     __ptext13:	
  2876 ;; *************** function _Lcd_Cmd *****************
  2877 ;; Defined at:
  2878 ;;		line 35 in file "LCD.c"
  2879 ;; Parameters:    Size  Location     Type
  2880 ;;  a               1    wreg     unsigned char 
  2881 ;; Auto vars:     Size  Location     Type
  2882 ;;  a               1    8[BANK0 ] unsigned char 
  2883 ;; Return value:  Size  Location     Type
  2884 ;;                  1    wreg      void 
  2885 ;; Registers used:
  2886 ;;		wreg, status,2, status,0, pclath, cstack
  2887 ;; Tracked objects:
  2888 ;;		On entry : 0/0
  2889 ;;		On exit  : 0/0
  2890 ;;		Unchanged: 0/0
  2891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2892 ;;      Params:         0       0       0       0       0
  2893 ;;      Locals:         0       1       0       0       0
  2894 ;;      Temps:          0       2       0       0       0
  2895 ;;      Totals:         0       3       0       0       0
  2896 ;;Total ram usage:        3 bytes
  2897 ;; Hardware stack levels used:    1
  2898 ;; Hardware stack levels required when called:    4
  2899 ;; This function calls:
  2900 ;;		_Lcd_Port
  2901 ;; This function is called by:
  2902 ;;		_Lcd_Clear
  2903 ;;		_Lcd_Set_Cursor
  2904 ;;		_Lcd_Init
  2905 ;;		_Lcd_Shift_Right
  2906 ;;		_Lcd_Shift_Left
  2907 ;; This function uses a non-reentrant model
  2908 ;;
  2909                           
  2910                           
  2911                           ;psect for function _Lcd_Cmd
  2912  070C                     _Lcd_Cmd:
  2913                           
  2914                           ;incstack = 0
  2915                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2916                           ;Lcd_Cmd@a stored from wreg
  2917  070C  1283               	bcf	3,5	;RP0=0, select bank0
  2918  070D  1303               	bcf	3,6	;RP1=0, select bank0
  2919  070E  00A8               	movwf	Lcd_Cmd@a
  2920  070F                     l1399:
  2921                           
  2922                           ;LCD.c: 36:     PORTBbits.RB4 = 0;
  2923  070F  1206               	bcf	6,4	;volatile
  2924  0710                     l1401:
  2925                           
  2926                           ;LCD.c: 37:     Lcd_Port(a);
  2927  0710  0828               	movf	Lcd_Cmd@a,w
  2928  0711  120A  118A  26EC  120A  118A  	fcall	_Lcd_Port
  2929  0716                     l1403:
  2930                           
  2931                           ;LCD.c: 38:     RB5 = 1;
  2932  0716  1283               	bcf	3,5	;RP0=0, select bank0
  2933  0717  1303               	bcf	3,6	;RP1=0, select bank0
  2934  0718  1686               	bsf	6,5	;volatile
  2935  0719                     l1405:
  2936                           
  2937                           ;LCD.c: 39:     _delay((unsigned long)((4)*(8000000/4000.0)));
  2938  0719  300B               	movlw	11
  2939  071A  1283               	bcf	3,5	;RP0=0, select bank0
  2940  071B  1303               	bcf	3,6	;RP1=0, select bank0
  2941  071C  00A7               	movwf	??_Lcd_Cmd+1
  2942  071D  3061               	movlw	97
  2943  071E  00A6               	movwf	??_Lcd_Cmd
  2944  071F                     u1117:
  2945  071F  0BA6               	decfsz	??_Lcd_Cmd,f
  2946  0720  2F1F               	goto	u1117
  2947  0721  0BA7               	decfsz	??_Lcd_Cmd+1,f
  2948  0722  2F1F               	goto	u1117
  2949  0723  2F24               	nop2
  2950  0724                     l1407:
  2951                           
  2952                           ;LCD.c: 40:     RB5 = 0;
  2953  0724  1283               	bcf	3,5	;RP0=0, select bank0
  2954  0725  1303               	bcf	3,6	;RP1=0, select bank0
  2955  0726  1286               	bcf	6,5	;volatile
  2956  0727                     l153:
  2957  0727  0008               	return
  2958  0728                     __end_of_Lcd_Cmd:
  2959                           
  2960                           	psect	text14
  2961  06EC                     __ptext14:	
  2962 ;; *************** function _Lcd_Port *****************
  2963 ;; Defined at:
  2964 ;;		line 13 in file "LCD.c"
  2965 ;; Parameters:    Size  Location     Type
  2966 ;;  a               1    wreg     unsigned char 
  2967 ;; Auto vars:     Size  Location     Type
  2968 ;;  a               1    5[BANK0 ] unsigned char 
  2969 ;; Return value:  Size  Location     Type
  2970 ;;                  1    wreg      void 
  2971 ;; Registers used:
  2972 ;;		wreg
  2973 ;; Tracked objects:
  2974 ;;		On entry : 0/0
  2975 ;;		On exit  : 0/0
  2976 ;;		Unchanged: 0/0
  2977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2978 ;;      Params:         0       0       0       0       0
  2979 ;;      Locals:         0       1       0       0       0
  2980 ;;      Temps:          0       0       0       0       0
  2981 ;;      Totals:         0       1       0       0       0
  2982 ;;Total ram usage:        1 bytes
  2983 ;; Hardware stack levels used:    1
  2984 ;; Hardware stack levels required when called:    3
  2985 ;; This function calls:
  2986 ;;		Nothing
  2987 ;; This function is called by:
  2988 ;;		_Lcd_Cmd
  2989 ;;		_Lcd_Init
  2990 ;;		_Lcd_Write_Char
  2991 ;; This function uses a non-reentrant model
  2992 ;;
  2993                           
  2994                           
  2995                           ;psect for function _Lcd_Port
  2996  06EC                     _Lcd_Port:
  2997                           
  2998                           ;incstack = 0
  2999                           ; Regs used in _Lcd_Port: [wreg]
  3000                           ;Lcd_Port@a stored from wreg
  3001  06EC  1283               	bcf	3,5	;RP0=0, select bank0
  3002  06ED  1303               	bcf	3,6	;RP1=0, select bank0
  3003  06EE  00A5               	movwf	Lcd_Port@a
  3004  06EF                     l1323:
  3005                           
  3006                           ;LCD.c: 14:     if (a & 1)
  3007  06EF  1C25               	btfss	Lcd_Port@a,0
  3008  06F0  2EF2               	goto	u511
  3009  06F1  2EF3               	goto	u510
  3010  06F2                     u511:
  3011  06F2  2EF5               	goto	l142
  3012  06F3                     u510:
  3013  06F3                     l1325:
  3014                           
  3015                           ;LCD.c: 15:         RB0 = 1;
  3016  06F3  1406               	bsf	6,0	;volatile
  3017  06F4  2EF6               	goto	l143
  3018  06F5                     l142:	
  3019                           ;LCD.c: 16:     else
  3020                           
  3021                           
  3022                           ;LCD.c: 17:         RB0 = 0;
  3023  06F5  1006               	bcf	6,0	;volatile
  3024  06F6                     l143:
  3025                           
  3026                           ;LCD.c: 19:     if (a & 2)
  3027  06F6  1CA5               	btfss	Lcd_Port@a,1
  3028  06F7  2EF9               	goto	u521
  3029  06F8  2EFA               	goto	u520
  3030  06F9                     u521:
  3031  06F9  2EFC               	goto	l144
  3032  06FA                     u520:
  3033  06FA                     l1327:
  3034                           
  3035                           ;LCD.c: 20:         RB1 = 1;
  3036  06FA  1486               	bsf	6,1	;volatile
  3037  06FB  2EFD               	goto	l145
  3038  06FC                     l144:	
  3039                           ;LCD.c: 21:     else
  3040                           
  3041                           
  3042                           ;LCD.c: 22:         RB1 = 0;
  3043  06FC  1086               	bcf	6,1	;volatile
  3044  06FD                     l145:
  3045                           
  3046                           ;LCD.c: 24:     if (a & 4)
  3047  06FD  1D25               	btfss	Lcd_Port@a,2
  3048  06FE  2F00               	goto	u531
  3049  06FF  2F01               	goto	u530
  3050  0700                     u531:
  3051  0700  2F03               	goto	l146
  3052  0701                     u530:
  3053  0701                     l1329:
  3054                           
  3055                           ;LCD.c: 25:         RB2 = 1;
  3056  0701  1506               	bsf	6,2	;volatile
  3057  0702  2F04               	goto	l147
  3058  0703                     l146:	
  3059                           ;LCD.c: 26:     else
  3060                           
  3061                           
  3062                           ;LCD.c: 27:         RB2 = 0;
  3063  0703  1106               	bcf	6,2	;volatile
  3064  0704                     l147:
  3065                           
  3066                           ;LCD.c: 29:     if (a & 8)
  3067  0704  1DA5               	btfss	Lcd_Port@a,3
  3068  0705  2F07               	goto	u541
  3069  0706  2F08               	goto	u540
  3070  0707                     u541:
  3071  0707  2F0A               	goto	l148
  3072  0708                     u540:
  3073  0708                     l1331:
  3074                           
  3075                           ;LCD.c: 30:         RB3 = 1;
  3076  0708  1586               	bsf	6,3	;volatile
  3077  0709  2F0B               	goto	l150
  3078  070A                     l148:	
  3079                           ;LCD.c: 31:     else
  3080                           
  3081                           
  3082                           ;LCD.c: 32:         RB3 = 0;
  3083  070A  1186               	bcf	6,3	;volatile
  3084  070B                     l150:
  3085  070B  0008               	return
  3086  070C                     __end_of_Lcd_Port:
  3087                           
  3088                           	psect	text15
  3089  0755                     __ptext15:	
  3090 ;; *************** function _I2C_Master_Write *****************
  3091 ;; Defined at:
  3092 ;;		line 65 in file "I2C.c"
  3093 ;; Parameters:    Size  Location     Type
  3094 ;;  d               2    5[BANK0 ] unsigned int 
  3095 ;; Auto vars:     Size  Location     Type
  3096 ;;		None
  3097 ;; Return value:  Size  Location     Type
  3098 ;;                  1    wreg      void 
  3099 ;; Registers used:
  3100 ;;		wreg, status,2, status,0, pclath, cstack
  3101 ;; Tracked objects:
  3102 ;;		On entry : 0/0
  3103 ;;		On exit  : 0/0
  3104 ;;		Unchanged: 0/0
  3105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3106 ;;      Params:         0       2       0       0       0
  3107 ;;      Locals:         0       0       0       0       0
  3108 ;;      Temps:          0       0       0       0       0
  3109 ;;      Totals:         0       2       0       0       0
  3110 ;;Total ram usage:        2 bytes
  3111 ;; Hardware stack levels used:    1
  3112 ;; Hardware stack levels required when called:    4
  3113 ;; This function calls:
  3114 ;;		_I2C_Master_Wait
  3115 ;; This function is called by:
  3116 ;;		_main
  3117 ;; This function uses a non-reentrant model
  3118 ;;
  3119                           
  3120                           
  3121                           ;psect for function _I2C_Master_Write
  3122  0755                     _I2C_Master_Write:
  3123  0755                     l1577:	
  3124                           ;incstack = 0
  3125                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  3126                           
  3127                           
  3128                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  3129  0755  120A  118A  2748  120A  118A  	fcall	_I2C_Master_Wait
  3130  075A                     l1579:
  3131                           
  3132                           ;I2C.c: 68:     SSPBUF = d;
  3133  075A  1283               	bcf	3,5	;RP0=0, select bank0
  3134  075B  1303               	bcf	3,6	;RP1=0, select bank0
  3135  075C  0825               	movf	I2C_Master_Write@d,w
  3136  075D  0093               	movwf	19	;volatile
  3137  075E                     l227:
  3138  075E  0008               	return
  3139  075F                     __end_of_I2C_Master_Write:
  3140                           
  3141                           	psect	text16
  3142  075F                     __ptext16:	
  3143 ;; *************** function _I2C_Master_Stop *****************
  3144 ;; Defined at:
  3145 ;;		line 55 in file "I2C.c"
  3146 ;; Parameters:    Size  Location     Type
  3147 ;;		None
  3148 ;; Auto vars:     Size  Location     Type
  3149 ;;		None
  3150 ;; Return value:  Size  Location     Type
  3151 ;;                  1    wreg      void 
  3152 ;; Registers used:
  3153 ;;		wreg, status,2, status,0, pclath, cstack
  3154 ;; Tracked objects:
  3155 ;;		On entry : 0/0
  3156 ;;		On exit  : 0/0
  3157 ;;		Unchanged: 0/0
  3158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3159 ;;      Params:         0       0       0       0       0
  3160 ;;      Locals:         0       0       0       0       0
  3161 ;;      Temps:          0       0       0       0       0
  3162 ;;      Totals:         0       0       0       0       0
  3163 ;;Total ram usage:        0 bytes
  3164 ;; Hardware stack levels used:    1
  3165 ;; Hardware stack levels required when called:    4
  3166 ;; This function calls:
  3167 ;;		_I2C_Master_Wait
  3168 ;; This function is called by:
  3169 ;;		_main
  3170 ;; This function uses a non-reentrant model
  3171 ;;
  3172                           
  3173                           
  3174                           ;psect for function _I2C_Master_Stop
  3175  075F                     _I2C_Master_Stop:
  3176  075F                     l1581:	
  3177                           ;incstack = 0
  3178                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  3179                           
  3180                           
  3181                           ;I2C.c: 57:     I2C_Master_Wait();
  3182  075F  120A  118A  2748  120A  118A  	fcall	_I2C_Master_Wait
  3183  0764                     l1583:
  3184                           
  3185                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  3186  0764  1683               	bsf	3,5	;RP0=1, select bank1
  3187  0765  1303               	bcf	3,6	;RP1=0, select bank1
  3188  0766  1511               	bsf	17,2	;volatile
  3189  0767                     l224:
  3190  0767  0008               	return
  3191  0768                     __end_of_I2C_Master_Stop:
  3192                           
  3193                           	psect	text17
  3194  0768                     __ptext17:	
  3195 ;; *************** function _I2C_Master_Start *****************
  3196 ;; Defined at:
  3197 ;;		line 39 in file "I2C.c"
  3198 ;; Parameters:    Size  Location     Type
  3199 ;;		None
  3200 ;; Auto vars:     Size  Location     Type
  3201 ;;		None
  3202 ;; Return value:  Size  Location     Type
  3203 ;;                  1    wreg      void 
  3204 ;; Registers used:
  3205 ;;		wreg, status,2, status,0, pclath, cstack
  3206 ;; Tracked objects:
  3207 ;;		On entry : 0/0
  3208 ;;		On exit  : 0/0
  3209 ;;		Unchanged: 0/0
  3210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3211 ;;      Params:         0       0       0       0       0
  3212 ;;      Locals:         0       0       0       0       0
  3213 ;;      Temps:          0       0       0       0       0
  3214 ;;      Totals:         0       0       0       0       0
  3215 ;;Total ram usage:        0 bytes
  3216 ;; Hardware stack levels used:    1
  3217 ;; Hardware stack levels required when called:    4
  3218 ;; This function calls:
  3219 ;;		_I2C_Master_Wait
  3220 ;; This function is called by:
  3221 ;;		_main
  3222 ;; This function uses a non-reentrant model
  3223 ;;
  3224                           
  3225                           
  3226                           ;psect for function _I2C_Master_Start
  3227  0768                     _I2C_Master_Start:
  3228  0768                     l1573:	
  3229                           ;incstack = 0
  3230                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  3231                           
  3232                           
  3233                           ;I2C.c: 41:     I2C_Master_Wait();
  3234  0768  120A  118A  2748  120A  118A  	fcall	_I2C_Master_Wait
  3235  076D                     l1575:
  3236                           
  3237                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  3238  076D  1683               	bsf	3,5	;RP0=1, select bank1
  3239  076E  1303               	bcf	3,6	;RP1=0, select bank1
  3240  076F  1411               	bsf	17,0	;volatile
  3241  0770                     l218:
  3242  0770  0008               	return
  3243  0771                     __end_of_I2C_Master_Start:
  3244                           
  3245                           	psect	text18
  3246  061F                     __ptext18:	
  3247 ;; *************** function _I2C_Master_Read *****************
  3248 ;; Defined at:
  3249 ;;		line 74 in file "I2C.c"
  3250 ;; Parameters:    Size  Location     Type
  3251 ;;  a               2    5[BANK0 ] unsigned short 
  3252 ;; Auto vars:     Size  Location     Type
  3253 ;;  temp            2    9[BANK0 ] unsigned short 
  3254 ;; Return value:  Size  Location     Type
  3255 ;;                  2    5[BANK0 ] unsigned short 
  3256 ;; Registers used:
  3257 ;;		wreg, status,2, status,0, pclath, cstack
  3258 ;; Tracked objects:
  3259 ;;		On entry : 0/0
  3260 ;;		On exit  : 0/0
  3261 ;;		Unchanged: 0/0
  3262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3263 ;;      Params:         0       2       0       0       0
  3264 ;;      Locals:         0       2       0       0       0
  3265 ;;      Temps:          0       2       0       0       0
  3266 ;;      Totals:         0       6       0       0       0
  3267 ;;Total ram usage:        6 bytes
  3268 ;; Hardware stack levels used:    1
  3269 ;; Hardware stack levels required when called:    4
  3270 ;; This function calls:
  3271 ;;		_I2C_Master_Wait
  3272 ;; This function is called by:
  3273 ;;		_main
  3274 ;; This function uses a non-reentrant model
  3275 ;;
  3276                           
  3277                           
  3278                           ;psect for function _I2C_Master_Read
  3279  061F                     _I2C_Master_Read:
  3280  061F                     l1585:	
  3281                           ;incstack = 0
  3282                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  3283                           
  3284                           
  3285                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  3286  061F  120A  118A  2748  120A  118A  	fcall	_I2C_Master_Wait
  3287  0624                     l1587:
  3288                           
  3289                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  3290  0624  1683               	bsf	3,5	;RP0=1, select bank1
  3291  0625  1303               	bcf	3,6	;RP1=0, select bank1
  3292  0626  1591               	bsf	17,3	;volatile
  3293                           
  3294                           ;I2C.c: 79:     I2C_Master_Wait();
  3295  0627  120A  118A  2748  120A  118A  	fcall	_I2C_Master_Wait
  3296  062C                     l1589:
  3297                           
  3298                           ;I2C.c: 80:     temp = SSPBUF;
  3299  062C  1283               	bcf	3,5	;RP0=0, select bank0
  3300  062D  1303               	bcf	3,6	;RP1=0, select bank0
  3301  062E  0813               	movf	19,w	;volatile
  3302  062F  00A7               	movwf	??_I2C_Master_Read
  3303  0630  01A8               	clrf	??_I2C_Master_Read+1
  3304  0631  0827               	movf	??_I2C_Master_Read,w
  3305  0632  00A9               	movwf	I2C_Master_Read@temp
  3306  0633  0828               	movf	??_I2C_Master_Read+1,w
  3307  0634  00AA               	movwf	I2C_Master_Read@temp+1
  3308  0635                     l1591:
  3309                           
  3310                           ;I2C.c: 81:     I2C_Master_Wait();
  3311  0635  120A  118A  2748  120A  118A  	fcall	_I2C_Master_Wait
  3312  063A                     l1593:
  3313                           
  3314                           ;I2C.c: 82:     if(a == 1){
  3315  063A  1283               	bcf	3,5	;RP0=0, select bank0
  3316  063B  1303               	bcf	3,6	;RP1=0, select bank0
  3317  063C  0325               	decf	I2C_Master_Read@a,w
  3318  063D  0426               	iorwf	I2C_Master_Read@a+1,w
  3319  063E  1D03               	btfss	3,2
  3320  063F  2E41               	goto	u941
  3321  0640  2E42               	goto	u940
  3322  0641                     u941:
  3323  0641  2E46               	goto	l230
  3324  0642                     u940:
  3325  0642                     l1595:
  3326                           
  3327                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  3328  0642  1683               	bsf	3,5	;RP0=1, select bank1
  3329  0643  1303               	bcf	3,6	;RP1=0, select bank1
  3330  0644  1291               	bcf	17,5	;volatile
  3331                           
  3332                           ;I2C.c: 84:     }else{
  3333  0645  2E49               	goto	l231
  3334  0646                     l230:
  3335                           
  3336                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  3337  0646  1683               	bsf	3,5	;RP0=1, select bank1
  3338  0647  1303               	bcf	3,6	;RP1=0, select bank1
  3339  0648  1691               	bsf	17,5	;volatile
  3340  0649                     l231:	
  3341                           ;I2C.c: 86:     }
  3342                           
  3343                           
  3344                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  3345  0649  1611               	bsf	17,4	;volatile
  3346  064A                     l1597:
  3347                           
  3348                           ;I2C.c: 88:     return temp;
  3349  064A  1283               	bcf	3,5	;RP0=0, select bank0
  3350  064B  1303               	bcf	3,6	;RP1=0, select bank0
  3351  064C  082A               	movf	I2C_Master_Read@temp+1,w
  3352  064D  00A6               	movwf	?_I2C_Master_Read+1
  3353  064E  0829               	movf	I2C_Master_Read@temp,w
  3354  064F  00A5               	movwf	?_I2C_Master_Read
  3355  0650                     l232:
  3356  0650  0008               	return
  3357  0651                     __end_of_I2C_Master_Read:
  3358                           
  3359                           	psect	text19
  3360  0748                     __ptext19:	
  3361 ;; *************** function _I2C_Master_Wait *****************
  3362 ;; Defined at:
  3363 ;;		line 32 in file "I2C.c"
  3364 ;; Parameters:    Size  Location     Type
  3365 ;;		None
  3366 ;; Auto vars:     Size  Location     Type
  3367 ;;		None
  3368 ;; Return value:  Size  Location     Type
  3369 ;;                  1    wreg      void 
  3370 ;; Registers used:
  3371 ;;		wreg, status,2
  3372 ;; Tracked objects:
  3373 ;;		On entry : 0/0
  3374 ;;		On exit  : 0/0
  3375 ;;		Unchanged: 0/0
  3376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3377 ;;      Params:         0       0       0       0       0
  3378 ;;      Locals:         0       0       0       0       0
  3379 ;;      Temps:          0       0       0       0       0
  3380 ;;      Totals:         0       0       0       0       0
  3381 ;;Total ram usage:        0 bytes
  3382 ;; Hardware stack levels used:    1
  3383 ;; Hardware stack levels required when called:    3
  3384 ;; This function calls:
  3385 ;;		Nothing
  3386 ;; This function is called by:
  3387 ;;		_I2C_Master_Start
  3388 ;;		_I2C_Master_Stop
  3389 ;;		_I2C_Master_Write
  3390 ;;		_I2C_Master_Read
  3391 ;;		_I2C_Master_RepeatedStart
  3392 ;; This function uses a non-reentrant model
  3393 ;;
  3394                           
  3395                           
  3396                           ;psect for function _I2C_Master_Wait
  3397  0748                     _I2C_Master_Wait:
  3398  0748                     l1409:	
  3399                           ;incstack = 0
  3400                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3401                           
  3402  0748                     l212:	
  3403                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3404                           
  3405  0748  1683               	bsf	3,5	;RP0=1, select bank1
  3406  0749  1303               	bcf	3,6	;RP1=0, select bank1
  3407  074A  1914               	btfsc	20,2	;volatile
  3408  074B  2F4D               	goto	u641
  3409  074C  2F4E               	goto	u640
  3410  074D                     u641:
  3411  074D  2F48               	goto	l212
  3412  074E                     u640:
  3413  074E                     l1411:
  3414  074E  0811               	movf	17,w	;volatile
  3415  074F  391F               	andlw	31
  3416  0750  1D03               	btfss	3,2
  3417  0751  2F53               	goto	u651
  3418  0752  2F54               	goto	u650
  3419  0753                     u651:
  3420  0753  2F48               	goto	l212
  3421  0754                     u650:
  3422  0754                     l215:
  3423  0754  0008               	return
  3424  0755                     __end_of_I2C_Master_Wait:
  3425                           
  3426                           	psect	text20
  3427  01EF                     __ptext20:	
  3428 ;; *************** function _isr *****************
  3429 ;; Defined at:
  3430 ;;		line 55 in file "main.c"
  3431 ;; Parameters:    Size  Location     Type
  3432 ;;		None
  3433 ;; Auto vars:     Size  Location     Type
  3434 ;;		None
  3435 ;; Return value:  Size  Location     Type
  3436 ;;                  1    wreg      void 
  3437 ;; Registers used:
  3438 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3439 ;; Tracked objects:
  3440 ;;		On entry : 0/0
  3441 ;;		On exit  : 0/0
  3442 ;;		Unchanged: 0/0
  3443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3444 ;;      Params:         0       0       0       0       0
  3445 ;;      Locals:         0       0       0       0       0
  3446 ;;      Temps:          0       5       0       0       0
  3447 ;;      Totals:         0       5       0       0       0
  3448 ;;Total ram usage:        5 bytes
  3449 ;; Hardware stack levels used:    1
  3450 ;; Hardware stack levels required when called:    2
  3451 ;; This function calls:
  3452 ;;		_EUSART_ENVIAR
  3453 ;;		i1_VAL
  3454 ;; This function is called by:
  3455 ;;		Interrupt level 1
  3456 ;; This function uses a non-reentrant model
  3457 ;;
  3458                           
  3459                           
  3460                           ;psect for function _isr
  3461  01EF                     _isr:
  3462  01EF                     i1l1617:
  3463                           
  3464                           ;main.c: 56:     (INTCONbits.GIE = 0);
  3465  01EF  138B               	bcf	11,7	;volatile
  3466                           
  3467                           ;main.c: 57:     if (PIR1bits.RCIF){
  3468  01F0  1E8C               	btfss	12,5	;volatile
  3469  01F1  29F3               	goto	u95_21
  3470  01F2  29F4               	goto	u95_20
  3471  01F3                     u95_21:
  3472  01F3  2A99               	goto	i1l96
  3473  01F4                     u95_20:
  3474  01F4                     i1l1619:
  3475                           
  3476                           ;main.c: 58:         if (RCREG >= 65 && RCREG <= 67 ){
  3477  01F4  3041               	movlw	65
  3478  01F5  021A               	subwf	26,w	;volatile
  3479  01F6  1C03               	skipc
  3480  01F7  29F9               	goto	u96_21
  3481  01F8  29FA               	goto	u96_20
  3482  01F9                     u96_21:
  3483  01F9  2A99               	goto	i1l96
  3484  01FA                     u96_20:
  3485  01FA                     i1l1621:
  3486  01FA  3044               	movlw	68
  3487  01FB  021A               	subwf	26,w	;volatile
  3488  01FC  1803               	skipnc
  3489  01FD  29FF               	goto	u97_21
  3490  01FE  2A00               	goto	u97_20
  3491  01FF                     u97_21:
  3492  01FF  2A99               	goto	i1l96
  3493  0200                     u97_20:
  3494  0200  2A86               	goto	i1l1649
  3495  0201                     i1l1625:
  3496                           
  3497                           ;main.c: 62:                     VAL(VALOR_PESO);
  3498  0201  0840               	movf	_VALOR_PESO,w
  3499  0202  00A0               	movwf	??_isr
  3500  0203  01A1               	clrf	??_isr+1
  3501  0204  0820               	movf	??_isr,w
  3502  0205  00F8               	movwf	i1VAL@variable
  3503  0206  0821               	movf	??_isr+1,w
  3504  0207  00F9               	movwf	i1VAL@variable+1
  3505  0208  120A  118A  2319  120A  118A  	fcall	i1_VAL
  3506                           
  3507                           ;main.c: 63:                     EUSART_ENVIAR(POS1);
  3508  020D  1283               	bcf	3,5	;RP0=0, select bank0
  3509  020E  1303               	bcf	3,6	;RP1=0, select bank0
  3510  020F  0843               	movf	_POS1,w
  3511  0210  120A  118A  2728  120A  118A  	fcall	_EUSART_ENVIAR
  3512  0215                     i1l1627:
  3513                           
  3514                           ;main.c: 64:                     _delay((unsigned long)((200)*(8000000/4000000.0)));
  3515  0215  3084               	movlw	132
  3516  0216  1283               	bcf	3,5	;RP0=0, select bank0
  3517  0217  1303               	bcf	3,6	;RP1=0, select bank0
  3518  0218  00A0               	movwf	??_isr
  3519  0219                     u112_27:
  3520  0219  0BA0               	decfsz	??_isr,f
  3521  021A  2A19               	goto	u112_27
  3522  021B  0000               	nop
  3523  021C                     i1l1629:
  3524                           
  3525                           ;main.c: 65:                     EUSART_ENVIAR(POS2);
  3526  021C  1283               	bcf	3,5	;RP0=0, select bank0
  3527  021D  1303               	bcf	3,6	;RP1=0, select bank0
  3528  021E  0842               	movf	_POS2,w
  3529  021F  120A  118A  2728  120A  118A  	fcall	_EUSART_ENVIAR
  3530                           
  3531                           ;main.c: 66:                     _delay((unsigned long)((200)*(8000000/4000000.0)));
  3532  0224  3084               	movlw	132
  3533  0225  1283               	bcf	3,5	;RP0=0, select bank0
  3534  0226  1303               	bcf	3,6	;RP1=0, select bank0
  3535  0227  00A0               	movwf	??_isr
  3536  0228                     u113_27:
  3537  0228  0BA0               	decfsz	??_isr,f
  3538  0229  2A28               	goto	u113_27
  3539  022A  0000               	nop
  3540  022B                     i1l1631:
  3541                           
  3542                           ;main.c: 67:                     EUSART_ENVIAR(POS3);
  3543  022B  1283               	bcf	3,5	;RP0=0, select bank0
  3544  022C  1303               	bcf	3,6	;RP1=0, select bank0
  3545  022D  0841               	movf	_POS3,w
  3546  022E  120A  118A  2728  120A  118A  	fcall	_EUSART_ENVIAR
  3547  0233                     i1l1633:
  3548                           
  3549                           ;main.c: 68:                     _delay((unsigned long)((200)*(8000000/4000000.0)));
  3550  0233  3084               	movlw	132
  3551  0234  1283               	bcf	3,5	;RP0=0, select bank0
  3552  0235  1303               	bcf	3,6	;RP1=0, select bank0
  3553  0236  00A0               	movwf	??_isr
  3554  0237                     u114_27:
  3555  0237  0BA0               	decfsz	??_isr,f
  3556  0238  2A37               	goto	u114_27
  3557  0239  0000               	nop
  3558                           
  3559                           ;main.c: 69:                     EUSART_ENVIAR(13);
  3560  023A  300D               	movlw	13
  3561  023B  120A  118A  2728  120A  118A  	fcall	_EUSART_ENVIAR
  3562  0240                     i1l1635:
  3563                           
  3564                           ;main.c: 70:                     _delay((unsigned long)((200)*(8000000/4000000.0)));
  3565  0240  3084               	movlw	132
  3566  0241  1283               	bcf	3,5	;RP0=0, select bank0
  3567  0242  1303               	bcf	3,6	;RP1=0, select bank0
  3568  0243  00A0               	movwf	??_isr
  3569  0244                     u115_27:
  3570  0244  0BA0               	decfsz	??_isr,f
  3571  0245  2A44               	goto	u115_27
  3572  0246  0000               	nop
  3573                           
  3574                           ;main.c: 71:                     break;
  3575  0247  2A99               	goto	i1l96
  3576  0248                     i1l1637:
  3577                           
  3578                           ;main.c: 73:                      VAL(COLOR);
  3579  0248  083E               	movf	_COLOR,w
  3580  0249  00A0               	movwf	??_isr
  3581  024A  01A1               	clrf	??_isr+1
  3582  024B  0820               	movf	??_isr,w
  3583  024C  00F8               	movwf	i1VAL@variable
  3584  024D  0821               	movf	??_isr+1,w
  3585  024E  00F9               	movwf	i1VAL@variable+1
  3586  024F  120A  118A  2319  120A  118A  	fcall	i1_VAL
  3587                           
  3588                           ;main.c: 74:                      EUSART_ENVIAR(POS3);
  3589  0254  1283               	bcf	3,5	;RP0=0, select bank0
  3590  0255  1303               	bcf	3,6	;RP1=0, select bank0
  3591  0256  0841               	movf	_POS3,w
  3592  0257  120A  118A  2728  120A  118A  	fcall	_EUSART_ENVIAR
  3593  025C  2A40               	goto	i1l1635
  3594  025D                     i1l1641:
  3595                           
  3596                           ;main.c: 78:                     VAL(SENSOR_MOV);
  3597  025D  083F               	movf	_SENSOR_MOV,w
  3598  025E  00A0               	movwf	??_isr
  3599  025F  01A1               	clrf	??_isr+1
  3600  0260  0820               	movf	??_isr,w
  3601  0261  00F8               	movwf	i1VAL@variable
  3602  0262  0821               	movf	??_isr+1,w
  3603  0263  00F9               	movwf	i1VAL@variable+1
  3604  0264  120A  118A  2319  120A  118A  	fcall	i1_VAL
  3605                           
  3606                           ;main.c: 79:                     EUSART_ENVIAR(POS3);
  3607  0269  1283               	bcf	3,5	;RP0=0, select bank0
  3608  026A  1303               	bcf	3,6	;RP1=0, select bank0
  3609  026B  0841               	movf	_POS3,w
  3610  026C  120A  118A  2728  120A  118A  	fcall	_EUSART_ENVIAR
  3611  0271                     i1l1643:
  3612                           
  3613                           ;main.c: 80:                     _delay((unsigned long)((200)*(8000000/4000000.0)));
  3614  0271  3084               	movlw	132
  3615  0272  1283               	bcf	3,5	;RP0=0, select bank0
  3616  0273  1303               	bcf	3,6	;RP1=0, select bank0
  3617  0274  00A0               	movwf	??_isr
  3618  0275                     u116_27:
  3619  0275  0BA0               	decfsz	??_isr,f
  3620  0276  2A75               	goto	u116_27
  3621  0277  0000               	nop
  3622  0278                     i1l1645:
  3623                           
  3624                           ;main.c: 81:                     EUSART_ENVIAR(13);
  3625  0278  300D               	movlw	13
  3626  0279  120A  118A  2728  120A  118A  	fcall	_EUSART_ENVIAR
  3627                           
  3628                           ;main.c: 82:                     _delay((unsigned long)((200)*(8000000/4000000.0)));
  3629  027E  3084               	movlw	132
  3630  027F  1283               	bcf	3,5	;RP0=0, select bank0
  3631  0280  1303               	bcf	3,6	;RP1=0, select bank0
  3632  0281  00A0               	movwf	??_isr
  3633  0282                     u117_27:
  3634  0282  0BA0               	decfsz	??_isr,f
  3635  0283  2A82               	goto	u117_27
  3636  0284  0000               	nop
  3637                           
  3638                           ;main.c: 83:                     break;
  3639  0285  2A99               	goto	i1l96
  3640  0286                     i1l1649:
  3641  0286  081A               	movf	26,w	;volatile
  3642  0287  00A0               	movwf	??_isr
  3643  0288  01A1               	clrf	??_isr+1
  3644                           
  3645                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3646                           ; Switch size 1, requested type "simple"
  3647                           ; Number of cases is 1, Range of values is 0 to 0
  3648                           ; switch strategies available:
  3649                           ; Name         Instructions Cycles
  3650                           ; simple_byte            4     3 (average)
  3651                           ; direct_byte           11     8 (fixed)
  3652                           ; jumptable            260     6 (fixed)
  3653                           ;	Chosen strategy is simple_byte
  3654  0289  0821               	movf	??_isr+1,w
  3655  028A  3A00               	xorlw	0	; case 0
  3656  028B  1903               	skipnz
  3657  028C  2A8E               	goto	i1l1807
  3658  028D  2A99               	goto	i1l96
  3659  028E                     i1l1807:
  3660                           
  3661                           ; Switch size 1, requested type "simple"
  3662                           ; Number of cases is 3, Range of values is 65 to 67
  3663                           ; switch strategies available:
  3664                           ; Name         Instructions Cycles
  3665                           ; simple_byte           10     6 (average)
  3666                           ; direct_byte           20    11 (fixed)
  3667                           ; jumptable            263     9 (fixed)
  3668                           ;	Chosen strategy is simple_byte
  3669  028E  0820               	movf	??_isr,w
  3670  028F  3A41               	xorlw	65	; case 65
  3671  0290  1903               	skipnz
  3672  0291  2A01               	goto	i1l1625
  3673  0292  3A03               	xorlw	3	; case 66
  3674  0293  1903               	skipnz
  3675  0294  2A48               	goto	i1l1637
  3676  0295  3A01               	xorlw	1	; case 67
  3677  0296  1903               	skipnz
  3678  0297  2A5D               	goto	i1l1641
  3679  0298  2A99               	goto	i1l96
  3680  0299                     i1l96:	
  3681                           ;main.c: 86:      }
  3682                           
  3683                           
  3684                           ;main.c: 88:     (INTCONbits.GIE = 1);
  3685  0299  178B               	bsf	11,7	;volatile
  3686  029A                     i1l103:
  3687  029A  1283               	bcf	3,5	;RP0=0, select bank0
  3688  029B  1303               	bcf	3,6	;RP1=0, select bank0
  3689  029C  0824               	movf	??_isr+4,w
  3690  029D  008A               	movwf	10
  3691  029E  0823               	movf	??_isr+3,w
  3692  029F  0084               	movwf	4
  3693  02A0  0E22               	swapf	??_isr+2,w
  3694  02A1  0083               	movwf	3
  3695  02A2  0EFE               	swapf	btemp,f
  3696  02A3  0E7E               	swapf	btemp,w
  3697  02A4  0009               	retfie
  3698  02A5                     __end_of_isr:
  3699                           
  3700                           	psect	intentry
  3701  0004                     __pintentry:	
  3702                           ;incstack = 0
  3703                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3704                           
  3705  0004                     interrupt_function:
  3706  007E                     saved_w	set	btemp
  3707  0004  00FE               	movwf	btemp
  3708  0005  0E03               	swapf	3,w
  3709  0006  1283               	bcf	3,5	;RP0=0, select bank0
  3710  0007  1303               	bcf	3,6	;RP1=0, select bank0
  3711  0008  00A2               	movwf	??_isr+2
  3712  0009  0804               	movf	4,w
  3713  000A  00A3               	movwf	??_isr+3
  3714  000B  080A               	movf	10,w
  3715  000C  00A4               	movwf	??_isr+4
  3716  000D  120A  118A  29EF   	ljmp	_isr
  3717                           
  3718                           	psect	text21
  3719  0319                     __ptext21:	
  3720 ;; *************** function i1_VAL *****************
  3721 ;; Defined at:
  3722 ;;		line 207 in file "main.c"
  3723 ;; Parameters:    Size  Location     Type
  3724 ;;  variable        2    8[COMMON] unsigned int 
  3725 ;; Auto vars:     Size  Location     Type
  3726 ;;  valor           2   12[COMMON] unsigned int 
  3727 ;; Return value:  Size  Location     Type
  3728 ;;                  1    wreg      void 
  3729 ;; Registers used:
  3730 ;;		wreg, status,2, status,0, pclath, cstack
  3731 ;; Tracked objects:
  3732 ;;		On entry : 0/0
  3733 ;;		On exit  : 0/0
  3734 ;;		Unchanged: 0/0
  3735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3736 ;;      Params:         2       0       0       0       0
  3737 ;;      Locals:         2       0       0       0       0
  3738 ;;      Temps:          2       0       0       0       0
  3739 ;;      Totals:         6       0       0       0       0
  3740 ;;Total ram usage:        6 bytes
  3741 ;; Hardware stack levels used:    1
  3742 ;; Hardware stack levels required when called:    1
  3743 ;; This function calls:
  3744 ;;		i1___lwdiv
  3745 ;;		i1___wmul
  3746 ;; This function is called by:
  3747 ;;		_isr
  3748 ;; This function uses a non-reentrant model
  3749 ;;
  3750                           
  3751                           
  3752                           ;psect for function i1_VAL
  3753  0319                     i1_VAL:
  3754  0319                     i1l1601:	
  3755                           ;incstack = 0
  3756                           ; Regs used in i1_VAL: [wreg+status,2+status,0+pclath+cstack]
  3757                           
  3758                           
  3759                           ;main.c: 208:     uint16_t valor;;main.c: 209:     valor = variable;
  3760  0319  0879               	movf	i1VAL@variable+1,w
  3761  031A  00FD               	movwf	i1VAL@valor+1
  3762  031B  0878               	movf	i1VAL@variable,w
  3763  031C  00FC               	movwf	i1VAL@valor
  3764  031D                     i1l1603:
  3765                           
  3766                           ;main.c: 210:     POS1 = (valor/100) ;
  3767  031D  3064               	movlw	100
  3768  031E  00F0               	movwf	i1___lwdiv@divisor
  3769  031F  3000               	movlw	0
  3770  0320  00F1               	movwf	i1___lwdiv@divisor+1
  3771  0321  087D               	movf	i1VAL@valor+1,w
  3772  0322  00F3               	movwf	i1___lwdiv@dividend+1
  3773  0323  087C               	movf	i1VAL@valor,w
  3774  0324  00F2               	movwf	i1___lwdiv@dividend
  3775  0325  120A  118A  24F1  120A  118A  	fcall	i1___lwdiv
  3776  032A  0870               	movf	?i1___lwdiv,w
  3777  032B  00FA               	movwf	??i1_VAL
  3778  032C  087A               	movf	??i1_VAL,w
  3779  032D  1283               	bcf	3,5	;RP0=0, select bank0
  3780  032E  1303               	bcf	3,6	;RP1=0, select bank0
  3781  032F  00C3               	movwf	_POS1
  3782  0330                     i1l1605:
  3783                           
  3784                           ;main.c: 211:     valor = (valor - (POS1*100));
  3785  0330  0843               	movf	_POS1,w
  3786  0331  00FA               	movwf	??i1_VAL
  3787  0332  01FB               	clrf	??i1_VAL+1
  3788  0333  087A               	movf	??i1_VAL,w
  3789  0334  00F0               	movwf	i1___wmul@multiplier
  3790  0335  087B               	movf	??i1_VAL+1,w
  3791  0336  00F1               	movwf	i1___wmul@multiplier+1
  3792  0337  309C               	movlw	156
  3793  0338  00F2               	movwf	i1___wmul@multiplicand
  3794  0339  30FF               	movlw	255
  3795  033A  00F3               	movwf	i1___wmul@multiplicand+1
  3796  033B  120A  118A  26C7  120A  118A  	fcall	i1___wmul
  3797  0340  087C               	movf	i1VAL@valor,w
  3798  0341  0770               	addwf	?i1___wmul,w
  3799  0342  00FC               	movwf	i1VAL@valor
  3800  0343  087D               	movf	i1VAL@valor+1,w
  3801  0344  1803               	skipnc
  3802  0345  0A7D               	incf	i1VAL@valor+1,w
  3803  0346  0771               	addwf	?i1___wmul+1,w
  3804  0347  00FD               	movwf	i1VAL@valor+1
  3805  0348                     i1l1607:
  3806                           
  3807                           ;main.c: 212:     POS2 = (valor/10);
  3808  0348  300A               	movlw	10
  3809  0349  00F0               	movwf	i1___lwdiv@divisor
  3810  034A  3000               	movlw	0
  3811  034B  00F1               	movwf	i1___lwdiv@divisor+1
  3812  034C  087D               	movf	i1VAL@valor+1,w
  3813  034D  00F3               	movwf	i1___lwdiv@dividend+1
  3814  034E  087C               	movf	i1VAL@valor,w
  3815  034F  00F2               	movwf	i1___lwdiv@dividend
  3816  0350  120A  118A  24F1  120A  118A  	fcall	i1___lwdiv
  3817  0355  0870               	movf	?i1___lwdiv,w
  3818  0356  00FA               	movwf	??i1_VAL
  3819  0357  087A               	movf	??i1_VAL,w
  3820  0358  1283               	bcf	3,5	;RP0=0, select bank0
  3821  0359  1303               	bcf	3,6	;RP1=0, select bank0
  3822  035A  00C2               	movwf	_POS2
  3823  035B                     i1l1609:
  3824                           
  3825                           ;main.c: 213:     valor = (valor - (POS2*10));
  3826  035B  0842               	movf	_POS2,w
  3827  035C  00FA               	movwf	??i1_VAL
  3828  035D  01FB               	clrf	??i1_VAL+1
  3829  035E  087A               	movf	??i1_VAL,w
  3830  035F  00F0               	movwf	i1___wmul@multiplier
  3831  0360  087B               	movf	??i1_VAL+1,w
  3832  0361  00F1               	movwf	i1___wmul@multiplier+1
  3833  0362  30F6               	movlw	246
  3834  0363  00F2               	movwf	i1___wmul@multiplicand
  3835  0364  30FF               	movlw	255
  3836  0365  00F3               	movwf	i1___wmul@multiplicand+1
  3837  0366  120A  118A  26C7  120A  118A  	fcall	i1___wmul
  3838  036B  087C               	movf	i1VAL@valor,w
  3839  036C  0770               	addwf	?i1___wmul,w
  3840  036D  00FC               	movwf	i1VAL@valor
  3841  036E  087D               	movf	i1VAL@valor+1,w
  3842  036F  1803               	skipnc
  3843  0370  0A7D               	incf	i1VAL@valor+1,w
  3844  0371  0771               	addwf	?i1___wmul+1,w
  3845  0372  00FD               	movwf	i1VAL@valor+1
  3846                           
  3847                           ;main.c: 214:     POS3 = (valor);
  3848  0373  087C               	movf	i1VAL@valor,w
  3849  0374  00FA               	movwf	??i1_VAL
  3850  0375  087A               	movf	??i1_VAL,w
  3851  0376  1283               	bcf	3,5	;RP0=0, select bank0
  3852  0377  1303               	bcf	3,6	;RP1=0, select bank0
  3853  0378  00C1               	movwf	_POS3
  3854  0379                     i1l1611:
  3855                           
  3856                           ;main.c: 216:     POS1 = POS1 + 48;
  3857  0379  0843               	movf	_POS1,w
  3858  037A  3E30               	addlw	48
  3859  037B  00FA               	movwf	??i1_VAL
  3860  037C  087A               	movf	??i1_VAL,w
  3861  037D  00C3               	movwf	_POS1
  3862  037E                     i1l1613:
  3863                           
  3864                           ;main.c: 217:     POS2 = POS2 + 48;
  3865  037E  0842               	movf	_POS2,w
  3866  037F  3E30               	addlw	48
  3867  0380  00FA               	movwf	??i1_VAL
  3868  0381  087A               	movf	??i1_VAL,w
  3869  0382  00C2               	movwf	_POS2
  3870  0383                     i1l1615:
  3871                           
  3872                           ;main.c: 218:     POS3 = POS3 + 48;
  3873  0383  0841               	movf	_POS3,w
  3874  0384  3E30               	addlw	48
  3875  0385  00FA               	movwf	??i1_VAL
  3876  0386  087A               	movf	??i1_VAL,w
  3877  0387  00C1               	movwf	_POS3
  3878  0388                     i1l125:
  3879  0388  0008               	return
  3880  0389                     __end_ofi1_VAL:
  3881                           
  3882                           	psect	text22
  3883  06C7                     __ptext22:	
  3884 ;; *************** function i1___wmul *****************
  3885 ;; Defined at:
  3886 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  3887 ;; Parameters:    Size  Location     Type
  3888 ;;  multiplier      2    0[COMMON] unsigned int 
  3889 ;;  multiplicand    2    2[COMMON] unsigned int 
  3890 ;; Auto vars:     Size  Location     Type
  3891 ;;  product         2    4[COMMON] unsigned int 
  3892 ;; Return value:  Size  Location     Type
  3893 ;;                  2    0[COMMON] unsigned int 
  3894 ;; Registers used:
  3895 ;;		wreg, status,2, status,0
  3896 ;; Tracked objects:
  3897 ;;		On entry : 0/0
  3898 ;;		On exit  : 0/0
  3899 ;;		Unchanged: 0/0
  3900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3901 ;;      Params:         4       0       0       0       0
  3902 ;;      Locals:         2       0       0       0       0
  3903 ;;      Temps:          0       0       0       0       0
  3904 ;;      Totals:         6       0       0       0       0
  3905 ;;Total ram usage:        6 bytes
  3906 ;; Hardware stack levels used:    1
  3907 ;; This function calls:
  3908 ;;		Nothing
  3909 ;; This function is called by:
  3910 ;;		i1_VAL
  3911 ;; This function uses a non-reentrant model
  3912 ;;
  3913                           
  3914                           
  3915                           ;psect for function i1___wmul
  3916  06C7                     i1___wmul:
  3917  06C7                     i1l1453:	
  3918                           ;incstack = 0
  3919                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
  3920                           
  3921  06C7  01F4               	clrf	i1___wmul@product
  3922  06C8  01F5               	clrf	i1___wmul@product+1
  3923  06C9                     i1l1455:
  3924  06C9  1C70               	btfss	i1___wmul@multiplier,0
  3925  06CA  2ECC               	goto	u77_21
  3926  06CB  2ECD               	goto	u77_20
  3927  06CC                     u77_21:
  3928  06CC  2ED3               	goto	i1l321
  3929  06CD                     u77_20:
  3930  06CD                     i1l1457:
  3931  06CD  0872               	movf	i1___wmul@multiplicand,w
  3932  06CE  07F4               	addwf	i1___wmul@product,f
  3933  06CF  1803               	skipnc
  3934  06D0  0AF5               	incf	i1___wmul@product+1,f
  3935  06D1  0873               	movf	i1___wmul@multiplicand+1,w
  3936  06D2  07F5               	addwf	i1___wmul@product+1,f
  3937  06D3                     i1l321:
  3938  06D3  3001               	movlw	1
  3939  06D4                     u78_25:
  3940  06D4  1003               	clrc
  3941  06D5  0DF2               	rlf	i1___wmul@multiplicand,f
  3942  06D6  0DF3               	rlf	i1___wmul@multiplicand+1,f
  3943  06D7  3EFF               	addlw	-1
  3944  06D8  1D03               	skipz
  3945  06D9  2ED4               	goto	u78_25
  3946  06DA                     i1l1459:
  3947  06DA  3001               	movlw	1
  3948  06DB                     u79_25:
  3949  06DB  1003               	clrc
  3950  06DC  0CF1               	rrf	i1___wmul@multiplier+1,f
  3951  06DD  0CF0               	rrf	i1___wmul@multiplier,f
  3952  06DE  3EFF               	addlw	-1
  3953  06DF  1D03               	skipz
  3954  06E0  2EDB               	goto	u79_25
  3955  06E1                     i1l1461:
  3956  06E1  0870               	movf	i1___wmul@multiplier,w
  3957  06E2  0471               	iorwf	i1___wmul@multiplier+1,w
  3958  06E3  1D03               	btfss	3,2
  3959  06E4  2EE6               	goto	u80_21
  3960  06E5  2EE7               	goto	u80_20
  3961  06E6                     u80_21:
  3962  06E6  2EC9               	goto	i1l1455
  3963  06E7                     u80_20:
  3964  06E7                     i1l1463:
  3965  06E7  0875               	movf	i1___wmul@product+1,w
  3966  06E8  00F1               	movwf	?i1___wmul+1
  3967  06E9  0874               	movf	i1___wmul@product,w
  3968  06EA  00F0               	movwf	?i1___wmul
  3969  06EB                     i1l323:
  3970  06EB  0008               	return
  3971  06EC                     __end_ofi1___wmul:
  3972                           
  3973                           	psect	text23
  3974  04F1                     __ptext23:	
  3975 ;; *************** function i1___lwdiv *****************
  3976 ;; Defined at:
  3977 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  3978 ;; Parameters:    Size  Location     Type
  3979 ;;  divisor         2    0[COMMON] unsigned int 
  3980 ;;  dividend        2    2[COMMON] unsigned int 
  3981 ;; Auto vars:     Size  Location     Type
  3982 ;;  quotient        2    5[COMMON] unsigned int 
  3983 ;;  counter         1    7[COMMON] unsigned char 
  3984 ;; Return value:  Size  Location     Type
  3985 ;;                  2    0[COMMON] unsigned int 
  3986 ;; Registers used:
  3987 ;;		wreg, status,2, status,0
  3988 ;; Tracked objects:
  3989 ;;		On entry : 0/0
  3990 ;;		On exit  : 0/0
  3991 ;;		Unchanged: 0/0
  3992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3993 ;;      Params:         4       0       0       0       0
  3994 ;;      Locals:         3       0       0       0       0
  3995 ;;      Temps:          1       0       0       0       0
  3996 ;;      Totals:         8       0       0       0       0
  3997 ;;Total ram usage:        8 bytes
  3998 ;; Hardware stack levels used:    1
  3999 ;; This function calls:
  4000 ;;		Nothing
  4001 ;; This function is called by:
  4002 ;;		i1_VAL
  4003 ;; This function uses a non-reentrant model
  4004 ;;
  4005                           
  4006                           
  4007                           ;psect for function i1___lwdiv
  4008  04F1                     i1___lwdiv:
  4009  04F1                     i1l1467:	
  4010                           ;incstack = 0
  4011                           ; Regs used in i1___lwdiv: [wreg+status,2+status,0]
  4012                           
  4013  04F1  01F5               	clrf	i1___lwdiv@quotient
  4014  04F2  01F6               	clrf	i1___lwdiv@quotient+1
  4015  04F3                     i1l1469:
  4016  04F3  0870               	movf	i1___lwdiv@divisor,w
  4017  04F4  0471               	iorwf	i1___lwdiv@divisor+1,w
  4018  04F5  1903               	btfsc	3,2
  4019  04F6  2CF8               	goto	u81_21
  4020  04F7  2CF9               	goto	u81_20
  4021  04F8                     u81_21:
  4022  04F8  2D30               	goto	i1l1489
  4023  04F9                     u81_20:
  4024  04F9                     i1l1471:
  4025  04F9  01F7               	clrf	i1___lwdiv@counter
  4026  04FA  0AF7               	incf	i1___lwdiv@counter,f
  4027  04FB  2D07               	goto	i1l1477
  4028  04FC                     i1l1473:
  4029  04FC  3001               	movlw	1
  4030  04FD                     u82_25:
  4031  04FD  1003               	clrc
  4032  04FE  0DF0               	rlf	i1___lwdiv@divisor,f
  4033  04FF  0DF1               	rlf	i1___lwdiv@divisor+1,f
  4034  0500  3EFF               	addlw	-1
  4035  0501  1D03               	skipz
  4036  0502  2CFD               	goto	u82_25
  4037  0503                     i1l1475:
  4038  0503  3001               	movlw	1
  4039  0504  00F4               	movwf	??i1___lwdiv
  4040  0505  0874               	movf	??i1___lwdiv,w
  4041  0506  07F7               	addwf	i1___lwdiv@counter,f
  4042  0507                     i1l1477:
  4043  0507  1FF1               	btfss	i1___lwdiv@divisor+1,7
  4044  0508  2D0A               	goto	u83_21
  4045  0509  2D0B               	goto	u83_20
  4046  050A                     u83_21:
  4047  050A  2CFC               	goto	i1l1473
  4048  050B                     u83_20:
  4049  050B                     i1l1479:
  4050  050B  3001               	movlw	1
  4051  050C                     u84_25:
  4052  050C  1003               	clrc
  4053  050D  0DF5               	rlf	i1___lwdiv@quotient,f
  4054  050E  0DF6               	rlf	i1___lwdiv@quotient+1,f
  4055  050F  3EFF               	addlw	-1
  4056  0510  1D03               	skipz
  4057  0511  2D0C               	goto	u84_25
  4058  0512  0871               	movf	i1___lwdiv@divisor+1,w
  4059  0513  0273               	subwf	i1___lwdiv@dividend+1,w
  4060  0514  1D03               	skipz
  4061  0515  2D18               	goto	u85_25
  4062  0516  0870               	movf	i1___lwdiv@divisor,w
  4063  0517  0272               	subwf	i1___lwdiv@dividend,w
  4064  0518                     u85_25:
  4065  0518  1C03               	skipc
  4066  0519  2D1B               	goto	u85_21
  4067  051A  2D1C               	goto	u85_20
  4068  051B                     u85_21:
  4069  051B  2D23               	goto	i1l1485
  4070  051C                     u85_20:
  4071  051C                     i1l1481:
  4072  051C  0870               	movf	i1___lwdiv@divisor,w
  4073  051D  02F2               	subwf	i1___lwdiv@dividend,f
  4074  051E  0871               	movf	i1___lwdiv@divisor+1,w
  4075  051F  1C03               	skipc
  4076  0520  03F3               	decf	i1___lwdiv@dividend+1,f
  4077  0521  02F3               	subwf	i1___lwdiv@dividend+1,f
  4078  0522                     i1l1483:
  4079  0522  1475               	bsf	i1___lwdiv@quotient,0
  4080  0523                     i1l1485:
  4081  0523  3001               	movlw	1
  4082  0524                     u86_25:
  4083  0524  1003               	clrc
  4084  0525  0CF1               	rrf	i1___lwdiv@divisor+1,f
  4085  0526  0CF0               	rrf	i1___lwdiv@divisor,f
  4086  0527  3EFF               	addlw	-1
  4087  0528  1D03               	skipz
  4088  0529  2D24               	goto	u86_25
  4089  052A                     i1l1487:
  4090  052A  3001               	movlw	1
  4091  052B  02F7               	subwf	i1___lwdiv@counter,f
  4092  052C  1D03               	btfss	3,2
  4093  052D  2D2F               	goto	u87_21
  4094  052E  2D30               	goto	u87_20
  4095  052F                     u87_21:
  4096  052F  2D0B               	goto	i1l1479
  4097  0530                     u87_20:
  4098  0530                     i1l1489:
  4099  0530  0876               	movf	i1___lwdiv@quotient+1,w
  4100  0531  00F1               	movwf	?i1___lwdiv+1
  4101  0532  0875               	movf	i1___lwdiv@quotient,w
  4102  0533  00F0               	movwf	?i1___lwdiv
  4103  0534                     i1l593:
  4104  0534  0008               	return
  4105  0535                     __end_ofi1___lwdiv:
  4106                           
  4107                           	psect	text24
  4108  0728                     __ptext24:	
  4109 ;; *************** function _EUSART_ENVIAR *****************
  4110 ;; Defined at:
  4111 ;;		line 36 in file "./EUSART_LIB.h"
  4112 ;; Parameters:    Size  Location     Type
  4113 ;;  dato            1    wreg     unsigned char 
  4114 ;; Auto vars:     Size  Location     Type
  4115 ;;  dato            1    2[COMMON] unsigned char 
  4116 ;; Return value:  Size  Location     Type
  4117 ;;                  1    wreg      void 
  4118 ;; Registers used:
  4119 ;;		wreg
  4120 ;; Tracked objects:
  4121 ;;		On entry : 0/0
  4122 ;;		On exit  : 0/0
  4123 ;;		Unchanged: 0/0
  4124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4125 ;;      Params:         0       0       0       0       0
  4126 ;;      Locals:         1       0       0       0       0
  4127 ;;      Temps:          2       0       0       0       0
  4128 ;;      Totals:         3       0       0       0       0
  4129 ;;Total ram usage:        3 bytes
  4130 ;; Hardware stack levels used:    1
  4131 ;; This function calls:
  4132 ;;		Nothing
  4133 ;; This function is called by:
  4134 ;;		_isr
  4135 ;; This function uses a non-reentrant model
  4136 ;;
  4137                           
  4138                           
  4139                           ;psect for function _EUSART_ENVIAR
  4140  0728                     _EUSART_ENVIAR:
  4141                           
  4142                           ;incstack = 0
  4143                           ; Regs used in _EUSART_ENVIAR: [wreg]
  4144                           ;EUSART_ENVIAR@dato stored from wreg
  4145  0728  00F2               	movwf	EUSART_ENVIAR@dato
  4146  0729                     i1l1493:
  4147                           
  4148                           ;./EUSART_LIB.h: 37:     if (PIR1bits.TXIF){
  4149  0729  1283               	bcf	3,5	;RP0=0, select bank0
  4150  072A  1303               	bcf	3,6	;RP1=0, select bank0
  4151  072B  1E0C               	btfss	12,4	;volatile
  4152  072C  2F2E               	goto	u88_21
  4153  072D  2F2F               	goto	u88_20
  4154  072E                     u88_21:
  4155  072E  2F3A               	goto	i1l79
  4156  072F                     u88_20:
  4157  072F                     i1l1495:
  4158                           
  4159                           ;./EUSART_LIB.h: 38:         TXREG = dato;
  4160  072F  0872               	movf	EUSART_ENVIAR@dato,w
  4161  0730  0099               	movwf	25	;volatile
  4162                           
  4163                           ;./EUSART_LIB.h: 39:         _delay((unsigned long)((10)*(8000000/4000.0)));}
  4164  0731  301A               	movlw	26
  4165  0732  00F1               	movwf	??_EUSART_ENVIAR+1
  4166  0733  30F8               	movlw	248
  4167  0734  00F0               	movwf	??_EUSART_ENVIAR
  4168  0735                     u118_27:
  4169  0735  0BF0               	decfsz	??_EUSART_ENVIAR,f
  4170  0736  2F35               	goto	u118_27
  4171  0737  0BF1               	decfsz	??_EUSART_ENVIAR+1,f
  4172  0738  2F35               	goto	u118_27
  4173  0739  0000               	nop
  4174  073A                     i1l79:
  4175  073A  0008               	return
  4176  073B                     __end_of_EUSART_ENVIAR:
  4177  007E                     btemp	set	126	;btemp
  4178  007E                     wtemp0	set	126
  4179                           
  4180                           	psect	config
  4181                           
  4182                           ;Config register CONFIG1 @ 0x2007
  4183                           ;	Oscillator Selection bits
  4184                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
  4185                           ;	Watchdog Timer Enable bit
  4186                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4187                           ;	Power-up Timer Enable bit
  4188                           ;	PWRTE = OFF, PWRT disabled
  4189                           ;	RE3/MCLR pin function select bit
  4190                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4191                           ;	Code Protection bit
  4192                           ;	CP = OFF, Program memory code protection is disabled
  4193                           ;	Data Code Protection bit
  4194                           ;	CPD = OFF, Data memory code protection is disabled
  4195                           ;	Brown Out Reset Selection bits
  4196                           ;	BOREN = OFF, BOR disabled
  4197                           ;	Internal External Switchover bit
  4198                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4199                           ;	Fail-Safe Clock Monitor Enabled bit
  4200                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4201                           ;	Low Voltage Programming Enable bit
  4202                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4203                           ;	In-Circuit Debugger Mode bit
  4204                           ;	DEBUG = 0x1, unprogrammed default
  4205  2007                     	org	8199
  4206  2007  20D5               	dw	8405
  4207                           
  4208                           ;Config register CONFIG2 @ 0x2008
  4209                           ;	Brown-out Reset Selection bit
  4210                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4211                           ;	Flash Program Memory Self Write Enable bits
  4212                           ;	WRT = OFF, Write protection off
  4213  2008                     	org	8200
  4214  2008  3FFF               	dw	16383

Data Sizes:
    Strings     53
    Constant    0
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     30      36
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 20
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[4]), STR_4(CODE[7]), 
		 -> STR_3(CODE[7]), STR_2(CODE[7]), STR_1(CODE[20]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->i1_VAL
    i1_VAL->i1___lwdiv

Critical Paths under _main in BANK0

    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv
    _VAL->___lwdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    4555
                                             27 BANK0      3     3      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                                _VAL
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     608
                        _EUSART_INIT
                    _I2C_Master_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                             19 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              5 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) _EUSART_INIT                                          4     0      4     196
                                              5 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _VAL                                                  6     4      2    1223
                                             13 BANK0      6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     396
                                              5 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     466
                                              5 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     499
                                             10 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              6 BANK0      4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     912
                                              9 BANK0      7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              9 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              6 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              5 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     554
                                              5 BANK0      2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     273
                                              5 BANK0      6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  5     5      0     697
                                              0 BANK0      5     5      0
                      _EUSART_ENVIAR
                              i1_VAL
 ---------------------------------------------------------------------------------
 (5) i1_VAL                                                6     4      2     675
                                              8 COMMON     6     4      2
                          i1___lwdiv
                           i1___wmul
 ---------------------------------------------------------------------------------
 (6) i1___wmul                                             6     2      4     196
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (6) i1___lwdiv                                            8     4      4     266
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (5) _EUSART_ENVIAR                                        3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _VAL
     ___lwdiv
     ___wmul
   _setup
     _EUSART_INIT
     _I2C_Master_Init
       ___lldiv

 _isr (ROOT)
   _EUSART_ENVIAR
   i1_VAL
     i1___lwdiv
     i1___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      32       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1E      24       5       45.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      32      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Sep 06 11:46:26 2021

                        pc 0002                         l75 06C6                         fsr 0004  
      ___wmul@multiplicand 0027           i1___wmul@product 0074                        l122 061E  
                      l212 0748                        l125 0318                        l230 0646  
                      l150 070B                        l142 06F5                        l215 0754  
                      l231 0649                        l143 06F6                        l232 0650  
                      l224 0767                        l144 06FC                        l145 06FD  
                      l153 0727                        l321 0688                        l209 05E6  
                      l218 0770                        l146 0703                        l162 04AA  
                      l227 075E                        l147 0704                        l323 06A0  
                      l148 070A                        l156 0747                        l165 0452  
                      l174 0679                        l168 0571                        l357 03F0  
                      l593 04F0                        _GIE 005F                        _RB0 0030  
                      _RB1 0031                        _RB2 0032                        _RB3 0033  
                      _RB5 0035                        u510 06F3                        u511 06F2  
                      u520 06FA                        u521 06F9                        u530 0701  
                      u610 03E8                        u531 0700                        u611 03E7  
                      u540 0708                        u700 04B5                        u541 0707  
                      u701 04B4                        u605 03DA                        u550 039B  
                      u630 05C4                        u551 039A                        u640 074E  
                      u720 04C7                        u641 074D                        u625 0546  
                      u721 04C6                        u650 0754                        u570 03AF  
                      u651 0753                        u715 04B9                        u571 03AE  
                      u635 05BF                        u740 04D8                        u660 0682  
                      u741 04D7                        u661 0681                        u565 03A0  
                      u910 0486                        u590 03CA                        _VAL 02A5  
                      u911 0485                        u735 04C8                        u591 03C9  
                      u760 04EC                        u905 0463                        u761 04EB  
                      u745 04D4                        u585 03B1                        u930 0679  
                      u690 069C                        u931 0678                        u755 04E0  
                      u691 069B                        u675 0689                        u595 03C6  
                      u940 0642                        u941 0641                        u925 048E  
                      u685 0690                        u890 045B                        u891 045A  
                      u980 0125                        u981 0124                        u990 012A  
                      u991 0129                        _isr 01EF                        fsr0 0004  
             ?_EUSART_INIT 0025                       ?_VAL 002D                       l1401 0710  
                     l1411 074E                       l1331 0708                       l1323 06EF  
                     l1403 0716                       l1325 06F3                       l1405 0719  
                     l1421 0696                       l1413 067A                       l1501 02BE  
                     l1341 03AF                       l1333 0389                       l1327 06FA  
                     l1407 0724                       l1431 04B5                       l1423 069C  
                     l1415 067E                       l1511 0313                       l1503 02D8  
                     l1351 03E2                       l1343 03B8                       l1335 039B  
                     l1409 0748                       l1329 0701                       l1441 04D8  
                     l1433 04B8                       l1417 0682                       l1505 02EB  
                     l1361 06B3                       l1345 03CA                       l1337 039E  
                     l1353 03E8                       l1521 05FD                       l1513 05E7  
                     l1371 0543                       l1443 04DE                       l1435 04BF  
                     l1427 04AB                       l1419 068F                       l1507 0309  
                     l1363 06B4                       l1347 03D8                       l1339 03AB  
                     l1531 061D                       l1523 05FE                       l1515 05F8  
                     l1541 0417                       l1533 03F1                       l1381 0564  
                     l1373 0551                       l1445 04DF                       l1437 04C3  
                     l1429 04AF                       l1509 030E                       l1365 06BD  
                     l1357 06A1                       l1349 03D9                       l1525 05FF  
                     l1517 05FB                       l1543 073B                       l1535 03F7  
                     l1551 0471                       l1383 0567                       l1375 0554  
                     l1367 0538                       l1447 04E6                       l1439 04C7  
                     l1359 06AF                       l1391 05B4                       l1527 060D  
                     l1519 05FC                       l1711 012C                       l1703 0109  
                     l1537 0401                       l1561 049C                       l1553 0477  
                     l1545 0456                       l1385 056E                       l1377 055B  
                     l1369 0542                       l1449 04EC                       l1393 05E3  
                     l1529 061C                       l1721 015A                       l1713 0134  
                     l1705 011E                       l1539 0411                       l1563 04A2  
                     l1547 045B                       l1555 0480                       l1379 055E  
                     l1571 066C                       l1395 05E4                       l1387 05AD  
                     l1731 0182                       l1715 0142                       l1707 0125  
                     l1723 0160                       l1573 0768                       l1581 075F  
                     l1557 0486                       l1549 046C                       l1565 0654  
                     l1397 05E5                       l1389 05B1                       l1741 01A8  
                     l1733 0188                       l1725 0167                       l1717 014A  
                     l1709 012A                       l1805 0113                       l1661 0043  
                     l1591 0635                       l1575 076D                       l1583 0764  
                     l1399 070F                       l1559 0497                       l1567 0657  
                     l1751 01DC                       l1743 01B7                       l1735 018D  
                     l1727 0171                       l1719 0152                       l1671 0072  
                     l1663 004E                       l1655 001F                       l1593 063A  
                     l1585 061F                       l1577 0755                       l1569 0664  
                     l1497 02A5                       l1745 01BC                       l1737 0198  
                     l1729 0178                       l1681 00A6                       l1673 007D  
                     l1665 0059                       l1657 0038                       l1595 0642  
                     l1587 0624                       l1579 075A                       l1499 02AB  
                     l1747 01C7                       l1739 01A3                       l1691 00E0  
                     l1683 00B1                       l1675 008D                       l1667 005E  
                     l1659 003E                       l1597 064A                       l1589 062C  
                     l1749 01D7                       l1693 00E7                       l1685 00C1  
                     l1677 0092                       l1669 006D                       l1695 00F1  
                     l1687 00C6                       l1679 00A1                       l1697 00F8  
                     l1689 00D6                       l1699 0102                       ?_isr 0070  
                     STR_1 0578                       STR_2 059A                       STR_3 058C  
                     STR_4 0593                       STR_5 05A5                       STR_6 05A1  
                     STR_7 05A9                       u1000 0167                       u1001 0166  
                     u1017 0066                       u1107 041D                       u1027 009A  
                     u1117 071F                       u1037 00CE                       u1047 01B0  
                     u1057 01E4                       u1067 0558                       u1077 056B  
                     u1087 03FD                       u1097 040D                       _PEIE 005E  
                     i1l79 073A                       i1l96 0299                       _POS1 0043  
                     _POS2 0042                       _POS3 0041          ?_Lcd_Write_String 0070  
                     _main 001F                       btemp 007E                       start 0010  
       ??_Lcd_Write_String 002A            __end_of_Lcd_Cmd 0728                      ??_VAL 002F  
            _EUSART_ENVIAR 0728                      ??_isr 0020           ?_I2C_Master_Init 0033  
         ?_I2C_Master_Read 0025           ?_I2C_Master_Wait 0070           ?_I2C_Master_Stop 0070  
                    ?_main 0070                      _ANSEL 0188            __end_of___lldiv 03F1  
                    _COLOR 003E            __end_of___lwdiv 04F1                      i1l103 029A  
                    i1l125 0388                      i1l321 06D3                      i1l323 06EB  
                    i1l593 0534                      _RCREG 001A                      i1_VAL 0319  
                    _SPBRG 0099                      _PORTA 0005                      _PORTB 0006  
                    _PORTC 0007                      _PORTD 0008                      _PORTE 0009  
                    u80_20 06E7                      u80_21 06E6                      u81_20 04F9  
                    u81_21 04F8    __size_of_Lcd_Set_Cursor 0058                      _TRISA 0085  
                    _TRISB 0086                      _TRISD 0088                      _SSPIE 0463  
                    _TRISE 0089                      _SSPIF 0063                      u82_25 04FD  
                    u83_20 050B                      u83_21 050A                      u84_25 050C  
                    u85_20 051C                      u77_20 06CD                      u85_21 051B  
                    u77_21 06CC                      u85_25 0518                      u86_25 0524  
                    u78_25 06D4                      u87_20 0530                      u95_20 01F4  
                    u87_21 052F                      u95_21 01F3                      u79_25 06DB  
                    u88_20 072F                      u96_20 01FA                      u88_21 072E  
                    u96_21 01F9                      u97_20 0200                      u97_21 01FF  
                    _TXREG 0019                      _setup 05E7                      pclath 000A  
         __end_ofi1___wmul 06EC                      status 0003        i1___wmul@multiplier 0070  
                    wtemp0 007E         __size_ofi1___lwdiv 0044           __end_of_Lcd_Init 0453  
         __end_of_Lcd_Port 070C            __initialization 0013             ?_EUSART_ENVIAR 0070  
             __end_of_main 01EF                     ??_main 003B         __size_of_Lcd_Clear 000D  
                   ?i1_VAL 0078          ?_I2C_Master_Start 0070          ?_I2C_Master_Write 0025  
       ??_I2C_Master_Start 0025         ??_I2C_Master_Write 0027                     ?_setup 0070  
                   _ANSELH 0189                     i1l1601 0319                     i1l1611 0379  
                   i1l1603 031D                     i1l1461 06E1                     i1l1453 06C7  
                   i1l1613 037E                     i1l1605 0330                     i1l1621 01FA  
                   i1l1471 04F9                     i1l1463 06E7                     i1l1455 06C9  
                   i1l1615 0383                     i1l1607 0348                     i1l1631 022B  
                   u112_27 0219                     i1l1481 051C                     i1l1473 04FC  
                   i1l1457 06CD                     i1l1609 035B                     i1l1641 025D  
                   i1l1633 0233                     i1l1625 0201                     i1l1617 01EF  
                   i1l1483 0522                     i1l1475 0503                     i1l1467 04F1  
                   i1l1459 06DA                     i1l1643 0271                     i1l1635 0240  
                   i1l1627 0215                     i1l1619 01F4                     i1l1493 0729  
                   i1l1485 0523                     i1l1477 0507                     i1l1469 04F3  
                   i1l1645 0278                     i1l1637 0248                     i1l1629 021C  
                   i1l1495 072F                     i1l1487 052A                     i1l1479 050B  
                   i1l1807 028E                     u113_27 0228                     i1l1489 0530  
                   i1l1649 0286                     u114_27 0237                     u115_27 0244  
                   u116_27 0275                     u117_27 0282                     u118_27 0735  
                ??_Lcd_Cmd 0026                     _SPBRGH 009A    __size_of_Lcd_Write_Char 003D  
                   _SSPADD 0093                     _TRISC3 043B                     _TRISC4 043C  
                   _TRISC7 043F                     _SSPCON 0014                     _SSPBUF 0013  
                   ___wmul 067A                  ??___lldiv 002D                  ??___lwdiv 0029  
        __end_ofi1___lwdiv 0535                     saved_w 007E            Lcd_Set_Cursor@a 002C  
          Lcd_Set_Cursor@b 0029            Lcd_Set_Cursor@y 002E            Lcd_Set_Cursor@z 002D  
     __size_of_EUSART_INIT 0026    __end_of__initialization 001B          __end_of_Lcd_Clear 0748  
            __end_ofi1_VAL 0389            ??_EUSART_ENVIAR 0070             __pcstackCOMMON 0070  
            __end_of_setup 061F                  ?i1___wmul 0070             _Lcd_Set_Cursor 0453  
                  ??i1_VAL 007A                  ?_Lcd_Init 0070                  ?_Lcd_Port 0070  
                  ??_setup 003B                 __pbssBANK0 003E                 __pmaintext 001F  
                  ?___wmul 0025                 __pintentry 0004  __size_of_Lcd_Write_String 0029  
   __end_of_Lcd_Set_Cursor 04AB                 ??i1___wmul 0074                 ??_Lcd_Init 0029  
               ??_Lcd_Port 0025                    _SSPCON2 0091                    _SSPSTAT 0094  
               __stringtab 0572             _Lcd_Write_Char 0535                    _Lcd_Cmd 070C  
              VAL@variable 002D                    ___lldiv 0389            __size_of___wmul 0027  
                  ___lwdiv 04AB            ?_Lcd_Set_Cursor 0029                    __ptext1 05E7  
                  __ptext2 05AD                    __ptext3 0389                    __ptext4 06A1  
                  __ptext5 02A5                    __ptext6 067A                    __ptext7 04AB  
                  __ptext8 0651                    __ptext9 0535              EUSART_INIT@rx 0027  
            EUSART_INIT@tx 0025               __size_of_VAL 0074          i1___lwdiv@divisor 0070  
             __size_of_isr 00B6          i1___lwdiv@counter 0077   __size_of_I2C_Master_Init 003A  
 __size_of_I2C_Master_Read 0032   __size_of_I2C_Master_Wait 000D   __size_of_I2C_Master_Stop 0009  
   __end_of_Lcd_Write_Char 0572       end_of_initialization 001B  __size_of_I2C_Master_Start 0009  
__size_of_I2C_Master_Write 000A            ___lldiv@divisor 0025            ___lldiv@counter 0032  
                _RCSTAbits 0018           I2C_Master_Init@c 0033           I2C_Master_Read@a 0025  
                Lcd_Port@a 0025      i1___wmul@multiplicand 0072                  _PORTBbits 0006  
                _TRISCbits 0087                  i1___lwdiv 04F1            ?_Lcd_Write_Char 0070  
        Lcd_Write_String@a 002C          Lcd_Write_String@i 002A                  _TXSTAbits 0098  
                _Lcd_Clear 073B             __end_of___wmul 06A1           _Lcd_Write_String 0651  
              _BAUDCTLbits 0187        start_initialization 0013          __size_ofi1___wmul 0025  
              __end_of_VAL 0319              ??_EUSART_INIT 0029                __end_of_isr 02A5  
               ?i1___lwdiv 0070          __size_of_Lcd_Init 0062          __size_of_Lcd_Port 0020  
        ??_I2C_Master_Init 0037          ??_I2C_Master_Read 0027          ??_I2C_Master_Wait 0025  
        ??_I2C_Master_Stop 0025      __end_of_EUSART_ENVIAR 073B                 ?_Lcd_Clear 0070  
                 ??___wmul 0029            Lcd_Write_Char@a 0029            Lcd_Write_Char@y 0028  
                ___latbits 0002              __pcstackBANK0 0020                   ?_Lcd_Cmd 0070  
      __end_of_EUSART_INIT 06C7           _I2C_Master_Start 0768           _I2C_Master_Write 0755  
         ___lwdiv@dividend 0027          EUSART_ENVIAR@dato 0072           ??_Lcd_Set_Cursor 002A  
                 VAL@valor 0031                   ?___lldiv 0025                   ?___lwdiv 0025  
                __pstrings 0572             __size_ofi1_VAL 0070           ___lwdiv@quotient 002A  
              ??i1___lwdiv 0074             __size_of_setup 0038          interrupt_function 0004  
           ___wmul@product 0029                   _PIE1bits 008C                   Lcd_Cmd@a 0028  
                 _PIR1bits 000C                ??_Lcd_Clear 0029                __stringbase 0577  
        ___wmul@multiplier 0025                   i1___wmul 06C7           ??_Lcd_Write_Char 0026  
              _EUSART_INIT 06A1                   _Lcd_Init 03F1                   _Lcd_Port 06EC  
      I2C_Master_Read@temp 0029   __end_of_Lcd_Write_String 067A           __size_of_Lcd_Cmd 001C  
         __size_of___lldiv 0068           __size_of___lwdiv 0046         __end_of__stringtab 0578  
          _I2C_Master_Init 05AD            _I2C_Master_Read 061F            _I2C_Master_Wait 0748  
          _I2C_Master_Stop 075F            ___lwdiv@divisor 0025            ___lwdiv@counter 002C  
                 __ptext10 0453                   __ptext11 03F1                   __ptext20 01EF  
                 __ptext12 073B                   __ptext21 0319                   __ptext13 070C  
                 __ptext22 06C7                   __ptext14 06EC                   __ptext23 04F1  
                 __ptext15 0755                   __ptext24 0728                   __ptext16 075F  
                 __ptext17 0768                   __ptext18 061F                   __ptext19 0748  
       i1___lwdiv@dividend 0072              __size_of_main 01D0                 i1VAL@valor 007C  
       i1___lwdiv@quotient 0075   __end_of_I2C_Master_Start 0771   __end_of_I2C_Master_Write 075F  
               _INTCONbits 000B         Lcd_Write_Char@temp 0027                   intlevel1 0000  
         ___lldiv@dividend 0029                  stringcode 0572              i1VAL@variable 0078  
               _OSCCONbits 008F                 _SENSOR_MOV 003F                 _VALOR_PESO 0040  
  __end_of_I2C_Master_Init 05E7    __end_of_I2C_Master_Read 0651    __end_of_I2C_Master_Wait 0755  
  __end_of_I2C_Master_Stop 0768         Lcd_Set_Cursor@temp 002F           ___lldiv@quotient 002E  
        I2C_Master_Write@d 0025                   stringdir 0572                   stringtab 0572  
              _SSPCON2bits 0091     __size_of_EUSART_ENVIAR 0013  
