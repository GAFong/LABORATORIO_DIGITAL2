

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Jul 19 16:11:43 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	intentry,global,class=CODE,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    24                           	dabs	1,0x7E,2
    25  0000                     
    26                           ; Version 2.20
    27                           ; Generated 12/02/2020 GMT
    28                           ; 
    29                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC16F887 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60  0000                     	;# 
    61  0001                     	;# 
    62  0002                     	;# 
    63  0003                     	;# 
    64  0004                     	;# 
    65  0005                     	;# 
    66  0006                     	;# 
    67  0007                     	;# 
    68  0008                     	;# 
    69  0009                     	;# 
    70  000A                     	;# 
    71  000B                     	;# 
    72  000C                     	;# 
    73  000D                     	;# 
    74  000E                     	;# 
    75  000E                     	;# 
    76  000F                     	;# 
    77  0010                     	;# 
    78  0011                     	;# 
    79  0012                     	;# 
    80  0013                     	;# 
    81  0014                     	;# 
    82  0015                     	;# 
    83  0015                     	;# 
    84  0016                     	;# 
    85  0017                     	;# 
    86  0018                     	;# 
    87  0019                     	;# 
    88  001A                     	;# 
    89  001B                     	;# 
    90  001B                     	;# 
    91  001C                     	;# 
    92  001D                     	;# 
    93  001E                     	;# 
    94  001F                     	;# 
    95  0081                     	;# 
    96  0085                     	;# 
    97  0086                     	;# 
    98  0087                     	;# 
    99  0088                     	;# 
   100  0089                     	;# 
   101  008C                     	;# 
   102  008D                     	;# 
   103  008E                     	;# 
   104  008F                     	;# 
   105  0090                     	;# 
   106  0091                     	;# 
   107  0092                     	;# 
   108  0093                     	;# 
   109  0093                     	;# 
   110  0093                     	;# 
   111  0094                     	;# 
   112  0095                     	;# 
   113  0096                     	;# 
   114  0097                     	;# 
   115  0098                     	;# 
   116  0099                     	;# 
   117  009A                     	;# 
   118  009B                     	;# 
   119  009C                     	;# 
   120  009D                     	;# 
   121  009E                     	;# 
   122  009F                     	;# 
   123  0105                     	;# 
   124  0107                     	;# 
   125  0108                     	;# 
   126  0109                     	;# 
   127  010C                     	;# 
   128  010C                     	;# 
   129  010D                     	;# 
   130  010E                     	;# 
   131  010F                     	;# 
   132  0185                     	;# 
   133  0187                     	;# 
   134  0188                     	;# 
   135  0189                     	;# 
   136  018C                     	;# 
   137  018D                     	;# 
   138  0000                     	;# 
   139  0001                     	;# 
   140  0002                     	;# 
   141  0003                     	;# 
   142  0004                     	;# 
   143  0005                     	;# 
   144  0006                     	;# 
   145  0007                     	;# 
   146  0008                     	;# 
   147  0009                     	;# 
   148  000A                     	;# 
   149  000B                     	;# 
   150  000C                     	;# 
   151  000D                     	;# 
   152  000E                     	;# 
   153  000E                     	;# 
   154  000F                     	;# 
   155  0010                     	;# 
   156  0011                     	;# 
   157  0012                     	;# 
   158  0013                     	;# 
   159  0014                     	;# 
   160  0015                     	;# 
   161  0015                     	;# 
   162  0016                     	;# 
   163  0017                     	;# 
   164  0018                     	;# 
   165  0019                     	;# 
   166  001A                     	;# 
   167  001B                     	;# 
   168  001B                     	;# 
   169  001C                     	;# 
   170  001D                     	;# 
   171  001E                     	;# 
   172  001F                     	;# 
   173  0081                     	;# 
   174  0085                     	;# 
   175  0086                     	;# 
   176  0087                     	;# 
   177  0088                     	;# 
   178  0089                     	;# 
   179  008C                     	;# 
   180  008D                     	;# 
   181  008E                     	;# 
   182  008F                     	;# 
   183  0090                     	;# 
   184  0091                     	;# 
   185  0092                     	;# 
   186  0093                     	;# 
   187  0093                     	;# 
   188  0093                     	;# 
   189  0094                     	;# 
   190  0095                     	;# 
   191  0096                     	;# 
   192  0097                     	;# 
   193  0098                     	;# 
   194  0099                     	;# 
   195  009A                     	;# 
   196  009B                     	;# 
   197  009C                     	;# 
   198  009D                     	;# 
   199  009E                     	;# 
   200  009F                     	;# 
   201  0105                     	;# 
   202  0107                     	;# 
   203  0108                     	;# 
   204  0109                     	;# 
   205  010C                     	;# 
   206  010C                     	;# 
   207  010D                     	;# 
   208  010E                     	;# 
   209  010F                     	;# 
   210  0185                     	;# 
   211  0187                     	;# 
   212  0188                     	;# 
   213  0189                     	;# 
   214  018C                     	;# 
   215  018D                     	;# 
   216                           
   217                           	psect	idataBANK0
   218  0224                     __pidataBANK0:
   219                           
   220                           ;initializer for _TABLA_HEX
   221  0224  343F               	retlw	63
   222  0225  3400               	retlw	0
   223  0226  3406               	retlw	6
   224  0227  3400               	retlw	0
   225  0228  345B               	retlw	91
   226  0229  3400               	retlw	0
   227  022A  344F               	retlw	79
   228  022B  3400               	retlw	0
   229  022C  3466               	retlw	102
   230  022D  3400               	retlw	0
   231  022E  346D               	retlw	109
   232  022F  3400               	retlw	0
   233  0230  347D               	retlw	125
   234  0231  3400               	retlw	0
   235  0232  3407               	retlw	7
   236  0233  3400               	retlw	0
   237  0234  347F               	retlw	127
   238  0235  3400               	retlw	0
   239  0236  3467               	retlw	103
   240  0237  3400               	retlw	0
   241  0238  3477               	retlw	119
   242  0239  3400               	retlw	0
   243  023A  347C               	retlw	124
   244  023B  3400               	retlw	0
   245  023C  3439               	retlw	57
   246  023D  3400               	retlw	0
   247  023E  345E               	retlw	94
   248  023F  3400               	retlw	0
   249  0240  3479               	retlw	121
   250  0241  3400               	retlw	0
   251  0242  3471               	retlw	113
   252  0243  3400               	retlw	0
   253                           
   254                           ;initializer for _CANAL2
   255  0244  3402               	retlw	2
   256  0245  3400               	retlw	0
   257                           
   258                           ;initializer for _CANAL
   259  0246  3402               	retlw	2
   260  0247  3400               	retlw	0
   261                           
   262                           ;initializer for _select
   263  0248  3401               	retlw	1
   264  0249  3400               	retlw	0
   265                           
   266                           	psect	idataBANK1
   267  026D                     __pidataBANK1:
   268                           
   269                           ;initializer for _digitos
   270  026D  343F               	retlw	63
   271  026E  3400               	retlw	0
   272  026F  3406               	retlw	6
   273  0270  3400               	retlw	0
   274  0271  345B               	retlw	91
   275  0272  3400               	retlw	0
   276  0273  344F               	retlw	79
   277  0274  3400               	retlw	0
   278  0275  3466               	retlw	102
   279  0276  3400               	retlw	0
   280  0277  346D               	retlw	109
   281  0278  3400               	retlw	0
   282  0279  347D               	retlw	125
   283  027A  3400               	retlw	0
   284  027B  3407               	retlw	7
   285  027C  3400               	retlw	0
   286  027D  347F               	retlw	127
   287  027E  3400               	retlw	0
   288  027F  3467               	retlw	103
   289  0280  3400               	retlw	0
   290  0006                     _PORTB	set	6
   291  0009                     _PORTE	set	9
   292  0007                     _PORTC	set	7
   293  0001                     _TMR0	set	1
   294  000B                     _INTCONbits	set	11
   295  0005                     _PORTA	set	5
   296  0008                     _PORTD	set	8
   297  001E                     _ADRESH	set	30
   298  000C                     _PIR1bits	set	12
   299  001F                     _ADCON0bits	set	31
   300  0066                     _ADIF	set	102
   301  0031                     _RB1	set	49
   302  0030                     _RB0	set	48
   303  0058                     _RBIF	set	88
   304  005A                     _T0IF	set	90
   305  0081                     _OPTION_REG	set	129
   306  008F                     _OSCCONbits	set	143
   307  0086                     _TRISB	set	134
   308  0089                     _TRISE	set	137
   309  0088                     _TRISD	set	136
   310  0087                     _TRISC	set	135
   311  0085                     _TRISA	set	133
   312  008C                     _PIE1bits	set	140
   313  009F                     _ADCON1bits	set	159
   314  04B1                     _IOCB1	set	1201
   315  04B0                     _IOCB0	set	1200
   316  04A9                     _WPUB1	set	1193
   317  04A8                     _WPUB0	set	1192
   318  0189                     _ANSELH	set	393
   319  0188                     _ANSEL	set	392
   320                           
   321                           	psect	cinit
   322  0011                     start_initialization:	
   323                           ; #config settings
   324                           
   325  0011                     __initialization:
   326                           
   327                           ; Initialize objects allocated to BANK1
   328  0011  1383               	bcf	3,7	;select IRP bank0
   329  0012  30B4               	movlw	low (__pdataBANK1+20)
   330  0013  00FD               	movwf	btemp+-1
   331  0014  3002               	movlw	high __pidataBANK1
   332  0015  00FE               	movwf	btemp
   333  0016  306D               	movlw	low __pidataBANK1
   334  0017  00FF               	movwf	btemp+1
   335  0018  30A0               	movlw	low __pdataBANK1
   336  0019  0084               	movwf	4
   337  001A  120A  118A  2285  120A  118A  	fcall	init_ram0
   338                           
   339                           ; Initialize objects allocated to BANK0
   340  001F  3046               	movlw	low (__pdataBANK0+38)
   341  0020  00FD               	movwf	btemp+-1
   342  0021  3002               	movlw	high __pidataBANK0
   343  0022  00FE               	movwf	btemp
   344  0023  3024               	movlw	low __pidataBANK0
   345  0024  00FF               	movwf	btemp+1
   346  0025  3020               	movlw	low __pdataBANK0
   347  0026  0084               	movwf	4
   348  0027  120A  118A  2285  120A  118A  	fcall	init_ram0
   349                           
   350                           ; Clear objects allocated to BANK0
   351  002C  01D8               	clrf	__pbssBANK0& (0+127)
   352  002D  01D9               	clrf	(__pbssBANK0+1)& (0+127)
   353  002E  01DA               	clrf	(__pbssBANK0+2)& (0+127)
   354  002F  01DB               	clrf	(__pbssBANK0+3)& (0+127)
   355  0030  01DC               	clrf	(__pbssBANK0+4)& (0+127)
   356  0031  01DD               	clrf	(__pbssBANK0+5)& (0+127)
   357  0032  01DE               	clrf	(__pbssBANK0+6)& (0+127)
   358  0033  01DF               	clrf	(__pbssBANK0+7)& (0+127)
   359  0034  01E0               	clrf	(__pbssBANK0+8)& (0+127)
   360  0035  01E1               	clrf	(__pbssBANK0+9)& (0+127)
   361                           
   362                           ; Clear objects allocated to COMMON
   363  0036  01FA               	clrf	__pbssCOMMON& (0+127)
   364  0037  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   365  0038  01FC               	clrf	(__pbssCOMMON+2)& (0+127)
   366  0039  01FD               	clrf	(__pbssCOMMON+3)& (0+127)
   367  003A                     end_of_initialization:	
   368                           ;End of C runtime variable initialization code
   369                           
   370  003A                     __end_of__initialization:
   371  003A  0183               	clrf	3
   372  003B  120A  118A  283E   	ljmp	_main	;jump to C main() function
   373                           
   374                           	psect	bssCOMMON
   375  007A                     __pbssCOMMON:
   376  007A                     _HEX2:
   377  007A                     	ds	2
   378  007C                     _HEX1:
   379  007C                     	ds	2
   380                           
   381                           	psect	bssBANK0
   382  0058                     __pbssBANK0:
   383  0058                     _i:
   384  0058                     	ds	2
   385  005A                     _VALOR_ADC:
   386  005A                     	ds	2
   387  005C                     _flag2:
   388  005C                     	ds	2
   389  005E                     _flag1:
   390  005E                     	ds	2
   391  0060                     _CONTADOR:
   392  0060                     	ds	2
   393                           
   394                           	psect	dataBANK0
   395  0020                     __pdataBANK0:
   396  0020                     _TABLA_HEX:
   397  0020                     	ds	32
   398  0040                     _CANAL2:
   399  0040                     	ds	2
   400  0042                     _CANAL:
   401  0042                     	ds	2
   402  0044                     _select:
   403  0044                     	ds	2
   404                           
   405                           	psect	dataBANK1
   406  00A0                     __pdataBANK1:
   407  00A0                     _digitos:
   408  00A0                     	ds	20
   409                           
   410                           	psect	inittext
   411  0281                     init_fetch0:	
   412                           ;	Called with low address in FSR and high address in W
   413                           
   414  0281  087E               	movf	btemp,w
   415  0282  008A               	movwf	10
   416  0283  087F               	movf	btemp+1,w
   417  0284  0082               	movwf	2
   418  0285                     init_ram0:	
   419                           ;Called with:
   420                           ;	high address of idata address in btemp 
   421                           ;	low address of idata address in btemp+1 
   422                           ;	low address of data in FSR
   423                           ;	high address + 1 of data in btemp-1
   424                           
   425  0285  120A  118A  2281  120A  118A  	fcall	init_fetch0
   426  028A  0080               	movwf	0
   427  028B  0A84               	incf	4,f
   428  028C  0804               	movf	4,w
   429  028D  067D               	xorwf	btemp+-1,w
   430  028E  1903               	btfsc	3,2
   431  028F  3400               	retlw	0
   432  0290  0AFF               	incf	btemp+1,f
   433  0291  1903               	btfsc	3,2
   434  0292  0AFE               	incf	btemp,f
   435  0293  2A85               	goto	init_ram0
   436                           
   437                           	psect	cstackCOMMON
   438  0070                     __pcstackCOMMON:
   439  0070                     ?_setup:
   440  0070                     ?_DISPLAY_HEX:	
   441                           ; 1 bytes @ 0x0
   442                           
   443  0070                     ?_isr:	
   444                           ; 1 bytes @ 0x0
   445                           
   446  0070                     ?_main:	
   447                           ; 1 bytes @ 0x0
   448                           
   449  0070                     ?_ADC_READ:	
   450                           ; 1 bytes @ 0x0
   451                           
   452  0070                     DISPLAY_HEX@VHEX1:	
   453                           ; 2 bytes @ 0x0
   454                           
   455                           
   456                           ; 2 bytes @ 0x0
   457  0070                     	ds	2
   458  0072                     ??_ADC_READ:
   459  0072                     DISPLAY_HEX@VHEX2:	
   460                           ; 1 bytes @ 0x2
   461                           
   462                           
   463                           ; 2 bytes @ 0x2
   464  0072                     	ds	2
   465  0074                     ??_DISPLAY_HEX:
   466  0074                     ADC_READ@LECT:	
   467                           ; 1 bytes @ 0x4
   468                           
   469                           
   470                           ; 2 bytes @ 0x4
   471  0074                     	ds	2
   472  0076                     DISPLAY_HEX@select:
   473                           
   474                           ; 1 bytes @ 0x6
   475  0076                     	ds	1
   476  0077                     ??_isr:
   477                           
   478                           ; 1 bytes @ 0x7
   479  0077                     	ds	3
   480                           
   481                           	psect	cstackBANK0
   482  0046                     __pcstackBANK0:
   483  0046                     ?_ADC_INIT:
   484  0046                     ?___awdiv:	
   485                           ; 1 bytes @ 0x0
   486                           
   487  0046                     ADC_INIT@canal:	
   488                           ; 2 bytes @ 0x0
   489                           
   490  0046                     ___awdiv@divisor:	
   491                           ; 2 bytes @ 0x0
   492                           
   493                           
   494                           ; 2 bytes @ 0x0
   495  0046                     	ds	2
   496  0048                     ??_ADC_INIT:
   497  0048                     ___awdiv@dividend:	
   498                           ; 1 bytes @ 0x2
   499                           
   500                           
   501                           ; 2 bytes @ 0x2
   502  0048                     	ds	1
   503  0049                     ??_setup:
   504                           
   505                           ; 1 bytes @ 0x3
   506  0049                     	ds	1
   507  004A                     ??___awdiv:
   508                           
   509                           ; 1 bytes @ 0x4
   510  004A                     	ds	1
   511  004B                     ___awdiv@counter:
   512                           
   513                           ; 1 bytes @ 0x5
   514  004B                     	ds	1
   515  004C                     ___awdiv@sign:
   516                           
   517                           ; 1 bytes @ 0x6
   518  004C                     	ds	1
   519  004D                     ___awdiv@quotient:
   520                           
   521                           ; 2 bytes @ 0x7
   522  004D                     	ds	2
   523  004F                     ?_BIN_HEX:
   524  004F                     BIN_HEX@VBIN:	
   525                           ; 1 bytes @ 0x9
   526                           
   527                           
   528                           ; 2 bytes @ 0x9
   529  004F                     	ds	2
   530  0051                     BIN_HEX@VHEX1:
   531                           
   532                           ; 1 bytes @ 0xB
   533  0051                     	ds	1
   534  0052                     BIN_HEX@VHEX2:
   535                           
   536                           ; 1 bytes @ 0xC
   537  0052                     	ds	1
   538  0053                     ??_BIN_HEX:
   539                           
   540                           ; 1 bytes @ 0xD
   541  0053                     	ds	2
   542  0055                     ??_main:
   543                           
   544                           ; 1 bytes @ 0xF
   545  0055                     	ds	3
   546                           
   547                           	psect	maintext
   548  003E                     __pmaintext:	
   549 ;;
   550 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   551 ;;
   552 ;; *************** function _main *****************
   553 ;; Defined at:
   554 ;;		line 111 in file "main.c"
   555 ;; Parameters:    Size  Location     Type
   556 ;;		None
   557 ;; Auto vars:     Size  Location     Type
   558 ;;		None
   559 ;; Return value:  Size  Location     Type
   560 ;;                  1    wreg      void 
   561 ;; Registers used:
   562 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   563 ;; Tracked objects:
   564 ;;		On entry : B00/0
   565 ;;		On exit  : 0/0
   566 ;;		Unchanged: 0/0
   567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   568 ;;      Params:         0       0       0       0       0
   569 ;;      Locals:         0       0       0       0       0
   570 ;;      Temps:          0       3       0       0       0
   571 ;;      Totals:         0       3       0       0       0
   572 ;;Total ram usage:        3 bytes
   573 ;; Hardware stack levels required when called:    4
   574 ;; This function calls:
   575 ;;		_BIN_HEX
   576 ;;		_setup
   577 ;; This function is called by:
   578 ;;		Startup code after reset
   579 ;; This function uses a non-reentrant model
   580 ;;
   581                           
   582                           
   583                           ;psect for function _main
   584  003E                     _main:
   585  003E                     l1139:	
   586                           ;incstack = 0
   587                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   588                           
   589                           
   590                           ;main.c: 112:     setup();
   591  003E  120A  118A  21C3  120A  118A  	fcall	_setup
   592  0043                     l1141:
   593                           
   594                           ;main.c: 113:     ADCON0bits.GO = 1;
   595  0043  1283               	bcf	3,5	;RP0=0, select bank0
   596  0044  1303               	bcf	3,6	;RP1=0, select bank0
   597  0045  149F               	bsf	31,1	;volatile
   598  0046                     l1143:
   599                           
   600                           ;main.c: 115:         PORTC = CONTADOR;
   601  0046  1283               	bcf	3,5	;RP0=0, select bank0
   602  0047  1303               	bcf	3,6	;RP1=0, select bank0
   603  0048  0860               	movf	_CONTADOR,w
   604  0049  0087               	movwf	7	;volatile
   605  004A                     l1145:
   606                           
   607                           ;main.c: 117:         _delay((unsigned long)((100)*(4000000/4000000.0)));
   608  004A  3020               	movlw	32
   609  004B  1283               	bcf	3,5	;RP0=0, select bank0
   610  004C  1303               	bcf	3,6	;RP1=0, select bank0
   611  004D  00D5               	movwf	??_main
   612  004E                     u397:
   613  004E  0BD5               	decfsz	??_main,f
   614  004F  284E               	goto	u397
   615  0050  0000               	nop
   616  0051                     l1147:
   617                           
   618                           ;main.c: 118:         ADCON0bits.GO = 1;
   619  0051  1283               	bcf	3,5	;RP0=0, select bank0
   620  0052  1303               	bcf	3,6	;RP1=0, select bank0
   621  0053  149F               	bsf	31,1	;volatile
   622  0054                     l1149:
   623                           
   624                           ;main.c: 119:         BIN_HEX(VALOR_ADC, &HEX1, &HEX2);
   625  0054  085B               	movf	_VALOR_ADC+1,w
   626  0055  00D0               	movwf	BIN_HEX@VBIN+1
   627  0056  085A               	movf	_VALOR_ADC,w
   628  0057  00CF               	movwf	BIN_HEX@VBIN
   629  0058  307C               	movlw	(low (_HEX1| 0))& (0+255)
   630  0059  00D5               	movwf	??_main
   631  005A  0855               	movf	??_main,w
   632  005B  00D1               	movwf	BIN_HEX@VHEX1
   633  005C  307A               	movlw	(low (_HEX2| 0))& (0+255)
   634  005D  00D6               	movwf	??_main+1
   635  005E  0856               	movf	??_main+1,w
   636  005F  00D2               	movwf	BIN_HEX@VHEX2
   637  0060  120A  118A  21FC  120A  118A  	fcall	_BIN_HEX
   638  0065                     l1151:
   639                           
   640                           ;main.c: 120:        if (VALOR_ADC == CONTADOR){
   641  0065  1283               	bcf	3,5	;RP0=0, select bank0
   642  0066  1303               	bcf	3,6	;RP1=0, select bank0
   643  0067  0861               	movf	_CONTADOR+1,w
   644  0068  065B               	xorwf	_VALOR_ADC+1,w
   645  0069  1D03               	skipz
   646  006A  286D               	goto	u375
   647  006B  0860               	movf	_CONTADOR,w
   648  006C  065A               	xorwf	_VALOR_ADC,w
   649  006D                     u375:
   650  006D  1D03               	skipz
   651  006E  2870               	goto	u371
   652  006F  2871               	goto	u370
   653  0070                     u371:
   654  0070  28AE               	goto	l1171
   655  0071                     u370:
   656  0071                     l1153:
   657                           
   658                           ;main.c: 121:            for (i=0; i < 20; i++){
   659  0071  01D8               	clrf	_i
   660  0072  01D9               	clrf	_i+1
   661  0073                     l1159:
   662                           
   663                           ;main.c: 122:                PORTE = 0X02;
   664  0073  3002               	movlw	2
   665  0074  1283               	bcf	3,5	;RP0=0, select bank0
   666  0075  1303               	bcf	3,6	;RP1=0, select bank0
   667  0076  0089               	movwf	9	;volatile
   668                           
   669                           ;main.c: 123:                _delay((unsigned long)((1000)*(4000000/4000000.0)));
   670  0077  30C7               	movlw	199
   671  0078  1283               	bcf	3,5	;RP0=0, select bank0
   672  0079  1303               	bcf	3,6	;RP1=0, select bank0
   673  007A  00D5               	movwf	??_main
   674  007B                     u407:
   675  007B  287C               	nop2
   676  007C  0BD5               	decfsz	??_main,f
   677  007D  287B               	goto	u407
   678  007E  287F               	nop2
   679  007F                     l1161:
   680                           
   681                           ;main.c: 124:                PORTE = 0X00;
   682  007F  1283               	bcf	3,5	;RP0=0, select bank0
   683  0080  1303               	bcf	3,6	;RP1=0, select bank0
   684  0081  0189               	clrf	9	;volatile
   685  0082                     l1163:
   686                           
   687                           ;main.c: 125:                _delay((unsigned long)((1000)*(4000000/4000000.0)));
   688  0082  30C7               	movlw	199
   689  0083  1283               	bcf	3,5	;RP0=0, select bank0
   690  0084  1303               	bcf	3,6	;RP1=0, select bank0
   691  0085  00D5               	movwf	??_main
   692  0086                     u417:
   693  0086  2887               	nop2
   694  0087  0BD5               	decfsz	??_main,f
   695  0088  2886               	goto	u417
   696  0089  288A               	nop2
   697  008A                     l1165:
   698                           
   699                           ;main.c: 126:            }
   700  008A  3001               	movlw	1
   701  008B  1283               	bcf	3,5	;RP0=0, select bank0
   702  008C  1303               	bcf	3,6	;RP1=0, select bank0
   703  008D  07D8               	addwf	_i,f
   704  008E  1803               	skipnc
   705  008F  0AD9               	incf	_i+1,f
   706  0090  3000               	movlw	0
   707  0091  07D9               	addwf	_i+1,f
   708  0092                     l1167:
   709  0092  0859               	movf	_i+1,w
   710  0093  3A80               	xorlw	128
   711  0094  00FF               	movwf	btemp+1
   712  0095  3080               	movlw	128
   713  0096  027F               	subwf	btemp+1,w
   714  0097  1D03               	skipz
   715  0098  289B               	goto	u385
   716  0099  3014               	movlw	20
   717  009A  0258               	subwf	_i,w
   718  009B                     u385:
   719  009B  1C03               	skipc
   720  009C  289E               	goto	u381
   721  009D  289F               	goto	u380
   722  009E                     u381:
   723  009E  2873               	goto	l1159
   724  009F                     u380:
   725  009F                     l1169:
   726                           
   727                           ;main.c: 127:            _delay((unsigned long)((500)*(4000000/4000.0)));
   728  009F  3003               	movlw	3
   729  00A0  1283               	bcf	3,5	;RP0=0, select bank0
   730  00A1  1303               	bcf	3,6	;RP1=0, select bank0
   731  00A2  00D7               	movwf	??_main+2
   732  00A3  308A               	movlw	138
   733  00A4  00D6               	movwf	??_main+1
   734  00A5  3055               	movlw	85
   735  00A6  00D5               	movwf	??_main
   736  00A7                     u427:
   737  00A7  0BD5               	decfsz	??_main,f
   738  00A8  28A7               	goto	u427
   739  00A9  0BD6               	decfsz	??_main+1,f
   740  00AA  28A7               	goto	u427
   741  00AB  0BD7               	decfsz	??_main+2,f
   742  00AC  28A7               	goto	u427
   743                           
   744                           ;main.c: 136:        }
   745  00AD  2846               	goto	l1143
   746  00AE                     l1171:
   747                           
   748                           ;main.c: 138:             PORTE = 0;
   749  00AE  0189               	clrf	9	;volatile
   750  00AF  2846               	goto	l1143
   751  00B0  120A  118A  280E   	ljmp	start
   752  00B3                     __end_of_main:
   753                           
   754                           	psect	text1
   755  01C3                     __ptext1:	
   756 ;; *************** function _setup *****************
   757 ;; Defined at:
   758 ;;		line 145 in file "main.c"
   759 ;; Parameters:    Size  Location     Type
   760 ;;		None
   761 ;; Auto vars:     Size  Location     Type
   762 ;;		None
   763 ;; Return value:  Size  Location     Type
   764 ;;                  1    wreg      void 
   765 ;; Registers used:
   766 ;;		wreg, status,2, status,0, pclath, cstack
   767 ;; Tracked objects:
   768 ;;		On entry : 0/0
   769 ;;		On exit  : 0/0
   770 ;;		Unchanged: 0/0
   771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   772 ;;      Params:         0       0       0       0       0
   773 ;;      Locals:         0       0       0       0       0
   774 ;;      Temps:          0       0       0       0       0
   775 ;;      Totals:         0       0       0       0       0
   776 ;;Total ram usage:        0 bytes
   777 ;; Hardware stack levels used:    1
   778 ;; Hardware stack levels required when called:    3
   779 ;; This function calls:
   780 ;;		_ADC_INIT
   781 ;; This function is called by:
   782 ;;		_main
   783 ;; This function uses a non-reentrant model
   784 ;;
   785                           
   786                           
   787                           ;psect for function _setup
   788  01C3                     _setup:
   789  01C3                     l1051:	
   790                           ;incstack = 0
   791                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   792                           
   793                           
   794                           ;main.c: 147:     ANSEL = 0B00000100;
   795  01C3  3004               	movlw	4
   796  01C4  1683               	bsf	3,5	;RP0=1, select bank3
   797  01C5  1703               	bsf	3,6	;RP1=1, select bank3
   798  01C6  0088               	movwf	8	;volatile
   799  01C7                     l1053:
   800                           
   801                           ;main.c: 148:     ANSELH = 0X00;
   802  01C7  0189               	clrf	9	;volatile
   803  01C8                     l1055:
   804                           
   805                           ;main.c: 150:     TRISA = 0B00000100;
   806  01C8  3004               	movlw	4
   807  01C9  1683               	bsf	3,5	;RP0=1, select bank1
   808  01CA  1303               	bcf	3,6	;RP1=0, select bank1
   809  01CB  0085               	movwf	5	;volatile
   810                           
   811                           ;main.c: 151:     TRISC = 0X00;
   812  01CC  0187               	clrf	7	;volatile
   813                           
   814                           ;main.c: 152:     TRISD = 0X00;
   815  01CD  0188               	clrf	8	;volatile
   816                           
   817                           ;main.c: 153:     TRISE = 0X00;
   818  01CE  0189               	clrf	9	;volatile
   819  01CF                     l1057:
   820                           
   821                           ;main.c: 154:     TRISB = 0B00000011;
   822  01CF  3003               	movlw	3
   823  01D0  0086               	movwf	6	;volatile
   824  01D1                     l1059:
   825                           
   826                           ;main.c: 156:     PORTA = 0X00;
   827  01D1  1283               	bcf	3,5	;RP0=0, select bank0
   828  01D2  1303               	bcf	3,6	;RP1=0, select bank0
   829  01D3  0185               	clrf	5	;volatile
   830  01D4                     l1061:
   831                           
   832                           ;main.c: 157:     PORTB = 0X00;
   833  01D4  0186               	clrf	6	;volatile
   834  01D5                     l1063:
   835                           
   836                           ;main.c: 158:     PORTC = 0X00;
   837  01D5  0187               	clrf	7	;volatile
   838  01D6                     l1065:
   839                           
   840                           ;main.c: 159:     PORTD = 0X00;
   841  01D6  0188               	clrf	8	;volatile
   842  01D7                     l1067:
   843                           
   844                           ;main.c: 160:     PORTE = 0X00;
   845  01D7  0189               	clrf	9	;volatile
   846  01D8                     l1069:
   847                           
   848                           ;main.c: 163:     OSCCONbits.IRCF2 = 1;
   849  01D8  1683               	bsf	3,5	;RP0=1, select bank1
   850  01D9  1303               	bcf	3,6	;RP1=0, select bank1
   851  01DA  170F               	bsf	15,6	;volatile
   852  01DB                     l1071:
   853                           
   854                           ;main.c: 164:     OSCCONbits.IRCF1 = 1;
   855  01DB  168F               	bsf	15,5	;volatile
   856  01DC                     l1073:
   857                           
   858                           ;main.c: 165:     OSCCONbits.IRCF0 = 0;
   859  01DC  120F               	bcf	15,4	;volatile
   860  01DD                     l1075:
   861                           
   862                           ;main.c: 166:     OSCCONbits.SCS = 1;
   863  01DD  140F               	bsf	15,0	;volatile
   864                           
   865                           ;main.c: 169:     OPTION_REG = 0B01010100;
   866  01DE  3054               	movlw	84
   867  01DF  0081               	movwf	1	;volatile
   868                           
   869                           ;main.c: 170:     TMR0 = 100;
   870  01E0  3064               	movlw	100
   871  01E1  1283               	bcf	3,5	;RP0=0, select bank0
   872  01E2  1303               	bcf	3,6	;RP1=0, select bank0
   873  01E3  0081               	movwf	1	;volatile
   874  01E4                     l1077:
   875                           
   876                           ;main.c: 173:     WPUB0 = 1 ;
   877  01E4  1683               	bsf	3,5	;RP0=1, select bank1
   878  01E5  1303               	bcf	3,6	;RP1=0, select bank1
   879  01E6  1415               	bsf	21,0	;volatile
   880  01E7                     l1079:
   881                           
   882                           ;main.c: 174:     WPUB1 = 1 ;
   883  01E7  1495               	bsf	21,1	;volatile
   884  01E8                     l1081:
   885                           
   886                           ;main.c: 175:     IOCB0 = 1 ;
   887  01E8  1416               	bsf	22,0	;volatile
   888  01E9                     l1083:
   889                           
   890                           ;main.c: 176:     IOCB1 = 1 ;
   891  01E9  1496               	bsf	22,1	;volatile
   892  01EA                     l1085:
   893                           
   894                           ;main.c: 178:     ADC_INIT(CANAL);
   895  01EA  3002               	movlw	2
   896  01EB  1283               	bcf	3,5	;RP0=0, select bank0
   897  01EC  1303               	bcf	3,6	;RP1=0, select bank0
   898  01ED  00C6               	movwf	ADC_INIT@canal
   899  01EE  3000               	movlw	0
   900  01EF  00C7               	movwf	ADC_INIT@canal+1
   901  01F0  120A  118A  224A  120A  118A  	fcall	_ADC_INIT
   902  01F5                     l1087:
   903                           
   904                           ;main.c: 180:     INTCONbits.GIE = 1;
   905  01F5  178B               	bsf	11,7	;volatile
   906  01F6                     l1089:
   907                           
   908                           ;main.c: 181:     INTCONbits.PEIE = 1;
   909  01F6  170B               	bsf	11,6	;volatile
   910  01F7                     l1091:
   911                           
   912                           ;main.c: 182:     INTCONbits.T0IE = 1;
   913  01F7  168B               	bsf	11,5	;volatile
   914  01F8                     l1093:
   915                           
   916                           ;main.c: 183:     INTCONbits.T0IF = 0;
   917  01F8  110B               	bcf	11,2	;volatile
   918  01F9                     l1095:
   919                           
   920                           ;main.c: 184:     INTCONbits.RBIE = 1;
   921  01F9  158B               	bsf	11,3	;volatile
   922  01FA                     l1097:
   923                           
   924                           ;main.c: 185:     INTCONbits.RBIF = 0;
   925  01FA  100B               	bcf	11,0	;volatile
   926  01FB                     l133:
   927  01FB  0008               	return
   928  01FC                     __end_of_setup:
   929                           
   930                           	psect	text2
   931  024A                     __ptext2:	
   932 ;; *************** function _ADC_INIT *****************
   933 ;; Defined at:
   934 ;;		line 12 in file "./ADC_LIB.h"
   935 ;; Parameters:    Size  Location     Type
   936 ;;  canal           2    0[BANK0 ] int 
   937 ;; Auto vars:     Size  Location     Type
   938 ;;		None
   939 ;; Return value:  Size  Location     Type
   940 ;;                  1    wreg      void 
   941 ;; Registers used:
   942 ;;		wreg, status,2, status,0
   943 ;; Tracked objects:
   944 ;;		On entry : 0/0
   945 ;;		On exit  : 0/0
   946 ;;		Unchanged: 0/0
   947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   948 ;;      Params:         0       2       0       0       0
   949 ;;      Locals:         0       0       0       0       0
   950 ;;      Temps:          0       1       0       0       0
   951 ;;      Totals:         0       3       0       0       0
   952 ;;Total ram usage:        3 bytes
   953 ;; Hardware stack levels used:    1
   954 ;; Hardware stack levels required when called:    2
   955 ;; This function calls:
   956 ;;		Nothing
   957 ;; This function is called by:
   958 ;;		_setup
   959 ;; This function uses a non-reentrant model
   960 ;;
   961                           
   962                           
   963                           ;psect for function _ADC_INIT
   964  024A                     _ADC_INIT:
   965  024A                     l959:	
   966                           ;incstack = 0
   967                           ; Regs used in _ADC_INIT: [wreg+status,2+status,0]
   968                           
   969                           
   970                           ;./ADC_LIB.h: 14:     ADCON0bits.ADON = 0X01;
   971  024A  1283               	bcf	3,5	;RP0=0, select bank0
   972  024B  1303               	bcf	3,6	;RP1=0, select bank0
   973  024C  141F               	bsf	31,0	;volatile
   974  024D                     l961:
   975                           
   976                           ;./ADC_LIB.h: 15:     ADCON0bits.CHS = canal;
   977  024D  0846               	movf	ADC_INIT@canal,w
   978  024E  00C8               	movwf	??_ADC_INIT
   979  024F  0DC8               	rlf	??_ADC_INIT,f
   980  0250  0DC8               	rlf	??_ADC_INIT,f
   981  0251  081F               	movf	31,w	;volatile
   982  0252  0648               	xorwf	??_ADC_INIT,w
   983  0253  39C3               	andlw	-61
   984  0254  0648               	xorwf	??_ADC_INIT,w
   985  0255  009F               	movwf	31	;volatile
   986  0256                     l963:
   987                           
   988                           ;./ADC_LIB.h: 16:     _delay((unsigned long)((100)*(4000000/4000000.0)));
   989  0256  3020               	movlw	32
   990  0257  1283               	bcf	3,5	;RP0=0, select bank0
   991  0258  1303               	bcf	3,6	;RP1=0, select bank0
   992  0259  00C8               	movwf	??_ADC_INIT
   993  025A                     u437:
   994  025A  0BC8               	decfsz	??_ADC_INIT,f
   995  025B  2A5A               	goto	u437
   996  025C  0000               	nop
   997  025D                     l965:
   998                           
   999                           ;./ADC_LIB.h: 17:     ADCON0bits.ADCS = 0X01;
  1000  025D  1283               	bcf	3,5	;RP0=0, select bank0
  1001  025E  1303               	bcf	3,6	;RP1=0, select bank0
  1002  025F  081F               	movf	31,w	;volatile
  1003  0260  393F               	andlw	-193
  1004  0261  3840               	iorlw	64
  1005  0262  009F               	movwf	31	;volatile
  1006  0263                     l967:
  1007                           
  1008                           ;./ADC_LIB.h: 18:     ADCON1bits.ADFM = 0;
  1009  0263  1683               	bsf	3,5	;RP0=1, select bank1
  1010  0264  1303               	bcf	3,6	;RP1=0, select bank1
  1011  0265  139F               	bcf	31,7	;volatile
  1012  0266                     l969:
  1013                           
  1014                           ;./ADC_LIB.h: 19:     ADCON1bits.VCFG0 = 0;
  1015  0266  121F               	bcf	31,4	;volatile
  1016  0267                     l971:
  1017                           
  1018                           ;./ADC_LIB.h: 20:     ADCON1bits.VCFG1 = 0;
  1019  0267  129F               	bcf	31,5	;volatile
  1020  0268                     l973:
  1021                           
  1022                           ;./ADC_LIB.h: 21:     PIE1bits.ADIE = 1;
  1023  0268  170C               	bsf	12,6	;volatile
  1024  0269                     l975:
  1025                           
  1026                           ;./ADC_LIB.h: 22:     PIR1bits.ADIF = 0;
  1027  0269  1283               	bcf	3,5	;RP0=0, select bank0
  1028  026A  1303               	bcf	3,6	;RP1=0, select bank0
  1029  026B  130C               	bcf	12,6	;volatile
  1030  026C                     l67:
  1031  026C  0008               	return
  1032  026D                     __end_of_ADC_INIT:
  1033                           
  1034                           	psect	text3
  1035  01FC                     __ptext3:	
  1036 ;; *************** function _BIN_HEX *****************
  1037 ;; Defined at:
  1038 ;;		line 44 in file "./DISPLAY_LIB.h"
  1039 ;; Parameters:    Size  Location     Type
  1040 ;;  VBIN            2    9[BANK0 ] int 
  1041 ;;  VHEX1           1   11[BANK0 ] PTR int 
  1042 ;;		 -> HEX1(2), 
  1043 ;;  VHEX2           1   12[BANK0 ] PTR int 
  1044 ;;		 -> HEX2(2), 
  1045 ;; Auto vars:     Size  Location     Type
  1046 ;;		None
  1047 ;; Return value:  Size  Location     Type
  1048 ;;                  1    wreg      void 
  1049 ;; Registers used:
  1050 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1051 ;; Tracked objects:
  1052 ;;		On entry : 0/0
  1053 ;;		On exit  : 0/0
  1054 ;;		Unchanged: 0/0
  1055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1056 ;;      Params:         0       4       0       0       0
  1057 ;;      Locals:         0       0       0       0       0
  1058 ;;      Temps:          0       2       0       0       0
  1059 ;;      Totals:         0       6       0       0       0
  1060 ;;Total ram usage:        6 bytes
  1061 ;; Hardware stack levels used:    1
  1062 ;; Hardware stack levels required when called:    3
  1063 ;; This function calls:
  1064 ;;		___awdiv
  1065 ;; This function is called by:
  1066 ;;		_main
  1067 ;; This function uses a non-reentrant model
  1068 ;;
  1069                           
  1070                           
  1071                           ;psect for function _BIN_HEX
  1072  01FC                     _BIN_HEX:
  1073  01FC                     l1047:	
  1074                           ;incstack = 0
  1075                           ; Regs used in _BIN_HEX: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1076                           
  1077                           
  1078                           ;./DISPLAY_LIB.h: 45:     *VHEX1 = VBIN & 0X0F;
  1079  01FC  300F               	movlw	15
  1080  01FD  1283               	bcf	3,5	;RP0=0, select bank0
  1081  01FE  1303               	bcf	3,6	;RP1=0, select bank0
  1082  01FF  054F               	andwf	BIN_HEX@VBIN,w
  1083  0200  00D3               	movwf	??_BIN_HEX
  1084  0201  3000               	movlw	0
  1085  0202  0550               	andwf	BIN_HEX@VBIN+1,w
  1086  0203  00D4               	movwf	??_BIN_HEX+1
  1087  0204  0851               	movf	BIN_HEX@VHEX1,w
  1088  0205  0084               	movwf	4
  1089  0206  0853               	movf	??_BIN_HEX,w
  1090  0207  0080               	movwf	0
  1091  0208  0A84               	incf	4,f
  1092  0209  0854               	movf	??_BIN_HEX+1,w
  1093  020A  0080               	movwf	0
  1094  020B                     l1049:
  1095                           
  1096                           ;./DISPLAY_LIB.h: 46:     *VHEX2 = (VBIN & 0XF0)/16;
  1097  020B  3010               	movlw	16
  1098  020C  00C6               	movwf	___awdiv@divisor
  1099  020D  3000               	movlw	0
  1100  020E  00C7               	movwf	___awdiv@divisor+1
  1101  020F  30F0               	movlw	240
  1102  0210  054F               	andwf	BIN_HEX@VBIN,w
  1103  0211  00C8               	movwf	___awdiv@dividend
  1104  0212  3000               	movlw	0
  1105  0213  0550               	andwf	BIN_HEX@VBIN+1,w
  1106  0214  00C9               	movwf	___awdiv@dividend+1
  1107  0215  120A  118A  20B3  120A  118A  	fcall	___awdiv
  1108  021A  1283               	bcf	3,5	;RP0=0, select bank0
  1109  021B  1303               	bcf	3,6	;RP1=0, select bank0
  1110  021C  0852               	movf	BIN_HEX@VHEX2,w
  1111  021D  0084               	movwf	4
  1112  021E  0846               	movf	?___awdiv,w
  1113  021F  0080               	movwf	0
  1114  0220  0A84               	incf	4,f
  1115  0221  0847               	movf	?___awdiv+1,w
  1116  0222  0080               	movwf	0
  1117  0223                     l82:
  1118  0223  0008               	return
  1119  0224                     __end_of_BIN_HEX:
  1120                           
  1121                           	psect	text4
  1122  00B3                     __ptext4:	
  1123 ;; *************** function ___awdiv *****************
  1124 ;; Defined at:
  1125 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  1126 ;; Parameters:    Size  Location     Type
  1127 ;;  divisor         2    0[BANK0 ] int 
  1128 ;;  dividend        2    2[BANK0 ] int 
  1129 ;; Auto vars:     Size  Location     Type
  1130 ;;  quotient        2    7[BANK0 ] int 
  1131 ;;  sign            1    6[BANK0 ] unsigned char 
  1132 ;;  counter         1    5[BANK0 ] unsigned char 
  1133 ;; Return value:  Size  Location     Type
  1134 ;;                  2    0[BANK0 ] int 
  1135 ;; Registers used:
  1136 ;;		wreg, status,2, status,0
  1137 ;; Tracked objects:
  1138 ;;		On entry : 0/0
  1139 ;;		On exit  : 0/0
  1140 ;;		Unchanged: 0/0
  1141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1142 ;;      Params:         0       4       0       0       0
  1143 ;;      Locals:         0       4       0       0       0
  1144 ;;      Temps:          0       1       0       0       0
  1145 ;;      Totals:         0       9       0       0       0
  1146 ;;Total ram usage:        9 bytes
  1147 ;; Hardware stack levels used:    1
  1148 ;; Hardware stack levels required when called:    2
  1149 ;; This function calls:
  1150 ;;		Nothing
  1151 ;; This function is called by:
  1152 ;;		_BIN_HEX
  1153 ;; This function uses a non-reentrant model
  1154 ;;
  1155                           
  1156                           
  1157                           ;psect for function ___awdiv
  1158  00B3                     ___awdiv:
  1159  00B3                     l977:	
  1160                           ;incstack = 0
  1161                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1162                           
  1163  00B3  1283               	bcf	3,5	;RP0=0, select bank0
  1164  00B4  1303               	bcf	3,6	;RP1=0, select bank0
  1165  00B5  01CC               	clrf	___awdiv@sign
  1166  00B6                     l979:
  1167  00B6  1FC7               	btfss	___awdiv@divisor+1,7
  1168  00B7  28B9               	goto	u201
  1169  00B8  28BA               	goto	u200
  1170  00B9                     u201:
  1171  00B9  28C1               	goto	l985
  1172  00BA                     u200:
  1173  00BA                     l981:
  1174  00BA  09C6               	comf	___awdiv@divisor,f
  1175  00BB  09C7               	comf	___awdiv@divisor+1,f
  1176  00BC  0AC6               	incf	___awdiv@divisor,f
  1177  00BD  1903               	skipnz
  1178  00BE  0AC7               	incf	___awdiv@divisor+1,f
  1179  00BF                     l983:
  1180  00BF  01CC               	clrf	___awdiv@sign
  1181  00C0  0ACC               	incf	___awdiv@sign,f
  1182  00C1                     l985:
  1183  00C1  1FC9               	btfss	___awdiv@dividend+1,7
  1184  00C2  28C4               	goto	u211
  1185  00C3  28C5               	goto	u210
  1186  00C4                     u211:
  1187  00C4  28CE               	goto	l991
  1188  00C5                     u210:
  1189  00C5                     l987:
  1190  00C5  09C8               	comf	___awdiv@dividend,f
  1191  00C6  09C9               	comf	___awdiv@dividend+1,f
  1192  00C7  0AC8               	incf	___awdiv@dividend,f
  1193  00C8  1903               	skipnz
  1194  00C9  0AC9               	incf	___awdiv@dividend+1,f
  1195  00CA                     l989:
  1196  00CA  3001               	movlw	1
  1197  00CB  00CA               	movwf	??___awdiv
  1198  00CC  084A               	movf	??___awdiv,w
  1199  00CD  06CC               	xorwf	___awdiv@sign,f
  1200  00CE                     l991:
  1201  00CE  01CD               	clrf	___awdiv@quotient
  1202  00CF  01CE               	clrf	___awdiv@quotient+1
  1203  00D0                     l993:
  1204  00D0  0846               	movf	___awdiv@divisor,w
  1205  00D1  0447               	iorwf	___awdiv@divisor+1,w
  1206  00D2  1903               	btfsc	3,2
  1207  00D3  28D5               	goto	u221
  1208  00D4  28D6               	goto	u220
  1209  00D5                     u221:
  1210  00D5  290D               	goto	l1013
  1211  00D6                     u220:
  1212  00D6                     l995:
  1213  00D6  01CB               	clrf	___awdiv@counter
  1214  00D7  0ACB               	incf	___awdiv@counter,f
  1215  00D8  28E4               	goto	l1001
  1216  00D9                     l997:
  1217  00D9  3001               	movlw	1
  1218  00DA                     u235:
  1219  00DA  1003               	clrc
  1220  00DB  0DC6               	rlf	___awdiv@divisor,f
  1221  00DC  0DC7               	rlf	___awdiv@divisor+1,f
  1222  00DD  3EFF               	addlw	-1
  1223  00DE  1D03               	skipz
  1224  00DF  28DA               	goto	u235
  1225  00E0                     l999:
  1226  00E0  3001               	movlw	1
  1227  00E1  00CA               	movwf	??___awdiv
  1228  00E2  084A               	movf	??___awdiv,w
  1229  00E3  07CB               	addwf	___awdiv@counter,f
  1230  00E4                     l1001:
  1231  00E4  1FC7               	btfss	___awdiv@divisor+1,7
  1232  00E5  28E7               	goto	u241
  1233  00E6  28E8               	goto	u240
  1234  00E7                     u241:
  1235  00E7  28D9               	goto	l997
  1236  00E8                     u240:
  1237  00E8                     l1003:
  1238  00E8  3001               	movlw	1
  1239  00E9                     u255:
  1240  00E9  1003               	clrc
  1241  00EA  0DCD               	rlf	___awdiv@quotient,f
  1242  00EB  0DCE               	rlf	___awdiv@quotient+1,f
  1243  00EC  3EFF               	addlw	-1
  1244  00ED  1D03               	skipz
  1245  00EE  28E9               	goto	u255
  1246  00EF  0847               	movf	___awdiv@divisor+1,w
  1247  00F0  0249               	subwf	___awdiv@dividend+1,w
  1248  00F1  1D03               	skipz
  1249  00F2  28F5               	goto	u265
  1250  00F3  0846               	movf	___awdiv@divisor,w
  1251  00F4  0248               	subwf	___awdiv@dividend,w
  1252  00F5                     u265:
  1253  00F5  1C03               	skipc
  1254  00F6  28F8               	goto	u261
  1255  00F7  28F9               	goto	u260
  1256  00F8                     u261:
  1257  00F8  2900               	goto	l1009
  1258  00F9                     u260:
  1259  00F9                     l1005:
  1260  00F9  0846               	movf	___awdiv@divisor,w
  1261  00FA  02C8               	subwf	___awdiv@dividend,f
  1262  00FB  0847               	movf	___awdiv@divisor+1,w
  1263  00FC  1C03               	skipc
  1264  00FD  03C9               	decf	___awdiv@dividend+1,f
  1265  00FE  02C9               	subwf	___awdiv@dividend+1,f
  1266  00FF                     l1007:
  1267  00FF  144D               	bsf	___awdiv@quotient,0
  1268  0100                     l1009:
  1269  0100  3001               	movlw	1
  1270  0101                     u275:
  1271  0101  1003               	clrc
  1272  0102  0CC7               	rrf	___awdiv@divisor+1,f
  1273  0103  0CC6               	rrf	___awdiv@divisor,f
  1274  0104  3EFF               	addlw	-1
  1275  0105  1D03               	skipz
  1276  0106  2901               	goto	u275
  1277  0107                     l1011:
  1278  0107  3001               	movlw	1
  1279  0108  02CB               	subwf	___awdiv@counter,f
  1280  0109  1D03               	btfss	3,2
  1281  010A  290C               	goto	u281
  1282  010B  290D               	goto	u280
  1283  010C                     u281:
  1284  010C  28E8               	goto	l1003
  1285  010D                     u280:
  1286  010D                     l1013:
  1287  010D  084C               	movf	___awdiv@sign,w
  1288  010E  1903               	btfsc	3,2
  1289  010F  2911               	goto	u291
  1290  0110  2912               	goto	u290
  1291  0111                     u291:
  1292  0111  2917               	goto	l1017
  1293  0112                     u290:
  1294  0112                     l1015:
  1295  0112  09CD               	comf	___awdiv@quotient,f
  1296  0113  09CE               	comf	___awdiv@quotient+1,f
  1297  0114  0ACD               	incf	___awdiv@quotient,f
  1298  0115  1903               	skipnz
  1299  0116  0ACE               	incf	___awdiv@quotient+1,f
  1300  0117                     l1017:
  1301  0117  084E               	movf	___awdiv@quotient+1,w
  1302  0118  00C7               	movwf	?___awdiv+1
  1303  0119  084D               	movf	___awdiv@quotient,w
  1304  011A  00C6               	movwf	?___awdiv
  1305  011B                     l372:
  1306  011B  0008               	return
  1307  011C                     __end_of___awdiv:
  1308                           
  1309                           	psect	text5
  1310  011C                     __ptext5:	
  1311 ;; *************** function _isr *****************
  1312 ;; Defined at:
  1313 ;;		line 76 in file "main.c"
  1314 ;; Parameters:    Size  Location     Type
  1315 ;;		None
  1316 ;; Auto vars:     Size  Location     Type
  1317 ;;		None
  1318 ;; Return value:  Size  Location     Type
  1319 ;;                  1    wreg      void 
  1320 ;; Registers used:
  1321 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1322 ;; Tracked objects:
  1323 ;;		On entry : 0/0
  1324 ;;		On exit  : 0/0
  1325 ;;		Unchanged: 0/0
  1326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1327 ;;      Params:         0       0       0       0       0
  1328 ;;      Locals:         0       0       0       0       0
  1329 ;;      Temps:          3       0       0       0       0
  1330 ;;      Totals:         3       0       0       0       0
  1331 ;;Total ram usage:        3 bytes
  1332 ;; Hardware stack levels used:    1
  1333 ;; Hardware stack levels required when called:    1
  1334 ;; This function calls:
  1335 ;;		_ADC_READ
  1336 ;;		_DISPLAY_HEX
  1337 ;; This function is called by:
  1338 ;;		Interrupt level 1
  1339 ;; This function uses a non-reentrant model
  1340 ;;
  1341                           
  1342                           
  1343                           ;psect for function _isr
  1344  011C                     _isr:
  1345  011C                     i1l1099:
  1346                           
  1347                           ;main.c: 77:     (INTCONbits.GIE = 0);
  1348  011C  138B               	bcf	11,7	;volatile
  1349                           
  1350                           ;main.c: 78:     if (T0IF == 1){
  1351  011D  1D0B               	btfss	11,2	;volatile
  1352  011E  2920               	goto	u30_21
  1353  011F  2921               	goto	u30_20
  1354  0120                     u30_21:
  1355  0120  2934               	goto	i1l1107
  1356  0121                     u30_20:
  1357  0121                     i1l1101:
  1358                           
  1359                           ;main.c: 79:         TMR0 = 100;
  1360  0121  3064               	movlw	100
  1361  0122  1283               	bcf	3,5	;RP0=0, select bank0
  1362  0123  1303               	bcf	3,6	;RP1=0, select bank0
  1363  0124  0081               	movwf	1	;volatile
  1364  0125                     i1l1103:
  1365                           
  1366                           ;main.c: 80:         DISPLAY_HEX(&select,HEX1, HEX2);
  1367  0125  087D               	movf	_HEX1+1,w
  1368  0126  00F1               	movwf	DISPLAY_HEX@VHEX1+1
  1369  0127  087C               	movf	_HEX1,w
  1370  0128  00F0               	movwf	DISPLAY_HEX@VHEX1
  1371  0129  087B               	movf	_HEX2+1,w
  1372  012A  00F3               	movwf	DISPLAY_HEX@VHEX2+1
  1373  012B  087A               	movf	_HEX2,w
  1374  012C  00F2               	movwf	DISPLAY_HEX@VHEX2
  1375  012D  3044               	movlw	(low (_select| 0))& (0+255)
  1376  012E  120A  118A  2185  120A  118A  	fcall	_DISPLAY_HEX
  1377  0133                     i1l1105:
  1378                           
  1379                           ;main.c: 81:         INTCONbits.T0IF = 0;
  1380  0133  110B               	bcf	11,2	;volatile
  1381  0134                     i1l1107:
  1382                           
  1383                           ;main.c: 83:     if (RBIF == 1){
  1384  0134  1C0B               	btfss	11,0	;volatile
  1385  0135  2937               	goto	u31_21
  1386  0136  2938               	goto	u31_20
  1387  0137                     u31_21:
  1388  0137  2969               	goto	i1l1131
  1389  0138                     u31_20:
  1390  0138                     i1l1109:
  1391                           
  1392                           ;main.c: 84:         if (RB0 == 0){
  1393  0138  1283               	bcf	3,5	;RP0=0, select bank0
  1394  0139  1303               	bcf	3,6	;RP1=0, select bank0
  1395  013A  1806               	btfsc	6,0	;volatile
  1396  013B  293D               	goto	u32_21
  1397  013C  293E               	goto	u32_20
  1398  013D                     u32_21:
  1399  013D  2943               	goto	i1l1113
  1400  013E                     u32_20:
  1401  013E                     i1l1111:
  1402                           
  1403                           ;main.c: 85:             flag1 = 1;
  1404  013E  3001               	movlw	1
  1405  013F  00DE               	movwf	_flag1
  1406  0140  3000               	movlw	0
  1407  0141  00DF               	movwf	_flag1+1
  1408                           
  1409                           ;main.c: 86:         }
  1410  0142  2951               	goto	i1l1119
  1411  0143                     i1l1113:
  1412                           
  1413                           ;main.c: 88:             if (flag1 == 1) {
  1414  0143  035E               	decf	_flag1,w
  1415  0144  045F               	iorwf	_flag1+1,w
  1416  0145  1D03               	btfss	3,2
  1417  0146  2948               	goto	u33_21
  1418  0147  2949               	goto	u33_20
  1419  0148                     u33_21:
  1420  0148  2951               	goto	i1l1119
  1421  0149                     u33_20:
  1422  0149                     i1l1115:
  1423                           
  1424                           ;main.c: 89:                 CONTADOR++;
  1425  0149  3001               	movlw	1
  1426  014A  07E0               	addwf	_CONTADOR,f
  1427  014B  1803               	skipnc
  1428  014C  0AE1               	incf	_CONTADOR+1,f
  1429  014D  3000               	movlw	0
  1430  014E  07E1               	addwf	_CONTADOR+1,f
  1431  014F                     i1l1117:
  1432                           
  1433                           ;main.c: 90:                 flag1 = 0;
  1434  014F  01DE               	clrf	_flag1
  1435  0150  01DF               	clrf	_flag1+1
  1436  0151                     i1l1119:
  1437                           
  1438                           ;main.c: 94:         if (RB1 == 0){
  1439  0151  1886               	btfsc	6,1	;volatile
  1440  0152  2954               	goto	u34_21
  1441  0153  2955               	goto	u34_20
  1442  0154                     u34_21:
  1443  0154  295A               	goto	i1l1123
  1444  0155                     u34_20:
  1445  0155                     i1l1121:
  1446                           
  1447                           ;main.c: 95:             flag2 = 1;
  1448  0155  3001               	movlw	1
  1449  0156  00DC               	movwf	_flag2
  1450  0157  3000               	movlw	0
  1451  0158  00DD               	movwf	_flag2+1
  1452                           
  1453                           ;main.c: 96:         }
  1454  0159  2968               	goto	i1l1129
  1455  015A                     i1l1123:
  1456                           
  1457                           ;main.c: 98:             if(flag2 ==1){
  1458  015A  035C               	decf	_flag2,w
  1459  015B  045D               	iorwf	_flag2+1,w
  1460  015C  1D03               	btfss	3,2
  1461  015D  295F               	goto	u35_21
  1462  015E  2960               	goto	u35_20
  1463  015F                     u35_21:
  1464  015F  2968               	goto	i1l1129
  1465  0160                     u35_20:
  1466  0160                     i1l1125:
  1467                           
  1468                           ;main.c: 99:                 CONTADOR--;
  1469  0160  30FF               	movlw	255
  1470  0161  07E0               	addwf	_CONTADOR,f
  1471  0162  1803               	skipnc
  1472  0163  0AE1               	incf	_CONTADOR+1,f
  1473  0164  30FF               	movlw	255
  1474  0165  07E1               	addwf	_CONTADOR+1,f
  1475  0166                     i1l1127:
  1476                           
  1477                           ;main.c: 100:                 flag2 = 0;
  1478  0166  01DC               	clrf	_flag2
  1479  0167  01DD               	clrf	_flag2+1
  1480  0168                     i1l1129:
  1481                           
  1482                           ;main.c: 103:      INTCONbits.RBIF = 0;
  1483  0168  100B               	bcf	11,0	;volatile
  1484  0169                     i1l1131:
  1485                           
  1486                           ;main.c: 105:     if (ADIF == 1){
  1487  0169  1283               	bcf	3,5	;RP0=0, select bank0
  1488  016A  1303               	bcf	3,6	;RP1=0, select bank0
  1489  016B  1F0C               	btfss	12,6	;volatile
  1490  016C  296E               	goto	u36_21
  1491  016D  296F               	goto	u36_20
  1492  016E                     u36_21:
  1493  016E  297B               	goto	i1l1137
  1494  016F                     u36_20:
  1495  016F                     i1l1133:
  1496                           
  1497                           ;main.c: 106:         VALOR_ADC = ADC_READ();
  1498  016F  120A  118A  2294  120A  118A  	fcall	_ADC_READ
  1499  0174  0871               	movf	?_ADC_READ+1,w
  1500  0175  1283               	bcf	3,5	;RP0=0, select bank0
  1501  0176  1303               	bcf	3,6	;RP1=0, select bank0
  1502  0177  00DB               	movwf	_VALOR_ADC+1
  1503  0178  0870               	movf	?_ADC_READ,w
  1504  0179  00DA               	movwf	_VALOR_ADC
  1505  017A                     i1l1135:
  1506                           
  1507                           ;main.c: 107:         PIR1bits.ADIF = 0;
  1508  017A  130C               	bcf	12,6	;volatile
  1509  017B                     i1l1137:
  1510                           
  1511                           ;main.c: 109:     (INTCONbits.GIE = 1);
  1512  017B  178B               	bsf	11,7	;volatile
  1513  017C                     i1l118:
  1514  017C  0879               	movf	??_isr+2,w
  1515  017D  008A               	movwf	10
  1516  017E  0878               	movf	??_isr+1,w
  1517  017F  0084               	movwf	4
  1518  0180  0E77               	swapf	??_isr,w
  1519  0181  0083               	movwf	3
  1520  0182  0EFE               	swapf	btemp,f
  1521  0183  0E7E               	swapf	btemp,w
  1522  0184  0009               	retfie
  1523  0185                     __end_of_isr:
  1524                           
  1525                           	psect	intentry
  1526  0004                     __pintentry:	
  1527                           ;incstack = 0
  1528                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1529                           
  1530  0004                     interrupt_function:
  1531  007E                     saved_w	set	btemp
  1532  0004  00FE               	movwf	btemp
  1533  0005  0E03               	swapf	3,w
  1534  0006  00F7               	movwf	??_isr
  1535  0007  0804               	movf	4,w
  1536  0008  00F8               	movwf	??_isr+1
  1537  0009  080A               	movf	10,w
  1538  000A  00F9               	movwf	??_isr+2
  1539  000B  120A  118A  291C   	ljmp	_isr
  1540                           
  1541                           	psect	text6
  1542  0185                     __ptext6:	
  1543 ;; *************** function _DISPLAY_HEX *****************
  1544 ;; Defined at:
  1545 ;;		line 29 in file "./DISPLAY_LIB.h"
  1546 ;; Parameters:    Size  Location     Type
  1547 ;;  select          1    wreg     PTR int 
  1548 ;;		 -> select(2), 
  1549 ;;  VHEX1           2    0[COMMON] int 
  1550 ;;  VHEX2           2    2[COMMON] int 
  1551 ;; Auto vars:     Size  Location     Type
  1552 ;;  select          1    6[COMMON] PTR int 
  1553 ;;		 -> select(2), 
  1554 ;; Return value:  Size  Location     Type
  1555 ;;                  1    wreg      void 
  1556 ;; Registers used:
  1557 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1558 ;; Tracked objects:
  1559 ;;		On entry : 0/0
  1560 ;;		On exit  : 0/0
  1561 ;;		Unchanged: 0/0
  1562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1563 ;;      Params:         4       0       0       0       0
  1564 ;;      Locals:         1       0       0       0       0
  1565 ;;      Temps:          2       0       0       0       0
  1566 ;;      Totals:         7       0       0       0       0
  1567 ;;Total ram usage:        7 bytes
  1568 ;; Hardware stack levels used:    1
  1569 ;; This function calls:
  1570 ;;		Nothing
  1571 ;; This function is called by:
  1572 ;;		_isr
  1573 ;; This function uses a non-reentrant model
  1574 ;;
  1575                           
  1576                           
  1577                           ;psect for function _DISPLAY_HEX
  1578  0185                     _DISPLAY_HEX:
  1579                           
  1580                           ;incstack = 0
  1581                           ; Regs used in _DISPLAY_HEX: [wreg-fsr0h+status,2+status,0]
  1582                           ;DISPLAY_HEX@select stored from wreg
  1583  0185  00F6               	movwf	DISPLAY_HEX@select
  1584  0186                     i1l1025:
  1585                           
  1586                           ;./DISPLAY_LIB.h: 31:     switch(*select){
  1587  0186  29AD               	goto	i1l1041
  1588  0187                     i1l1027:
  1589                           
  1590                           ;./DISPLAY_LIB.h: 33:             PORTD = TABLA_HEX[VHEX1];
  1591  0187  0870               	movf	DISPLAY_HEX@VHEX1,w
  1592  0188  00F4               	movwf	??_DISPLAY_HEX
  1593  0189  0774               	addwf	??_DISPLAY_HEX,w
  1594  018A  3E20               	addlw	(low (_TABLA_HEX| 0))& (0+255)
  1595  018B  0084               	movwf	4
  1596  018C  0800               	movf	0,w
  1597  018D  1283               	bcf	3,5	;RP0=0, select bank0
  1598  018E  1303               	bcf	3,6	;RP1=0, select bank0
  1599  018F  0088               	movwf	8	;volatile
  1600  0190                     i1l1029:
  1601                           
  1602                           ;./DISPLAY_LIB.h: 34:             PORTA = 0B00000001;
  1603  0190  3001               	movlw	1
  1604  0191  0085               	movwf	5	;volatile
  1605  0192                     i1l1031:
  1606                           
  1607                           ;./DISPLAY_LIB.h: 35:             *select = 2;
  1608  0192  0876               	movf	DISPLAY_HEX@select,w
  1609  0193  0084               	movwf	4
  1610  0194  3002               	movlw	2
  1611  0195  0080               	movwf	0
  1612  0196  0A84               	incf	4,f
  1613  0197  3000               	movlw	0
  1614  0198  0080               	movwf	0
  1615                           
  1616                           ;./DISPLAY_LIB.h: 36:             break;
  1617  0199  29C2               	goto	i1l79
  1618  019A                     i1l1033:
  1619                           
  1620                           ;./DISPLAY_LIB.h: 38:             PORTD = TABLA_HEX[VHEX2];
  1621  019A  0872               	movf	DISPLAY_HEX@VHEX2,w
  1622  019B  00F4               	movwf	??_DISPLAY_HEX
  1623  019C  0774               	addwf	??_DISPLAY_HEX,w
  1624  019D  3E20               	addlw	(low (_TABLA_HEX| 0))& (0+255)
  1625  019E  0084               	movwf	4
  1626  019F  0800               	movf	0,w
  1627  01A0  1283               	bcf	3,5	;RP0=0, select bank0
  1628  01A1  1303               	bcf	3,6	;RP1=0, select bank0
  1629  01A2  0088               	movwf	8	;volatile
  1630  01A3                     i1l1035:
  1631                           
  1632                           ;./DISPLAY_LIB.h: 39:             PORTA = 0B00000010;
  1633  01A3  3002               	movlw	2
  1634  01A4  0085               	movwf	5	;volatile
  1635  01A5                     i1l1037:
  1636                           
  1637                           ;./DISPLAY_LIB.h: 40:             *select = 1;
  1638  01A5  0876               	movf	DISPLAY_HEX@select,w
  1639  01A6  0084               	movwf	4
  1640  01A7  3001               	movlw	1
  1641  01A8  0080               	movwf	0
  1642  01A9  0A84               	incf	4,f
  1643  01AA  3000               	movlw	0
  1644  01AB  0080               	movwf	0
  1645                           
  1646                           ;./DISPLAY_LIB.h: 41:             break;
  1647  01AC  29C2               	goto	i1l79
  1648  01AD                     i1l1041:
  1649  01AD  0876               	movf	DISPLAY_HEX@select,w
  1650  01AE  0084               	movwf	4
  1651  01AF  1383               	bcf	3,7	;select IRP bank0
  1652  01B0  0800               	movf	0,w
  1653  01B1  00F4               	movwf	??_DISPLAY_HEX
  1654  01B2  0A84               	incf	4,f
  1655  01B3  0800               	movf	0,w
  1656  01B4  00F5               	movwf	??_DISPLAY_HEX+1
  1657                           
  1658                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1659                           ; Switch size 1, requested type "simple"
  1660                           ; Number of cases is 1, Range of values is 0 to 0
  1661                           ; switch strategies available:
  1662                           ; Name         Instructions Cycles
  1663                           ; simple_byte            4     3 (average)
  1664                           ; direct_byte           11     8 (fixed)
  1665                           ; jumptable            260     6 (fixed)
  1666                           ;	Chosen strategy is simple_byte
  1667  01B5  0875               	movf	??_DISPLAY_HEX+1,w
  1668  01B6  3A00               	xorlw	0	; case 0
  1669  01B7  1903               	skipnz
  1670  01B8  29BA               	goto	i1l1193
  1671  01B9  29C2               	goto	i1l79
  1672  01BA                     i1l1193:
  1673                           
  1674                           ; Switch size 1, requested type "simple"
  1675                           ; Number of cases is 2, Range of values is 1 to 2
  1676                           ; switch strategies available:
  1677                           ; Name         Instructions Cycles
  1678                           ; simple_byte            7     4 (average)
  1679                           ; direct_byte           17    11 (fixed)
  1680                           ; jumptable            263     9 (fixed)
  1681                           ;	Chosen strategy is simple_byte
  1682  01BA  0874               	movf	??_DISPLAY_HEX,w
  1683  01BB  3A01               	xorlw	1	; case 1
  1684  01BC  1903               	skipnz
  1685  01BD  2987               	goto	i1l1027
  1686  01BE  3A03               	xorlw	3	; case 2
  1687  01BF  1903               	skipnz
  1688  01C0  299A               	goto	i1l1033
  1689  01C1  29C2               	goto	i1l79
  1690  01C2                     i1l79:
  1691  01C2  0008               	return
  1692  01C3                     __end_of_DISPLAY_HEX:
  1693                           
  1694                           	psect	text7
  1695  0294                     __ptext7:	
  1696 ;; *************** function _ADC_READ *****************
  1697 ;; Defined at:
  1698 ;;		line 24 in file "./ADC_LIB.h"
  1699 ;; Parameters:    Size  Location     Type
  1700 ;;		None
  1701 ;; Auto vars:     Size  Location     Type
  1702 ;;  LECT            2    4[COMMON] int 
  1703 ;; Return value:  Size  Location     Type
  1704 ;;                  2    0[COMMON] int 
  1705 ;; Registers used:
  1706 ;;		wreg
  1707 ;; Tracked objects:
  1708 ;;		On entry : 0/0
  1709 ;;		On exit  : 0/0
  1710 ;;		Unchanged: 0/0
  1711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1712 ;;      Params:         2       0       0       0       0
  1713 ;;      Locals:         2       0       0       0       0
  1714 ;;      Temps:          2       0       0       0       0
  1715 ;;      Totals:         6       0       0       0       0
  1716 ;;Total ram usage:        6 bytes
  1717 ;; Hardware stack levels used:    1
  1718 ;; This function calls:
  1719 ;;		Nothing
  1720 ;; This function is called by:
  1721 ;;		_isr
  1722 ;; This function uses a non-reentrant model
  1723 ;;
  1724                           
  1725                           
  1726                           ;psect for function _ADC_READ
  1727  0294                     _ADC_READ:
  1728  0294                     i1l1021:	
  1729                           ;incstack = 0
  1730                           ; Regs used in _ADC_READ: [wreg]
  1731                           
  1732                           
  1733                           ;./ADC_LIB.h: 25:     int LECT;;./ADC_LIB.h: 26:     LECT = ADRESH;
  1734  0294  1283               	bcf	3,5	;RP0=0, select bank0
  1735  0295  1303               	bcf	3,6	;RP1=0, select bank0
  1736  0296  081E               	movf	30,w	;volatile
  1737  0297  00F2               	movwf	??_ADC_READ
  1738  0298  01F3               	clrf	??_ADC_READ+1
  1739  0299  0872               	movf	??_ADC_READ,w
  1740  029A  00F4               	movwf	ADC_READ@LECT
  1741  029B  0873               	movf	??_ADC_READ+1,w
  1742  029C  00F5               	movwf	ADC_READ@LECT+1
  1743                           
  1744                           ;./ADC_LIB.h: 27:     return LECT;
  1745  029D  0875               	movf	ADC_READ@LECT+1,w
  1746  029E  00F1               	movwf	?_ADC_READ+1
  1747  029F  0874               	movf	ADC_READ@LECT,w
  1748  02A0  00F0               	movwf	?_ADC_READ
  1749  02A1                     i1l70:
  1750  02A1  0008               	return
  1751  02A2                     __end_of_ADC_READ:
  1752  007E                     btemp	set	126	;btemp
  1753  007E                     wtemp0	set	126
  1754                           
  1755                           	psect	config
  1756                           
  1757                           ;Config register CONFIG1 @ 0x2007
  1758                           ;	Oscillator Selection bits
  1759                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
  1760                           ;	Watchdog Timer Enable bit
  1761                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1762                           ;	Power-up Timer Enable bit
  1763                           ;	PWRTE = OFF, PWRT disabled
  1764                           ;	RE3/MCLR pin function select bit
  1765                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1766                           ;	Code Protection bit
  1767                           ;	CP = OFF, Program memory code protection is disabled
  1768                           ;	Data Code Protection bit
  1769                           ;	CPD = OFF, Data memory code protection is disabled
  1770                           ;	Brown Out Reset Selection bits
  1771                           ;	BOREN = OFF, BOR disabled
  1772                           ;	Internal External Switchover bit
  1773                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1774                           ;	Fail-Safe Clock Monitor Enabled bit
  1775                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1776                           ;	Low Voltage Programming Enable bit
  1777                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1778                           ;	In-Circuit Debugger Mode bit
  1779                           ;	DEBUG = 0x1, unprogrammed default
  1780  2007                     	org	8199
  1781  2007  20D5               	dw	8405
  1782                           
  1783                           ;Config register CONFIG2 @ 0x2008
  1784                           ;	Brown-out Reset Selection bit
  1785                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1786                           ;	Flash Program Memory Self Write Enable bits
  1787                           ;	WRT = OFF, Write protection off
  1788  2008                     	org	8200
  1789  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        58
    BSS         14
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      14
    BANK0            80     18      66
    BANK1            80      0      20
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    BIN_HEX@VHEX2	PTR int  size(1) Largest target is 2
		 -> HEX2(COMMON[2]), 

    BIN_HEX@VHEX1	PTR int  size(1) Largest target is 2
		 -> HEX1(COMMON[2]), 

    DISPLAY_HEX@select	PTR int  size(1) Largest target is 2
		 -> select(BANK0[2]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_DISPLAY_HEX

Critical Paths under _main in BANK0

    _main->_BIN_HEX
    _setup->_ADC_INIT
    _BIN_HEX->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     866
                                             15 BANK0      3     3      0
                            _BIN_HEX
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      98
                           _ADC_INIT
 ---------------------------------------------------------------------------------
 (2) _ADC_INIT                                             3     1      2      98
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _BIN_HEX                                              6     2      4     768
                                              9 BANK0      6     2      4
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     452
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0     318
                                              7 COMMON     3     3      0
                           _ADC_READ
                        _DISPLAY_HEX
 ---------------------------------------------------------------------------------
 (4) _DISPLAY_HEX                                          7     3      4     295
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (4) _ADC_READ                                             6     4      2      23
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BIN_HEX
     ___awdiv
   _setup
     _ADC_INIT

 _isr (ROOT)
   _ADC_READ
   _DISPLAY_HEX

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      14       7       25.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     12      42       5       82.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      64      12        0.0%
ABS                  0      0      64       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Jul 19 16:11:43 2021

                      _i 0058                        pc 0002                       l82 0223  
                     l67 026C             ___awdiv@sign 004C                       fsr 0004  
                    l133 01FB                      l372 011B                      l961 024D  
                    l971 0267                      l963 0256                      l981 00BA  
                    l973 0268                      l965 025D                      l991 00CE  
                    l983 00BF                      l975 0269                      l967 0263  
                    l959 024A                      l993 00D0                      l985 00C1  
                    l977 00B3                      l969 0266                      l995 00D6  
                    l987 00C5                      l979 00B6                      l997 00D9  
                    l989 00CA                      l999 00E0                      _RB0 0030  
                    _RB1 0031                      u200 00BA                      u201 00B9  
                    u210 00C5                      u211 00C4                      u220 00D6  
                    u221 00D5                      u240 00E8                      u241 00E7  
                    u235 00DA                      u260 00F9                      u261 00F8  
                    u255 00E9                      u407 007B                      u280 010D  
                    u281 010C                      u265 00F5                      u417 0086  
                    u290 0112                      u370 0071                      u291 0111  
                    u275 0101                      u427 00A7                      u371 0070  
                    u380 009F                      u437 025A                      u381 009E  
                    u375 006D                      u385 009B                      u397 004E  
                    _isr 011C                      fsr0 0004                      indf 0000  
        __end_of_BIN_HEX 0224                     l1001 00E4                     l1011 0107  
                   l1003 00E8                     l1005 00F9                     l1013 010D  
                   l1015 0112                     l1007 00FF                     l1017 0117  
                   l1009 0100                     l1051 01C3                     l1061 01D4  
                   l1053 01C7                     l1141 0043                     l1047 01FC  
                   l1071 01DB                     l1063 01D5                     l1055 01C8  
                   l1151 0065                     l1143 0046                     l1049 020B  
                   l1081 01E8                     l1073 01DC                     l1065 01D6  
                   l1057 01CF                     l1161 007F                     l1153 0071  
                   l1145 004A                     l1091 01F7                     l1083 01E9  
                   l1075 01DD                     l1067 01D7                     l1059 01D1  
                   l1163 0082                     l1171 00AE                     l1147 0051  
                   l1139 003E                     l1093 01F8                     l1085 01EA  
                   l1077 01E4                     l1069 01D8                     l1165 008A  
                   l1149 0054                     l1095 01F9                     l1087 01F5  
                   l1079 01E7                     l1167 0092                     l1159 0073  
                   l1097 01FA                     l1089 01F6                     l1169 009F  
                   _ADIF 0066                     ?_isr 0070                     _HEX1 007C  
                   _HEX2 007A                     _T0IF 005A                     _RBIF 0058  
                   i1l70 02A1                     i1l79 01C2                     _TMR0 0001  
       __end_of_ADC_INIT 026D         __end_of_ADC_READ 02A2                     _main 003E  
                   btemp 007E                     start 000E                    ??_isr 0077  
                  ?_main 0070                    _CANAL 0042          __end_of___awdiv 011C  
                  _ANSEL 0188          ___awdiv@divisor 0046                    _IOCB0 04B0  
                  _IOCB1 04B1                    i1l118 017C          ___awdiv@counter 004B  
                  u30_20 0121                    u30_21 0120                    u31_20 0138  
                  u31_21 0137                    u32_20 013E                    u32_21 013D  
                  u33_20 0149                    u33_21 0148                    u34_20 0155  
                  u34_21 0154                    u35_20 0160                    u35_21 015F  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    u36_20 016F  
                  u36_21 016E                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _TRISE 0089  
                  _WPUB0 04A8                    _WPUB1 04A9                    _flag1 005E  
                  _flag2 005C                    _setup 01C3                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 0011  
           __end_of_main 00B3     __size_of_DISPLAY_HEX 003E                ??_BIN_HEX 0053  
                 ??_main 0055                   _CANAL2 0040                   _ADRESH 001E  
       ___awdiv@dividend 0048                   ?_setup 0070                   _ANSELH 0189  
                 i1l1021 0294                   i1l1101 0121                   i1l1031 0192  
                 i1l1111 013E                   i1l1103 0125                   i1l1033 019A  
                 i1l1041 01AD                   i1l1025 0186                   i1l1121 0155  
                 i1l1113 0143                   i1l1105 0133                   i1l1035 01A3  
                 i1l1027 0187                   i1l1123 015A                   i1l1115 0149  
                 i1l1131 0169                   i1l1107 0134                   i1l1037 01A5  
                 i1l1029 0190                   i1l1133 016F                   i1l1125 0160  
                 i1l1117 014F                   i1l1109 0138                   i1l1135 017A  
                 i1l1127 0166                   i1l1119 0151                   i1l1137 017B  
                 i1l1129 0168                   i1l1193 01BA                   i1l1099 011C  
              ??___awdiv 004A         ___awdiv@quotient 004D                   _select 0044  
              ?_ADC_INIT 0046                ?_ADC_READ 0070                   saved_w 007E  
__end_of__initialization 003A           __pcstackCOMMON 0070             __pidataBANK0 0224  
           __pidataBANK1 026D             ADC_READ@LECT 0074            __end_of_setup 01FC  
             ??_ADC_INIT 0048               ??_ADC_READ 0072                  ??_setup 0049  
             __pbssBANK0 0058               __pmaintext 003E               __pintentry 0004  
                _BIN_HEX 01FC                  ___awdiv 00B3                  _digitos 00A0  
                __ptext1 01C3                  __ptext2 024A                  __ptext3 01FC  
                __ptext4 00B3                  __ptext5 011C                  __ptext6 0185  
                __ptext7 0294             __size_of_isr 0069     end_of_initialization 003A  
              _TABLA_HEX 0020            ??_DISPLAY_HEX 0074                _VALOR_ADC 005A  
      __size_of_ADC_INIT 0023        __size_of_ADC_READ 000E      __end_of_DISPLAY_HEX 01C3  
          ADC_INIT@canal 0046      start_initialization 0011              __end_of_isr 0185  
             init_fetch0 0281              __pdataBANK0 0020              __pdataBANK1 00A0  
               ?_BIN_HEX 004F              __pbssCOMMON 007A                ___latbits 0002  
          __pcstackBANK0 0046        DISPLAY_HEX@select 0076              _DISPLAY_HEX 0185  
               ?___awdiv 0046             BIN_HEX@VHEX1 0051             BIN_HEX@VHEX2 0052  
               _ADC_INIT 024A                 _ADC_READ 0294                 _CONTADOR 0060  
         __size_of_setup 0039        interrupt_function 0004                 _PIE1bits 008C  
               _PIR1bits 000C               _ADCON0bits 001F               _ADCON1bits 009F  
       __size_of_BIN_HEX 0028         DISPLAY_HEX@VHEX1 0070         DISPLAY_HEX@VHEX2 0072  
       __size_of___awdiv 0069              BIN_HEX@VBIN 004F            __size_of_main 0075  
             _INTCONbits 000B                 init_ram0 0285                 intlevel1 0000  
             _OSCCONbits 008F             ?_DISPLAY_HEX 0070               _OPTION_REG 0081  
