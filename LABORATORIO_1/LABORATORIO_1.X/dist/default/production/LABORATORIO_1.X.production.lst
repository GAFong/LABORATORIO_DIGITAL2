

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Jul 16 23:57:56 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	intentry,global,class=CODE,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    24                           	dabs	1,0x7E,2
    25  0000                     
    26                           ; Version 2.20
    27                           ; Generated 12/02/2020 GMT
    28                           ; 
    29                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC16F887 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60  0000                     	;# 
    61  0001                     	;# 
    62  0002                     	;# 
    63  0003                     	;# 
    64  0004                     	;# 
    65  0005                     	;# 
    66  0006                     	;# 
    67  0007                     	;# 
    68  0008                     	;# 
    69  0009                     	;# 
    70  000A                     	;# 
    71  000B                     	;# 
    72  000C                     	;# 
    73  000D                     	;# 
    74  000E                     	;# 
    75  000E                     	;# 
    76  000F                     	;# 
    77  0010                     	;# 
    78  0011                     	;# 
    79  0012                     	;# 
    80  0013                     	;# 
    81  0014                     	;# 
    82  0015                     	;# 
    83  0015                     	;# 
    84  0016                     	;# 
    85  0017                     	;# 
    86  0018                     	;# 
    87  0019                     	;# 
    88  001A                     	;# 
    89  001B                     	;# 
    90  001B                     	;# 
    91  001C                     	;# 
    92  001D                     	;# 
    93  001E                     	;# 
    94  001F                     	;# 
    95  0081                     	;# 
    96  0085                     	;# 
    97  0086                     	;# 
    98  0087                     	;# 
    99  0088                     	;# 
   100  0089                     	;# 
   101  008C                     	;# 
   102  008D                     	;# 
   103  008E                     	;# 
   104  008F                     	;# 
   105  0090                     	;# 
   106  0091                     	;# 
   107  0092                     	;# 
   108  0093                     	;# 
   109  0093                     	;# 
   110  0093                     	;# 
   111  0094                     	;# 
   112  0095                     	;# 
   113  0096                     	;# 
   114  0097                     	;# 
   115  0098                     	;# 
   116  0099                     	;# 
   117  009A                     	;# 
   118  009B                     	;# 
   119  009C                     	;# 
   120  009D                     	;# 
   121  009E                     	;# 
   122  009F                     	;# 
   123  0105                     	;# 
   124  0107                     	;# 
   125  0108                     	;# 
   126  0109                     	;# 
   127  010C                     	;# 
   128  010C                     	;# 
   129  010D                     	;# 
   130  010E                     	;# 
   131  010F                     	;# 
   132  0185                     	;# 
   133  0187                     	;# 
   134  0188                     	;# 
   135  0189                     	;# 
   136  018C                     	;# 
   137  018D                     	;# 
   138  0000                     	;# 
   139  0001                     	;# 
   140  0002                     	;# 
   141  0003                     	;# 
   142  0004                     	;# 
   143  0005                     	;# 
   144  0006                     	;# 
   145  0007                     	;# 
   146  0008                     	;# 
   147  0009                     	;# 
   148  000A                     	;# 
   149  000B                     	;# 
   150  000C                     	;# 
   151  000D                     	;# 
   152  000E                     	;# 
   153  000E                     	;# 
   154  000F                     	;# 
   155  0010                     	;# 
   156  0011                     	;# 
   157  0012                     	;# 
   158  0013                     	;# 
   159  0014                     	;# 
   160  0015                     	;# 
   161  0015                     	;# 
   162  0016                     	;# 
   163  0017                     	;# 
   164  0018                     	;# 
   165  0019                     	;# 
   166  001A                     	;# 
   167  001B                     	;# 
   168  001B                     	;# 
   169  001C                     	;# 
   170  001D                     	;# 
   171  001E                     	;# 
   172  001F                     	;# 
   173  0081                     	;# 
   174  0085                     	;# 
   175  0086                     	;# 
   176  0087                     	;# 
   177  0088                     	;# 
   178  0089                     	;# 
   179  008C                     	;# 
   180  008D                     	;# 
   181  008E                     	;# 
   182  008F                     	;# 
   183  0090                     	;# 
   184  0091                     	;# 
   185  0092                     	;# 
   186  0093                     	;# 
   187  0093                     	;# 
   188  0093                     	;# 
   189  0094                     	;# 
   190  0095                     	;# 
   191  0096                     	;# 
   192  0097                     	;# 
   193  0098                     	;# 
   194  0099                     	;# 
   195  009A                     	;# 
   196  009B                     	;# 
   197  009C                     	;# 
   198  009D                     	;# 
   199  009E                     	;# 
   200  009F                     	;# 
   201  0105                     	;# 
   202  0107                     	;# 
   203  0108                     	;# 
   204  0109                     	;# 
   205  010C                     	;# 
   206  010C                     	;# 
   207  010D                     	;# 
   208  010E                     	;# 
   209  010F                     	;# 
   210  0185                     	;# 
   211  0187                     	;# 
   212  0188                     	;# 
   213  0189                     	;# 
   214  018C                     	;# 
   215  018D                     	;# 
   216                           
   217                           	psect	idataBANK0
   218  01E6                     __pidataBANK0:
   219                           
   220                           ;initializer for _TABLA_HEX
   221  01E6  343F               	retlw	63
   222  01E7  3400               	retlw	0
   223  01E8  3406               	retlw	6
   224  01E9  3400               	retlw	0
   225  01EA  345B               	retlw	91
   226  01EB  3400               	retlw	0
   227  01EC  344F               	retlw	79
   228  01ED  3400               	retlw	0
   229  01EE  3466               	retlw	102
   230  01EF  3400               	retlw	0
   231  01F0  346D               	retlw	109
   232  01F1  3400               	retlw	0
   233  01F2  347D               	retlw	125
   234  01F3  3400               	retlw	0
   235  01F4  3407               	retlw	7
   236  01F5  3400               	retlw	0
   237  01F6  347F               	retlw	127
   238  01F7  3400               	retlw	0
   239  01F8  3467               	retlw	103
   240  01F9  3400               	retlw	0
   241  01FA  3477               	retlw	119
   242  01FB  3400               	retlw	0
   243  01FC  347C               	retlw	124
   244  01FD  3400               	retlw	0
   245  01FE  3439               	retlw	57
   246  01FF  3400               	retlw	0
   247  0200  345E               	retlw	94
   248  0201  3400               	retlw	0
   249  0202  3479               	retlw	121
   250  0203  3400               	retlw	0
   251  0204  3471               	retlw	113
   252  0205  3400               	retlw	0
   253                           
   254                           ;initializer for _CANAL2
   255  0206  3402               	retlw	2
   256  0207  3400               	retlw	0
   257                           
   258                           ;initializer for _CANAL
   259  0208  3402               	retlw	2
   260  0209  3400               	retlw	0
   261                           
   262                           ;initializer for _select
   263  020A  3401               	retlw	1
   264  020B  3400               	retlw	0
   265                           
   266                           	psect	idataBANK1
   267  022F                     __pidataBANK1:
   268                           
   269                           ;initializer for _digitos
   270  022F  343F               	retlw	63
   271  0230  3400               	retlw	0
   272  0231  3406               	retlw	6
   273  0232  3400               	retlw	0
   274  0233  345B               	retlw	91
   275  0234  3400               	retlw	0
   276  0235  344F               	retlw	79
   277  0236  3400               	retlw	0
   278  0237  3466               	retlw	102
   279  0238  3400               	retlw	0
   280  0239  346D               	retlw	109
   281  023A  3400               	retlw	0
   282  023B  347D               	retlw	125
   283  023C  3400               	retlw	0
   284  023D  3407               	retlw	7
   285  023E  3400               	retlw	0
   286  023F  347F               	retlw	127
   287  0240  3400               	retlw	0
   288  0241  3467               	retlw	103
   289  0242  3400               	retlw	0
   290  0006                     _PORTB	set	6
   291  0009                     _PORTE	set	9
   292  0007                     _PORTC	set	7
   293  0001                     _TMR0	set	1
   294  000B                     _INTCONbits	set	11
   295  0005                     _PORTA	set	5
   296  0008                     _PORTD	set	8
   297  001E                     _ADRESH	set	30
   298  000C                     _PIR1bits	set	12
   299  001F                     _ADCON0bits	set	31
   300  0066                     _ADIF	set	102
   301  0031                     _RB1	set	49
   302  0030                     _RB0	set	48
   303  0058                     _RBIF	set	88
   304  005A                     _T0IF	set	90
   305  0081                     _OPTION_REG	set	129
   306  008F                     _OSCCONbits	set	143
   307  0086                     _TRISB	set	134
   308  0089                     _TRISE	set	137
   309  0088                     _TRISD	set	136
   310  0087                     _TRISC	set	135
   311  0085                     _TRISA	set	133
   312  008C                     _PIE1bits	set	140
   313  009F                     _ADCON1bits	set	159
   314  04B1                     _IOCB1	set	1201
   315  04B0                     _IOCB0	set	1200
   316  04A9                     _WPUB1	set	1193
   317  04A8                     _WPUB0	set	1192
   318  0189                     _ANSELH	set	393
   319  0188                     _ANSEL	set	392
   320                           
   321                           	psect	cinit
   322  0011                     start_initialization:	
   323                           ; #config settings
   324                           
   325  0011                     __initialization:
   326                           
   327                           ; Initialize objects allocated to BANK1
   328  0011  1383               	bcf	3,7	;select IRP bank0
   329  0012  30B4               	movlw	low (__pdataBANK1+20)
   330  0013  00FD               	movwf	btemp+-1
   331  0014  3002               	movlw	high __pidataBANK1
   332  0015  00FE               	movwf	btemp
   333  0016  302F               	movlw	low __pidataBANK1
   334  0017  00FF               	movwf	btemp+1
   335  0018  30A0               	movlw	low __pdataBANK1
   336  0019  0084               	movwf	4
   337  001A  120A  118A  2247  120A  118A  	fcall	init_ram0
   338                           
   339                           ; Initialize objects allocated to BANK0
   340  001F  3046               	movlw	low (__pdataBANK0+38)
   341  0020  00FD               	movwf	btemp+-1
   342  0021  3001               	movlw	high __pidataBANK0
   343  0022  00FE               	movwf	btemp
   344  0023  30E6               	movlw	low __pidataBANK0
   345  0024  00FF               	movwf	btemp+1
   346  0025  3020               	movlw	low __pdataBANK0
   347  0026  0084               	movwf	4
   348  0027  120A  118A  2247  120A  118A  	fcall	init_ram0
   349                           
   350                           ; Clear objects allocated to BANK0
   351  002C  01D7               	clrf	__pbssBANK0& (0+127)
   352  002D  01D8               	clrf	(__pbssBANK0+1)& (0+127)
   353  002E  01D9               	clrf	(__pbssBANK0+2)& (0+127)
   354  002F  01DA               	clrf	(__pbssBANK0+3)& (0+127)
   355  0030  01DB               	clrf	(__pbssBANK0+4)& (0+127)
   356  0031  01DC               	clrf	(__pbssBANK0+5)& (0+127)
   357  0032  01DD               	clrf	(__pbssBANK0+6)& (0+127)
   358  0033  01DE               	clrf	(__pbssBANK0+7)& (0+127)
   359                           
   360                           ; Clear objects allocated to COMMON
   361  0034  01FA               	clrf	__pbssCOMMON& (0+127)
   362  0035  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   363  0036  01FC               	clrf	(__pbssCOMMON+2)& (0+127)
   364  0037  01FD               	clrf	(__pbssCOMMON+3)& (0+127)
   365  0038                     end_of_initialization:	
   366                           ;End of C runtime variable initialization code
   367                           
   368  0038                     __end_of__initialization:
   369  0038  0183               	clrf	3
   370  0039  120A  118A  294C   	ljmp	_main	;jump to C main() function
   371                           
   372                           	psect	bssCOMMON
   373  007A                     __pbssCOMMON:
   374  007A                     _HEX2:
   375  007A                     	ds	2
   376  007C                     _HEX1:
   377  007C                     	ds	2
   378                           
   379                           	psect	bssBANK0
   380  0057                     __pbssBANK0:
   381  0057                     _VALOR_ADC:
   382  0057                     	ds	2
   383  0059                     _flag2:
   384  0059                     	ds	2
   385  005B                     _flag1:
   386  005B                     	ds	2
   387  005D                     _CONTADOR:
   388  005D                     	ds	2
   389                           
   390                           	psect	dataBANK0
   391  0020                     __pdataBANK0:
   392  0020                     _TABLA_HEX:
   393  0020                     	ds	32
   394  0040                     _CANAL2:
   395  0040                     	ds	2
   396  0042                     _CANAL:
   397  0042                     	ds	2
   398  0044                     _select:
   399  0044                     	ds	2
   400                           
   401                           	psect	dataBANK1
   402  00A0                     __pdataBANK1:
   403  00A0                     _digitos:
   404  00A0                     	ds	20
   405                           
   406                           	psect	inittext
   407  0243                     init_fetch0:	
   408                           ;	Called with low address in FSR and high address in W
   409                           
   410  0243  087E               	movf	btemp,w
   411  0244  008A               	movwf	10
   412  0245  087F               	movf	btemp+1,w
   413  0246  0082               	movwf	2
   414  0247                     init_ram0:	
   415                           ;Called with:
   416                           ;	high address of idata address in btemp 
   417                           ;	low address of idata address in btemp+1 
   418                           ;	low address of data in FSR
   419                           ;	high address + 1 of data in btemp-1
   420                           
   421  0247  120A  118A  2243  120A  118A  	fcall	init_fetch0
   422  024C  0080               	movwf	0
   423  024D  0A84               	incf	4,f
   424  024E  0804               	movf	4,w
   425  024F  067D               	xorwf	btemp+-1,w
   426  0250  1903               	btfsc	3,2
   427  0251  3400               	retlw	0
   428  0252  0AFF               	incf	btemp+1,f
   429  0253  1903               	btfsc	3,2
   430  0254  0AFE               	incf	btemp,f
   431  0255  2A47               	goto	init_ram0
   432                           
   433                           	psect	cstackCOMMON
   434  0070                     __pcstackCOMMON:
   435  0070                     ?_setup:
   436  0070                     ?_DISPLAY_HEX:	
   437                           ; 1 bytes @ 0x0
   438                           
   439  0070                     ?_isr:	
   440                           ; 1 bytes @ 0x0
   441                           
   442  0070                     ?_main:	
   443                           ; 1 bytes @ 0x0
   444                           
   445  0070                     ?_ADC_READ:	
   446                           ; 1 bytes @ 0x0
   447                           
   448  0070                     DISPLAY_HEX@VHEX1:	
   449                           ; 2 bytes @ 0x0
   450                           
   451                           
   452                           ; 2 bytes @ 0x0
   453  0070                     	ds	2
   454  0072                     ??_ADC_READ:
   455  0072                     DISPLAY_HEX@VHEX2:	
   456                           ; 1 bytes @ 0x2
   457                           
   458                           
   459                           ; 2 bytes @ 0x2
   460  0072                     	ds	2
   461  0074                     ??_DISPLAY_HEX:
   462  0074                     ADC_READ@LECT:	
   463                           ; 1 bytes @ 0x4
   464                           
   465                           
   466                           ; 2 bytes @ 0x4
   467  0074                     	ds	2
   468  0076                     DISPLAY_HEX@select:
   469                           
   470                           ; 1 bytes @ 0x6
   471  0076                     	ds	1
   472  0077                     ??_isr:
   473                           
   474                           ; 1 bytes @ 0x7
   475  0077                     	ds	3
   476                           
   477                           	psect	cstackBANK0
   478  0046                     __pcstackBANK0:
   479  0046                     ?_ADC_INIT:
   480  0046                     ?___awdiv:	
   481                           ; 1 bytes @ 0x0
   482                           
   483  0046                     ADC_INIT@canal:	
   484                           ; 2 bytes @ 0x0
   485                           
   486  0046                     ___awdiv@divisor:	
   487                           ; 2 bytes @ 0x0
   488                           
   489                           
   490                           ; 2 bytes @ 0x0
   491  0046                     	ds	2
   492  0048                     ??_ADC_INIT:
   493  0048                     ___awdiv@dividend:	
   494                           ; 1 bytes @ 0x2
   495                           
   496                           
   497                           ; 2 bytes @ 0x2
   498  0048                     	ds	1
   499  0049                     ??_setup:
   500                           
   501                           ; 1 bytes @ 0x3
   502  0049                     	ds	1
   503  004A                     ??___awdiv:
   504                           
   505                           ; 1 bytes @ 0x4
   506  004A                     	ds	1
   507  004B                     ___awdiv@counter:
   508                           
   509                           ; 1 bytes @ 0x5
   510  004B                     	ds	1
   511  004C                     ___awdiv@sign:
   512                           
   513                           ; 1 bytes @ 0x6
   514  004C                     	ds	1
   515  004D                     ___awdiv@quotient:
   516                           
   517                           ; 2 bytes @ 0x7
   518  004D                     	ds	2
   519  004F                     ?_BIN_HEX:
   520  004F                     BIN_HEX@VBIN:	
   521                           ; 1 bytes @ 0x9
   522                           
   523                           
   524                           ; 2 bytes @ 0x9
   525  004F                     	ds	2
   526  0051                     BIN_HEX@VHEX1:
   527                           
   528                           ; 1 bytes @ 0xB
   529  0051                     	ds	1
   530  0052                     BIN_HEX@VHEX2:
   531                           
   532                           ; 1 bytes @ 0xC
   533  0052                     	ds	1
   534  0053                     ??_BIN_HEX:
   535                           
   536                           ; 1 bytes @ 0xD
   537  0053                     	ds	2
   538  0055                     ??_main:
   539                           
   540                           ; 1 bytes @ 0xF
   541  0055                     	ds	2
   542                           
   543                           	psect	maintext
   544  014C                     __pmaintext:	
   545 ;;
   546 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   547 ;;
   548 ;; *************** function _main *****************
   549 ;; Defined at:
   550 ;;		line 110 in file "main.c"
   551 ;; Parameters:    Size  Location     Type
   552 ;;		None
   553 ;; Auto vars:     Size  Location     Type
   554 ;;		None
   555 ;; Return value:  Size  Location     Type
   556 ;;                  1    wreg      void 
   557 ;; Registers used:
   558 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   559 ;; Tracked objects:
   560 ;;		On entry : B00/0
   561 ;;		On exit  : 0/0
   562 ;;		Unchanged: 0/0
   563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   564 ;;      Params:         0       0       0       0       0
   565 ;;      Locals:         0       0       0       0       0
   566 ;;      Temps:          0       2       0       0       0
   567 ;;      Totals:         0       2       0       0       0
   568 ;;Total ram usage:        2 bytes
   569 ;; Hardware stack levels required when called:    4
   570 ;; This function calls:
   571 ;;		_BIN_HEX
   572 ;;		_setup
   573 ;; This function is called by:
   574 ;;		Startup code after reset
   575 ;; This function uses a non-reentrant model
   576 ;;
   577                           
   578                           
   579                           ;psect for function _main
   580  014C                     _main:
   581  014C                     l1119:	
   582                           ;incstack = 0
   583                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   584                           
   585                           
   586                           ;main.c: 111:     setup();
   587  014C  120A  118A  2185  120A  118A  	fcall	_setup
   588  0151                     l1121:
   589                           
   590                           ;main.c: 112:     ADCON0bits.GO = 1;
   591  0151  1283               	bcf	3,5	;RP0=0, select bank0
   592  0152  1303               	bcf	3,6	;RP1=0, select bank0
   593  0153  149F               	bsf	31,1	;volatile
   594  0154                     l1123:
   595                           
   596                           ;main.c: 114:         PORTC = CONTADOR;
   597  0154  085D               	movf	_CONTADOR,w
   598  0155  0087               	movwf	7	;volatile
   599  0156                     l1125:
   600                           
   601                           ;main.c: 116:         _delay((unsigned long)((100)*(4000000/4000000.0)));
   602  0156  3020               	movlw	32
   603  0157  1283               	bcf	3,5	;RP0=0, select bank0
   604  0158  1303               	bcf	3,6	;RP1=0, select bank0
   605  0159  00D5               	movwf	??_main
   606  015A                     u377:
   607  015A  0BD5               	decfsz	??_main,f
   608  015B  295A               	goto	u377
   609  015C  0000               	nop
   610  015D                     l1127:
   611                           
   612                           ;main.c: 117:         ADCON0bits.GO = 1;
   613  015D  1283               	bcf	3,5	;RP0=0, select bank0
   614  015E  1303               	bcf	3,6	;RP1=0, select bank0
   615  015F  149F               	bsf	31,1	;volatile
   616  0160                     l1129:
   617                           
   618                           ;main.c: 118:         BIN_HEX(VALOR_ADC, &HEX1, &HEX2);
   619  0160  0858               	movf	_VALOR_ADC+1,w
   620  0161  00D0               	movwf	BIN_HEX@VBIN+1
   621  0162  0857               	movf	_VALOR_ADC,w
   622  0163  00CF               	movwf	BIN_HEX@VBIN
   623  0164  307C               	movlw	(low (_HEX1| 0))& (0+255)
   624  0165  00D5               	movwf	??_main
   625  0166  0855               	movf	??_main,w
   626  0167  00D1               	movwf	BIN_HEX@VHEX1
   627  0168  307A               	movlw	(low (_HEX2| 0))& (0+255)
   628  0169  00D6               	movwf	??_main+1
   629  016A  0856               	movf	??_main+1,w
   630  016B  00D2               	movwf	BIN_HEX@VHEX2
   631  016C  120A  118A  21BE  120A  118A  	fcall	_BIN_HEX
   632  0171                     l1131:
   633                           
   634                           ;main.c: 119:        if (VALOR_ADC == CONTADOR){
   635  0171  1283               	bcf	3,5	;RP0=0, select bank0
   636  0172  1303               	bcf	3,6	;RP1=0, select bank0
   637  0173  085E               	movf	_CONTADOR+1,w
   638  0174  0658               	xorwf	_VALOR_ADC+1,w
   639  0175  1D03               	skipz
   640  0176  2979               	goto	u365
   641  0177  085D               	movf	_CONTADOR,w
   642  0178  0657               	xorwf	_VALOR_ADC,w
   643  0179                     u365:
   644  0179  1D03               	skipz
   645  017A  297C               	goto	u361
   646  017B  297D               	goto	u360
   647  017C                     u361:
   648  017C  2980               	goto	l1135
   649  017D                     u360:
   650  017D                     l1133:
   651                           
   652                           ;main.c: 120:             PORTE = 2;
   653  017D  3002               	movlw	2
   654  017E  0089               	movwf	9	;volatile
   655                           
   656                           ;main.c: 121:         }
   657  017F  2954               	goto	l1123
   658  0180                     l1135:
   659                           
   660                           ;main.c: 123:             PORTE = 0;
   661  0180  0189               	clrf	9	;volatile
   662  0181  2954               	goto	l1123
   663  0182  120A  118A  280E   	ljmp	start
   664  0185                     __end_of_main:
   665                           
   666                           	psect	text1
   667  0185                     __ptext1:	
   668 ;; *************** function _setup *****************
   669 ;; Defined at:
   670 ;;		line 129 in file "main.c"
   671 ;; Parameters:    Size  Location     Type
   672 ;;		None
   673 ;; Auto vars:     Size  Location     Type
   674 ;;		None
   675 ;; Return value:  Size  Location     Type
   676 ;;                  1    wreg      void 
   677 ;; Registers used:
   678 ;;		wreg, status,2, status,0, pclath, cstack
   679 ;; Tracked objects:
   680 ;;		On entry : 0/0
   681 ;;		On exit  : 0/0
   682 ;;		Unchanged: 0/0
   683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   684 ;;      Params:         0       0       0       0       0
   685 ;;      Locals:         0       0       0       0       0
   686 ;;      Temps:          0       0       0       0       0
   687 ;;      Totals:         0       0       0       0       0
   688 ;;Total ram usage:        0 bytes
   689 ;; Hardware stack levels used:    1
   690 ;; Hardware stack levels required when called:    3
   691 ;; This function calls:
   692 ;;		_ADC_INIT
   693 ;; This function is called by:
   694 ;;		_main
   695 ;; This function uses a non-reentrant model
   696 ;;
   697                           
   698                           
   699                           ;psect for function _setup
   700  0185                     _setup:
   701  0185                     l1031:	
   702                           ;incstack = 0
   703                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   704                           
   705                           
   706                           ;main.c: 131:     ANSEL = 0B00000100;
   707  0185  3004               	movlw	4
   708  0186  1683               	bsf	3,5	;RP0=1, select bank3
   709  0187  1703               	bsf	3,6	;RP1=1, select bank3
   710  0188  0088               	movwf	8	;volatile
   711  0189                     l1033:
   712                           
   713                           ;main.c: 132:     ANSELH = 0X00;
   714  0189  0189               	clrf	9	;volatile
   715  018A                     l1035:
   716                           
   717                           ;main.c: 134:     TRISA = 0B00000100;
   718  018A  3004               	movlw	4
   719  018B  1683               	bsf	3,5	;RP0=1, select bank1
   720  018C  1303               	bcf	3,6	;RP1=0, select bank1
   721  018D  0085               	movwf	5	;volatile
   722                           
   723                           ;main.c: 135:     TRISC = 0X00;
   724  018E  0187               	clrf	7	;volatile
   725                           
   726                           ;main.c: 136:     TRISD = 0X00;
   727  018F  0188               	clrf	8	;volatile
   728                           
   729                           ;main.c: 137:     TRISE = 0X00;
   730  0190  0189               	clrf	9	;volatile
   731  0191                     l1037:
   732                           
   733                           ;main.c: 138:     TRISB = 0B00000011;
   734  0191  3003               	movlw	3
   735  0192  0086               	movwf	6	;volatile
   736  0193                     l1039:
   737                           
   738                           ;main.c: 140:     PORTA = 0X00;
   739  0193  1283               	bcf	3,5	;RP0=0, select bank0
   740  0194  1303               	bcf	3,6	;RP1=0, select bank0
   741  0195  0185               	clrf	5	;volatile
   742  0196                     l1041:
   743                           
   744                           ;main.c: 141:     PORTB = 0X00;
   745  0196  0186               	clrf	6	;volatile
   746  0197                     l1043:
   747                           
   748                           ;main.c: 142:     PORTC = 0X00;
   749  0197  0187               	clrf	7	;volatile
   750  0198                     l1045:
   751                           
   752                           ;main.c: 143:     PORTD = 0X00;
   753  0198  0188               	clrf	8	;volatile
   754  0199                     l1047:
   755                           
   756                           ;main.c: 144:     PORTE = 0X00;
   757  0199  0189               	clrf	9	;volatile
   758  019A                     l1049:
   759                           
   760                           ;main.c: 147:     OSCCONbits.IRCF2 = 1;
   761  019A  1683               	bsf	3,5	;RP0=1, select bank1
   762  019B  1303               	bcf	3,6	;RP1=0, select bank1
   763  019C  170F               	bsf	15,6	;volatile
   764  019D                     l1051:
   765                           
   766                           ;main.c: 148:     OSCCONbits.IRCF1 = 1;
   767  019D  168F               	bsf	15,5	;volatile
   768  019E                     l1053:
   769                           
   770                           ;main.c: 149:     OSCCONbits.IRCF0 = 0;
   771  019E  120F               	bcf	15,4	;volatile
   772  019F                     l1055:
   773                           
   774                           ;main.c: 150:     OSCCONbits.SCS = 1;
   775  019F  140F               	bsf	15,0	;volatile
   776                           
   777                           ;main.c: 153:     OPTION_REG = 0B01010100;
   778  01A0  3054               	movlw	84
   779  01A1  0081               	movwf	1	;volatile
   780                           
   781                           ;main.c: 154:     TMR0 = 100;
   782  01A2  3064               	movlw	100
   783  01A3  1283               	bcf	3,5	;RP0=0, select bank0
   784  01A4  1303               	bcf	3,6	;RP1=0, select bank0
   785  01A5  0081               	movwf	1	;volatile
   786  01A6                     l1057:
   787                           
   788                           ;main.c: 157:     WPUB0 = 1 ;
   789  01A6  1683               	bsf	3,5	;RP0=1, select bank1
   790  01A7  1303               	bcf	3,6	;RP1=0, select bank1
   791  01A8  1415               	bsf	21,0	;volatile
   792  01A9                     l1059:
   793                           
   794                           ;main.c: 158:     WPUB1 = 1 ;
   795  01A9  1495               	bsf	21,1	;volatile
   796  01AA                     l1061:
   797                           
   798                           ;main.c: 159:     IOCB0 = 1 ;
   799  01AA  1416               	bsf	22,0	;volatile
   800  01AB                     l1063:
   801                           
   802                           ;main.c: 160:     IOCB1 = 1 ;
   803  01AB  1496               	bsf	22,1	;volatile
   804  01AC                     l1065:
   805                           
   806                           ;main.c: 162:     ADC_INIT(CANAL);
   807  01AC  3002               	movlw	2
   808  01AD  1283               	bcf	3,5	;RP0=0, select bank0
   809  01AE  1303               	bcf	3,6	;RP1=0, select bank0
   810  01AF  00C6               	movwf	ADC_INIT@canal
   811  01B0  3000               	movlw	0
   812  01B1  00C7               	movwf	ADC_INIT@canal+1
   813  01B2  120A  118A  220C  120A  118A  	fcall	_ADC_INIT
   814  01B7                     l1067:
   815                           
   816                           ;main.c: 164:     INTCONbits.GIE = 1;
   817  01B7  178B               	bsf	11,7	;volatile
   818  01B8                     l1069:
   819                           
   820                           ;main.c: 165:     INTCONbits.PEIE = 1;
   821  01B8  170B               	bsf	11,6	;volatile
   822  01B9                     l1071:
   823                           
   824                           ;main.c: 166:     INTCONbits.T0IE = 1;
   825  01B9  168B               	bsf	11,5	;volatile
   826  01BA                     l1073:
   827                           
   828                           ;main.c: 167:     INTCONbits.T0IF = 0;
   829  01BA  110B               	bcf	11,2	;volatile
   830  01BB                     l1075:
   831                           
   832                           ;main.c: 168:     INTCONbits.RBIE = 1;
   833  01BB  158B               	bsf	11,3	;volatile
   834  01BC                     l1077:
   835                           
   836                           ;main.c: 169:     INTCONbits.RBIF = 0;
   837  01BC  100B               	bcf	11,0	;volatile
   838  01BD                     l129:
   839  01BD  0008               	return
   840  01BE                     __end_of_setup:
   841                           
   842                           	psect	text2
   843  020C                     __ptext2:	
   844 ;; *************** function _ADC_INIT *****************
   845 ;; Defined at:
   846 ;;		line 12 in file "./ADC_LIB.h"
   847 ;; Parameters:    Size  Location     Type
   848 ;;  canal           2    0[BANK0 ] int 
   849 ;; Auto vars:     Size  Location     Type
   850 ;;		None
   851 ;; Return value:  Size  Location     Type
   852 ;;                  1    wreg      void 
   853 ;; Registers used:
   854 ;;		wreg, status,2, status,0
   855 ;; Tracked objects:
   856 ;;		On entry : 0/0
   857 ;;		On exit  : 0/0
   858 ;;		Unchanged: 0/0
   859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   860 ;;      Params:         0       2       0       0       0
   861 ;;      Locals:         0       0       0       0       0
   862 ;;      Temps:          0       1       0       0       0
   863 ;;      Totals:         0       3       0       0       0
   864 ;;Total ram usage:        3 bytes
   865 ;; Hardware stack levels used:    1
   866 ;; Hardware stack levels required when called:    2
   867 ;; This function calls:
   868 ;;		Nothing
   869 ;; This function is called by:
   870 ;;		_setup
   871 ;; This function uses a non-reentrant model
   872 ;;
   873                           
   874                           
   875                           ;psect for function _ADC_INIT
   876  020C                     _ADC_INIT:
   877  020C                     l939:	
   878                           ;incstack = 0
   879                           ; Regs used in _ADC_INIT: [wreg+status,2+status,0]
   880                           
   881                           
   882                           ;./ADC_LIB.h: 14:     ADCON0bits.ADON = 0X01;
   883  020C  1283               	bcf	3,5	;RP0=0, select bank0
   884  020D  1303               	bcf	3,6	;RP1=0, select bank0
   885  020E  141F               	bsf	31,0	;volatile
   886  020F                     l941:
   887                           
   888                           ;./ADC_LIB.h: 15:     ADCON0bits.CHS = canal;
   889  020F  0846               	movf	ADC_INIT@canal,w
   890  0210  00C8               	movwf	??_ADC_INIT
   891  0211  0DC8               	rlf	??_ADC_INIT,f
   892  0212  0DC8               	rlf	??_ADC_INIT,f
   893  0213  081F               	movf	31,w	;volatile
   894  0214  0648               	xorwf	??_ADC_INIT,w
   895  0215  39C3               	andlw	-61
   896  0216  0648               	xorwf	??_ADC_INIT,w
   897  0217  009F               	movwf	31	;volatile
   898  0218                     l943:
   899                           
   900                           ;./ADC_LIB.h: 16:     _delay((unsigned long)((100)*(4000000/4000000.0)));
   901  0218  3020               	movlw	32
   902  0219  1283               	bcf	3,5	;RP0=0, select bank0
   903  021A  1303               	bcf	3,6	;RP1=0, select bank0
   904  021B  00C8               	movwf	??_ADC_INIT
   905  021C                     u387:
   906  021C  0BC8               	decfsz	??_ADC_INIT,f
   907  021D  2A1C               	goto	u387
   908  021E  0000               	nop
   909  021F                     l945:
   910                           
   911                           ;./ADC_LIB.h: 17:     ADCON0bits.ADCS = 0X01;
   912  021F  1283               	bcf	3,5	;RP0=0, select bank0
   913  0220  1303               	bcf	3,6	;RP1=0, select bank0
   914  0221  081F               	movf	31,w	;volatile
   915  0222  393F               	andlw	-193
   916  0223  3840               	iorlw	64
   917  0224  009F               	movwf	31	;volatile
   918  0225                     l947:
   919                           
   920                           ;./ADC_LIB.h: 18:     ADCON1bits.ADFM = 0;
   921  0225  1683               	bsf	3,5	;RP0=1, select bank1
   922  0226  1303               	bcf	3,6	;RP1=0, select bank1
   923  0227  139F               	bcf	31,7	;volatile
   924  0228                     l949:
   925                           
   926                           ;./ADC_LIB.h: 19:     ADCON1bits.VCFG0 = 0;
   927  0228  121F               	bcf	31,4	;volatile
   928  0229                     l951:
   929                           
   930                           ;./ADC_LIB.h: 20:     ADCON1bits.VCFG1 = 0;
   931  0229  129F               	bcf	31,5	;volatile
   932  022A                     l953:
   933                           
   934                           ;./ADC_LIB.h: 21:     PIE1bits.ADIE = 1;
   935  022A  170C               	bsf	12,6	;volatile
   936  022B                     l955:
   937                           
   938                           ;./ADC_LIB.h: 22:     PIR1bits.ADIF = 0;
   939  022B  1283               	bcf	3,5	;RP0=0, select bank0
   940  022C  1303               	bcf	3,6	;RP1=0, select bank0
   941  022D  130C               	bcf	12,6	;volatile
   942  022E                     l67:
   943  022E  0008               	return
   944  022F                     __end_of_ADC_INIT:
   945                           
   946                           	psect	text3
   947  01BE                     __ptext3:	
   948 ;; *************** function _BIN_HEX *****************
   949 ;; Defined at:
   950 ;;		line 44 in file "./DISPLAY_LIB.h"
   951 ;; Parameters:    Size  Location     Type
   952 ;;  VBIN            2    9[BANK0 ] int 
   953 ;;  VHEX1           1   11[BANK0 ] PTR int 
   954 ;;		 -> HEX1(2), 
   955 ;;  VHEX2           1   12[BANK0 ] PTR int 
   956 ;;		 -> HEX2(2), 
   957 ;; Auto vars:     Size  Location     Type
   958 ;;		None
   959 ;; Return value:  Size  Location     Type
   960 ;;                  1    wreg      void 
   961 ;; Registers used:
   962 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   963 ;; Tracked objects:
   964 ;;		On entry : 0/0
   965 ;;		On exit  : 0/0
   966 ;;		Unchanged: 0/0
   967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   968 ;;      Params:         0       4       0       0       0
   969 ;;      Locals:         0       0       0       0       0
   970 ;;      Temps:          0       2       0       0       0
   971 ;;      Totals:         0       6       0       0       0
   972 ;;Total ram usage:        6 bytes
   973 ;; Hardware stack levels used:    1
   974 ;; Hardware stack levels required when called:    3
   975 ;; This function calls:
   976 ;;		___awdiv
   977 ;; This function is called by:
   978 ;;		_main
   979 ;; This function uses a non-reentrant model
   980 ;;
   981                           
   982                           
   983                           ;psect for function _BIN_HEX
   984  01BE                     _BIN_HEX:
   985  01BE                     l1027:	
   986                           ;incstack = 0
   987                           ; Regs used in _BIN_HEX: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   988                           
   989                           
   990                           ;./DISPLAY_LIB.h: 45:     *VHEX1 = VBIN & 0X0F;
   991  01BE  300F               	movlw	15
   992  01BF  1283               	bcf	3,5	;RP0=0, select bank0
   993  01C0  1303               	bcf	3,6	;RP1=0, select bank0
   994  01C1  054F               	andwf	BIN_HEX@VBIN,w
   995  01C2  00D3               	movwf	??_BIN_HEX
   996  01C3  3000               	movlw	0
   997  01C4  0550               	andwf	BIN_HEX@VBIN+1,w
   998  01C5  00D4               	movwf	??_BIN_HEX+1
   999  01C6  0851               	movf	BIN_HEX@VHEX1,w
  1000  01C7  0084               	movwf	4
  1001  01C8  0853               	movf	??_BIN_HEX,w
  1002  01C9  0080               	movwf	0
  1003  01CA  0A84               	incf	4,f
  1004  01CB  0854               	movf	??_BIN_HEX+1,w
  1005  01CC  0080               	movwf	0
  1006  01CD                     l1029:
  1007                           
  1008                           ;./DISPLAY_LIB.h: 46:     *VHEX2 = (VBIN & 0XF0)/16;
  1009  01CD  3010               	movlw	16
  1010  01CE  00C6               	movwf	___awdiv@divisor
  1011  01CF  3000               	movlw	0
  1012  01D0  00C7               	movwf	___awdiv@divisor+1
  1013  01D1  30F0               	movlw	240
  1014  01D2  054F               	andwf	BIN_HEX@VBIN,w
  1015  01D3  00C8               	movwf	___awdiv@dividend
  1016  01D4  3000               	movlw	0
  1017  01D5  0550               	andwf	BIN_HEX@VBIN+1,w
  1018  01D6  00C9               	movwf	___awdiv@dividend+1
  1019  01D7  120A  118A  203C  120A  118A  	fcall	___awdiv
  1020  01DC  1283               	bcf	3,5	;RP0=0, select bank0
  1021  01DD  1303               	bcf	3,6	;RP1=0, select bank0
  1022  01DE  0852               	movf	BIN_HEX@VHEX2,w
  1023  01DF  0084               	movwf	4
  1024  01E0  0846               	movf	?___awdiv,w
  1025  01E1  0080               	movwf	0
  1026  01E2  0A84               	incf	4,f
  1027  01E3  0847               	movf	?___awdiv+1,w
  1028  01E4  0080               	movwf	0
  1029  01E5                     l82:
  1030  01E5  0008               	return
  1031  01E6                     __end_of_BIN_HEX:
  1032                           
  1033                           	psect	text4
  1034  003C                     __ptext4:	
  1035 ;; *************** function ___awdiv *****************
  1036 ;; Defined at:
  1037 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  1038 ;; Parameters:    Size  Location     Type
  1039 ;;  divisor         2    0[BANK0 ] int 
  1040 ;;  dividend        2    2[BANK0 ] int 
  1041 ;; Auto vars:     Size  Location     Type
  1042 ;;  quotient        2    7[BANK0 ] int 
  1043 ;;  sign            1    6[BANK0 ] unsigned char 
  1044 ;;  counter         1    5[BANK0 ] unsigned char 
  1045 ;; Return value:  Size  Location     Type
  1046 ;;                  2    0[BANK0 ] int 
  1047 ;; Registers used:
  1048 ;;		wreg, status,2, status,0
  1049 ;; Tracked objects:
  1050 ;;		On entry : 0/0
  1051 ;;		On exit  : 0/0
  1052 ;;		Unchanged: 0/0
  1053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1054 ;;      Params:         0       4       0       0       0
  1055 ;;      Locals:         0       4       0       0       0
  1056 ;;      Temps:          0       1       0       0       0
  1057 ;;      Totals:         0       9       0       0       0
  1058 ;;Total ram usage:        9 bytes
  1059 ;; Hardware stack levels used:    1
  1060 ;; Hardware stack levels required when called:    2
  1061 ;; This function calls:
  1062 ;;		Nothing
  1063 ;; This function is called by:
  1064 ;;		_BIN_HEX
  1065 ;; This function uses a non-reentrant model
  1066 ;;
  1067                           
  1068                           
  1069                           ;psect for function ___awdiv
  1070  003C                     ___awdiv:
  1071  003C                     l957:	
  1072                           ;incstack = 0
  1073                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1074                           
  1075  003C  1283               	bcf	3,5	;RP0=0, select bank0
  1076  003D  1303               	bcf	3,6	;RP1=0, select bank0
  1077  003E  01CC               	clrf	___awdiv@sign
  1078  003F                     l959:
  1079  003F  1FC7               	btfss	___awdiv@divisor+1,7
  1080  0040  2842               	goto	u191
  1081  0041  2843               	goto	u190
  1082  0042                     u191:
  1083  0042  284A               	goto	l965
  1084  0043                     u190:
  1085  0043                     l961:
  1086  0043  09C6               	comf	___awdiv@divisor,f
  1087  0044  09C7               	comf	___awdiv@divisor+1,f
  1088  0045  0AC6               	incf	___awdiv@divisor,f
  1089  0046  1903               	skipnz
  1090  0047  0AC7               	incf	___awdiv@divisor+1,f
  1091  0048                     l963:
  1092  0048  01CC               	clrf	___awdiv@sign
  1093  0049  0ACC               	incf	___awdiv@sign,f
  1094  004A                     l965:
  1095  004A  1FC9               	btfss	___awdiv@dividend+1,7
  1096  004B  284D               	goto	u201
  1097  004C  284E               	goto	u200
  1098  004D                     u201:
  1099  004D  2857               	goto	l971
  1100  004E                     u200:
  1101  004E                     l967:
  1102  004E  09C8               	comf	___awdiv@dividend,f
  1103  004F  09C9               	comf	___awdiv@dividend+1,f
  1104  0050  0AC8               	incf	___awdiv@dividend,f
  1105  0051  1903               	skipnz
  1106  0052  0AC9               	incf	___awdiv@dividend+1,f
  1107  0053                     l969:
  1108  0053  3001               	movlw	1
  1109  0054  00CA               	movwf	??___awdiv
  1110  0055  084A               	movf	??___awdiv,w
  1111  0056  06CC               	xorwf	___awdiv@sign,f
  1112  0057                     l971:
  1113  0057  01CD               	clrf	___awdiv@quotient
  1114  0058  01CE               	clrf	___awdiv@quotient+1
  1115  0059                     l973:
  1116  0059  0846               	movf	___awdiv@divisor,w
  1117  005A  0447               	iorwf	___awdiv@divisor+1,w
  1118  005B  1903               	btfsc	3,2
  1119  005C  285E               	goto	u211
  1120  005D  285F               	goto	u210
  1121  005E                     u211:
  1122  005E  2896               	goto	l993
  1123  005F                     u210:
  1124  005F                     l975:
  1125  005F  01CB               	clrf	___awdiv@counter
  1126  0060  0ACB               	incf	___awdiv@counter,f
  1127  0061  286D               	goto	l981
  1128  0062                     l977:
  1129  0062  3001               	movlw	1
  1130  0063                     u225:
  1131  0063  1003               	clrc
  1132  0064  0DC6               	rlf	___awdiv@divisor,f
  1133  0065  0DC7               	rlf	___awdiv@divisor+1,f
  1134  0066  3EFF               	addlw	-1
  1135  0067  1D03               	skipz
  1136  0068  2863               	goto	u225
  1137  0069                     l979:
  1138  0069  3001               	movlw	1
  1139  006A  00CA               	movwf	??___awdiv
  1140  006B  084A               	movf	??___awdiv,w
  1141  006C  07CB               	addwf	___awdiv@counter,f
  1142  006D                     l981:
  1143  006D  1FC7               	btfss	___awdiv@divisor+1,7
  1144  006E  2870               	goto	u231
  1145  006F  2871               	goto	u230
  1146  0070                     u231:
  1147  0070  2862               	goto	l977
  1148  0071                     u230:
  1149  0071                     l983:
  1150  0071  3001               	movlw	1
  1151  0072                     u245:
  1152  0072  1003               	clrc
  1153  0073  0DCD               	rlf	___awdiv@quotient,f
  1154  0074  0DCE               	rlf	___awdiv@quotient+1,f
  1155  0075  3EFF               	addlw	-1
  1156  0076  1D03               	skipz
  1157  0077  2872               	goto	u245
  1158  0078  0847               	movf	___awdiv@divisor+1,w
  1159  0079  0249               	subwf	___awdiv@dividend+1,w
  1160  007A  1D03               	skipz
  1161  007B  287E               	goto	u255
  1162  007C  0846               	movf	___awdiv@divisor,w
  1163  007D  0248               	subwf	___awdiv@dividend,w
  1164  007E                     u255:
  1165  007E  1C03               	skipc
  1166  007F  2881               	goto	u251
  1167  0080  2882               	goto	u250
  1168  0081                     u251:
  1169  0081  2889               	goto	l989
  1170  0082                     u250:
  1171  0082                     l985:
  1172  0082  0846               	movf	___awdiv@divisor,w
  1173  0083  02C8               	subwf	___awdiv@dividend,f
  1174  0084  0847               	movf	___awdiv@divisor+1,w
  1175  0085  1C03               	skipc
  1176  0086  03C9               	decf	___awdiv@dividend+1,f
  1177  0087  02C9               	subwf	___awdiv@dividend+1,f
  1178  0088                     l987:
  1179  0088  144D               	bsf	___awdiv@quotient,0
  1180  0089                     l989:
  1181  0089  3001               	movlw	1
  1182  008A                     u265:
  1183  008A  1003               	clrc
  1184  008B  0CC7               	rrf	___awdiv@divisor+1,f
  1185  008C  0CC6               	rrf	___awdiv@divisor,f
  1186  008D  3EFF               	addlw	-1
  1187  008E  1D03               	skipz
  1188  008F  288A               	goto	u265
  1189  0090                     l991:
  1190  0090  3001               	movlw	1
  1191  0091  02CB               	subwf	___awdiv@counter,f
  1192  0092  1D03               	btfss	3,2
  1193  0093  2895               	goto	u271
  1194  0094  2896               	goto	u270
  1195  0095                     u271:
  1196  0095  2871               	goto	l983
  1197  0096                     u270:
  1198  0096                     l993:
  1199  0096  084C               	movf	___awdiv@sign,w
  1200  0097  1903               	btfsc	3,2
  1201  0098  289A               	goto	u281
  1202  0099  289B               	goto	u280
  1203  009A                     u281:
  1204  009A  28A0               	goto	l997
  1205  009B                     u280:
  1206  009B                     l995:
  1207  009B  09CD               	comf	___awdiv@quotient,f
  1208  009C  09CE               	comf	___awdiv@quotient+1,f
  1209  009D  0ACD               	incf	___awdiv@quotient,f
  1210  009E  1903               	skipnz
  1211  009F  0ACE               	incf	___awdiv@quotient+1,f
  1212  00A0                     l997:
  1213  00A0  084E               	movf	___awdiv@quotient+1,w
  1214  00A1  00C7               	movwf	?___awdiv+1
  1215  00A2  084D               	movf	___awdiv@quotient,w
  1216  00A3  00C6               	movwf	?___awdiv
  1217  00A4                     l368:
  1218  00A4  0008               	return
  1219  00A5                     __end_of___awdiv:
  1220                           
  1221                           	psect	text5
  1222  00A5                     __ptext5:	
  1223 ;; *************** function _isr *****************
  1224 ;; Defined at:
  1225 ;;		line 75 in file "main.c"
  1226 ;; Parameters:    Size  Location     Type
  1227 ;;		None
  1228 ;; Auto vars:     Size  Location     Type
  1229 ;;		None
  1230 ;; Return value:  Size  Location     Type
  1231 ;;                  1    wreg      void 
  1232 ;; Registers used:
  1233 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1234 ;; Tracked objects:
  1235 ;;		On entry : 0/0
  1236 ;;		On exit  : 0/0
  1237 ;;		Unchanged: 0/0
  1238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1239 ;;      Params:         0       0       0       0       0
  1240 ;;      Locals:         0       0       0       0       0
  1241 ;;      Temps:          3       0       0       0       0
  1242 ;;      Totals:         3       0       0       0       0
  1243 ;;Total ram usage:        3 bytes
  1244 ;; Hardware stack levels used:    1
  1245 ;; Hardware stack levels required when called:    1
  1246 ;; This function calls:
  1247 ;;		_ADC_READ
  1248 ;;		_DISPLAY_HEX
  1249 ;; This function is called by:
  1250 ;;		Interrupt level 1
  1251 ;; This function uses a non-reentrant model
  1252 ;;
  1253                           
  1254                           
  1255                           ;psect for function _isr
  1256  00A5                     _isr:
  1257  00A5                     i1l1079:
  1258                           
  1259                           ;main.c: 76:     (INTCONbits.GIE = 0);
  1260  00A5  138B               	bcf	11,7	;volatile
  1261                           
  1262                           ;main.c: 77:     if (T0IF == 1){
  1263  00A6  1D0B               	btfss	11,2	;volatile
  1264  00A7  28A9               	goto	u29_21
  1265  00A8  28AA               	goto	u29_20
  1266  00A9                     u29_21:
  1267  00A9  28BD               	goto	i1l1087
  1268  00AA                     u29_20:
  1269  00AA                     i1l1081:
  1270                           
  1271                           ;main.c: 78:         TMR0 = 100;
  1272  00AA  3064               	movlw	100
  1273  00AB  1283               	bcf	3,5	;RP0=0, select bank0
  1274  00AC  1303               	bcf	3,6	;RP1=0, select bank0
  1275  00AD  0081               	movwf	1	;volatile
  1276  00AE                     i1l1083:
  1277                           
  1278                           ;main.c: 79:         DISPLAY_HEX(&select,HEX1, HEX2);
  1279  00AE  087D               	movf	_HEX1+1,w
  1280  00AF  00F1               	movwf	DISPLAY_HEX@VHEX1+1
  1281  00B0  087C               	movf	_HEX1,w
  1282  00B1  00F0               	movwf	DISPLAY_HEX@VHEX1
  1283  00B2  087B               	movf	_HEX2+1,w
  1284  00B3  00F3               	movwf	DISPLAY_HEX@VHEX2+1
  1285  00B4  087A               	movf	_HEX2,w
  1286  00B5  00F2               	movwf	DISPLAY_HEX@VHEX2
  1287  00B6  3044               	movlw	(low (_select| 0))& (0+255)
  1288  00B7  120A  118A  210E  120A  118A  	fcall	_DISPLAY_HEX
  1289  00BC                     i1l1085:
  1290                           
  1291                           ;main.c: 80:         INTCONbits.T0IF = 0;
  1292  00BC  110B               	bcf	11,2	;volatile
  1293  00BD                     i1l1087:
  1294                           
  1295                           ;main.c: 82:     if (RBIF == 1){
  1296  00BD  1C0B               	btfss	11,0	;volatile
  1297  00BE  28C0               	goto	u30_21
  1298  00BF  28C1               	goto	u30_20
  1299  00C0                     u30_21:
  1300  00C0  28F2               	goto	i1l1111
  1301  00C1                     u30_20:
  1302  00C1                     i1l1089:
  1303                           
  1304                           ;main.c: 83:         if (RB0 == 0){
  1305  00C1  1283               	bcf	3,5	;RP0=0, select bank0
  1306  00C2  1303               	bcf	3,6	;RP1=0, select bank0
  1307  00C3  1806               	btfsc	6,0	;volatile
  1308  00C4  28C6               	goto	u31_21
  1309  00C5  28C7               	goto	u31_20
  1310  00C6                     u31_21:
  1311  00C6  28CC               	goto	i1l1093
  1312  00C7                     u31_20:
  1313  00C7                     i1l1091:
  1314                           
  1315                           ;main.c: 84:             flag1 = 1;
  1316  00C7  3001               	movlw	1
  1317  00C8  00DB               	movwf	_flag1
  1318  00C9  3000               	movlw	0
  1319  00CA  00DC               	movwf	_flag1+1
  1320                           
  1321                           ;main.c: 85:         }
  1322  00CB  28DA               	goto	i1l1099
  1323  00CC                     i1l1093:
  1324                           
  1325                           ;main.c: 87:             if (flag1 == 1) {
  1326  00CC  035B               	decf	_flag1,w
  1327  00CD  045C               	iorwf	_flag1+1,w
  1328  00CE  1D03               	btfss	3,2
  1329  00CF  28D1               	goto	u32_21
  1330  00D0  28D2               	goto	u32_20
  1331  00D1                     u32_21:
  1332  00D1  28DA               	goto	i1l1099
  1333  00D2                     u32_20:
  1334  00D2                     i1l1095:
  1335                           
  1336                           ;main.c: 88:                 CONTADOR++;
  1337  00D2  3001               	movlw	1
  1338  00D3  07DD               	addwf	_CONTADOR,f
  1339  00D4  1803               	skipnc
  1340  00D5  0ADE               	incf	_CONTADOR+1,f
  1341  00D6  3000               	movlw	0
  1342  00D7  07DE               	addwf	_CONTADOR+1,f
  1343  00D8                     i1l1097:
  1344                           
  1345                           ;main.c: 89:                 flag1 = 0;
  1346  00D8  01DB               	clrf	_flag1
  1347  00D9  01DC               	clrf	_flag1+1
  1348  00DA                     i1l1099:
  1349                           
  1350                           ;main.c: 93:         if (RB1 == 0){
  1351  00DA  1886               	btfsc	6,1	;volatile
  1352  00DB  28DD               	goto	u33_21
  1353  00DC  28DE               	goto	u33_20
  1354  00DD                     u33_21:
  1355  00DD  28E3               	goto	i1l1103
  1356  00DE                     u33_20:
  1357  00DE                     i1l1101:
  1358                           
  1359                           ;main.c: 94:             flag2 = 1;
  1360  00DE  3001               	movlw	1
  1361  00DF  00D9               	movwf	_flag2
  1362  00E0  3000               	movlw	0
  1363  00E1  00DA               	movwf	_flag2+1
  1364                           
  1365                           ;main.c: 95:         }
  1366  00E2  28F1               	goto	i1l1109
  1367  00E3                     i1l1103:
  1368                           
  1369                           ;main.c: 97:             if(flag2 ==1){
  1370  00E3  0359               	decf	_flag2,w
  1371  00E4  045A               	iorwf	_flag2+1,w
  1372  00E5  1D03               	btfss	3,2
  1373  00E6  28E8               	goto	u34_21
  1374  00E7  28E9               	goto	u34_20
  1375  00E8                     u34_21:
  1376  00E8  28F1               	goto	i1l1109
  1377  00E9                     u34_20:
  1378  00E9                     i1l1105:
  1379                           
  1380                           ;main.c: 98:                 CONTADOR--;
  1381  00E9  30FF               	movlw	255
  1382  00EA  07DD               	addwf	_CONTADOR,f
  1383  00EB  1803               	skipnc
  1384  00EC  0ADE               	incf	_CONTADOR+1,f
  1385  00ED  30FF               	movlw	255
  1386  00EE  07DE               	addwf	_CONTADOR+1,f
  1387  00EF                     i1l1107:
  1388                           
  1389                           ;main.c: 99:                 flag2 = 0;
  1390  00EF  01D9               	clrf	_flag2
  1391  00F0  01DA               	clrf	_flag2+1
  1392  00F1                     i1l1109:
  1393                           
  1394                           ;main.c: 102:      INTCONbits.RBIF = 0;
  1395  00F1  100B               	bcf	11,0	;volatile
  1396  00F2                     i1l1111:
  1397                           
  1398                           ;main.c: 104:     if (ADIF == 1){
  1399  00F2  1283               	bcf	3,5	;RP0=0, select bank0
  1400  00F3  1303               	bcf	3,6	;RP1=0, select bank0
  1401  00F4  1F0C               	btfss	12,6	;volatile
  1402  00F5  28F7               	goto	u35_21
  1403  00F6  28F8               	goto	u35_20
  1404  00F7                     u35_21:
  1405  00F7  2904               	goto	i1l1117
  1406  00F8                     u35_20:
  1407  00F8                     i1l1113:
  1408                           
  1409                           ;main.c: 105:         VALOR_ADC = ADC_READ();
  1410  00F8  120A  118A  2256  120A  118A  	fcall	_ADC_READ
  1411  00FD  0871               	movf	?_ADC_READ+1,w
  1412  00FE  1283               	bcf	3,5	;RP0=0, select bank0
  1413  00FF  1303               	bcf	3,6	;RP1=0, select bank0
  1414  0100  00D8               	movwf	_VALOR_ADC+1
  1415  0101  0870               	movf	?_ADC_READ,w
  1416  0102  00D7               	movwf	_VALOR_ADC
  1417  0103                     i1l1115:
  1418                           
  1419                           ;main.c: 106:         PIR1bits.ADIF = 0;
  1420  0103  130C               	bcf	12,6	;volatile
  1421  0104                     i1l1117:
  1422                           
  1423                           ;main.c: 108:     (INTCONbits.GIE = 1);
  1424  0104  178B               	bsf	11,7	;volatile
  1425  0105                     i1l116:
  1426  0105  0879               	movf	??_isr+2,w
  1427  0106  008A               	movwf	10
  1428  0107  0878               	movf	??_isr+1,w
  1429  0108  0084               	movwf	4
  1430  0109  0E77               	swapf	??_isr,w
  1431  010A  0083               	movwf	3
  1432  010B  0EFE               	swapf	btemp,f
  1433  010C  0E7E               	swapf	btemp,w
  1434  010D  0009               	retfie
  1435  010E                     __end_of_isr:
  1436                           
  1437                           	psect	intentry
  1438  0004                     __pintentry:	
  1439                           ;incstack = 0
  1440                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1441                           
  1442  0004                     interrupt_function:
  1443  007E                     saved_w	set	btemp
  1444  0004  00FE               	movwf	btemp
  1445  0005  0E03               	swapf	3,w
  1446  0006  00F7               	movwf	??_isr
  1447  0007  0804               	movf	4,w
  1448  0008  00F8               	movwf	??_isr+1
  1449  0009  080A               	movf	10,w
  1450  000A  00F9               	movwf	??_isr+2
  1451  000B  120A  118A  28A5   	ljmp	_isr
  1452                           
  1453                           	psect	text6
  1454  010E                     __ptext6:	
  1455 ;; *************** function _DISPLAY_HEX *****************
  1456 ;; Defined at:
  1457 ;;		line 29 in file "./DISPLAY_LIB.h"
  1458 ;; Parameters:    Size  Location     Type
  1459 ;;  select          1    wreg     PTR int 
  1460 ;;		 -> select(2), 
  1461 ;;  VHEX1           2    0[COMMON] int 
  1462 ;;  VHEX2           2    2[COMMON] int 
  1463 ;; Auto vars:     Size  Location     Type
  1464 ;;  select          1    6[COMMON] PTR int 
  1465 ;;		 -> select(2), 
  1466 ;; Return value:  Size  Location     Type
  1467 ;;                  1    wreg      void 
  1468 ;; Registers used:
  1469 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1470 ;; Tracked objects:
  1471 ;;		On entry : 0/0
  1472 ;;		On exit  : 0/0
  1473 ;;		Unchanged: 0/0
  1474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1475 ;;      Params:         4       0       0       0       0
  1476 ;;      Locals:         1       0       0       0       0
  1477 ;;      Temps:          2       0       0       0       0
  1478 ;;      Totals:         7       0       0       0       0
  1479 ;;Total ram usage:        7 bytes
  1480 ;; Hardware stack levels used:    1
  1481 ;; This function calls:
  1482 ;;		Nothing
  1483 ;; This function is called by:
  1484 ;;		_isr
  1485 ;; This function uses a non-reentrant model
  1486 ;;
  1487                           
  1488                           
  1489                           ;psect for function _DISPLAY_HEX
  1490  010E                     _DISPLAY_HEX:
  1491                           
  1492                           ;incstack = 0
  1493                           ; Regs used in _DISPLAY_HEX: [wreg-fsr0h+status,2+status,0]
  1494                           ;DISPLAY_HEX@select stored from wreg
  1495  010E  00F6               	movwf	DISPLAY_HEX@select
  1496  010F                     i1l1005:
  1497                           
  1498                           ;./DISPLAY_LIB.h: 31:     switch(*select){
  1499  010F  2936               	goto	i1l1021
  1500  0110                     i1l1007:
  1501                           
  1502                           ;./DISPLAY_LIB.h: 33:             PORTD = TABLA_HEX[VHEX1];
  1503  0110  0870               	movf	DISPLAY_HEX@VHEX1,w
  1504  0111  00F4               	movwf	??_DISPLAY_HEX
  1505  0112  0774               	addwf	??_DISPLAY_HEX,w
  1506  0113  3E20               	addlw	(low (_TABLA_HEX| 0))& (0+255)
  1507  0114  0084               	movwf	4
  1508  0115  0800               	movf	0,w
  1509  0116  1283               	bcf	3,5	;RP0=0, select bank0
  1510  0117  1303               	bcf	3,6	;RP1=0, select bank0
  1511  0118  0088               	movwf	8	;volatile
  1512  0119                     i1l1009:
  1513                           
  1514                           ;./DISPLAY_LIB.h: 34:             PORTA = 0B00000001;
  1515  0119  3001               	movlw	1
  1516  011A  0085               	movwf	5	;volatile
  1517  011B                     i1l1011:
  1518                           
  1519                           ;./DISPLAY_LIB.h: 35:             *select = 2;
  1520  011B  0876               	movf	DISPLAY_HEX@select,w
  1521  011C  0084               	movwf	4
  1522  011D  3002               	movlw	2
  1523  011E  0080               	movwf	0
  1524  011F  0A84               	incf	4,f
  1525  0120  3000               	movlw	0
  1526  0121  0080               	movwf	0
  1527                           
  1528                           ;./DISPLAY_LIB.h: 36:             break;
  1529  0122  294B               	goto	i1l79
  1530  0123                     i1l1013:
  1531                           
  1532                           ;./DISPLAY_LIB.h: 38:             PORTD = TABLA_HEX[VHEX2];
  1533  0123  0872               	movf	DISPLAY_HEX@VHEX2,w
  1534  0124  00F4               	movwf	??_DISPLAY_HEX
  1535  0125  0774               	addwf	??_DISPLAY_HEX,w
  1536  0126  3E20               	addlw	(low (_TABLA_HEX| 0))& (0+255)
  1537  0127  0084               	movwf	4
  1538  0128  0800               	movf	0,w
  1539  0129  1283               	bcf	3,5	;RP0=0, select bank0
  1540  012A  1303               	bcf	3,6	;RP1=0, select bank0
  1541  012B  0088               	movwf	8	;volatile
  1542  012C                     i1l1015:
  1543                           
  1544                           ;./DISPLAY_LIB.h: 39:             PORTA = 0B00000010;
  1545  012C  3002               	movlw	2
  1546  012D  0085               	movwf	5	;volatile
  1547  012E                     i1l1017:
  1548                           
  1549                           ;./DISPLAY_LIB.h: 40:             *select = 1;
  1550  012E  0876               	movf	DISPLAY_HEX@select,w
  1551  012F  0084               	movwf	4
  1552  0130  3001               	movlw	1
  1553  0131  0080               	movwf	0
  1554  0132  0A84               	incf	4,f
  1555  0133  3000               	movlw	0
  1556  0134  0080               	movwf	0
  1557                           
  1558                           ;./DISPLAY_LIB.h: 41:             break;
  1559  0135  294B               	goto	i1l79
  1560  0136                     i1l1021:
  1561  0136  0876               	movf	DISPLAY_HEX@select,w
  1562  0137  0084               	movwf	4
  1563  0138  1383               	bcf	3,7	;select IRP bank0
  1564  0139  0800               	movf	0,w
  1565  013A  00F4               	movwf	??_DISPLAY_HEX
  1566  013B  0A84               	incf	4,f
  1567  013C  0800               	movf	0,w
  1568  013D  00F5               	movwf	??_DISPLAY_HEX+1
  1569                           
  1570                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1571                           ; Switch size 1, requested type "simple"
  1572                           ; Number of cases is 1, Range of values is 0 to 0
  1573                           ; switch strategies available:
  1574                           ; Name         Instructions Cycles
  1575                           ; simple_byte            4     3 (average)
  1576                           ; direct_byte           11     8 (fixed)
  1577                           ; jumptable            260     6 (fixed)
  1578                           ;	Chosen strategy is simple_byte
  1579  013E  0875               	movf	??_DISPLAY_HEX+1,w
  1580  013F  3A00               	xorlw	0	; case 0
  1581  0140  1903               	skipnz
  1582  0141  2943               	goto	i1l1157
  1583  0142  294B               	goto	i1l79
  1584  0143                     i1l1157:
  1585                           
  1586                           ; Switch size 1, requested type "simple"
  1587                           ; Number of cases is 2, Range of values is 1 to 2
  1588                           ; switch strategies available:
  1589                           ; Name         Instructions Cycles
  1590                           ; simple_byte            7     4 (average)
  1591                           ; direct_byte           17    11 (fixed)
  1592                           ; jumptable            263     9 (fixed)
  1593                           ;	Chosen strategy is simple_byte
  1594  0143  0874               	movf	??_DISPLAY_HEX,w
  1595  0144  3A01               	xorlw	1	; case 1
  1596  0145  1903               	skipnz
  1597  0146  2910               	goto	i1l1007
  1598  0147  3A03               	xorlw	3	; case 2
  1599  0148  1903               	skipnz
  1600  0149  2923               	goto	i1l1013
  1601  014A  294B               	goto	i1l79
  1602  014B                     i1l79:
  1603  014B  0008               	return
  1604  014C                     __end_of_DISPLAY_HEX:
  1605                           
  1606                           	psect	text7
  1607  0256                     __ptext7:	
  1608 ;; *************** function _ADC_READ *****************
  1609 ;; Defined at:
  1610 ;;		line 24 in file "./ADC_LIB.h"
  1611 ;; Parameters:    Size  Location     Type
  1612 ;;		None
  1613 ;; Auto vars:     Size  Location     Type
  1614 ;;  LECT            2    4[COMMON] int 
  1615 ;; Return value:  Size  Location     Type
  1616 ;;                  2    0[COMMON] int 
  1617 ;; Registers used:
  1618 ;;		wreg
  1619 ;; Tracked objects:
  1620 ;;		On entry : 0/0
  1621 ;;		On exit  : 0/0
  1622 ;;		Unchanged: 0/0
  1623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1624 ;;      Params:         2       0       0       0       0
  1625 ;;      Locals:         2       0       0       0       0
  1626 ;;      Temps:          2       0       0       0       0
  1627 ;;      Totals:         6       0       0       0       0
  1628 ;;Total ram usage:        6 bytes
  1629 ;; Hardware stack levels used:    1
  1630 ;; This function calls:
  1631 ;;		Nothing
  1632 ;; This function is called by:
  1633 ;;		_isr
  1634 ;; This function uses a non-reentrant model
  1635 ;;
  1636                           
  1637                           
  1638                           ;psect for function _ADC_READ
  1639  0256                     _ADC_READ:
  1640  0256                     i1l1001:	
  1641                           ;incstack = 0
  1642                           ; Regs used in _ADC_READ: [wreg]
  1643                           
  1644                           
  1645                           ;./ADC_LIB.h: 25:     int LECT;;./ADC_LIB.h: 26:     LECT = ADRESH;
  1646  0256  1283               	bcf	3,5	;RP0=0, select bank0
  1647  0257  1303               	bcf	3,6	;RP1=0, select bank0
  1648  0258  081E               	movf	30,w	;volatile
  1649  0259  00F2               	movwf	??_ADC_READ
  1650  025A  01F3               	clrf	??_ADC_READ+1
  1651  025B  0872               	movf	??_ADC_READ,w
  1652  025C  00F4               	movwf	ADC_READ@LECT
  1653  025D  0873               	movf	??_ADC_READ+1,w
  1654  025E  00F5               	movwf	ADC_READ@LECT+1
  1655                           
  1656                           ;./ADC_LIB.h: 27:     return LECT;
  1657  025F  0875               	movf	ADC_READ@LECT+1,w
  1658  0260  00F1               	movwf	?_ADC_READ+1
  1659  0261  0874               	movf	ADC_READ@LECT,w
  1660  0262  00F0               	movwf	?_ADC_READ
  1661  0263                     i1l70:
  1662  0263  0008               	return
  1663  0264                     __end_of_ADC_READ:
  1664  007E                     btemp	set	126	;btemp
  1665  007E                     wtemp0	set	126
  1666                           
  1667                           	psect	config
  1668                           
  1669                           ;Config register CONFIG1 @ 0x2007
  1670                           ;	Oscillator Selection bits
  1671                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
  1672                           ;	Watchdog Timer Enable bit
  1673                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1674                           ;	Power-up Timer Enable bit
  1675                           ;	PWRTE = OFF, PWRT disabled
  1676                           ;	RE3/MCLR pin function select bit
  1677                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1678                           ;	Code Protection bit
  1679                           ;	CP = OFF, Program memory code protection is disabled
  1680                           ;	Data Code Protection bit
  1681                           ;	CPD = OFF, Data memory code protection is disabled
  1682                           ;	Brown Out Reset Selection bits
  1683                           ;	BOREN = OFF, BOR disabled
  1684                           ;	Internal External Switchover bit
  1685                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1686                           ;	Fail-Safe Clock Monitor Enabled bit
  1687                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1688                           ;	Low Voltage Programming Enable bit
  1689                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1690                           ;	In-Circuit Debugger Mode bit
  1691                           ;	DEBUG = 0x1, unprogrammed default
  1692  2007                     	org	8199
  1693  2007  20D5               	dw	8405
  1694                           
  1695                           ;Config register CONFIG2 @ 0x2008
  1696                           ;	Brown-out Reset Selection bit
  1697                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1698                           ;	Flash Program Memory Self Write Enable bits
  1699                           ;	WRT = OFF, Write protection off
  1700  2008                     	org	8200
  1701  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        58
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      14
    BANK0            80     17      63
    BANK1            80      0      20
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    BIN_HEX@VHEX2	PTR int  size(1) Largest target is 2
		 -> HEX2(COMMON[2]), 

    BIN_HEX@VHEX1	PTR int  size(1) Largest target is 2
		 -> HEX1(COMMON[2]), 

    DISPLAY_HEX@select	PTR int  size(1) Largest target is 2
		 -> select(BANK0[2]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_DISPLAY_HEX

Critical Paths under _main in BANK0

    _main->_BIN_HEX
    _setup->_ADC_INIT
    _BIN_HEX->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     866
                                             15 BANK0      2     2      0
                            _BIN_HEX
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      98
                           _ADC_INIT
 ---------------------------------------------------------------------------------
 (2) _ADC_INIT                                             3     1      2      98
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _BIN_HEX                                              6     2      4     768
                                              9 BANK0      6     2      4
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     452
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0     318
                                              7 COMMON     3     3      0
                           _ADC_READ
                        _DISPLAY_HEX
 ---------------------------------------------------------------------------------
 (4) _DISPLAY_HEX                                          7     3      4     295
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (4) _ADC_READ                                             6     4      2      23
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BIN_HEX
     ___awdiv
   _setup
     _ADC_INIT

 _isr (ROOT)
   _ADC_READ
   _DISPLAY_HEX

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      14       7       25.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     11      3F       5       78.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      61      12        0.0%
ABS                  0      0      61       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Jul 16 23:57:56 2021

                      pc 0002                       l82 01E5                       l67 022E  
           ___awdiv@sign 004C                       fsr 0004                      l129 01BD  
                    l368 00A4                      l941 020F                      l951 0229  
                    l943 0218                      l961 0043                      l953 022A  
                    l945 021F                      l971 0057                      l963 0048  
                    l955 022B                      l947 0225                      l939 020C  
                    l981 006D                      l973 0059                      l965 004A  
                    l957 003C                      l949 0228                      l991 0090  
                    l983 0071                      l975 005F                      l967 004E  
                    l959 003F                      l985 0082                      l977 0062  
                    l993 0096                      l969 0053                      l995 009B  
                    l987 0088                      l979 0069                      l997 00A0  
                    l989 0089                      _RB0 0030                      _RB1 0031  
                    u200 004E                      u201 004D                      u210 005F  
                    u211 005E                      u230 0071                      u231 0070  
                    u225 0063                      u250 0082                      u251 0081  
                    u245 0072                      u270 0096                      u190 0043  
                    u271 0095                      u255 007E                      u191 0042  
                    u280 009B                      u360 017D                      u281 009A  
                    u265 008A                      u361 017C                      u365 0179  
                    u377 015A                      u387 021C                      _isr 00A5  
                    fsr0 0004                      indf 0000          __end_of_BIN_HEX 01E6  
                   l1031 0185                     l1041 0196                     l1033 0189  
                   l1121 0151                     l1027 01BE                     l1051 019D  
                   l1043 0197                     l1035 018A                     l1131 0171  
                   l1123 0154                     l1029 01CD                     l1061 01AA  
                   l1053 019E                     l1045 0198                     l1037 0191  
                   l1133 017D                     l1125 0156                     l1071 01B9  
                   l1063 01AB                     l1055 019F                     l1047 0199  
                   l1039 0193                     l1135 0180                     l1127 015D  
                   l1119 014C                     l1073 01BA                     l1065 01AC  
                   l1057 01A6                     l1049 019A                     l1129 0160  
                   l1075 01BB                     l1067 01B7                     l1059 01A9  
                   l1077 01BC                     l1069 01B8                     _ADIF 0066  
                   ?_isr 0070                     _HEX1 007C                     _HEX2 007A  
                   _T0IF 005A                     _RBIF 0058                     i1l70 0263  
                   i1l79 014B                     _TMR0 0001         __end_of_ADC_INIT 022F  
       __end_of_ADC_READ 0264                     _main 014C                     btemp 007E  
                   start 000E                    ??_isr 0077                    ?_main 0070  
                  _CANAL 0042          __end_of___awdiv 00A5                    _ANSEL 0188  
        ___awdiv@divisor 0046                    _IOCB0 04B0                    _IOCB1 04B1  
                  i1l116 0105          ___awdiv@counter 004B                    u30_20 00C1  
                  u30_21 00C0                    u31_20 00C7                    u31_21 00C6  
                  u32_20 00D2                    u32_21 00D1                    u33_20 00DE  
                  u33_21 00DD                    u34_20 00E9                    u34_21 00E8  
                  u35_20 00F8                    u35_21 00F7                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _PORTE 0009                    u29_20 00AA                    u29_21 00A9  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _TRISE 0089                    _WPUB0 04A8  
                  _WPUB1 04A9                    _flag1 005B                    _flag2 0059  
                  _setup 0185                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 0011             __end_of_main 0185  
   __size_of_DISPLAY_HEX 003E                ??_BIN_HEX 0053                   ??_main 0055  
                 _CANAL2 0040                   _ADRESH 001E         ___awdiv@dividend 0048  
                 ?_setup 0070                   _ANSELH 0189                   i1l1001 0256  
                 i1l1011 011B                   i1l1013 0123                   i1l1021 0136  
                 i1l1005 010F                   i1l1101 00DE                   i1l1015 012C  
                 i1l1007 0110                   i1l1103 00E3                   i1l1111 00F2  
                 i1l1017 012E                   i1l1009 0119                   i1l1113 00F8  
                 i1l1105 00E9                   i1l1115 0103                   i1l1107 00EF  
                 i1l1117 0104                   i1l1109 00F1                   i1l1081 00AA  
                 i1l1091 00C7                   i1l1083 00AE                   i1l1157 0143  
                 i1l1093 00CC                   i1l1085 00BC                   i1l1095 00D2  
                 i1l1087 00BD                   i1l1079 00A5                   i1l1097 00D8  
                 i1l1089 00C1                   i1l1099 00DA                ??___awdiv 004A  
       ___awdiv@quotient 004D                   _select 0044                ?_ADC_INIT 0046  
              ?_ADC_READ 0070                   saved_w 007E  __end_of__initialization 0038  
         __pcstackCOMMON 0070             __pidataBANK0 01E6             __pidataBANK1 022F  
           ADC_READ@LECT 0074            __end_of_setup 01BE               ??_ADC_INIT 0048  
             ??_ADC_READ 0072                  ??_setup 0049               __pbssBANK0 0057  
             __pmaintext 014C               __pintentry 0004                  _BIN_HEX 01BE  
                ___awdiv 003C                  _digitos 00A0                  __ptext1 0185  
                __ptext2 020C                  __ptext3 01BE                  __ptext4 003C  
                __ptext5 00A5                  __ptext6 010E                  __ptext7 0256  
           __size_of_isr 0069     end_of_initialization 0038                _TABLA_HEX 0020  
          ??_DISPLAY_HEX 0074                _VALOR_ADC 0057        __size_of_ADC_INIT 0023  
      __size_of_ADC_READ 000E      __end_of_DISPLAY_HEX 014C            ADC_INIT@canal 0046  
    start_initialization 0011              __end_of_isr 010E               init_fetch0 0243  
            __pdataBANK0 0020              __pdataBANK1 00A0                 ?_BIN_HEX 004F  
            __pbssCOMMON 007A                ___latbits 0002            __pcstackBANK0 0046  
      DISPLAY_HEX@select 0076              _DISPLAY_HEX 010E                 ?___awdiv 0046  
           BIN_HEX@VHEX1 0051             BIN_HEX@VHEX2 0052                 _ADC_INIT 020C  
               _ADC_READ 0256                 _CONTADOR 005D           __size_of_setup 0039  
      interrupt_function 0004                 _PIE1bits 008C                 _PIR1bits 000C  
             _ADCON0bits 001F               _ADCON1bits 009F         __size_of_BIN_HEX 0028  
       DISPLAY_HEX@VHEX1 0070         DISPLAY_HEX@VHEX2 0072         __size_of___awdiv 0069  
            BIN_HEX@VBIN 004F            __size_of_main 0039               _INTCONbits 000B  
               init_ram0 0247                 intlevel1 0000               _OSCCONbits 008F  
           ?_DISPLAY_HEX 0070               _OPTION_REG 0081  
