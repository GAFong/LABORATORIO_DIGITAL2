

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Jul 27 00:10:20 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	strings,global,class=STRING,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	intentry,global,class=CODE,delta=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    38                           	dabs	1,0x7E,2
    39  0000                     
    40                           ; Version 2.20
    41                           ; Generated 12/02/2020 GMT
    42                           ; 
    43                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC16F887 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     	;# 
    75  0001                     	;# 
    76  0002                     	;# 
    77  0003                     	;# 
    78  0004                     	;# 
    79  0005                     	;# 
    80  0006                     	;# 
    81  0007                     	;# 
    82  0008                     	;# 
    83  0009                     	;# 
    84  000A                     	;# 
    85  000B                     	;# 
    86  000C                     	;# 
    87  000D                     	;# 
    88  000E                     	;# 
    89  000E                     	;# 
    90  000F                     	;# 
    91  0010                     	;# 
    92  0011                     	;# 
    93  0012                     	;# 
    94  0013                     	;# 
    95  0014                     	;# 
    96  0015                     	;# 
    97  0015                     	;# 
    98  0016                     	;# 
    99  0017                     	;# 
   100  0018                     	;# 
   101  0019                     	;# 
   102  001A                     	;# 
   103  001B                     	;# 
   104  001B                     	;# 
   105  001C                     	;# 
   106  001D                     	;# 
   107  001E                     	;# 
   108  001F                     	;# 
   109  0081                     	;# 
   110  0085                     	;# 
   111  0086                     	;# 
   112  0087                     	;# 
   113  0088                     	;# 
   114  0089                     	;# 
   115  008C                     	;# 
   116  008D                     	;# 
   117  008E                     	;# 
   118  008F                     	;# 
   119  0090                     	;# 
   120  0091                     	;# 
   121  0092                     	;# 
   122  0093                     	;# 
   123  0093                     	;# 
   124  0093                     	;# 
   125  0094                     	;# 
   126  0095                     	;# 
   127  0096                     	;# 
   128  0097                     	;# 
   129  0098                     	;# 
   130  0099                     	;# 
   131  009A                     	;# 
   132  009B                     	;# 
   133  009C                     	;# 
   134  009D                     	;# 
   135  009E                     	;# 
   136  009F                     	;# 
   137  0105                     	;# 
   138  0107                     	;# 
   139  0108                     	;# 
   140  0109                     	;# 
   141  010C                     	;# 
   142  010C                     	;# 
   143  010D                     	;# 
   144  010E                     	;# 
   145  010F                     	;# 
   146  0185                     	;# 
   147  0187                     	;# 
   148  0188                     	;# 
   149  0189                     	;# 
   150  018C                     	;# 
   151  018D                     	;# 
   152  0000                     	;# 
   153  0001                     	;# 
   154  0002                     	;# 
   155  0003                     	;# 
   156  0004                     	;# 
   157  0005                     	;# 
   158  0006                     	;# 
   159  0007                     	;# 
   160  0008                     	;# 
   161  0009                     	;# 
   162  000A                     	;# 
   163  000B                     	;# 
   164  000C                     	;# 
   165  000D                     	;# 
   166  000E                     	;# 
   167  000E                     	;# 
   168  000F                     	;# 
   169  0010                     	;# 
   170  0011                     	;# 
   171  0012                     	;# 
   172  0013                     	;# 
   173  0014                     	;# 
   174  0015                     	;# 
   175  0015                     	;# 
   176  0016                     	;# 
   177  0017                     	;# 
   178  0018                     	;# 
   179  0019                     	;# 
   180  001A                     	;# 
   181  001B                     	;# 
   182  001B                     	;# 
   183  001C                     	;# 
   184  001D                     	;# 
   185  001E                     	;# 
   186  001F                     	;# 
   187  0081                     	;# 
   188  0085                     	;# 
   189  0086                     	;# 
   190  0087                     	;# 
   191  0088                     	;# 
   192  0089                     	;# 
   193  008C                     	;# 
   194  008D                     	;# 
   195  008E                     	;# 
   196  008F                     	;# 
   197  0090                     	;# 
   198  0091                     	;# 
   199  0092                     	;# 
   200  0093                     	;# 
   201  0093                     	;# 
   202  0093                     	;# 
   203  0094                     	;# 
   204  0095                     	;# 
   205  0096                     	;# 
   206  0097                     	;# 
   207  0098                     	;# 
   208  0099                     	;# 
   209  009A                     	;# 
   210  009B                     	;# 
   211  009C                     	;# 
   212  009D                     	;# 
   213  009E                     	;# 
   214  009F                     	;# 
   215  0105                     	;# 
   216  0107                     	;# 
   217  0108                     	;# 
   218  0109                     	;# 
   219  010C                     	;# 
   220  010C                     	;# 
   221  010D                     	;# 
   222  010E                     	;# 
   223  010F                     	;# 
   224  0185                     	;# 
   225  0187                     	;# 
   226  0188                     	;# 
   227  0189                     	;# 
   228  018C                     	;# 
   229  018D                     	;# 
   230  0000                     	;# 
   231  0001                     	;# 
   232  0002                     	;# 
   233  0003                     	;# 
   234  0004                     	;# 
   235  0005                     	;# 
   236  0006                     	;# 
   237  0007                     	;# 
   238  0008                     	;# 
   239  0009                     	;# 
   240  000A                     	;# 
   241  000B                     	;# 
   242  000C                     	;# 
   243  000D                     	;# 
   244  000E                     	;# 
   245  000E                     	;# 
   246  000F                     	;# 
   247  0010                     	;# 
   248  0011                     	;# 
   249  0012                     	;# 
   250  0013                     	;# 
   251  0014                     	;# 
   252  0015                     	;# 
   253  0015                     	;# 
   254  0016                     	;# 
   255  0017                     	;# 
   256  0018                     	;# 
   257  0019                     	;# 
   258  001A                     	;# 
   259  001B                     	;# 
   260  001B                     	;# 
   261  001C                     	;# 
   262  001D                     	;# 
   263  001E                     	;# 
   264  001F                     	;# 
   265  0081                     	;# 
   266  0085                     	;# 
   267  0086                     	;# 
   268  0087                     	;# 
   269  0088                     	;# 
   270  0089                     	;# 
   271  008C                     	;# 
   272  008D                     	;# 
   273  008E                     	;# 
   274  008F                     	;# 
   275  0090                     	;# 
   276  0091                     	;# 
   277  0092                     	;# 
   278  0093                     	;# 
   279  0093                     	;# 
   280  0093                     	;# 
   281  0094                     	;# 
   282  0095                     	;# 
   283  0096                     	;# 
   284  0097                     	;# 
   285  0098                     	;# 
   286  0099                     	;# 
   287  009A                     	;# 
   288  009B                     	;# 
   289  009C                     	;# 
   290  009D                     	;# 
   291  009E                     	;# 
   292  009F                     	;# 
   293  0105                     	;# 
   294  0107                     	;# 
   295  0108                     	;# 
   296  0109                     	;# 
   297  010C                     	;# 
   298  010C                     	;# 
   299  010D                     	;# 
   300  010E                     	;# 
   301  010F                     	;# 
   302  0185                     	;# 
   303  0187                     	;# 
   304  0188                     	;# 
   305  0189                     	;# 
   306  018C                     	;# 
   307  018D                     	;# 
   308                           
   309                           	psect	idataBANK0
   310  0DC5                     __pidataBANK0:
   311                           
   312                           ;initializer for _S1
   313  0DC5  3453               	retlw	83
   314  0DC6  3445               	retlw	69
   315  0DC7  344E               	retlw	78
   316  0DC8  3453               	retlw	83
   317  0DC9  344F               	retlw	79
   318  0DCA  3452               	retlw	82
   319  0DCB  3431               	retlw	49
   320  0DCC  343A               	retlw	58
   321                           
   322                           	psect	idataBANK1
   323  0DBD                     __pidataBANK1:
   324                           
   325                           ;initializer for _S2
   326  0DBD  3453               	retlw	83
   327  0DBE  3445               	retlw	69
   328  0DBF  344E               	retlw	78
   329  0DC0  3453               	retlw	83
   330  0DC1  344F               	retlw	79
   331  0DC2  3452               	retlw	82
   332  0DC3  3432               	retlw	50
   333  0DC4  343A               	retlw	58
   334  0009                     _PORTE	set	9
   335  0008                     _PORTD	set	8
   336  0007                     _PORTC	set	7
   337  0006                     _PORTB	set	6
   338  0005                     _PORTA	set	5
   339  001A                     _RCREG	set	26
   340  0001                     _TMR0	set	1
   341  000B                     _INTCONbits	set	11
   342  0019                     _TXREG	set	25
   343  0018                     _RCSTAbits	set	24
   344  001E                     _ADRESH	set	30
   345  000C                     _PIR1bits	set	12
   346  001F                     _ADCON0bits	set	31
   347  0049                     _RE1	set	73
   348  0048                     _RE0	set	72
   349  005A                     _T0IF	set	90
   350  0066                     _ADIF	set	102
   351  0081                     _OPTION_REG	set	129
   352  008F                     _OSCCONbits	set	143
   353  0086                     _TRISB	set	134
   354  0089                     _TRISE	set	137
   355  0088                     _TRISD	set	136
   356  0087                     _TRISC	set	135
   357  0085                     _TRISA	set	133
   358  009A                     _SPBRGH	set	154
   359  0099                     _SPBRG	set	153
   360  0098                     _TXSTAbits	set	152
   361  008C                     _PIE1bits	set	140
   362  009F                     _ADCON1bits	set	159
   363  0189                     _ANSELH	set	393
   364  0188                     _ANSEL	set	392
   365  0187                     _BAUDCTLbits	set	391
   366                           
   367                           	psect	strings
   368  0800                     __pstrings:
   369  0800                     stringtab:
   370  0800                     __stringtab:
   371  0800                     stringcode:	
   372                           ;	String table - string pointers are 1 byte each
   373                           
   374  0800                     stringdir:
   375  0800  3008               	movlw	high stringdir
   376  0801  008A               	movwf	10
   377  0802  0804               	movf	4,w
   378  0803  0A84               	incf	4,f
   379  0804  0782               	addwf	2,f
   380  0805                     __stringbase:
   381  0805  3400               	retlw	0
   382  0806                     __end_of__stringtab:
   383  0806                     STR_1:
   384  0806  3453               	retlw	83	;'S'
   385  0807  3431               	retlw	49	;'1'
   386  0808  343A               	retlw	58	;':'
   387  0809  3420               	retlw	32	;' '
   388  080A  3420               	retlw	32	;' '
   389  080B  3420               	retlw	32	;' '
   390  080C  3453               	retlw	83	;'S'
   391  080D  3432               	retlw	50	;'2'
   392  080E  343A               	retlw	58	;':'
   393  080F  3420               	retlw	32	;' '
   394  0810  3420               	retlw	32	;' '
   395  0811  3420               	retlw	32	;' '
   396  0812  3420               	retlw	32	;' '
   397  0813  3453               	retlw	83	;'S'
   398  0814  3433               	retlw	51	;'3'
   399  0815  343A               	retlw	58	;':'
   400  0816  3400               	retlw	0
   401  0817                     STR_3:
   402  0817  3476               	retlw	118	;'v'
   403  0818  3420               	retlw	32	;' '
   404  0819  3420               	retlw	32	;' '
   405  081A  3420               	retlw	32	;' '
   406  081B  3400               	retlw	0
   407  081C                     STR_2:
   408  081C  3476               	retlw	118	;'v'
   409  081D  3420               	retlw	32	;' '
   410  081E  3400               	retlw	0
   411                           
   412                           	psect	cinit
   413  000F                     start_initialization:	
   414                           ; #config settings
   415                           
   416  000F                     __initialization:
   417                           
   418                           ; Initialize objects allocated to BANK1
   419  000F  1383               	bcf	3,7	;select IRP bank0
   420  0010  30A8               	movlw	low (__pdataBANK1+8)
   421  0011  00FD               	movwf	btemp+-1
   422  0012  300D               	movlw	high __pidataBANK1
   423  0013  00FE               	movwf	btemp
   424  0014  30BD               	movlw	low __pidataBANK1
   425  0015  00FF               	movwf	btemp+1
   426  0016  30A0               	movlw	low __pdataBANK1
   427  0017  0084               	movwf	4
   428  0018  120A  158A  25EC  120A  118A  	fcall	init_ram0
   429                           
   430                           ; Initialize objects allocated to BANK0
   431  001D  3069               	movlw	low (__pdataBANK0+8)
   432  001E  00FD               	movwf	btemp+-1
   433  001F  300D               	movlw	high __pidataBANK0
   434  0020  00FE               	movwf	btemp
   435  0021  30C5               	movlw	low __pidataBANK0
   436  0022  00FF               	movwf	btemp+1
   437  0023  3061               	movlw	low __pdataBANK0
   438  0024  0084               	movwf	4
   439  0025  120A  158A  25EC  120A  118A  	fcall	init_ram0
   440                           
   441                           ; Clear objects allocated to BANK0
   442  002A  01D5               	clrf	__pbssBANK0& (0+127)
   443  002B  01D6               	clrf	(__pbssBANK0+1)& (0+127)
   444  002C  01D7               	clrf	(__pbssBANK0+2)& (0+127)
   445  002D  01D8               	clrf	(__pbssBANK0+3)& (0+127)
   446  002E  01D9               	clrf	(__pbssBANK0+4)& (0+127)
   447  002F  01DA               	clrf	(__pbssBANK0+5)& (0+127)
   448  0030  01DB               	clrf	(__pbssBANK0+6)& (0+127)
   449  0031  01DC               	clrf	(__pbssBANK0+7)& (0+127)
   450  0032  01DD               	clrf	(__pbssBANK0+8)& (0+127)
   451  0033  01DE               	clrf	(__pbssBANK0+9)& (0+127)
   452  0034  01DF               	clrf	(__pbssBANK0+10)& (0+127)
   453  0035  01E0               	clrf	(__pbssBANK0+11)& (0+127)
   454  0036                     end_of_initialization:	
   455                           ;End of C runtime variable initialization code
   456                           
   457  0036                     __end_of__initialization:
   458  0036  0183               	clrf	3
   459  0037  120A  118A  2B9B   	ljmp	_main	;jump to C main() function
   460                           
   461                           	psect	bssBANK0
   462  0055                     __pbssBANK0:
   463  0055                     _VALOR_ADC:
   464  0055                     	ds	2
   465  0057                     _OPCION:
   466  0057                     	ds	1
   467  0058                     _CONTADOR:
   468  0058                     	ds	1
   469  0059                     _DATO:
   470  0059                     	ds	1
   471  005A                     _POS3:
   472  005A                     	ds	1
   473  005B                     _POS2:
   474  005B                     	ds	1
   475  005C                     _POS1:
   476  005C                     	ds	1
   477  005D                     _POT1:
   478  005D                     	ds	2
   479  005F                     _POT0:
   480  005F                     	ds	2
   481                           
   482                           	psect	dataBANK0
   483  0061                     __pdataBANK0:
   484  0061                     _S1:
   485  0061                     	ds	8
   486                           
   487                           	psect	dataBANK1
   488  00A0                     __pdataBANK1:
   489  00A0                     _S2:
   490  00A0                     	ds	8
   491                           
   492                           	psect	inittext
   493  0DE8                     init_fetch0:	
   494                           ;	Called with low address in FSR and high address in W
   495                           
   496  0DE8  087E               	movf	btemp,w
   497  0DE9  008A               	movwf	10
   498  0DEA  087F               	movf	btemp+1,w
   499  0DEB  0082               	movwf	2
   500  0DEC                     init_ram0:	
   501                           ;Called with:
   502                           ;	high address of idata address in btemp 
   503                           ;	low address of idata address in btemp+1 
   504                           ;	low address of data in FSR
   505                           ;	high address + 1 of data in btemp-1
   506                           
   507  0DEC  120A  158A  25E8  120A  158A  	fcall	init_fetch0
   508  0DF1  0080               	movwf	0
   509  0DF2  0A84               	incf	4,f
   510  0DF3  0804               	movf	4,w
   511  0DF4  067D               	xorwf	btemp+-1,w
   512  0DF5  1903               	btfsc	3,2
   513  0DF6  3400               	retlw	0
   514  0DF7  0AFF               	incf	btemp+1,f
   515  0DF8  1903               	btfsc	3,2
   516  0DF9  0AFE               	incf	btemp,f
   517  0DFA  2DEC               	goto	init_ram0
   518                           
   519                           	psect	cstackCOMMON
   520  0070                     __pcstackCOMMON:
   521  0070                     ?_setup:
   522  0070                     ?_Lcd_Init:	
   523                           ; 1 bytes @ 0x0
   524                           
   525  0070                     ?_Lcd_Clear:	
   526                           ; 1 bytes @ 0x0
   527                           
   528  0070                     ?_Lcd_Write_String:	
   529                           ; 1 bytes @ 0x0
   530                           
   531  0070                     ?_Lcd_Write_Char:	
   532                           ; 1 bytes @ 0x0
   533                           
   534  0070                     ?_EUSART_ENVIAR:	
   535                           ; 1 bytes @ 0x0
   536                           
   537  0070                     ?_isr:	
   538                           ; 1 bytes @ 0x0
   539                           
   540  0070                     ?_main:	
   541                           ; 1 bytes @ 0x0
   542                           
   543  0070                     ?_Lcd_Port:	
   544                           ; 1 bytes @ 0x0
   545                           
   546  0070                     ?_Lcd_Cmd:	
   547                           ; 1 bytes @ 0x0
   548                           
   549  0070                     ?_ADC_READ:	
   550                           ; 1 bytes @ 0x0
   551                           
   552                           
   553                           ; 2 bytes @ 0x0
   554  0070                     	ds	2
   555  0072                     ??_ADC_READ:
   556                           
   557                           ; 1 bytes @ 0x2
   558  0072                     	ds	2
   559  0074                     ADC_READ@LECT:
   560                           
   561                           ; 2 bytes @ 0x4
   562  0074                     	ds	2
   563  0076                     ??_isr:
   564                           
   565                           ; 1 bytes @ 0x6
   566  0076                     	ds	3
   567                           
   568                           	psect	cstackBANK0
   569  0020                     __pcstackBANK0:
   570  0020                     ?_ADC_INIT:
   571  0020                     ?_ADC_CHANNELS:	
   572                           ; 1 bytes @ 0x0
   573                           
   574  0020                     ?_EUSART_INIT:	
   575                           ; 1 bytes @ 0x0
   576                           
   577  0020                     ??_EUSART_ENVIAR:	
   578                           ; 1 bytes @ 0x0
   579                           
   580  0020                     ??_Lcd_Port:	
   581                           ; 1 bytes @ 0x0
   582                           
   583  0020                     ?__Umul8_16:	
   584                           ; 1 bytes @ 0x0
   585                           
   586  0020                     ?___wmul:	
   587                           ; 2 bytes @ 0x0
   588                           
   589  0020                     ?___lwdiv:	
   590                           ; 2 bytes @ 0x0
   591                           
   592  0020                     ?___xxtofl:	
   593                           ; 2 bytes @ 0x0
   594                           
   595  0020                     Lcd_Port@a:	
   596                           ; 4 bytes @ 0x0
   597                           
   598  0020                     __Umul8_16@multiplicand:	
   599                           ; 1 bytes @ 0x0
   600                           
   601  0020                     ADC_INIT@canal:	
   602                           ; 1 bytes @ 0x0
   603                           
   604  0020                     ADC_CHANNELS@CANAL:	
   605                           ; 2 bytes @ 0x0
   606                           
   607  0020                     EUSART_INIT@tx:	
   608                           ; 2 bytes @ 0x0
   609                           
   610  0020                     ___wmul@multiplier:	
   611                           ; 2 bytes @ 0x0
   612                           
   613  0020                     ___lwdiv@divisor:	
   614                           ; 2 bytes @ 0x0
   615                           
   616  0020                     ___xxtofl@val:	
   617                           ; 2 bytes @ 0x0
   618                           
   619                           
   620                           ; 4 bytes @ 0x0
   621  0020                     	ds	1
   622  0021                     ??_Lcd_Write_Char:
   623  0021                     ??_Lcd_Cmd:	
   624                           ; 1 bytes @ 0x1
   625                           
   626                           
   627                           ; 1 bytes @ 0x1
   628  0021                     	ds	1
   629  0022                     ??__Umul8_16:
   630  0022                     ??_ADC_INIT:	
   631                           ; 1 bytes @ 0x2
   632                           
   633  0022                     EUSART_ENVIAR@dato:	
   634                           ; 1 bytes @ 0x2
   635                           
   636  0022                     Lcd_Write_Char@a:	
   637                           ; 1 bytes @ 0x2
   638                           
   639  0022                     ADC_CHANNELS@VALOR_ADC:	
   640                           ; 1 bytes @ 0x2
   641                           
   642  0022                     EUSART_INIT@rx:	
   643                           ; 2 bytes @ 0x2
   644                           
   645  0022                     ___wmul@multiplicand:	
   646                           ; 2 bytes @ 0x2
   647                           
   648  0022                     ___lwdiv@dividend:	
   649                           ; 2 bytes @ 0x2
   650                           
   651                           
   652                           ; 2 bytes @ 0x2
   653  0022                     	ds	1
   654  0023                     Lcd_Cmd@a:
   655  0023                     Lcd_Write_Char@temp:	
   656                           ; 1 bytes @ 0x3
   657                           
   658                           
   659                           ; 1 bytes @ 0x3
   660  0023                     	ds	1
   661  0024                     ??_setup:
   662  0024                     ??_Lcd_Init:	
   663                           ; 1 bytes @ 0x4
   664                           
   665  0024                     ??_Lcd_Clear:	
   666                           ; 1 bytes @ 0x4
   667                           
   668  0024                     ?_Lcd_Set_Cursor:	
   669                           ; 1 bytes @ 0x4
   670                           
   671  0024                     ??_EUSART_INIT:	
   672                           ; 1 bytes @ 0x4
   673                           
   674  0024                     ??___wmul:	
   675                           ; 1 bytes @ 0x4
   676                           
   677  0024                     ??___lwdiv:	
   678                           ; 1 bytes @ 0x4
   679                           
   680  0024                     ??___xxtofl:	
   681                           ; 1 bytes @ 0x4
   682                           
   683  0024                     ADC_CHANNELS@VALORA:	
   684                           ; 1 bytes @ 0x4
   685                           
   686  0024                     Lcd_Set_Cursor@b:	
   687                           ; 1 bytes @ 0x4
   688                           
   689  0024                     Lcd_Write_Char@y:	
   690                           ; 1 bytes @ 0x4
   691                           
   692  0024                     ___wmul@product:	
   693                           ; 1 bytes @ 0x4
   694                           
   695  0024                     __Umul8_16@product:	
   696                           ; 2 bytes @ 0x4
   697                           
   698                           
   699                           ; 2 bytes @ 0x4
   700  0024                     	ds	1
   701  0025                     ??_Lcd_Set_Cursor:
   702  0025                     ??_Lcd_Write_String:	
   703                           ; 1 bytes @ 0x5
   704                           
   705  0025                     ??_ADC_CHANNELS:	
   706                           ; 1 bytes @ 0x5
   707                           
   708  0025                     Lcd_Write_String@i:	
   709                           ; 1 bytes @ 0x5
   710                           
   711  0025                     ___lwdiv@quotient:	
   712                           ; 2 bytes @ 0x5
   713                           
   714                           
   715                           ; 2 bytes @ 0x5
   716  0025                     	ds	1
   717  0026                     __Umul8_16@word_mpld:
   718                           
   719                           ; 2 bytes @ 0x6
   720  0026                     	ds	1
   721  0027                     Lcd_Set_Cursor@a:
   722  0027                     Lcd_Write_String@a:	
   723                           ; 1 bytes @ 0x7
   724                           
   725  0027                     ___lwdiv@counter:	
   726                           ; 1 bytes @ 0x7
   727                           
   728                           
   729                           ; 1 bytes @ 0x7
   730  0027                     	ds	1
   731  0028                     ?_VAL:
   732  0028                     Lcd_Set_Cursor@z:	
   733                           ; 1 bytes @ 0x8
   734                           
   735  0028                     __Umul8_16@multiplier:	
   736                           ; 1 bytes @ 0x8
   737                           
   738  0028                     ___xxtofl@sign:	
   739                           ; 1 bytes @ 0x8
   740                           
   741  0028                     VAL@variable:	
   742                           ; 1 bytes @ 0x8
   743                           
   744                           
   745                           ; 2 bytes @ 0x8
   746  0028                     	ds	1
   747  0029                     Lcd_Set_Cursor@y:
   748  0029                     ___xxtofl@exp:	
   749                           ; 1 bytes @ 0x9
   750                           
   751                           
   752                           ; 1 bytes @ 0x9
   753  0029                     	ds	1
   754  002A                     ??_VAL:
   755  002A                     Lcd_Set_Cursor@temp:	
   756                           ; 1 bytes @ 0xA
   757                           
   758  002A                     ___xxtofl@arg:	
   759                           ; 1 bytes @ 0xA
   760                           
   761                           
   762                           ; 4 bytes @ 0xA
   763  002A                     	ds	2
   764  002C                     VAL@valor:
   765                           
   766                           ; 2 bytes @ 0xC
   767  002C                     	ds	2
   768  002E                     ?___flmul:
   769  002E                     ___flmul@b:	
   770                           ; 4 bytes @ 0xE
   771                           
   772                           
   773                           ; 4 bytes @ 0xE
   774  002E                     	ds	4
   775  0032                     ___flmul@a:
   776                           
   777                           ; 4 bytes @ 0x12
   778  0032                     	ds	4
   779  0036                     ??___flmul:
   780                           
   781                           ; 1 bytes @ 0x16
   782  0036                     	ds	5
   783  003B                     ___flmul@sign:
   784                           
   785                           ; 1 bytes @ 0x1B
   786  003B                     	ds	1
   787  003C                     ___flmul@grs:
   788                           
   789                           ; 4 bytes @ 0x1C
   790  003C                     	ds	4
   791  0040                     ___flmul@aexp:
   792                           
   793                           ; 1 bytes @ 0x20
   794  0040                     	ds	1
   795  0041                     ___flmul@bexp:
   796                           
   797                           ; 1 bytes @ 0x21
   798  0041                     	ds	1
   799  0042                     ___flmul@prod:
   800                           
   801                           ; 4 bytes @ 0x22
   802  0042                     	ds	4
   803  0046                     ___flmul@temp:
   804                           
   805                           ; 2 bytes @ 0x26
   806  0046                     	ds	2
   807  0048                     ?___fltol:
   808  0048                     ___fltol@f1:	
   809                           ; 4 bytes @ 0x28
   810                           
   811                           
   812                           ; 4 bytes @ 0x28
   813  0048                     	ds	4
   814  004C                     ??___fltol:
   815                           
   816                           ; 1 bytes @ 0x2C
   817  004C                     	ds	5
   818  0051                     ___fltol@sign1:
   819                           
   820                           ; 1 bytes @ 0x31
   821  0051                     	ds	1
   822  0052                     ___fltol@exp1:
   823                           
   824                           ; 1 bytes @ 0x32
   825  0052                     	ds	1
   826  0053                     ??_main:
   827                           
   828                           ; 1 bytes @ 0x33
   829  0053                     	ds	2
   830                           
   831                           	psect	maintext
   832  039B                     __pmaintext:	
   833 ;;
   834 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   835 ;;
   836 ;; *************** function _main *****************
   837 ;; Defined at:
   838 ;;		line 82 in file "main.c"
   839 ;; Parameters:    Size  Location     Type
   840 ;;		None
   841 ;; Auto vars:     Size  Location     Type
   842 ;;		None
   843 ;; Return value:  Size  Location     Type
   844 ;;                  1    wreg      void 
   845 ;; Registers used:
   846 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   847 ;; Tracked objects:
   848 ;;		On entry : B00/0
   849 ;;		On exit  : 0/0
   850 ;;		Unchanged: 0/0
   851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   852 ;;      Params:         0       0       0       0       0
   853 ;;      Locals:         0       0       0       0       0
   854 ;;      Temps:          0       2       0       0       0
   855 ;;      Totals:         0       2       0       0       0
   856 ;;Total ram usage:        2 bytes
   857 ;; Hardware stack levels required when called:    5
   858 ;; This function calls:
   859 ;;		_ADC_CHANNELS
   860 ;;		_EUSART_ENVIAR
   861 ;;		_Lcd_Clear
   862 ;;		_Lcd_Init
   863 ;;		_Lcd_Set_Cursor
   864 ;;		_Lcd_Write_Char
   865 ;;		_Lcd_Write_String
   866 ;;		_VAL
   867 ;;		___flmul
   868 ;;		___fltol
   869 ;;		___xxtofl
   870 ;;		_setup
   871 ;; This function is called by:
   872 ;;		Startup code after reset
   873 ;; This function uses a non-reentrant model
   874 ;;
   875                           
   876                           
   877                           ;psect for function _main
   878  039B                     _main:
   879  039B                     l1905:	
   880                           ;incstack = 0
   881                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   882                           
   883                           
   884                           ;main.c: 83:     setup();
   885  039B  120A  158A  2730  120A  118A  	fcall	_setup
   886                           
   887                           ;main.c: 84:     Lcd_Init();
   888  03A0  120A  158A  27B2  120A  118A  	fcall	_Lcd_Init
   889                           
   890                           ;main.c: 85:     Lcd_Clear();
   891  03A5  120A  158A  25CD  120A  118A  	fcall	_Lcd_Clear
   892                           
   893                           ;main.c: 86:     Lcd_Set_Cursor(1,1);
   894  03AA  1283               	bcf	3,5	;RP0=0, select bank0
   895  03AB  1303               	bcf	3,6	;RP1=0, select bank0
   896  03AC  01A4               	clrf	Lcd_Set_Cursor@b
   897  03AD  0AA4               	incf	Lcd_Set_Cursor@b,f
   898  03AE  3001               	movlw	1
   899  03AF  120A  118A  2741  120A  118A  	fcall	_Lcd_Set_Cursor
   900  03B4                     l1907:
   901                           
   902                           ;main.c: 87:     Lcd_Write_String("S1:   S2:    S3:");
   903  03B4  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   904  03B5  120A  158A  26A8  120A  118A  	fcall	_Lcd_Write_String
   905  03BA                     l1909:
   906                           
   907                           ;main.c: 88:     ADCON0bits.GO = 1;
   908  03BA  1283               	bcf	3,5	;RP0=0, select bank0
   909  03BB  1303               	bcf	3,6	;RP1=0, select bank0
   910  03BC  149F               	bsf	31,1	;volatile
   911  03BD                     l1911:
   912                           
   913                           ;main.c: 91:           ADC_CHANNELS(1,VALOR_ADC,&POT0);
   914  03BD  3001               	movlw	1
   915  03BE  1283               	bcf	3,5	;RP0=0, select bank0
   916  03BF  1303               	bcf	3,6	;RP1=0, select bank0
   917  03C0  00A0               	movwf	ADC_CHANNELS@CANAL
   918  03C1  3000               	movlw	0
   919  03C2  00A1               	movwf	ADC_CHANNELS@CANAL+1
   920  03C3  0856               	movf	_VALOR_ADC+1,w
   921  03C4  00A3               	movwf	ADC_CHANNELS@VALOR_ADC+1
   922  03C5  0855               	movf	_VALOR_ADC,w
   923  03C6  00A2               	movwf	ADC_CHANNELS@VALOR_ADC
   924  03C7  305F               	movlw	(low (_POT0| 0))& (0+255)
   925  03C8  00D3               	movwf	??_main
   926  03C9  0853               	movf	??_main,w
   927  03CA  00A4               	movwf	ADC_CHANNELS@VALORA
   928  03CB  120A  118A  2799  120A  118A  	fcall	_ADC_CHANNELS
   929  03D0                     l1913:
   930                           
   931                           ;main.c: 92:           POT0= POT0*1.961;
   932  03D0  1283               	bcf	3,5	;RP0=0, select bank0
   933  03D1  1303               	bcf	3,6	;RP1=0, select bank0
   934  03D2  085F               	movf	_POT0,w
   935  03D3  00A0               	movwf	___xxtofl@val
   936  03D4  0860               	movf	_POT0+1,w
   937  03D5  00A1               	movwf	___xxtofl@val+1
   938  03D6  01A2               	clrf	___xxtofl@val+2
   939  03D7  01A3               	clrf	___xxtofl@val+3
   940  03D8  3000               	movlw	0
   941  03D9  120A  118A  2595  120A  118A  	fcall	___xxtofl
   942  03DE  1283               	bcf	3,5	;RP0=0, select bank0
   943  03DF  1303               	bcf	3,6	;RP1=0, select bank0
   944  03E0  0823               	movf	?___xxtofl+3,w
   945  03E1  00B5               	movwf	___flmul@a+3
   946  03E2  0822               	movf	?___xxtofl+2,w
   947  03E3  00B4               	movwf	___flmul@a+2
   948  03E4  0821               	movf	?___xxtofl+1,w
   949  03E5  00B3               	movwf	___flmul@a+1
   950  03E6  0820               	movf	?___xxtofl,w
   951  03E7  00B2               	movwf	___flmul@a
   952  03E8  303F               	movlw	63
   953  03E9  00B1               	movwf	___flmul@b+3
   954  03EA  30FB               	movlw	251
   955  03EB  00B0               	movwf	___flmul@b+2
   956  03EC  3002               	movlw	2
   957  03ED  00AF               	movwf	___flmul@b+1
   958  03EE  300C               	movlw	12
   959  03EF  00AE               	movwf	___flmul@b
   960  03F0  120A  118A  203A  120A  118A  	fcall	___flmul
   961  03F5  1283               	bcf	3,5	;RP0=0, select bank0
   962  03F6  1303               	bcf	3,6	;RP1=0, select bank0
   963  03F7  0831               	movf	?___flmul+3,w
   964  03F8  00CB               	movwf	___fltol@f1+3
   965  03F9  0830               	movf	?___flmul+2,w
   966  03FA  00CA               	movwf	___fltol@f1+2
   967  03FB  082F               	movf	?___flmul+1,w
   968  03FC  00C9               	movwf	___fltol@f1+1
   969  03FD  082E               	movf	?___flmul,w
   970  03FE  00C8               	movwf	___fltol@f1
   971  03FF  120A  118A  2651  120A  118A  	fcall	___fltol
   972  0404  1283               	bcf	3,5	;RP0=0, select bank0
   973  0405  1303               	bcf	3,6	;RP1=0, select bank0
   974  0406  0849               	movf	?___fltol+1,w
   975  0407  00E0               	movwf	_POT0+1
   976  0408  0848               	movf	?___fltol,w
   977  0409  00DF               	movwf	_POT0
   978  040A                     l1915:
   979                           
   980                           ;main.c: 93:         VAL(POT0);
   981  040A  0860               	movf	_POT0+1,w
   982  040B  00A9               	movwf	VAL@variable+1
   983  040C  085F               	movf	_POT0,w
   984  040D  00A8               	movwf	VAL@variable
   985  040E  120A  118A  26CD  120A  118A  	fcall	_VAL
   986  0413                     l1917:
   987                           
   988                           ;main.c: 94:         Lcd_Set_Cursor(2,1);
   989  0413  1283               	bcf	3,5	;RP0=0, select bank0
   990  0414  1303               	bcf	3,6	;RP1=0, select bank0
   991  0415  01A4               	clrf	Lcd_Set_Cursor@b
   992  0416  0AA4               	incf	Lcd_Set_Cursor@b,f
   993  0417  3002               	movlw	2
   994  0418  120A  118A  2741  120A  118A  	fcall	_Lcd_Set_Cursor
   995  041D                     l1919:
   996                           
   997                           ;main.c: 95:         Lcd_Write_Char(POS1);
   998  041D  1283               	bcf	3,5	;RP0=0, select bank0
   999  041E  1303               	bcf	3,6	;RP1=0, select bank0
  1000  041F  085C               	movf	_POS1,w
  1001  0420  120A  158A  2617  120A  118A  	fcall	_Lcd_Write_Char
  1002  0425                     l1921:
  1003                           
  1004                           ;main.c: 96:         Lcd_Write_Char(46);
  1005  0425  302E               	movlw	46
  1006  0426  120A  158A  2617  120A  118A  	fcall	_Lcd_Write_Char
  1007  042B                     l1923:
  1008                           
  1009                           ;main.c: 97:         Lcd_Write_Char(POS2);
  1010  042B  1283               	bcf	3,5	;RP0=0, select bank0
  1011  042C  1303               	bcf	3,6	;RP1=0, select bank0
  1012  042D  085B               	movf	_POS2,w
  1013  042E  120A  158A  2617  120A  118A  	fcall	_Lcd_Write_Char
  1014  0433                     l1925:
  1015                           
  1016                           ;main.c: 98:         Lcd_Write_Char(POS3);
  1017  0433  1283               	bcf	3,5	;RP0=0, select bank0
  1018  0434  1303               	bcf	3,6	;RP1=0, select bank0
  1019  0435  085A               	movf	_POS3,w
  1020  0436  120A  158A  2617  120A  118A  	fcall	_Lcd_Write_Char
  1021  043B                     l1927:
  1022                           
  1023                           ;main.c: 100:         for(DATO=0; DATO <= 9; DATO++){
  1024  043B  1283               	bcf	3,5	;RP0=0, select bank0
  1025  043C  1303               	bcf	3,6	;RP1=0, select bank0
  1026  043D  01D9               	clrf	_DATO
  1027  043E                     l1933:
  1028                           
  1029                           ;main.c: 101:              TXREG = S1[DATO];
  1030  043E  0859               	movf	_DATO,w
  1031  043F  3E61               	addlw	(low (_S1| 0))& (0+255)
  1032  0440  0084               	movwf	4
  1033  0441  1383               	bcf	3,7	;select IRP bank0
  1034  0442  0800               	movf	0,w
  1035  0443  0099               	movwf	25	;volatile
  1036  0444                     l1935:
  1037                           
  1038                           ;main.c: 102:              _delay((unsigned long)((10)*(4000000/4000.0)));
  1039  0444  300D               	movlw	13
  1040  0445  1283               	bcf	3,5	;RP0=0, select bank0
  1041  0446  1303               	bcf	3,6	;RP1=0, select bank0
  1042  0447  00D4               	movwf	??_main+1
  1043  0448  30FB               	movlw	251
  1044  0449  00D3               	movwf	??_main
  1045  044A                     u1817:
  1046  044A  0BD3               	decfsz	??_main,f
  1047  044B  2C4A               	goto	u1817
  1048  044C  0BD4               	decfsz	??_main+1,f
  1049  044D  2C4A               	goto	u1817
  1050  044E                     l1937:
  1051                           
  1052                           ;main.c: 103:              }
  1053  044E  3001               	movlw	1
  1054  044F  1283               	bcf	3,5	;RP0=0, select bank0
  1055  0450  1303               	bcf	3,6	;RP1=0, select bank0
  1056  0451  00D3               	movwf	??_main
  1057  0452  0853               	movf	??_main,w
  1058  0453  07D9               	addwf	_DATO,f
  1059  0454                     l1939:
  1060  0454  300A               	movlw	10
  1061  0455  0259               	subwf	_DATO,w
  1062  0456  1C03               	skipc
  1063  0457  2C59               	goto	u1771
  1064  0458  2C5A               	goto	u1770
  1065  0459                     u1771:
  1066  0459  2C3E               	goto	l1933
  1067  045A                     u1770:
  1068  045A                     l1941:
  1069                           
  1070                           ;main.c: 105:         EUSART_ENVIAR(POS1);
  1071  045A  085C               	movf	_POS1,w
  1072  045B  120A  118A  27E8  120A  118A  	fcall	_EUSART_ENVIAR
  1073                           
  1074                           ;main.c: 106:         EUSART_ENVIAR(46);
  1075  0460  302E               	movlw	46
  1076  0461  120A  118A  27E8  120A  118A  	fcall	_EUSART_ENVIAR
  1077                           
  1078                           ;main.c: 107:         EUSART_ENVIAR(POS2);
  1079  0466  1283               	bcf	3,5	;RP0=0, select bank0
  1080  0467  1303               	bcf	3,6	;RP1=0, select bank0
  1081  0468  085B               	movf	_POS2,w
  1082  0469  120A  118A  27E8  120A  118A  	fcall	_EUSART_ENVIAR
  1083                           
  1084                           ;main.c: 108:         EUSART_ENVIAR(POS3);
  1085  046E  1283               	bcf	3,5	;RP0=0, select bank0
  1086  046F  1303               	bcf	3,6	;RP1=0, select bank0
  1087  0470  085A               	movf	_POS3,w
  1088  0471  120A  118A  27E8  120A  118A  	fcall	_EUSART_ENVIAR
  1089                           
  1090                           ;main.c: 109:         EUSART_ENVIAR(118);
  1091  0476  3076               	movlw	118
  1092  0477  120A  118A  27E8  120A  118A  	fcall	_EUSART_ENVIAR
  1093                           
  1094                           ;main.c: 110:         EUSART_ENVIAR(13);
  1095  047C  300D               	movlw	13
  1096  047D  120A  118A  27E8  120A  118A  	fcall	_EUSART_ENVIAR
  1097  0482                     l1943:
  1098                           
  1099                           ;main.c: 112:         Lcd_Write_String("v ");
  1100  0482  3017               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1101  0483  120A  158A  26A8  120A  118A  	fcall	_Lcd_Write_String
  1102  0488                     l1945:
  1103                           
  1104                           ;main.c: 113:         ADC_CHANNELS(0,VALOR_ADC,&POT1);
  1105  0488  3000               	movlw	0
  1106  0489  1283               	bcf	3,5	;RP0=0, select bank0
  1107  048A  1303               	bcf	3,6	;RP1=0, select bank0
  1108  048B  00A0               	movwf	ADC_CHANNELS@CANAL
  1109  048C  00A1               	movwf	ADC_CHANNELS@CANAL+1
  1110  048D  0856               	movf	_VALOR_ADC+1,w
  1111  048E  00A3               	movwf	ADC_CHANNELS@VALOR_ADC+1
  1112  048F  0855               	movf	_VALOR_ADC,w
  1113  0490  00A2               	movwf	ADC_CHANNELS@VALOR_ADC
  1114  0491  305D               	movlw	(low (_POT1| 0))& (0+255)
  1115  0492  00D3               	movwf	??_main
  1116  0493  0853               	movf	??_main,w
  1117  0494  00A4               	movwf	ADC_CHANNELS@VALORA
  1118  0495  120A  118A  2799  120A  118A  	fcall	_ADC_CHANNELS
  1119  049A                     l1947:
  1120                           
  1121                           ;main.c: 114:         POT1= POT1*1.961;
  1122  049A  1283               	bcf	3,5	;RP0=0, select bank0
  1123  049B  1303               	bcf	3,6	;RP1=0, select bank0
  1124  049C  085D               	movf	_POT1,w
  1125  049D  00A0               	movwf	___xxtofl@val
  1126  049E  085E               	movf	_POT1+1,w
  1127  049F  00A1               	movwf	___xxtofl@val+1
  1128  04A0  01A2               	clrf	___xxtofl@val+2
  1129  04A1  01A3               	clrf	___xxtofl@val+3
  1130  04A2  3000               	movlw	0
  1131  04A3  120A  118A  2595  120A  118A  	fcall	___xxtofl
  1132  04A8  1283               	bcf	3,5	;RP0=0, select bank0
  1133  04A9  1303               	bcf	3,6	;RP1=0, select bank0
  1134  04AA  0823               	movf	?___xxtofl+3,w
  1135  04AB  00B5               	movwf	___flmul@a+3
  1136  04AC  0822               	movf	?___xxtofl+2,w
  1137  04AD  00B4               	movwf	___flmul@a+2
  1138  04AE  0821               	movf	?___xxtofl+1,w
  1139  04AF  00B3               	movwf	___flmul@a+1
  1140  04B0  0820               	movf	?___xxtofl,w
  1141  04B1  00B2               	movwf	___flmul@a
  1142  04B2  303F               	movlw	63
  1143  04B3  00B1               	movwf	___flmul@b+3
  1144  04B4  30FB               	movlw	251
  1145  04B5  00B0               	movwf	___flmul@b+2
  1146  04B6  3002               	movlw	2
  1147  04B7  00AF               	movwf	___flmul@b+1
  1148  04B8  300C               	movlw	12
  1149  04B9  00AE               	movwf	___flmul@b
  1150  04BA  120A  118A  203A  120A  118A  	fcall	___flmul
  1151  04BF  1283               	bcf	3,5	;RP0=0, select bank0
  1152  04C0  1303               	bcf	3,6	;RP1=0, select bank0
  1153  04C1  0831               	movf	?___flmul+3,w
  1154  04C2  00CB               	movwf	___fltol@f1+3
  1155  04C3  0830               	movf	?___flmul+2,w
  1156  04C4  00CA               	movwf	___fltol@f1+2
  1157  04C5  082F               	movf	?___flmul+1,w
  1158  04C6  00C9               	movwf	___fltol@f1+1
  1159  04C7  082E               	movf	?___flmul,w
  1160  04C8  00C8               	movwf	___fltol@f1
  1161  04C9  120A  118A  2651  120A  118A  	fcall	___fltol
  1162  04CE  1283               	bcf	3,5	;RP0=0, select bank0
  1163  04CF  1303               	bcf	3,6	;RP1=0, select bank0
  1164  04D0  0849               	movf	?___fltol+1,w
  1165  04D1  00DE               	movwf	_POT1+1
  1166  04D2  0848               	movf	?___fltol,w
  1167  04D3  00DD               	movwf	_POT1
  1168  04D4                     l1949:
  1169                           
  1170                           ;main.c: 115:         VAL(POT1);
  1171  04D4  085E               	movf	_POT1+1,w
  1172  04D5  00A9               	movwf	VAL@variable+1
  1173  04D6  085D               	movf	_POT1,w
  1174  04D7  00A8               	movwf	VAL@variable
  1175  04D8  120A  118A  26CD  120A  118A  	fcall	_VAL
  1176  04DD                     l1951:
  1177                           
  1178                           ;main.c: 116:         Lcd_Write_Char(POS1);
  1179  04DD  1283               	bcf	3,5	;RP0=0, select bank0
  1180  04DE  1303               	bcf	3,6	;RP1=0, select bank0
  1181  04DF  085C               	movf	_POS1,w
  1182  04E0  120A  158A  2617  120A  118A  	fcall	_Lcd_Write_Char
  1183  04E5                     l1953:
  1184                           
  1185                           ;main.c: 117:         Lcd_Write_Char(46);
  1186  04E5  302E               	movlw	46
  1187  04E6  120A  158A  2617  120A  118A  	fcall	_Lcd_Write_Char
  1188  04EB                     l1955:
  1189                           
  1190                           ;main.c: 118:         Lcd_Write_Char(POS2);
  1191  04EB  1283               	bcf	3,5	;RP0=0, select bank0
  1192  04EC  1303               	bcf	3,6	;RP1=0, select bank0
  1193  04ED  085B               	movf	_POS2,w
  1194  04EE  120A  158A  2617  120A  118A  	fcall	_Lcd_Write_Char
  1195  04F3                     l1957:
  1196                           
  1197                           ;main.c: 119:         Lcd_Write_Char(POS3);
  1198  04F3  1283               	bcf	3,5	;RP0=0, select bank0
  1199  04F4  1303               	bcf	3,6	;RP1=0, select bank0
  1200  04F5  085A               	movf	_POS3,w
  1201  04F6  120A  158A  2617  120A  118A  	fcall	_Lcd_Write_Char
  1202  04FB                     l1959:
  1203                           
  1204                           ;main.c: 120:         Lcd_Write_String("v   ");
  1205  04FB  3012               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1206  04FC  120A  158A  26A8  120A  118A  	fcall	_Lcd_Write_String
  1207  0501                     l1961:
  1208                           
  1209                           ;main.c: 121:         for(DATO=0; DATO <= 9; DATO++){
  1210  0501  1283               	bcf	3,5	;RP0=0, select bank0
  1211  0502  1303               	bcf	3,6	;RP1=0, select bank0
  1212  0503  01D9               	clrf	_DATO
  1213  0504                     l1967:
  1214                           
  1215                           ;main.c: 122:              TXREG = S2[DATO];
  1216  0504  0859               	movf	_DATO,w
  1217  0505  3EA0               	addlw	(low (_S2| 0))& (0+255)
  1218  0506  0084               	movwf	4
  1219  0507  1383               	bcf	3,7	;select IRP bank1
  1220  0508  0800               	movf	0,w
  1221  0509  0099               	movwf	25	;volatile
  1222  050A                     l1969:
  1223                           
  1224                           ;main.c: 123:              _delay((unsigned long)((10)*(4000000/4000.0)));
  1225  050A  300D               	movlw	13
  1226  050B  1283               	bcf	3,5	;RP0=0, select bank0
  1227  050C  1303               	bcf	3,6	;RP1=0, select bank0
  1228  050D  00D4               	movwf	??_main+1
  1229  050E  30FB               	movlw	251
  1230  050F  00D3               	movwf	??_main
  1231  0510                     u1827:
  1232  0510  0BD3               	decfsz	??_main,f
  1233  0511  2D10               	goto	u1827
  1234  0512  0BD4               	decfsz	??_main+1,f
  1235  0513  2D10               	goto	u1827
  1236  0514                     l1971:
  1237                           
  1238                           ;main.c: 124:              }
  1239  0514  3001               	movlw	1
  1240  0515  1283               	bcf	3,5	;RP0=0, select bank0
  1241  0516  1303               	bcf	3,6	;RP1=0, select bank0
  1242  0517  00D3               	movwf	??_main
  1243  0518  0853               	movf	??_main,w
  1244  0519  07D9               	addwf	_DATO,f
  1245  051A                     l1973:
  1246  051A  300A               	movlw	10
  1247  051B  0259               	subwf	_DATO,w
  1248  051C  1C03               	skipc
  1249  051D  2D1F               	goto	u1781
  1250  051E  2D20               	goto	u1780
  1251  051F                     u1781:
  1252  051F  2D04               	goto	l1967
  1253  0520                     u1780:
  1254  0520                     l1975:
  1255                           
  1256                           ;main.c: 126:         EUSART_ENVIAR(POS1);
  1257  0520  085C               	movf	_POS1,w
  1258  0521  120A  118A  27E8  120A  118A  	fcall	_EUSART_ENVIAR
  1259                           
  1260                           ;main.c: 127:         EUSART_ENVIAR(46);
  1261  0526  302E               	movlw	46
  1262  0527  120A  118A  27E8  120A  118A  	fcall	_EUSART_ENVIAR
  1263                           
  1264                           ;main.c: 128:         EUSART_ENVIAR(POS2);
  1265  052C  1283               	bcf	3,5	;RP0=0, select bank0
  1266  052D  1303               	bcf	3,6	;RP1=0, select bank0
  1267  052E  085B               	movf	_POS2,w
  1268  052F  120A  118A  27E8  120A  118A  	fcall	_EUSART_ENVIAR
  1269                           
  1270                           ;main.c: 129:         EUSART_ENVIAR(POS3);
  1271  0534  1283               	bcf	3,5	;RP0=0, select bank0
  1272  0535  1303               	bcf	3,6	;RP1=0, select bank0
  1273  0536  085A               	movf	_POS3,w
  1274  0537  120A  118A  27E8  120A  118A  	fcall	_EUSART_ENVIAR
  1275                           
  1276                           ;main.c: 130:         EUSART_ENVIAR(118);
  1277  053C  3076               	movlw	118
  1278  053D  120A  118A  27E8  120A  118A  	fcall	_EUSART_ENVIAR
  1279                           
  1280                           ;main.c: 131:         EUSART_ENVIAR(13);
  1281  0542  300D               	movlw	13
  1282  0543  120A  118A  27E8  120A  118A  	fcall	_EUSART_ENVIAR
  1283                           
  1284                           ;main.c: 133:         switch(OPCION){
  1285  0548  2D63               	goto	l1991
  1286  0549                     l1977:
  1287                           
  1288                           ;main.c: 135:                 CONTADOR++;
  1289  0549  3001               	movlw	1
  1290  054A  00D3               	movwf	??_main
  1291  054B  0853               	movf	??_main,w
  1292  054C  07D8               	addwf	_CONTADOR,f
  1293                           
  1294                           ;main.c: 136:                 if (CONTADOR == 100){
  1295  054D  3064               	movlw	100
  1296  054E  0658               	xorwf	_CONTADOR,w
  1297  054F  1D03               	btfss	3,2
  1298  0550  2D52               	goto	u1791
  1299  0551  2D53               	goto	u1790
  1300  0552                     u1791:
  1301  0552  2D54               	goto	l141
  1302  0553                     u1790:
  1303  0553                     l1979:
  1304                           
  1305                           ;main.c: 137:                     CONTADOR = 0;
  1306  0553  01D8               	clrf	_CONTADOR
  1307  0554                     l141:	
  1308                           ;main.c: 138:                 }
  1309                           
  1310                           
  1311                           ;main.c: 139:                 OPCION = 0;
  1312  0554  01D7               	clrf	_OPCION
  1313                           
  1314                           ;main.c: 140:                 break;
  1315  0555  2D75               	goto	l1993
  1316  0556                     l1981:
  1317                           
  1318                           ;main.c: 142:                 if (CONTADOR == 0){
  1319  0556  0858               	movf	_CONTADOR,w
  1320  0557  1D03               	btfss	3,2
  1321  0558  2D5A               	goto	u1801
  1322  0559  2D5B               	goto	u1800
  1323  055A                     u1801:
  1324  055A  2D60               	goto	l1985
  1325  055B                     u1800:
  1326  055B                     l1983:
  1327                           
  1328                           ;main.c: 143:                     CONTADOR = 0X63;
  1329  055B  3063               	movlw	99
  1330  055C  00D3               	movwf	??_main
  1331  055D  0853               	movf	??_main,w
  1332  055E  00D8               	movwf	_CONTADOR
  1333                           
  1334                           ;main.c: 144:                 }
  1335  055F  2D54               	goto	l141
  1336  0560                     l1985:
  1337                           
  1338                           ;main.c: 146:                 CONTADOR--;}
  1339  0560  3001               	movlw	1
  1340  0561  02D8               	subwf	_CONTADOR,f
  1341  0562  2D54               	goto	l141
  1342  0563                     l1991:
  1343  0563  1283               	bcf	3,5	;RP0=0, select bank0
  1344  0564  1303               	bcf	3,6	;RP1=0, select bank0
  1345  0565  0857               	movf	_OPCION,w
  1346  0566  00D3               	movwf	??_main
  1347  0567  01D4               	clrf	??_main+1
  1348                           
  1349                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1350                           ; Switch size 1, requested type "simple"
  1351                           ; Number of cases is 1, Range of values is 0 to 0
  1352                           ; switch strategies available:
  1353                           ; Name         Instructions Cycles
  1354                           ; simple_byte            4     3 (average)
  1355                           ; direct_byte           11     8 (fixed)
  1356                           ; jumptable            260     6 (fixed)
  1357                           ;	Chosen strategy is simple_byte
  1358  0568  0854               	movf	??_main+1,w
  1359  0569  3A00               	xorlw	0	; case 0
  1360  056A  1903               	skipnz
  1361  056B  2D6D               	goto	l2043
  1362  056C  2D75               	goto	l1993
  1363  056D                     l2043:
  1364                           
  1365                           ; Switch size 1, requested type "simple"
  1366                           ; Number of cases is 2, Range of values is 43 to 45
  1367                           ; switch strategies available:
  1368                           ; Name         Instructions Cycles
  1369                           ; simple_byte            7     4 (average)
  1370                           ; direct_byte           20    11 (fixed)
  1371                           ; jumptable            263     9 (fixed)
  1372                           ;	Chosen strategy is simple_byte
  1373  056D  0853               	movf	??_main,w
  1374  056E  3A2B               	xorlw	43	; case 43
  1375  056F  1903               	skipnz
  1376  0570  2D49               	goto	l1977
  1377  0571  3A06               	xorlw	6	; case 45
  1378  0572  1903               	skipnz
  1379  0573  2D56               	goto	l1981
  1380  0574  2D75               	goto	l1993
  1381  0575                     l1993:
  1382                           
  1383                           ;main.c: 150:         VAL(CONTADOR);
  1384  0575  0858               	movf	_CONTADOR,w
  1385  0576  00D3               	movwf	??_main
  1386  0577  01D4               	clrf	??_main+1
  1387  0578  0853               	movf	??_main,w
  1388  0579  00A8               	movwf	VAL@variable
  1389  057A  0854               	movf	??_main+1,w
  1390  057B  00A9               	movwf	VAL@variable+1
  1391  057C  120A  118A  26CD  120A  118A  	fcall	_VAL
  1392                           
  1393                           ;main.c: 151:         Lcd_Write_Char(POS2);
  1394  0581  1283               	bcf	3,5	;RP0=0, select bank0
  1395  0582  1303               	bcf	3,6	;RP1=0, select bank0
  1396  0583  085B               	movf	_POS2,w
  1397  0584  120A  158A  2617  120A  118A  	fcall	_Lcd_Write_Char
  1398                           
  1399                           ;main.c: 152:         Lcd_Write_Char(POS3);
  1400  0589  1283               	bcf	3,5	;RP0=0, select bank0
  1401  058A  1303               	bcf	3,6	;RP1=0, select bank0
  1402  058B  085A               	movf	_POS3,w
  1403  058C  120A  158A  2617  120A  118A  	fcall	_Lcd_Write_Char
  1404  0591  2BBD               	goto	l1911
  1405  0592  120A  118A  280C   	ljmp	start
  1406  0595                     __end_of_main:
  1407                           
  1408                           	psect	text1
  1409  0F30                     __ptext1:	
  1410 ;; *************** function _setup *****************
  1411 ;; Defined at:
  1412 ;;		line 157 in file "main.c"
  1413 ;; Parameters:    Size  Location     Type
  1414 ;;		None
  1415 ;; Auto vars:     Size  Location     Type
  1416 ;;		None
  1417 ;; Return value:  Size  Location     Type
  1418 ;;                  1    wreg      void 
  1419 ;; Registers used:
  1420 ;;		wreg, status,2, status,0, pclath, cstack
  1421 ;; Tracked objects:
  1422 ;;		On entry : 0/0
  1423 ;;		On exit  : 0/0
  1424 ;;		Unchanged: 0/0
  1425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1426 ;;      Params:         0       0       0       0       0
  1427 ;;      Locals:         0       0       0       0       0
  1428 ;;      Temps:          0       0       0       0       0
  1429 ;;      Totals:         0       0       0       0       0
  1430 ;;Total ram usage:        0 bytes
  1431 ;; Hardware stack levels used:    1
  1432 ;; Hardware stack levels required when called:    3
  1433 ;; This function calls:
  1434 ;;		_ADC_INIT
  1435 ;;		_EUSART_INIT
  1436 ;; This function is called by:
  1437 ;;		_main
  1438 ;; This function uses a non-reentrant model
  1439 ;;
  1440                           
  1441                           
  1442                           ;psect for function _setup
  1443  0F30                     _setup:
  1444  0F30                     l1559:	
  1445                           ;incstack = 0
  1446                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1447                           
  1448                           
  1449                           ;main.c: 159:     ANSEL = 0B00000011;
  1450  0F30  3003               	movlw	3
  1451  0F31  1683               	bsf	3,5	;RP0=1, select bank3
  1452  0F32  1703               	bsf	3,6	;RP1=1, select bank3
  1453  0F33  0088               	movwf	8	;volatile
  1454  0F34                     l1561:
  1455                           
  1456                           ;main.c: 160:     ANSELH = 0X00;
  1457  0F34  0189               	clrf	9	;volatile
  1458  0F35                     l1563:
  1459                           
  1460                           ;main.c: 162:     TRISA = 0B00000011;
  1461  0F35  3003               	movlw	3
  1462  0F36  1683               	bsf	3,5	;RP0=1, select bank1
  1463  0F37  1303               	bcf	3,6	;RP1=0, select bank1
  1464  0F38  0085               	movwf	5	;volatile
  1465  0F39                     l1565:
  1466                           
  1467                           ;main.c: 163:     TRISC = 0B10000000;
  1468  0F39  3080               	movlw	128
  1469  0F3A  0087               	movwf	7	;volatile
  1470  0F3B                     l1567:
  1471                           
  1472                           ;main.c: 164:     TRISD = 0X00;
  1473  0F3B  0188               	clrf	8	;volatile
  1474  0F3C                     l1569:
  1475                           
  1476                           ;main.c: 165:     TRISE = 0X00;
  1477  0F3C  0189               	clrf	9	;volatile
  1478  0F3D                     l1571:
  1479                           
  1480                           ;main.c: 166:     TRISB = 0B00000000;
  1481  0F3D  0186               	clrf	6	;volatile
  1482  0F3E                     l1573:
  1483                           
  1484                           ;main.c: 168:     PORTA = 0X00;
  1485  0F3E  1283               	bcf	3,5	;RP0=0, select bank0
  1486  0F3F  1303               	bcf	3,6	;RP1=0, select bank0
  1487  0F40  0185               	clrf	5	;volatile
  1488  0F41                     l1575:
  1489                           
  1490                           ;main.c: 169:     PORTB = 0X00;
  1491  0F41  0186               	clrf	6	;volatile
  1492  0F42                     l1577:
  1493                           
  1494                           ;main.c: 170:     PORTC = 0X00;
  1495  0F42  0187               	clrf	7	;volatile
  1496  0F43                     l1579:
  1497                           
  1498                           ;main.c: 171:     PORTD = 0X00;
  1499  0F43  0188               	clrf	8	;volatile
  1500  0F44                     l1581:
  1501                           
  1502                           ;main.c: 172:     PORTE = 0X00;
  1503  0F44  0189               	clrf	9	;volatile
  1504  0F45                     l1583:
  1505                           
  1506                           ;main.c: 175:     OSCCONbits.IRCF2 = 1;
  1507  0F45  1683               	bsf	3,5	;RP0=1, select bank1
  1508  0F46  1303               	bcf	3,6	;RP1=0, select bank1
  1509  0F47  170F               	bsf	15,6	;volatile
  1510  0F48                     l1585:
  1511                           
  1512                           ;main.c: 176:     OSCCONbits.IRCF1 = 1;
  1513  0F48  168F               	bsf	15,5	;volatile
  1514  0F49                     l1587:
  1515                           
  1516                           ;main.c: 177:     OSCCONbits.IRCF0 = 0;
  1517  0F49  120F               	bcf	15,4	;volatile
  1518  0F4A                     l1589:
  1519                           
  1520                           ;main.c: 178:     OSCCONbits.SCS = 1;
  1521  0F4A  140F               	bsf	15,0	;volatile
  1522  0F4B                     l1591:
  1523                           
  1524                           ;main.c: 181:     OPTION_REG = 0B11010100;
  1525  0F4B  30D4               	movlw	212
  1526  0F4C  0081               	movwf	1	;volatile
  1527  0F4D                     l1593:
  1528                           
  1529                           ;main.c: 182:     TMR0 = 100;
  1530  0F4D  3064               	movlw	100
  1531  0F4E  1283               	bcf	3,5	;RP0=0, select bank0
  1532  0F4F  1303               	bcf	3,6	;RP1=0, select bank0
  1533  0F50  0081               	movwf	1	;volatile
  1534  0F51                     l1595:
  1535                           
  1536                           ;main.c: 184:     ADC_INIT(0);
  1537  0F51  3000               	movlw	0
  1538  0F52  00A0               	movwf	ADC_INIT@canal
  1539  0F53  00A1               	movwf	ADC_INIT@canal+1
  1540  0F54  120A  158A  2637  120A  158A  	fcall	_ADC_INIT
  1541  0F59                     l1597:
  1542                           
  1543                           ;main.c: 185:     EUSART_INIT(0,1);
  1544  0F59  3000               	movlw	0
  1545  0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  1546  0F5B  1303               	bcf	3,6	;RP1=0, select bank0
  1547  0F5C  00A0               	movwf	EUSART_INIT@tx
  1548  0F5D  00A1               	movwf	EUSART_INIT@tx+1
  1549  0F5E  3001               	movlw	1
  1550  0F5F  00A2               	movwf	EUSART_INIT@rx
  1551  0F60  3000               	movlw	0
  1552  0F61  00A3               	movwf	EUSART_INIT@rx+1
  1553  0F62  120A  158A  2681  120A  158A  	fcall	_EUSART_INIT
  1554  0F67                     l1599:
  1555                           
  1556                           ;main.c: 187:     INTCONbits.GIE = 1;
  1557  0F67  178B               	bsf	11,7	;volatile
  1558  0F68                     l1601:
  1559                           
  1560                           ;main.c: 188:     INTCONbits.PEIE = 1;
  1561  0F68  170B               	bsf	11,6	;volatile
  1562  0F69                     l1603:
  1563                           
  1564                           ;main.c: 189:     INTCONbits.T0IE = 1;
  1565  0F69  168B               	bsf	11,5	;volatile
  1566  0F6A                     l1605:
  1567                           
  1568                           ;main.c: 190:     INTCONbits.T0IF = 0;
  1569  0F6A  110B               	bcf	11,2	;volatile
  1570  0F6B                     l151:
  1571  0F6B  0008               	return
  1572  0F6C                     __end_of_setup:
  1573                           
  1574                           	psect	text2
  1575  0E81                     __ptext2:	
  1576 ;; *************** function _EUSART_INIT *****************
  1577 ;; Defined at:
  1578 ;;		line 13 in file "./EUSART_LIB.h"
  1579 ;; Parameters:    Size  Location     Type
  1580 ;;  tx              2    0[BANK0 ] unsigned int 
  1581 ;;  rx              2    2[BANK0 ] unsigned int 
  1582 ;; Auto vars:     Size  Location     Type
  1583 ;;		None
  1584 ;; Return value:  Size  Location     Type
  1585 ;;                  1    wreg      void 
  1586 ;; Registers used:
  1587 ;;		wreg, status,0
  1588 ;; Tracked objects:
  1589 ;;		On entry : 0/0
  1590 ;;		On exit  : 0/0
  1591 ;;		Unchanged: 0/0
  1592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1593 ;;      Params:         0       4       0       0       0
  1594 ;;      Locals:         0       0       0       0       0
  1595 ;;      Temps:          0       0       0       0       0
  1596 ;;      Totals:         0       4       0       0       0
  1597 ;;Total ram usage:        4 bytes
  1598 ;; Hardware stack levels used:    1
  1599 ;; Hardware stack levels required when called:    2
  1600 ;; This function calls:
  1601 ;;		Nothing
  1602 ;; This function is called by:
  1603 ;;		_setup
  1604 ;; This function uses a non-reentrant model
  1605 ;;
  1606                           
  1607                           
  1608                           ;psect for function _EUSART_INIT
  1609  0E81                     _EUSART_INIT:
  1610  0E81                     l1441:	
  1611                           ;incstack = 0
  1612                           ; Regs used in _EUSART_INIT: [wreg+status,0]
  1613                           
  1614                           
  1615                           ;./EUSART_LIB.h: 17:   TXSTAbits.SYNC = 0;
  1616  0E81  1683               	bsf	3,5	;RP0=1, select bank1
  1617  0E82  1303               	bcf	3,6	;RP1=0, select bank1
  1618  0E83  1218               	bcf	24,4	;volatile
  1619                           
  1620                           ;./EUSART_LIB.h: 18:   TXSTAbits.BRGH = 1;
  1621  0E84  1518               	bsf	24,2	;volatile
  1622                           
  1623                           ;./EUSART_LIB.h: 19:   TXSTAbits.TX9 = 0;
  1624  0E85  1318               	bcf	24,6	;volatile
  1625                           
  1626                           ;./EUSART_LIB.h: 20:   TXSTAbits.TXEN= 1;
  1627  0E86  1698               	bsf	24,5	;volatile
  1628                           
  1629                           ;./EUSART_LIB.h: 21:   RCSTAbits.SPEN = 1;
  1630  0E87  1283               	bcf	3,5	;RP0=0, select bank0
  1631  0E88  1303               	bcf	3,6	;RP1=0, select bank0
  1632  0E89  1798               	bsf	24,7	;volatile
  1633                           
  1634                           ;./EUSART_LIB.h: 24:   RCSTAbits.RX9 = 0;
  1635  0E8A  1318               	bcf	24,6	;volatile
  1636                           
  1637                           ;./EUSART_LIB.h: 25:   RCSTAbits.CREN = 1;
  1638  0E8B  1618               	bsf	24,4	;volatile
  1639                           
  1640                           ;./EUSART_LIB.h: 28:     BAUDCTLbits.BRG16 = 0;
  1641  0E8C  1683               	bsf	3,5	;RP0=1, select bank3
  1642  0E8D  1703               	bsf	3,6	;RP1=1, select bank3
  1643  0E8E  1187               	bcf	7,3	;volatile
  1644  0E8F                     l1443:
  1645                           
  1646                           ;./EUSART_LIB.h: 29:     SPBRG =25;
  1647  0E8F  3019               	movlw	25
  1648  0E90  1683               	bsf	3,5	;RP0=1, select bank1
  1649  0E91  1303               	bcf	3,6	;RP1=0, select bank1
  1650  0E92  0099               	movwf	25	;volatile
  1651                           
  1652                           ;./EUSART_LIB.h: 30:     SPBRGH = 1;
  1653  0E93  3001               	movlw	1
  1654  0E94  009A               	movwf	26	;volatile
  1655  0E95                     l1445:
  1656                           
  1657                           ;./EUSART_LIB.h: 32:     PIE1bits.TXIE =tx;
  1658  0E95  1283               	bcf	3,5	;RP0=0, select bank0
  1659  0E96  1303               	bcf	3,6	;RP1=0, select bank0
  1660  0E97  0C20               	rrf	EUSART_INIT@tx,w
  1661  0E98  1683               	bsf	3,5	;RP0=1, select bank1
  1662  0E99  1303               	bcf	3,6	;RP1=0, select bank1
  1663  0E9A  1C03               	skipc
  1664  0E9B  120C               	bcf	12,4	;volatile
  1665  0E9C  1803               	skipnc
  1666  0E9D  160C               	bsf	12,4	;volatile
  1667  0E9E                     l1447:
  1668                           
  1669                           ;./EUSART_LIB.h: 33:     PIE1bits.RCIE =rx;
  1670  0E9E  1283               	bcf	3,5	;RP0=0, select bank0
  1671  0E9F  1303               	bcf	3,6	;RP1=0, select bank0
  1672  0EA0  0C22               	rrf	EUSART_INIT@rx,w
  1673  0EA1  1683               	bsf	3,5	;RP0=1, select bank1
  1674  0EA2  1303               	bcf	3,6	;RP1=0, select bank1
  1675  0EA3  1C03               	skipc
  1676  0EA4  128C               	bcf	12,5	;volatile
  1677  0EA5  1803               	skipnc
  1678  0EA6  168C               	bsf	12,5	;volatile
  1679  0EA7                     l92:
  1680  0EA7  0008               	return
  1681  0EA8                     __end_of_EUSART_INIT:
  1682                           
  1683                           	psect	text3
  1684  0E37                     __ptext3:	
  1685 ;; *************** function _ADC_INIT *****************
  1686 ;; Defined at:
  1687 ;;		line 12 in file "./ADC_LIB.h"
  1688 ;; Parameters:    Size  Location     Type
  1689 ;;  canal           2    0[BANK0 ] unsigned int 
  1690 ;; Auto vars:     Size  Location     Type
  1691 ;;		None
  1692 ;; Return value:  Size  Location     Type
  1693 ;;                  1    wreg      void 
  1694 ;; Registers used:
  1695 ;;		wreg, status,2, status,0
  1696 ;; Tracked objects:
  1697 ;;		On entry : 0/0
  1698 ;;		On exit  : 0/0
  1699 ;;		Unchanged: 0/0
  1700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1701 ;;      Params:         0       2       0       0       0
  1702 ;;      Locals:         0       0       0       0       0
  1703 ;;      Temps:          0       1       0       0       0
  1704 ;;      Totals:         0       3       0       0       0
  1705 ;;Total ram usage:        3 bytes
  1706 ;; Hardware stack levels used:    1
  1707 ;; Hardware stack levels required when called:    2
  1708 ;; This function calls:
  1709 ;;		Nothing
  1710 ;; This function is called by:
  1711 ;;		_setup
  1712 ;; This function uses a non-reentrant model
  1713 ;;
  1714                           
  1715                           
  1716                           ;psect for function _ADC_INIT
  1717  0E37                     _ADC_INIT:
  1718  0E37                     l1423:	
  1719                           ;incstack = 0
  1720                           ; Regs used in _ADC_INIT: [wreg+status,2+status,0]
  1721                           
  1722                           
  1723                           ;./ADC_LIB.h: 14:     ADCON0bits.ADON = 0X01;
  1724  0E37  1283               	bcf	3,5	;RP0=0, select bank0
  1725  0E38  1303               	bcf	3,6	;RP1=0, select bank0
  1726  0E39  141F               	bsf	31,0	;volatile
  1727  0E3A                     l1425:
  1728                           
  1729                           ;./ADC_LIB.h: 15:     ADCON0bits.CHS = canal;
  1730  0E3A  0820               	movf	ADC_INIT@canal,w
  1731  0E3B  00A2               	movwf	??_ADC_INIT
  1732  0E3C  0DA2               	rlf	??_ADC_INIT,f
  1733  0E3D  0DA2               	rlf	??_ADC_INIT,f
  1734  0E3E  081F               	movf	31,w	;volatile
  1735  0E3F  0622               	xorwf	??_ADC_INIT,w
  1736  0E40  39C3               	andlw	-61
  1737  0E41  0622               	xorwf	??_ADC_INIT,w
  1738  0E42  009F               	movwf	31	;volatile
  1739  0E43                     l1427:
  1740                           
  1741                           ;./ADC_LIB.h: 16:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  1742  0E43  3020               	movlw	32
  1743  0E44  1283               	bcf	3,5	;RP0=0, select bank0
  1744  0E45  1303               	bcf	3,6	;RP1=0, select bank0
  1745  0E46  00A2               	movwf	??_ADC_INIT
  1746  0E47                     u1837:
  1747  0E47  0BA2               	decfsz	??_ADC_INIT,f
  1748  0E48  2E47               	goto	u1837
  1749  0E49  0000               	nop
  1750  0E4A                     l1429:
  1751                           
  1752                           ;./ADC_LIB.h: 17:     ADCON0bits.ADCS = 0X01;
  1753  0E4A  1283               	bcf	3,5	;RP0=0, select bank0
  1754  0E4B  1303               	bcf	3,6	;RP1=0, select bank0
  1755  0E4C  081F               	movf	31,w	;volatile
  1756  0E4D  393F               	andlw	-193
  1757  0E4E  3840               	iorlw	64
  1758  0E4F  009F               	movwf	31	;volatile
  1759  0E50                     l1431:
  1760                           
  1761                           ;./ADC_LIB.h: 18:     ADCON1bits.ADFM = 0;
  1762  0E50  1683               	bsf	3,5	;RP0=1, select bank1
  1763  0E51  1303               	bcf	3,6	;RP1=0, select bank1
  1764  0E52  139F               	bcf	31,7	;volatile
  1765  0E53                     l1433:
  1766                           
  1767                           ;./ADC_LIB.h: 19:     ADCON1bits.VCFG0 = 0;
  1768  0E53  121F               	bcf	31,4	;volatile
  1769  0E54                     l1435:
  1770                           
  1771                           ;./ADC_LIB.h: 20:     ADCON1bits.VCFG1 = 0;
  1772  0E54  129F               	bcf	31,5	;volatile
  1773  0E55                     l1437:
  1774                           
  1775                           ;./ADC_LIB.h: 21:     PIE1bits.ADIE = 1;
  1776  0E55  170C               	bsf	12,6	;volatile
  1777  0E56                     l1439:
  1778                           
  1779                           ;./ADC_LIB.h: 22:     PIR1bits.ADIF = 0;
  1780  0E56  1283               	bcf	3,5	;RP0=0, select bank0
  1781  0E57  1303               	bcf	3,6	;RP1=0, select bank0
  1782  0E58  130C               	bcf	12,6	;volatile
  1783  0E59                     l79:
  1784  0E59  0008               	return
  1785  0E5A                     __end_of_ADC_INIT:
  1786                           
  1787                           	psect	text4
  1788  0595                     __ptext4:	
  1789 ;; *************** function ___xxtofl *****************
  1790 ;; Defined at:
  1791 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  1792 ;; Parameters:    Size  Location     Type
  1793 ;;  sign            1    wreg     unsigned char 
  1794 ;;  val             4    0[BANK0 ] long 
  1795 ;; Auto vars:     Size  Location     Type
  1796 ;;  sign            1    8[BANK0 ] unsigned char 
  1797 ;;  arg             4   10[BANK0 ] unsigned long 
  1798 ;;  exp             1    9[BANK0 ] unsigned char 
  1799 ;; Return value:  Size  Location     Type
  1800 ;;                  4    0[BANK0 ] unsigned char 
  1801 ;; Registers used:
  1802 ;;		wreg, status,2, status,0
  1803 ;; Tracked objects:
  1804 ;;		On entry : 0/0
  1805 ;;		On exit  : 0/0
  1806 ;;		Unchanged: 0/0
  1807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1808 ;;      Params:         0       4       0       0       0
  1809 ;;      Locals:         0       6       0       0       0
  1810 ;;      Temps:          0       4       0       0       0
  1811 ;;      Totals:         0      14       0       0       0
  1812 ;;Total ram usage:       14 bytes
  1813 ;; Hardware stack levels used:    1
  1814 ;; Hardware stack levels required when called:    2
  1815 ;; This function calls:
  1816 ;;		Nothing
  1817 ;; This function is called by:
  1818 ;;		_main
  1819 ;; This function uses a non-reentrant model
  1820 ;;
  1821                           
  1822                           
  1823                           ;psect for function ___xxtofl
  1824  0595                     ___xxtofl:
  1825                           
  1826                           ;incstack = 0
  1827                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  1828                           ;___xxtofl@sign stored from wreg
  1829  0595  1283               	bcf	3,5	;RP0=0, select bank0
  1830  0596  1303               	bcf	3,6	;RP1=0, select bank0
  1831  0597  00A8               	movwf	___xxtofl@sign
  1832  0598                     l1839:
  1833  0598  0828               	movf	___xxtofl@sign,w
  1834  0599  1903               	btfsc	3,2
  1835  059A  2D9C               	goto	u1581
  1836  059B  2D9D               	goto	u1580
  1837  059C                     u1581:
  1838  059C  2DB1               	goto	l1845
  1839  059D                     u1580:
  1840  059D                     l1841:
  1841  059D  1FA3               	btfss	___xxtofl@val+3,7
  1842  059E  2DA0               	goto	u1591
  1843  059F  2DA1               	goto	u1590
  1844  05A0                     u1591:
  1845  05A0  2DB1               	goto	l1845
  1846  05A1                     u1590:
  1847  05A1                     l1843:
  1848  05A1  0920               	comf	___xxtofl@val,w
  1849  05A2  00AA               	movwf	___xxtofl@arg
  1850  05A3  0921               	comf	___xxtofl@val+1,w
  1851  05A4  00AB               	movwf	___xxtofl@arg+1
  1852  05A5  0922               	comf	___xxtofl@val+2,w
  1853  05A6  00AC               	movwf	___xxtofl@arg+2
  1854  05A7  0923               	comf	___xxtofl@val+3,w
  1855  05A8  00AD               	movwf	___xxtofl@arg+3
  1856  05A9  0AAA               	incf	___xxtofl@arg,f
  1857  05AA  1903               	skipnz
  1858  05AB  0AAB               	incf	___xxtofl@arg+1,f
  1859  05AC  1903               	skipnz
  1860  05AD  0AAC               	incf	___xxtofl@arg+2,f
  1861  05AE  1903               	skipnz
  1862  05AF  0AAD               	incf	___xxtofl@arg+3,f
  1863  05B0  2DB9               	goto	l714
  1864  05B1                     l1845:
  1865  05B1  0823               	movf	___xxtofl@val+3,w
  1866  05B2  00AD               	movwf	___xxtofl@arg+3
  1867  05B3  0822               	movf	___xxtofl@val+2,w
  1868  05B4  00AC               	movwf	___xxtofl@arg+2
  1869  05B5  0821               	movf	___xxtofl@val+1,w
  1870  05B6  00AB               	movwf	___xxtofl@arg+1
  1871  05B7  0820               	movf	___xxtofl@val,w
  1872  05B8  00AA               	movwf	___xxtofl@arg
  1873  05B9                     l714:
  1874  05B9  0823               	movf	___xxtofl@val+3,w
  1875  05BA  0422               	iorwf	___xxtofl@val+2,w
  1876  05BB  0421               	iorwf	___xxtofl@val+1,w
  1877  05BC  0420               	iorwf	___xxtofl@val,w
  1878  05BD  1D03               	skipz
  1879  05BE  2DC0               	goto	u1601
  1880  05BF  2DC1               	goto	u1600
  1881  05C0                     u1601:
  1882  05C0  2DCA               	goto	l1851
  1883  05C1                     u1600:
  1884  05C1                     l1847:
  1885  05C1  3000               	movlw	0
  1886  05C2  00A3               	movwf	?___xxtofl+3
  1887  05C3  3000               	movlw	0
  1888  05C4  00A2               	movwf	?___xxtofl+2
  1889  05C5  3000               	movlw	0
  1890  05C6  00A1               	movwf	?___xxtofl+1
  1891  05C7  3000               	movlw	0
  1892  05C8  00A0               	movwf	?___xxtofl
  1893  05C9  2E50               	goto	l716
  1894  05CA                     l1851:
  1895  05CA  3096               	movlw	150
  1896  05CB  00A4               	movwf	??___xxtofl
  1897  05CC  0824               	movf	??___xxtofl,w
  1898  05CD  00A9               	movwf	___xxtofl@exp
  1899  05CE  2DDC               	goto	l1855
  1900  05CF                     l1853:
  1901  05CF  3001               	movlw	1
  1902  05D0  00A4               	movwf	??___xxtofl
  1903  05D1  0824               	movf	??___xxtofl,w
  1904  05D2  07A9               	addwf	___xxtofl@exp,f
  1905  05D3  3001               	movlw	1
  1906  05D4                     u1615:
  1907  05D4  1003               	clrc
  1908  05D5  0CAD               	rrf	___xxtofl@arg+3,f
  1909  05D6  0CAC               	rrf	___xxtofl@arg+2,f
  1910  05D7  0CAB               	rrf	___xxtofl@arg+1,f
  1911  05D8  0CAA               	rrf	___xxtofl@arg,f
  1912  05D9  3EFF               	addlw	-1
  1913  05DA  1D03               	skipz
  1914  05DB  2DD4               	goto	u1615
  1915  05DC                     l1855:
  1916  05DC  30FE               	movlw	254
  1917  05DD  052D               	andwf	___xxtofl@arg+3,w
  1918  05DE  1D03               	btfss	3,2
  1919  05DF  2DE1               	goto	u1621
  1920  05E0  2DE2               	goto	u1620
  1921  05E1                     u1621:
  1922  05E1  2DCF               	goto	l1853
  1923  05E2                     u1620:
  1924  05E2  2DFE               	goto	l720
  1925  05E3                     l1857:
  1926  05E3  3001               	movlw	1
  1927  05E4  00A4               	movwf	??___xxtofl
  1928  05E5  0824               	movf	??___xxtofl,w
  1929  05E6  07A9               	addwf	___xxtofl@exp,f
  1930  05E7                     l1859:
  1931  05E7  3001               	movlw	1
  1932  05E8  07AA               	addwf	___xxtofl@arg,f
  1933  05E9  3000               	movlw	0
  1934  05EA  1803               	skipnc
  1935  05EB  3001               	movlw	1
  1936  05EC  07AB               	addwf	___xxtofl@arg+1,f
  1937  05ED  3000               	movlw	0
  1938  05EE  1803               	skipnc
  1939  05EF  3001               	movlw	1
  1940  05F0  07AC               	addwf	___xxtofl@arg+2,f
  1941  05F1  3000               	movlw	0
  1942  05F2  1803               	skipnc
  1943  05F3  3001               	movlw	1
  1944  05F4  07AD               	addwf	___xxtofl@arg+3,f
  1945  05F5                     l1861:
  1946  05F5  3001               	movlw	1
  1947  05F6                     u1635:
  1948  05F6  1003               	clrc
  1949  05F7  0CAD               	rrf	___xxtofl@arg+3,f
  1950  05F8  0CAC               	rrf	___xxtofl@arg+2,f
  1951  05F9  0CAB               	rrf	___xxtofl@arg+1,f
  1952  05FA  0CAA               	rrf	___xxtofl@arg,f
  1953  05FB  3EFF               	addlw	-1
  1954  05FC  1D03               	skipz
  1955  05FD  2DF6               	goto	u1635
  1956  05FE                     l720:
  1957  05FE  30FF               	movlw	255
  1958  05FF  052D               	andwf	___xxtofl@arg+3,w
  1959  0600  1D03               	btfss	3,2
  1960  0601  2E03               	goto	u1641
  1961  0602  2E04               	goto	u1640
  1962  0603                     u1641:
  1963  0603  2DE3               	goto	l1857
  1964  0604                     u1640:
  1965  0604  2E10               	goto	l1865
  1966  0605                     l1863:
  1967  0605  3001               	movlw	1
  1968  0606  02A9               	subwf	___xxtofl@exp,f
  1969  0607  3001               	movlw	1
  1970  0608  00A4               	movwf	??___xxtofl
  1971  0609                     u1655:
  1972  0609  1003               	clrc
  1973  060A  0DAA               	rlf	___xxtofl@arg,f
  1974  060B  0DAB               	rlf	___xxtofl@arg+1,f
  1975  060C  0DAC               	rlf	___xxtofl@arg+2,f
  1976  060D  0DAD               	rlf	___xxtofl@arg+3,f
  1977  060E  0BA4               	decfsz	??___xxtofl,f
  1978  060F  2E09               	goto	u1655
  1979  0610                     l1865:
  1980  0610  1BAC               	btfsc	___xxtofl@arg+2,7
  1981  0611  2E13               	goto	u1661
  1982  0612  2E14               	goto	u1660
  1983  0613                     u1661:
  1984  0613  2E1A               	goto	l727
  1985  0614                     u1660:
  1986  0614                     l1867:
  1987  0614  3002               	movlw	2
  1988  0615  0229               	subwf	___xxtofl@exp,w
  1989  0616  1803               	skipnc
  1990  0617  2E19               	goto	u1671
  1991  0618  2E1A               	goto	u1670
  1992  0619                     u1671:
  1993  0619  2E05               	goto	l1863
  1994  061A                     u1670:
  1995  061A                     l727:
  1996  061A  1829               	btfsc	___xxtofl@exp,0
  1997  061B  2E1D               	goto	u1681
  1998  061C  2E1E               	goto	u1680
  1999  061D                     u1681:
  2000  061D  2E26               	goto	l728
  2001  061E                     u1680:
  2002  061E                     l1869:
  2003  061E  30FF               	movlw	255
  2004  061F  05AA               	andwf	___xxtofl@arg,f
  2005  0620  30FF               	movlw	255
  2006  0621  05AB               	andwf	___xxtofl@arg+1,f
  2007  0622  307F               	movlw	127
  2008  0623  05AC               	andwf	___xxtofl@arg+2,f
  2009  0624  30FF               	movlw	255
  2010  0625  05AD               	andwf	___xxtofl@arg+3,f
  2011  0626                     l728:
  2012  0626  1003               	clrc
  2013  0627  0CA9               	rrf	___xxtofl@exp,f
  2014  0628                     l1871:
  2015  0628  0829               	movf	___xxtofl@exp,w
  2016  0629  00A4               	movwf	??___xxtofl
  2017  062A  01A5               	clrf	??___xxtofl+1
  2018  062B  01A6               	clrf	??___xxtofl+2
  2019  062C  01A7               	clrf	??___xxtofl+3
  2020  062D  3018               	movlw	24
  2021  062E                     u1695:
  2022  062E  1003               	clrc
  2023  062F  0DA4               	rlf	??___xxtofl,f
  2024  0630  0DA5               	rlf	??___xxtofl+1,f
  2025  0631  0DA6               	rlf	??___xxtofl+2,f
  2026  0632  0DA7               	rlf	??___xxtofl+3,f
  2027  0633                     u1690:
  2028  0633  3EFF               	addlw	-1
  2029  0634  1D03               	skipz
  2030  0635  2E2E               	goto	u1695
  2031  0636  0824               	movf	??___xxtofl,w
  2032  0637  04AA               	iorwf	___xxtofl@arg,f
  2033  0638  0825               	movf	??___xxtofl+1,w
  2034  0639  04AB               	iorwf	___xxtofl@arg+1,f
  2035  063A  0826               	movf	??___xxtofl+2,w
  2036  063B  04AC               	iorwf	___xxtofl@arg+2,f
  2037  063C  0827               	movf	??___xxtofl+3,w
  2038  063D  04AD               	iorwf	___xxtofl@arg+3,f
  2039  063E                     l1873:
  2040  063E  0828               	movf	___xxtofl@sign,w
  2041  063F  1903               	btfsc	3,2
  2042  0640  2E42               	goto	u1701
  2043  0641  2E43               	goto	u1700
  2044  0642                     u1701:
  2045  0642  2E48               	goto	l1879
  2046  0643                     u1700:
  2047  0643                     l1875:
  2048  0643  1FA3               	btfss	___xxtofl@val+3,7
  2049  0644  2E46               	goto	u1711
  2050  0645  2E47               	goto	u1710
  2051  0646                     u1711:
  2052  0646  2E48               	goto	l1879
  2053  0647                     u1710:
  2054  0647                     l1877:
  2055  0647  17AD               	bsf	___xxtofl@arg+3,7
  2056  0648                     l1879:
  2057  0648  082D               	movf	___xxtofl@arg+3,w
  2058  0649  00A3               	movwf	?___xxtofl+3
  2059  064A  082C               	movf	___xxtofl@arg+2,w
  2060  064B  00A2               	movwf	?___xxtofl+2
  2061  064C  082B               	movf	___xxtofl@arg+1,w
  2062  064D  00A1               	movwf	?___xxtofl+1
  2063  064E  082A               	movf	___xxtofl@arg,w
  2064  064F  00A0               	movwf	?___xxtofl
  2065  0650                     l716:
  2066  0650  0008               	return
  2067  0651                     __end_of___xxtofl:
  2068                           
  2069                           	psect	text5
  2070  0651                     __ptext5:	
  2071 ;; *************** function ___fltol *****************
  2072 ;; Defined at:
  2073 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  2074 ;; Parameters:    Size  Location     Type
  2075 ;;  f1              4   40[BANK0 ] unsigned char 
  2076 ;; Auto vars:     Size  Location     Type
  2077 ;;  exp1            1   50[BANK0 ] unsigned char 
  2078 ;;  sign1           1   49[BANK0 ] unsigned char 
  2079 ;; Return value:  Size  Location     Type
  2080 ;;                  4   40[BANK0 ] long 
  2081 ;; Registers used:
  2082 ;;		wreg, status,2, status,0
  2083 ;; Tracked objects:
  2084 ;;		On entry : 0/0
  2085 ;;		On exit  : 0/0
  2086 ;;		Unchanged: 0/0
  2087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2088 ;;      Params:         0       4       0       0       0
  2089 ;;      Locals:         0       2       0       0       0
  2090 ;;      Temps:          0       5       0       0       0
  2091 ;;      Totals:         0      11       0       0       0
  2092 ;;Total ram usage:       11 bytes
  2093 ;; Hardware stack levels used:    1
  2094 ;; Hardware stack levels required when called:    2
  2095 ;; This function calls:
  2096 ;;		Nothing
  2097 ;; This function is called by:
  2098 ;;		_main
  2099 ;; This function uses a non-reentrant model
  2100 ;;
  2101                           
  2102                           
  2103                           ;psect for function ___fltol
  2104  0651                     ___fltol:
  2105  0651                     l1663:	
  2106                           ;incstack = 0
  2107                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  2108                           
  2109  0651  1003               	clrc
  2110  0652  1283               	bcf	3,5	;RP0=0, select bank0
  2111  0653  1303               	bcf	3,6	;RP1=0, select bank0
  2112  0654  0D4A               	rlf	___fltol@f1+2,w
  2113  0655  0D4B               	rlf	___fltol@f1+3,w
  2114  0656  00CC               	movwf	??___fltol
  2115  0657  084C               	movf	??___fltol,w
  2116  0658  00D2               	movwf	___fltol@exp1
  2117  0659  0852               	movf	___fltol@exp1,w
  2118  065A  1D03               	btfss	3,2
  2119  065B  2E5D               	goto	u1111
  2120  065C  2E5E               	goto	u1110
  2121  065D                     u1111:
  2122  065D  2E67               	goto	l1669
  2123  065E                     u1110:
  2124  065E                     l1665:
  2125  065E  3000               	movlw	0
  2126  065F  00CB               	movwf	?___fltol+3
  2127  0660  3000               	movlw	0
  2128  0661  00CA               	movwf	?___fltol+2
  2129  0662  3000               	movlw	0
  2130  0663  00C9               	movwf	?___fltol+1
  2131  0664  3000               	movlw	0
  2132  0665  00C8               	movwf	?___fltol
  2133  0666  2ECC               	goto	l467
  2134  0667                     l1669:
  2135  0667  0848               	movf	___fltol@f1,w
  2136  0668  00CC               	movwf	??___fltol
  2137  0669  0849               	movf	___fltol@f1+1,w
  2138  066A  00CD               	movwf	??___fltol+1
  2139  066B  084A               	movf	___fltol@f1+2,w
  2140  066C  00CE               	movwf	??___fltol+2
  2141  066D  084B               	movf	___fltol@f1+3,w
  2142  066E  00CF               	movwf	??___fltol+3
  2143  066F  301F               	movlw	31
  2144  0670                     u1125:
  2145  0670  1003               	clrc
  2146  0671  0CCF               	rrf	??___fltol+3,f
  2147  0672  0CCE               	rrf	??___fltol+2,f
  2148  0673  0CCD               	rrf	??___fltol+1,f
  2149  0674  0CCC               	rrf	??___fltol,f
  2150  0675                     u1120:
  2151  0675  3EFF               	addlw	-1
  2152  0676  1D03               	skipz
  2153  0677  2E70               	goto	u1125
  2154  0678  084C               	movf	??___fltol,w
  2155  0679  00D0               	movwf	??___fltol+4
  2156  067A  0850               	movf	??___fltol+4,w
  2157  067B  00D1               	movwf	___fltol@sign1
  2158  067C                     l1671:
  2159  067C  17CA               	bsf	___fltol@f1+2,7
  2160  067D                     l1673:
  2161  067D  30FF               	movlw	255
  2162  067E  05C8               	andwf	___fltol@f1,f
  2163  067F  30FF               	movlw	255
  2164  0680  05C9               	andwf	___fltol@f1+1,f
  2165  0681  30FF               	movlw	255
  2166  0682  05CA               	andwf	___fltol@f1+2,f
  2167  0683  3000               	movlw	0
  2168  0684  05CB               	andwf	___fltol@f1+3,f
  2169  0685                     l1675:
  2170  0685  3096               	movlw	150
  2171  0686  02D2               	subwf	___fltol@exp1,f
  2172  0687                     l1677:
  2173  0687  1FD2               	btfss	___fltol@exp1,7
  2174  0688  2E8A               	goto	u1131
  2175  0689  2E8B               	goto	u1130
  2176  068A                     u1131:
  2177  068A  2EA5               	goto	l1687
  2178  068B                     u1130:
  2179  068B                     l1679:
  2180  068B  0852               	movf	___fltol@exp1,w
  2181  068C  3A80               	xorlw	128
  2182  068D  3E97               	addlw	151
  2183  068E  1803               	skipnc
  2184  068F  2E91               	goto	u1141
  2185  0690  2E92               	goto	u1140
  2186  0691                     u1141:
  2187  0691  2E93               	goto	l1685
  2188  0692                     u1140:
  2189  0692  2E5E               	goto	l1665
  2190  0693                     l1685:
  2191  0693  3001               	movlw	1
  2192  0694                     u1155:
  2193  0694  1003               	clrc
  2194  0695  0CCB               	rrf	___fltol@f1+3,f
  2195  0696  0CCA               	rrf	___fltol@f1+2,f
  2196  0697  0CC9               	rrf	___fltol@f1+1,f
  2197  0698  0CC8               	rrf	___fltol@f1,f
  2198  0699  3EFF               	addlw	-1
  2199  069A  1D03               	skipz
  2200  069B  2E94               	goto	u1155
  2201  069C  3001               	movlw	1
  2202  069D  00CC               	movwf	??___fltol
  2203  069E  084C               	movf	??___fltol,w
  2204  069F  07D2               	addwf	___fltol@exp1,f
  2205  06A0  1D03               	btfss	3,2
  2206  06A1  2EA3               	goto	u1161
  2207  06A2  2EA4               	goto	u1160
  2208  06A3                     u1161:
  2209  06A3  2E93               	goto	l1685
  2210  06A4                     u1160:
  2211  06A4  2EBC               	goto	l1695
  2212  06A5                     l1687:
  2213  06A5  3020               	movlw	32
  2214  06A6  0252               	subwf	___fltol@exp1,w
  2215  06A7  1C03               	skipc
  2216  06A8  2EAA               	goto	u1171
  2217  06A9  2EAB               	goto	u1170
  2218  06AA                     u1171:
  2219  06AA  2EB7               	goto	l474
  2220  06AB                     u1170:
  2221  06AB  2E5E               	goto	l1665
  2222  06AC                     l1693:
  2223  06AC  3001               	movlw	1
  2224  06AD  00CC               	movwf	??___fltol
  2225  06AE                     u1185:
  2226  06AE  1003               	clrc
  2227  06AF  0DC8               	rlf	___fltol@f1,f
  2228  06B0  0DC9               	rlf	___fltol@f1+1,f
  2229  06B1  0DCA               	rlf	___fltol@f1+2,f
  2230  06B2  0DCB               	rlf	___fltol@f1+3,f
  2231  06B3  0BCC               	decfsz	??___fltol,f
  2232  06B4  2EAE               	goto	u1185
  2233  06B5  3001               	movlw	1
  2234  06B6  02D2               	subwf	___fltol@exp1,f
  2235  06B7                     l474:
  2236  06B7  0852               	movf	___fltol@exp1,w
  2237  06B8  1D03               	btfss	3,2
  2238  06B9  2EBB               	goto	u1191
  2239  06BA  2EBC               	goto	u1190
  2240  06BB                     u1191:
  2241  06BB  2EAC               	goto	l1693
  2242  06BC                     u1190:
  2243  06BC                     l1695:
  2244  06BC  0851               	movf	___fltol@sign1,w
  2245  06BD  1903               	btfsc	3,2
  2246  06BE  2EC0               	goto	u1201
  2247  06BF  2EC1               	goto	u1200
  2248  06C0                     u1201:
  2249  06C0  2ECC               	goto	l477
  2250  06C1                     u1200:
  2251  06C1                     l1697:
  2252  06C1  09C8               	comf	___fltol@f1,f
  2253  06C2  09C9               	comf	___fltol@f1+1,f
  2254  06C3  09CA               	comf	___fltol@f1+2,f
  2255  06C4  09CB               	comf	___fltol@f1+3,f
  2256  06C5  0AC8               	incf	___fltol@f1,f
  2257  06C6  1903               	skipnz
  2258  06C7  0AC9               	incf	___fltol@f1+1,f
  2259  06C8  1903               	skipnz
  2260  06C9  0ACA               	incf	___fltol@f1+2,f
  2261  06CA  1903               	skipnz
  2262  06CB  0ACB               	incf	___fltol@f1+3,f
  2263  06CC                     l477:
  2264  06CC                     l467:
  2265  06CC  0008               	return
  2266  06CD                     __end_of___fltol:
  2267                           
  2268                           	psect	text6
  2269  003A                     __ptext6:	
  2270 ;; *************** function ___flmul *****************
  2271 ;; Defined at:
  2272 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  2273 ;; Parameters:    Size  Location     Type
  2274 ;;  b               4   14[BANK0 ] long 
  2275 ;;  a               4   18[BANK0 ] long 
  2276 ;; Auto vars:     Size  Location     Type
  2277 ;;  prod            4   34[BANK0 ] struct .
  2278 ;;  grs             4   28[BANK0 ] unsigned long 
  2279 ;;  temp            2   38[BANK0 ] struct .
  2280 ;;  bexp            1   33[BANK0 ] unsigned char 
  2281 ;;  aexp            1   32[BANK0 ] unsigned char 
  2282 ;;  sign            1   27[BANK0 ] unsigned char 
  2283 ;; Return value:  Size  Location     Type
  2284 ;;                  4   14[BANK0 ] unsigned char 
  2285 ;; Registers used:
  2286 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2287 ;; Tracked objects:
  2288 ;;		On entry : 0/0
  2289 ;;		On exit  : 0/0
  2290 ;;		Unchanged: 0/0
  2291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2292 ;;      Params:         0       8       0       0       0
  2293 ;;      Locals:         0      13       0       0       0
  2294 ;;      Temps:          0       5       0       0       0
  2295 ;;      Totals:         0      26       0       0       0
  2296 ;;Total ram usage:       26 bytes
  2297 ;; Hardware stack levels used:    1
  2298 ;; Hardware stack levels required when called:    3
  2299 ;; This function calls:
  2300 ;;		__Umul8_16
  2301 ;; This function is called by:
  2302 ;;		_main
  2303 ;; This function uses a non-reentrant model
  2304 ;;
  2305                           
  2306                           
  2307                           ;psect for function ___flmul
  2308  003A                     ___flmul:
  2309  003A                     l1699:	
  2310                           ;incstack = 0
  2311                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2312                           
  2313  003A  1283               	bcf	3,5	;RP0=0, select bank0
  2314  003B  1303               	bcf	3,6	;RP1=0, select bank0
  2315  003C  0831               	movf	___flmul@b+3,w
  2316  003D  3980               	andlw	128
  2317  003E  00B6               	movwf	??___flmul
  2318  003F  0836               	movf	??___flmul,w
  2319  0040  00BB               	movwf	___flmul@sign
  2320  0041                     l1701:
  2321  0041  0831               	movf	___flmul@b+3,w
  2322  0042  00B6               	movwf	??___flmul
  2323  0043  0736               	addwf	??___flmul,w
  2324  0044  00B7               	movwf	??___flmul+1
  2325  0045  0837               	movf	??___flmul+1,w
  2326  0046  00C1               	movwf	___flmul@bexp
  2327  0047                     l1703:
  2328  0047  1FB0               	btfss	___flmul@b+2,7
  2329  0048  284A               	goto	u1211
  2330  0049  284B               	goto	u1210
  2331  004A                     u1211:
  2332  004A  284C               	goto	l1707
  2333  004B                     u1210:
  2334  004B                     l1705:
  2335  004B  1441               	bsf	___flmul@bexp,0
  2336  004C                     l1707:
  2337  004C  0841               	movf	___flmul@bexp,w
  2338  004D  1903               	btfsc	3,2
  2339  004E  2850               	goto	u1221
  2340  004F  2851               	goto	u1220
  2341  0050                     u1221:
  2342  0050  2860               	goto	l1715
  2343  0051                     u1220:
  2344  0051                     l1709:
  2345  0051  0A41               	incf	___flmul@bexp,w
  2346  0052  1D03               	btfss	3,2
  2347  0053  2855               	goto	u1231
  2348  0054  2856               	goto	u1230
  2349  0055                     u1231:
  2350  0055  285E               	goto	l1713
  2351  0056                     u1230:
  2352  0056                     l1711:
  2353  0056  3000               	movlw	0
  2354  0057  00B1               	movwf	___flmul@b+3
  2355  0058  3000               	movlw	0
  2356  0059  00B0               	movwf	___flmul@b+2
  2357  005A  3000               	movlw	0
  2358  005B  00AF               	movwf	___flmul@b+1
  2359  005C  3000               	movlw	0
  2360  005D  00AE               	movwf	___flmul@b
  2361  005E                     l1713:
  2362  005E  17B0               	bsf	___flmul@b+2,7
  2363  005F  2868               	goto	l1717
  2364  0060                     l1715:
  2365  0060  3000               	movlw	0
  2366  0061  00B1               	movwf	___flmul@b+3
  2367  0062  3000               	movlw	0
  2368  0063  00B0               	movwf	___flmul@b+2
  2369  0064  3000               	movlw	0
  2370  0065  00AF               	movwf	___flmul@b+1
  2371  0066  3000               	movlw	0
  2372  0067  00AE               	movwf	___flmul@b
  2373  0068                     l1717:
  2374  0068  0835               	movf	___flmul@a+3,w
  2375  0069  3980               	andlw	128
  2376  006A  00B6               	movwf	??___flmul
  2377  006B  0836               	movf	??___flmul,w
  2378  006C  06BB               	xorwf	___flmul@sign,f
  2379  006D                     l1719:
  2380  006D  0835               	movf	___flmul@a+3,w
  2381  006E  00B6               	movwf	??___flmul
  2382  006F  0736               	addwf	??___flmul,w
  2383  0070  00B7               	movwf	??___flmul+1
  2384  0071  0837               	movf	??___flmul+1,w
  2385  0072  00C0               	movwf	___flmul@aexp
  2386  0073                     l1721:
  2387  0073  1FB4               	btfss	___flmul@a+2,7
  2388  0074  2876               	goto	u1241
  2389  0075  2877               	goto	u1240
  2390  0076                     u1241:
  2391  0076  2878               	goto	l1725
  2392  0077                     u1240:
  2393  0077                     l1723:
  2394  0077  1440               	bsf	___flmul@aexp,0
  2395  0078                     l1725:
  2396  0078  0840               	movf	___flmul@aexp,w
  2397  0079  1903               	btfsc	3,2
  2398  007A  287C               	goto	u1251
  2399  007B  287D               	goto	u1250
  2400  007C                     u1251:
  2401  007C  288C               	goto	l1733
  2402  007D                     u1250:
  2403  007D                     l1727:
  2404  007D  0A40               	incf	___flmul@aexp,w
  2405  007E  1D03               	btfss	3,2
  2406  007F  2881               	goto	u1261
  2407  0080  2882               	goto	u1260
  2408  0081                     u1261:
  2409  0081  288A               	goto	l1731
  2410  0082                     u1260:
  2411  0082                     l1729:
  2412  0082  3000               	movlw	0
  2413  0083  00B5               	movwf	___flmul@a+3
  2414  0084  3000               	movlw	0
  2415  0085  00B4               	movwf	___flmul@a+2
  2416  0086  3000               	movlw	0
  2417  0087  00B3               	movwf	___flmul@a+1
  2418  0088  3000               	movlw	0
  2419  0089  00B2               	movwf	___flmul@a
  2420  008A                     l1731:
  2421  008A  17B4               	bsf	___flmul@a+2,7
  2422  008B  2894               	goto	l1735
  2423  008C                     l1733:
  2424  008C  3000               	movlw	0
  2425  008D  00B5               	movwf	___flmul@a+3
  2426  008E  3000               	movlw	0
  2427  008F  00B4               	movwf	___flmul@a+2
  2428  0090  3000               	movlw	0
  2429  0091  00B3               	movwf	___flmul@a+1
  2430  0092  3000               	movlw	0
  2431  0093  00B2               	movwf	___flmul@a
  2432  0094                     l1735:
  2433  0094  0840               	movf	___flmul@aexp,w
  2434  0095  1903               	btfsc	3,2
  2435  0096  2898               	goto	u1271
  2436  0097  2899               	goto	u1270
  2437  0098                     u1271:
  2438  0098  289E               	goto	l1739
  2439  0099                     u1270:
  2440  0099                     l1737:
  2441  0099  0841               	movf	___flmul@bexp,w
  2442  009A  1D03               	btfss	3,2
  2443  009B  289D               	goto	u1281
  2444  009C  289E               	goto	u1280
  2445  009D                     u1281:
  2446  009D  28A7               	goto	l1743
  2447  009E                     u1280:
  2448  009E                     l1739:
  2449  009E  3000               	movlw	0
  2450  009F  00B1               	movwf	?___flmul+3
  2451  00A0  3000               	movlw	0
  2452  00A1  00B0               	movwf	?___flmul+2
  2453  00A2  3000               	movlw	0
  2454  00A3  00AF               	movwf	?___flmul+1
  2455  00A4  3000               	movlw	0
  2456  00A5  00AE               	movwf	?___flmul
  2457  00A6  2B9A               	goto	l670
  2458  00A7                     l1743:
  2459  00A7  082E               	movf	___flmul@b,w
  2460  00A8  00B6               	movwf	??___flmul
  2461  00A9  0836               	movf	??___flmul,w
  2462  00AA  00A0               	movwf	__Umul8_16@multiplicand
  2463  00AB  0834               	movf	___flmul@a+2,w
  2464  00AC  120A  158A  26D1  120A  118A  	fcall	__Umul8_16
  2465  00B1  1283               	bcf	3,5	;RP0=0, select bank0
  2466  00B2  1303               	bcf	3,6	;RP1=0, select bank0
  2467  00B3  0821               	movf	?__Umul8_16+1,w
  2468  00B4  00C7               	movwf	___flmul@temp+1
  2469  00B5  0820               	movf	?__Umul8_16,w
  2470  00B6  00C6               	movwf	___flmul@temp
  2471  00B7                     l1745:
  2472  00B7  0846               	movf	___flmul@temp,w
  2473  00B8  00B6               	movwf	??___flmul
  2474  00B9  01B7               	clrf	??___flmul+1
  2475  00BA  01B8               	clrf	??___flmul+2
  2476  00BB  01B9               	clrf	??___flmul+3
  2477  00BC  0839               	movf	??___flmul+3,w
  2478  00BD  00BF               	movwf	___flmul@grs+3
  2479  00BE  0838               	movf	??___flmul+2,w
  2480  00BF  00BE               	movwf	___flmul@grs+2
  2481  00C0  0837               	movf	??___flmul+1,w
  2482  00C1  00BD               	movwf	___flmul@grs+1
  2483  00C2  0836               	movf	??___flmul,w
  2484  00C3  00BC               	movwf	___flmul@grs
  2485  00C4                     l1747:
  2486  00C4  0847               	movf	___flmul@temp+1,w
  2487  00C5  00B6               	movwf	??___flmul
  2488  00C6  01B7               	clrf	??___flmul+1
  2489  00C7  01B8               	clrf	??___flmul+2
  2490  00C8  01B9               	clrf	??___flmul+3
  2491  00C9  0839               	movf	??___flmul+3,w
  2492  00CA  00C5               	movwf	___flmul@prod+3
  2493  00CB  0838               	movf	??___flmul+2,w
  2494  00CC  00C4               	movwf	___flmul@prod+2
  2495  00CD  0837               	movf	??___flmul+1,w
  2496  00CE  00C3               	movwf	___flmul@prod+1
  2497  00CF  0836               	movf	??___flmul,w
  2498  00D0  00C2               	movwf	___flmul@prod
  2499  00D1  082F               	movf	___flmul@b+1,w
  2500  00D2  00B6               	movwf	??___flmul
  2501  00D3  0836               	movf	??___flmul,w
  2502  00D4  00A0               	movwf	__Umul8_16@multiplicand
  2503  00D5  0833               	movf	___flmul@a+1,w
  2504  00D6  120A  158A  26D1  120A  118A  	fcall	__Umul8_16
  2505  00DB  1283               	bcf	3,5	;RP0=0, select bank0
  2506  00DC  1303               	bcf	3,6	;RP1=0, select bank0
  2507  00DD  0821               	movf	?__Umul8_16+1,w
  2508  00DE  00C7               	movwf	___flmul@temp+1
  2509  00DF  0820               	movf	?__Umul8_16,w
  2510  00E0  00C6               	movwf	___flmul@temp
  2511  00E1                     l1749:
  2512  00E1  0846               	movf	___flmul@temp,w
  2513  00E2  00B6               	movwf	??___flmul
  2514  00E3  01B7               	clrf	??___flmul+1
  2515  00E4  01B8               	clrf	??___flmul+2
  2516  00E5  01B9               	clrf	??___flmul+3
  2517  00E6  0836               	movf	??___flmul,w
  2518  00E7  07BC               	addwf	___flmul@grs,f
  2519  00E8  0837               	movf	??___flmul+1,w
  2520  00E9  1103               	clrz
  2521  00EA  1803               	skipnc
  2522  00EB  3E01               	addlw	1
  2523  00EC  1903               	skipnz
  2524  00ED  28EF               	goto	u1291
  2525  00EE  07BD               	addwf	___flmul@grs+1,f
  2526  00EF                     u1291:
  2527  00EF  0838               	movf	??___flmul+2,w
  2528  00F0  1103               	clrz
  2529  00F1  1803               	skipnc
  2530  00F2  3E01               	addlw	1
  2531  00F3  1903               	skipnz
  2532  00F4  28F6               	goto	u1292
  2533  00F5  07BE               	addwf	___flmul@grs+2,f
  2534  00F6                     u1292:
  2535  00F6  0839               	movf	??___flmul+3,w
  2536  00F7  1103               	clrz
  2537  00F8  1803               	skipnc
  2538  00F9  3E01               	addlw	1
  2539  00FA  1903               	skipnz
  2540  00FB  28FD               	goto	u1293
  2541  00FC  07BF               	addwf	___flmul@grs+3,f
  2542  00FD                     u1293:
  2543  00FD                     l1751:
  2544  00FD  0847               	movf	___flmul@temp+1,w
  2545  00FE  00B6               	movwf	??___flmul
  2546  00FF  01B7               	clrf	??___flmul+1
  2547  0100  01B8               	clrf	??___flmul+2
  2548  0101  01B9               	clrf	??___flmul+3
  2549  0102  0836               	movf	??___flmul,w
  2550  0103  07C2               	addwf	___flmul@prod,f
  2551  0104  0837               	movf	??___flmul+1,w
  2552  0105  1103               	clrz
  2553  0106  1803               	skipnc
  2554  0107  3E01               	addlw	1
  2555  0108  1903               	skipnz
  2556  0109  290B               	goto	u1301
  2557  010A  07C3               	addwf	___flmul@prod+1,f
  2558  010B                     u1301:
  2559  010B  0838               	movf	??___flmul+2,w
  2560  010C  1103               	clrz
  2561  010D  1803               	skipnc
  2562  010E  3E01               	addlw	1
  2563  010F  1903               	skipnz
  2564  0110  2912               	goto	u1302
  2565  0111  07C4               	addwf	___flmul@prod+2,f
  2566  0112                     u1302:
  2567  0112  0839               	movf	??___flmul+3,w
  2568  0113  1103               	clrz
  2569  0114  1803               	skipnc
  2570  0115  3E01               	addlw	1
  2571  0116  1903               	skipnz
  2572  0117  2919               	goto	u1303
  2573  0118  07C5               	addwf	___flmul@prod+3,f
  2574  0119                     u1303:
  2575  0119  0830               	movf	___flmul@b+2,w
  2576  011A  00B6               	movwf	??___flmul
  2577  011B  0836               	movf	??___flmul,w
  2578  011C  00A0               	movwf	__Umul8_16@multiplicand
  2579  011D  0832               	movf	___flmul@a,w
  2580  011E  120A  158A  26D1  120A  118A  	fcall	__Umul8_16
  2581  0123  1283               	bcf	3,5	;RP0=0, select bank0
  2582  0124  1303               	bcf	3,6	;RP1=0, select bank0
  2583  0125  0821               	movf	?__Umul8_16+1,w
  2584  0126  00C7               	movwf	___flmul@temp+1
  2585  0127  0820               	movf	?__Umul8_16,w
  2586  0128  00C6               	movwf	___flmul@temp
  2587  0129                     l1753:
  2588  0129  0846               	movf	___flmul@temp,w
  2589  012A  00B6               	movwf	??___flmul
  2590  012B  01B7               	clrf	??___flmul+1
  2591  012C  01B8               	clrf	??___flmul+2
  2592  012D  01B9               	clrf	??___flmul+3
  2593  012E  0836               	movf	??___flmul,w
  2594  012F  07BC               	addwf	___flmul@grs,f
  2595  0130  0837               	movf	??___flmul+1,w
  2596  0131  1103               	clrz
  2597  0132  1803               	skipnc
  2598  0133  3E01               	addlw	1
  2599  0134  1903               	skipnz
  2600  0135  2937               	goto	u1311
  2601  0136  07BD               	addwf	___flmul@grs+1,f
  2602  0137                     u1311:
  2603  0137  0838               	movf	??___flmul+2,w
  2604  0138  1103               	clrz
  2605  0139  1803               	skipnc
  2606  013A  3E01               	addlw	1
  2607  013B  1903               	skipnz
  2608  013C  293E               	goto	u1312
  2609  013D  07BE               	addwf	___flmul@grs+2,f
  2610  013E                     u1312:
  2611  013E  0839               	movf	??___flmul+3,w
  2612  013F  1103               	clrz
  2613  0140  1803               	skipnc
  2614  0141  3E01               	addlw	1
  2615  0142  1903               	skipnz
  2616  0143  2945               	goto	u1313
  2617  0144  07BF               	addwf	___flmul@grs+3,f
  2618  0145                     u1313:
  2619  0145                     l1755:
  2620  0145  0847               	movf	___flmul@temp+1,w
  2621  0146  00B6               	movwf	??___flmul
  2622  0147  01B7               	clrf	??___flmul+1
  2623  0148  01B8               	clrf	??___flmul+2
  2624  0149  01B9               	clrf	??___flmul+3
  2625  014A  0836               	movf	??___flmul,w
  2626  014B  07C2               	addwf	___flmul@prod,f
  2627  014C  0837               	movf	??___flmul+1,w
  2628  014D  1103               	clrz
  2629  014E  1803               	skipnc
  2630  014F  3E01               	addlw	1
  2631  0150  1903               	skipnz
  2632  0151  2953               	goto	u1321
  2633  0152  07C3               	addwf	___flmul@prod+1,f
  2634  0153                     u1321:
  2635  0153  0838               	movf	??___flmul+2,w
  2636  0154  1103               	clrz
  2637  0155  1803               	skipnc
  2638  0156  3E01               	addlw	1
  2639  0157  1903               	skipnz
  2640  0158  295A               	goto	u1322
  2641  0159  07C4               	addwf	___flmul@prod+2,f
  2642  015A                     u1322:
  2643  015A  0839               	movf	??___flmul+3,w
  2644  015B  1103               	clrz
  2645  015C  1803               	skipnc
  2646  015D  3E01               	addlw	1
  2647  015E  1903               	skipnz
  2648  015F  2961               	goto	u1323
  2649  0160  07C5               	addwf	___flmul@prod+3,f
  2650  0161                     u1323:
  2651  0161                     l1757:
  2652  0161  3008               	movlw	8
  2653  0162  00B6               	movwf	??___flmul
  2654  0163                     u1335:
  2655  0163  1003               	clrc
  2656  0164  0DBC               	rlf	___flmul@grs,f
  2657  0165  0DBD               	rlf	___flmul@grs+1,f
  2658  0166  0DBE               	rlf	___flmul@grs+2,f
  2659  0167  0DBF               	rlf	___flmul@grs+3,f
  2660  0168  0BB6               	decfsz	??___flmul,f
  2661  0169  2963               	goto	u1335
  2662  016A                     l1759:
  2663  016A  082F               	movf	___flmul@b+1,w
  2664  016B  00B6               	movwf	??___flmul
  2665  016C  0836               	movf	??___flmul,w
  2666  016D  00A0               	movwf	__Umul8_16@multiplicand
  2667  016E  0832               	movf	___flmul@a,w
  2668  016F  120A  158A  26D1  120A  118A  	fcall	__Umul8_16
  2669  0174  1283               	bcf	3,5	;RP0=0, select bank0
  2670  0175  1303               	bcf	3,6	;RP1=0, select bank0
  2671  0176  0821               	movf	?__Umul8_16+1,w
  2672  0177  00C7               	movwf	___flmul@temp+1
  2673  0178  0820               	movf	?__Umul8_16,w
  2674  0179  00C6               	movwf	___flmul@temp
  2675  017A                     l1761:
  2676  017A  0846               	movf	___flmul@temp,w
  2677  017B  00B6               	movwf	??___flmul
  2678  017C  0847               	movf	___flmul@temp+1,w
  2679  017D  00B7               	movwf	??___flmul+1
  2680  017E  01B8               	clrf	??___flmul+2
  2681  017F  01B9               	clrf	??___flmul+3
  2682  0180  0836               	movf	??___flmul,w
  2683  0181  07BC               	addwf	___flmul@grs,f
  2684  0182  0837               	movf	??___flmul+1,w
  2685  0183  1103               	clrz
  2686  0184  1803               	skipnc
  2687  0185  3E01               	addlw	1
  2688  0186  1903               	skipnz
  2689  0187  2989               	goto	u1341
  2690  0188  07BD               	addwf	___flmul@grs+1,f
  2691  0189                     u1341:
  2692  0189  0838               	movf	??___flmul+2,w
  2693  018A  1103               	clrz
  2694  018B  1803               	skipnc
  2695  018C  3E01               	addlw	1
  2696  018D  1903               	skipnz
  2697  018E  2990               	goto	u1342
  2698  018F  07BE               	addwf	___flmul@grs+2,f
  2699  0190                     u1342:
  2700  0190  0839               	movf	??___flmul+3,w
  2701  0191  1103               	clrz
  2702  0192  1803               	skipnc
  2703  0193  3E01               	addlw	1
  2704  0194  1903               	skipnz
  2705  0195  2997               	goto	u1343
  2706  0196  07BF               	addwf	___flmul@grs+3,f
  2707  0197                     u1343:
  2708  0197                     l1763:
  2709  0197  082E               	movf	___flmul@b,w
  2710  0198  00B6               	movwf	??___flmul
  2711  0199  0836               	movf	??___flmul,w
  2712  019A  00A0               	movwf	__Umul8_16@multiplicand
  2713  019B  0833               	movf	___flmul@a+1,w
  2714  019C  120A  158A  26D1  120A  118A  	fcall	__Umul8_16
  2715  01A1  1283               	bcf	3,5	;RP0=0, select bank0
  2716  01A2  1303               	bcf	3,6	;RP1=0, select bank0
  2717  01A3  0821               	movf	?__Umul8_16+1,w
  2718  01A4  00C7               	movwf	___flmul@temp+1
  2719  01A5  0820               	movf	?__Umul8_16,w
  2720  01A6  00C6               	movwf	___flmul@temp
  2721  01A7                     l1765:
  2722  01A7  0846               	movf	___flmul@temp,w
  2723  01A8  00B6               	movwf	??___flmul
  2724  01A9  0847               	movf	___flmul@temp+1,w
  2725  01AA  00B7               	movwf	??___flmul+1
  2726  01AB  01B8               	clrf	??___flmul+2
  2727  01AC  01B9               	clrf	??___flmul+3
  2728  01AD  0836               	movf	??___flmul,w
  2729  01AE  07BC               	addwf	___flmul@grs,f
  2730  01AF  0837               	movf	??___flmul+1,w
  2731  01B0  1103               	clrz
  2732  01B1  1803               	skipnc
  2733  01B2  3E01               	addlw	1
  2734  01B3  1903               	skipnz
  2735  01B4  29B6               	goto	u1351
  2736  01B5  07BD               	addwf	___flmul@grs+1,f
  2737  01B6                     u1351:
  2738  01B6  0838               	movf	??___flmul+2,w
  2739  01B7  1103               	clrz
  2740  01B8  1803               	skipnc
  2741  01B9  3E01               	addlw	1
  2742  01BA  1903               	skipnz
  2743  01BB  29BD               	goto	u1352
  2744  01BC  07BE               	addwf	___flmul@grs+2,f
  2745  01BD                     u1352:
  2746  01BD  0839               	movf	??___flmul+3,w
  2747  01BE  1103               	clrz
  2748  01BF  1803               	skipnc
  2749  01C0  3E01               	addlw	1
  2750  01C1  1903               	skipnz
  2751  01C2  29C4               	goto	u1353
  2752  01C3  07BF               	addwf	___flmul@grs+3,f
  2753  01C4                     u1353:
  2754  01C4                     l1767:
  2755  01C4  3008               	movlw	8
  2756  01C5  00B6               	movwf	??___flmul
  2757  01C6                     u1365:
  2758  01C6  1003               	clrc
  2759  01C7  0DBC               	rlf	___flmul@grs,f
  2760  01C8  0DBD               	rlf	___flmul@grs+1,f
  2761  01C9  0DBE               	rlf	___flmul@grs+2,f
  2762  01CA  0DBF               	rlf	___flmul@grs+3,f
  2763  01CB  0BB6               	decfsz	??___flmul,f
  2764  01CC  29C6               	goto	u1365
  2765  01CD  082E               	movf	___flmul@b,w
  2766  01CE  00B6               	movwf	??___flmul
  2767  01CF  0836               	movf	??___flmul,w
  2768  01D0  00A0               	movwf	__Umul8_16@multiplicand
  2769  01D1  0832               	movf	___flmul@a,w
  2770  01D2  120A  158A  26D1  120A  118A  	fcall	__Umul8_16
  2771  01D7  1283               	bcf	3,5	;RP0=0, select bank0
  2772  01D8  1303               	bcf	3,6	;RP1=0, select bank0
  2773  01D9  0821               	movf	?__Umul8_16+1,w
  2774  01DA  00C7               	movwf	___flmul@temp+1
  2775  01DB  0820               	movf	?__Umul8_16,w
  2776  01DC  00C6               	movwf	___flmul@temp
  2777  01DD                     l1769:
  2778  01DD  0846               	movf	___flmul@temp,w
  2779  01DE  00B6               	movwf	??___flmul
  2780  01DF  0847               	movf	___flmul@temp+1,w
  2781  01E0  00B7               	movwf	??___flmul+1
  2782  01E1  01B8               	clrf	??___flmul+2
  2783  01E2  01B9               	clrf	??___flmul+3
  2784  01E3  0836               	movf	??___flmul,w
  2785  01E4  07BC               	addwf	___flmul@grs,f
  2786  01E5  0837               	movf	??___flmul+1,w
  2787  01E6  1103               	clrz
  2788  01E7  1803               	skipnc
  2789  01E8  3E01               	addlw	1
  2790  01E9  1903               	skipnz
  2791  01EA  29EC               	goto	u1371
  2792  01EB  07BD               	addwf	___flmul@grs+1,f
  2793  01EC                     u1371:
  2794  01EC  0838               	movf	??___flmul+2,w
  2795  01ED  1103               	clrz
  2796  01EE  1803               	skipnc
  2797  01EF  3E01               	addlw	1
  2798  01F0  1903               	skipnz
  2799  01F1  29F3               	goto	u1372
  2800  01F2  07BE               	addwf	___flmul@grs+2,f
  2801  01F3                     u1372:
  2802  01F3  0839               	movf	??___flmul+3,w
  2803  01F4  1103               	clrz
  2804  01F5  1803               	skipnc
  2805  01F6  3E01               	addlw	1
  2806  01F7  1903               	skipnz
  2807  01F8  29FA               	goto	u1373
  2808  01F9  07BF               	addwf	___flmul@grs+3,f
  2809  01FA                     u1373:
  2810  01FA                     l1771:
  2811  01FA  082F               	movf	___flmul@b+1,w
  2812  01FB  00B6               	movwf	??___flmul
  2813  01FC  0836               	movf	??___flmul,w
  2814  01FD  00A0               	movwf	__Umul8_16@multiplicand
  2815  01FE  0834               	movf	___flmul@a+2,w
  2816  01FF  120A  158A  26D1  120A  118A  	fcall	__Umul8_16
  2817  0204  1283               	bcf	3,5	;RP0=0, select bank0
  2818  0205  1303               	bcf	3,6	;RP1=0, select bank0
  2819  0206  0821               	movf	?__Umul8_16+1,w
  2820  0207  00C7               	movwf	___flmul@temp+1
  2821  0208  0820               	movf	?__Umul8_16,w
  2822  0209  00C6               	movwf	___flmul@temp
  2823  020A  0846               	movf	___flmul@temp,w
  2824  020B  00B6               	movwf	??___flmul
  2825  020C  0847               	movf	___flmul@temp+1,w
  2826  020D  00B7               	movwf	??___flmul+1
  2827  020E  01B8               	clrf	??___flmul+2
  2828  020F  01B9               	clrf	??___flmul+3
  2829  0210  0836               	movf	??___flmul,w
  2830  0211  07C2               	addwf	___flmul@prod,f
  2831  0212  0837               	movf	??___flmul+1,w
  2832  0213  1103               	clrz
  2833  0214  1803               	skipnc
  2834  0215  3E01               	addlw	1
  2835  0216  1903               	skipnz
  2836  0217  2A19               	goto	u1381
  2837  0218  07C3               	addwf	___flmul@prod+1,f
  2838  0219                     u1381:
  2839  0219  0838               	movf	??___flmul+2,w
  2840  021A  1103               	clrz
  2841  021B  1803               	skipnc
  2842  021C  3E01               	addlw	1
  2843  021D  1903               	skipnz
  2844  021E  2A20               	goto	u1382
  2845  021F  07C4               	addwf	___flmul@prod+2,f
  2846  0220                     u1382:
  2847  0220  0839               	movf	??___flmul+3,w
  2848  0221  1103               	clrz
  2849  0222  1803               	skipnc
  2850  0223  3E01               	addlw	1
  2851  0224  1903               	skipnz
  2852  0225  2A27               	goto	u1383
  2853  0226  07C5               	addwf	___flmul@prod+3,f
  2854  0227                     u1383:
  2855  0227                     l1773:
  2856  0227  0830               	movf	___flmul@b+2,w
  2857  0228  00B6               	movwf	??___flmul
  2858  0229  0836               	movf	??___flmul,w
  2859  022A  00A0               	movwf	__Umul8_16@multiplicand
  2860  022B  0833               	movf	___flmul@a+1,w
  2861  022C  120A  158A  26D1  120A  118A  	fcall	__Umul8_16
  2862  0231  1283               	bcf	3,5	;RP0=0, select bank0
  2863  0232  1303               	bcf	3,6	;RP1=0, select bank0
  2864  0233  0821               	movf	?__Umul8_16+1,w
  2865  0234  00C7               	movwf	___flmul@temp+1
  2866  0235  0820               	movf	?__Umul8_16,w
  2867  0236  00C6               	movwf	___flmul@temp
  2868  0237                     l1775:
  2869  0237  0846               	movf	___flmul@temp,w
  2870  0238  00B6               	movwf	??___flmul
  2871  0239  0847               	movf	___flmul@temp+1,w
  2872  023A  00B7               	movwf	??___flmul+1
  2873  023B  01B8               	clrf	??___flmul+2
  2874  023C  01B9               	clrf	??___flmul+3
  2875  023D  0836               	movf	??___flmul,w
  2876  023E  07C2               	addwf	___flmul@prod,f
  2877  023F  0837               	movf	??___flmul+1,w
  2878  0240  1103               	clrz
  2879  0241  1803               	skipnc
  2880  0242  3E01               	addlw	1
  2881  0243  1903               	skipnz
  2882  0244  2A46               	goto	u1391
  2883  0245  07C3               	addwf	___flmul@prod+1,f
  2884  0246                     u1391:
  2885  0246  0838               	movf	??___flmul+2,w
  2886  0247  1103               	clrz
  2887  0248  1803               	skipnc
  2888  0249  3E01               	addlw	1
  2889  024A  1903               	skipnz
  2890  024B  2A4D               	goto	u1392
  2891  024C  07C4               	addwf	___flmul@prod+2,f
  2892  024D                     u1392:
  2893  024D  0839               	movf	??___flmul+3,w
  2894  024E  1103               	clrz
  2895  024F  1803               	skipnc
  2896  0250  3E01               	addlw	1
  2897  0251  1903               	skipnz
  2898  0252  2A54               	goto	u1393
  2899  0253  07C5               	addwf	___flmul@prod+3,f
  2900  0254                     u1393:
  2901  0254  0830               	movf	___flmul@b+2,w
  2902  0255  00B6               	movwf	??___flmul
  2903  0256  0836               	movf	??___flmul,w
  2904  0257  00A0               	movwf	__Umul8_16@multiplicand
  2905  0258  0834               	movf	___flmul@a+2,w
  2906  0259  120A  158A  26D1  120A  118A  	fcall	__Umul8_16
  2907  025E  1283               	bcf	3,5	;RP0=0, select bank0
  2908  025F  1303               	bcf	3,6	;RP1=0, select bank0
  2909  0260  0821               	movf	?__Umul8_16+1,w
  2910  0261  00C7               	movwf	___flmul@temp+1
  2911  0262  0820               	movf	?__Umul8_16,w
  2912  0263  00C6               	movwf	___flmul@temp
  2913  0264                     l1777:
  2914  0264  0846               	movf	___flmul@temp,w
  2915  0265  00B6               	movwf	??___flmul
  2916  0266  0847               	movf	___flmul@temp+1,w
  2917  0267  00B7               	movwf	??___flmul+1
  2918  0268  01B8               	clrf	??___flmul+2
  2919  0269  01B9               	clrf	??___flmul+3
  2920  026A  3008               	movlw	8
  2921  026B                     u1405:
  2922  026B  1003               	clrc
  2923  026C  0DB6               	rlf	??___flmul,f
  2924  026D  0DB7               	rlf	??___flmul+1,f
  2925  026E  0DB8               	rlf	??___flmul+2,f
  2926  026F  0DB9               	rlf	??___flmul+3,f
  2927  0270                     u1400:
  2928  0270  3EFF               	addlw	-1
  2929  0271  1D03               	skipz
  2930  0272  2A6B               	goto	u1405
  2931  0273  0836               	movf	??___flmul,w
  2932  0274  07C2               	addwf	___flmul@prod,f
  2933  0275  0837               	movf	??___flmul+1,w
  2934  0276  1103               	clrz
  2935  0277  1803               	skipnc
  2936  0278  3E01               	addlw	1
  2937  0279  1903               	skipnz
  2938  027A  2A7C               	goto	u1411
  2939  027B  07C3               	addwf	___flmul@prod+1,f
  2940  027C                     u1411:
  2941  027C  0838               	movf	??___flmul+2,w
  2942  027D  1103               	clrz
  2943  027E  1803               	skipnc
  2944  027F  3E01               	addlw	1
  2945  0280  1903               	skipnz
  2946  0281  2A83               	goto	u1412
  2947  0282  07C4               	addwf	___flmul@prod+2,f
  2948  0283                     u1412:
  2949  0283  0839               	movf	??___flmul+3,w
  2950  0284  1103               	clrz
  2951  0285  1803               	skipnc
  2952  0286  3E01               	addlw	1
  2953  0287  1903               	skipnz
  2954  0288  2A8A               	goto	u1413
  2955  0289  07C5               	addwf	___flmul@prod+3,f
  2956  028A                     u1413:
  2957  028A                     l1779:
  2958  028A  083C               	movf	___flmul@grs,w
  2959  028B  00B6               	movwf	??___flmul
  2960  028C  083D               	movf	___flmul@grs+1,w
  2961  028D  00B7               	movwf	??___flmul+1
  2962  028E  083E               	movf	___flmul@grs+2,w
  2963  028F  00B8               	movwf	??___flmul+2
  2964  0290  083F               	movf	___flmul@grs+3,w
  2965  0291  00B9               	movwf	??___flmul+3
  2966  0292  3018               	movlw	24
  2967  0293                     u1425:
  2968  0293  1003               	clrc
  2969  0294  0CB9               	rrf	??___flmul+3,f
  2970  0295  0CB8               	rrf	??___flmul+2,f
  2971  0296  0CB7               	rrf	??___flmul+1,f
  2972  0297  0CB6               	rrf	??___flmul,f
  2973  0298                     u1420:
  2974  0298  3EFF               	addlw	-1
  2975  0299  1D03               	skipz
  2976  029A  2A93               	goto	u1425
  2977  029B  0836               	movf	??___flmul,w
  2978  029C  07C2               	addwf	___flmul@prod,f
  2979  029D  0837               	movf	??___flmul+1,w
  2980  029E  1103               	clrz
  2981  029F  1803               	skipnc
  2982  02A0  3E01               	addlw	1
  2983  02A1  1903               	skipnz
  2984  02A2  2AA4               	goto	u1431
  2985  02A3  07C3               	addwf	___flmul@prod+1,f
  2986  02A4                     u1431:
  2987  02A4  0838               	movf	??___flmul+2,w
  2988  02A5  1103               	clrz
  2989  02A6  1803               	skipnc
  2990  02A7  3E01               	addlw	1
  2991  02A8  1903               	skipnz
  2992  02A9  2AAB               	goto	u1432
  2993  02AA  07C4               	addwf	___flmul@prod+2,f
  2994  02AB                     u1432:
  2995  02AB  0839               	movf	??___flmul+3,w
  2996  02AC  1103               	clrz
  2997  02AD  1803               	skipnc
  2998  02AE  3E01               	addlw	1
  2999  02AF  1903               	skipnz
  3000  02B0  2AB2               	goto	u1433
  3001  02B1  07C5               	addwf	___flmul@prod+3,f
  3002  02B2                     u1433:
  3003  02B2                     l1781:
  3004  02B2  3008               	movlw	8
  3005  02B3  00B6               	movwf	??___flmul
  3006  02B4                     u1445:
  3007  02B4  1003               	clrc
  3008  02B5  0DBC               	rlf	___flmul@grs,f
  3009  02B6  0DBD               	rlf	___flmul@grs+1,f
  3010  02B7  0DBE               	rlf	___flmul@grs+2,f
  3011  02B8  0DBF               	rlf	___flmul@grs+3,f
  3012  02B9  0BB6               	decfsz	??___flmul,f
  3013  02BA  2AB4               	goto	u1445
  3014  02BB                     l1783:
  3015  02BB  0841               	movf	___flmul@bexp,w
  3016  02BC  0740               	addwf	___flmul@aexp,w
  3017  02BD  00B6               	movwf	??___flmul
  3018  02BE  01B7               	clrf	??___flmul+1
  3019  02BF  0DB7               	rlf	??___flmul+1,f
  3020  02C0  0836               	movf	??___flmul,w
  3021  02C1  3E82               	addlw	130
  3022  02C2  00C6               	movwf	___flmul@temp
  3023  02C3  0837               	movf	??___flmul+1,w
  3024  02C4  1803               	skipnc
  3025  02C5  3E01               	addlw	1
  3026  02C6  3EFF               	addlw	255
  3027  02C7  00C7               	movwf	___flmul@temp+1
  3028  02C8  2AE6               	goto	l1795
  3029  02C9                     l1785:
  3030  02C9  3001               	movlw	1
  3031  02CA  00B6               	movwf	??___flmul
  3032  02CB                     u1455:
  3033  02CB  1003               	clrc
  3034  02CC  0DC2               	rlf	___flmul@prod,f
  3035  02CD  0DC3               	rlf	___flmul@prod+1,f
  3036  02CE  0DC4               	rlf	___flmul@prod+2,f
  3037  02CF  0DC5               	rlf	___flmul@prod+3,f
  3038  02D0  0BB6               	decfsz	??___flmul,f
  3039  02D1  2ACB               	goto	u1455
  3040  02D2                     l1787:
  3041  02D2  1FBF               	btfss	___flmul@grs+3,7
  3042  02D3  2AD5               	goto	u1461
  3043  02D4  2AD6               	goto	u1460
  3044  02D5                     u1461:
  3045  02D5  2AD7               	goto	l1791
  3046  02D6                     u1460:
  3047  02D6                     l1789:
  3048  02D6  1442               	bsf	___flmul@prod,0
  3049  02D7                     l1791:
  3050  02D7  3001               	movlw	1
  3051  02D8  00B6               	movwf	??___flmul
  3052  02D9                     u1475:
  3053  02D9  1003               	clrc
  3054  02DA  0DBC               	rlf	___flmul@grs,f
  3055  02DB  0DBD               	rlf	___flmul@grs+1,f
  3056  02DC  0DBE               	rlf	___flmul@grs+2,f
  3057  02DD  0DBF               	rlf	___flmul@grs+3,f
  3058  02DE  0BB6               	decfsz	??___flmul,f
  3059  02DF  2AD9               	goto	u1475
  3060  02E0                     l1793:
  3061  02E0  30FF               	movlw	255
  3062  02E1  07C6               	addwf	___flmul@temp,f
  3063  02E2  1803               	skipnc
  3064  02E3  0AC7               	incf	___flmul@temp+1,f
  3065  02E4  30FF               	movlw	255
  3066  02E5  07C7               	addwf	___flmul@temp+1,f
  3067  02E6                     l1795:
  3068  02E6  1FC4               	btfss	___flmul@prod+2,7
  3069  02E7  2AE9               	goto	u1481
  3070  02E8  2AEA               	goto	u1480
  3071  02E9                     u1481:
  3072  02E9  2AC9               	goto	l1785
  3073  02EA                     u1480:
  3074  02EA                     l1797:
  3075  02EA  01C0               	clrf	___flmul@aexp
  3076  02EB                     l1799:
  3077  02EB  1FBF               	btfss	___flmul@grs+3,7
  3078  02EC  2AEE               	goto	u1491
  3079  02ED  2AEF               	goto	u1490
  3080  02EE                     u1491:
  3081  02EE  2B0B               	goto	l1807
  3082  02EF                     u1490:
  3083  02EF                     l1801:
  3084  02EF  30FF               	movlw	255
  3085  02F0  053C               	andwf	___flmul@grs,w
  3086  02F1  00B6               	movwf	??___flmul
  3087  02F2  30FF               	movlw	255
  3088  02F3  053D               	andwf	___flmul@grs+1,w
  3089  02F4  00B7               	movwf	??___flmul+1
  3090  02F5  30FF               	movlw	255
  3091  02F6  053E               	andwf	___flmul@grs+2,w
  3092  02F7  00B8               	movwf	??___flmul+2
  3093  02F8  307F               	movlw	127
  3094  02F9  053F               	andwf	___flmul@grs+3,w
  3095  02FA  00B9               	movwf	??___flmul+3
  3096  02FB  0839               	movf	??___flmul+3,w
  3097  02FC  0438               	iorwf	??___flmul+2,w
  3098  02FD  0437               	iorwf	??___flmul+1,w
  3099  02FE  0436               	iorwf	??___flmul,w
  3100  02FF  1903               	skipnz
  3101  0300  2B02               	goto	u1501
  3102  0301  2B03               	goto	u1500
  3103  0302                     u1501:
  3104  0302  2B06               	goto	l676
  3105  0303                     u1500:
  3106  0303                     l1803:
  3107  0303  01C0               	clrf	___flmul@aexp
  3108  0304  0AC0               	incf	___flmul@aexp,f
  3109  0305  2B0B               	goto	l1807
  3110  0306                     l676:
  3111  0306  1C42               	btfss	___flmul@prod,0
  3112  0307  2B09               	goto	u1511
  3113  0308  2B0A               	goto	u1510
  3114  0309                     u1511:
  3115  0309  2B0B               	goto	l1807
  3116  030A                     u1510:
  3117  030A  2B03               	goto	l1803
  3118  030B                     l1807:
  3119  030B  0840               	movf	___flmul@aexp,w
  3120  030C  1903               	btfsc	3,2
  3121  030D  2B0F               	goto	u1521
  3122  030E  2B10               	goto	u1520
  3123  030F                     u1521:
  3124  030F  2B41               	goto	l1817
  3125  0310                     u1520:
  3126  0310                     l1809:
  3127  0310  3001               	movlw	1
  3128  0311  07C2               	addwf	___flmul@prod,f
  3129  0312  3000               	movlw	0
  3130  0313  1803               	skipnc
  3131  0314  3001               	movlw	1
  3132  0315  07C3               	addwf	___flmul@prod+1,f
  3133  0316  3000               	movlw	0
  3134  0317  1803               	skipnc
  3135  0318  3001               	movlw	1
  3136  0319  07C4               	addwf	___flmul@prod+2,f
  3137  031A  3000               	movlw	0
  3138  031B  1803               	skipnc
  3139  031C  3001               	movlw	1
  3140  031D  07C5               	addwf	___flmul@prod+3,f
  3141  031E                     l1811:
  3142  031E  1C45               	btfss	___flmul@prod+3,0
  3143  031F  2B21               	goto	u1531
  3144  0320  2B22               	goto	u1530
  3145  0321                     u1531:
  3146  0321  2B41               	goto	l1817
  3147  0322                     u1530:
  3148  0322                     l1813:
  3149  0322  0842               	movf	___flmul@prod,w
  3150  0323  00B6               	movwf	??___flmul
  3151  0324  0843               	movf	___flmul@prod+1,w
  3152  0325  00B7               	movwf	??___flmul+1
  3153  0326  0844               	movf	___flmul@prod+2,w
  3154  0327  00B8               	movwf	??___flmul+2
  3155  0328  0845               	movf	___flmul@prod+3,w
  3156  0329  00B9               	movwf	??___flmul+3
  3157  032A  3001               	movlw	1
  3158  032B  00BA               	movwf	??___flmul+4
  3159  032C                     u1545:
  3160  032C  0D39               	rlf	??___flmul+3,w
  3161  032D  0CB9               	rrf	??___flmul+3,f
  3162  032E  0CB8               	rrf	??___flmul+2,f
  3163  032F  0CB7               	rrf	??___flmul+1,f
  3164  0330  0CB6               	rrf	??___flmul,f
  3165  0331                     u1540:
  3166  0331  0BBA               	decfsz	??___flmul+4,f
  3167  0332  2B2C               	goto	u1545
  3168  0333  0839               	movf	??___flmul+3,w
  3169  0334  00C5               	movwf	___flmul@prod+3
  3170  0335  0838               	movf	??___flmul+2,w
  3171  0336  00C4               	movwf	___flmul@prod+2
  3172  0337  0837               	movf	??___flmul+1,w
  3173  0338  00C3               	movwf	___flmul@prod+1
  3174  0339  0836               	movf	??___flmul,w
  3175  033A  00C2               	movwf	___flmul@prod
  3176  033B                     l1815:
  3177  033B  3001               	movlw	1
  3178  033C  07C6               	addwf	___flmul@temp,f
  3179  033D  1803               	skipnc
  3180  033E  0AC7               	incf	___flmul@temp+1,f
  3181  033F  3000               	movlw	0
  3182  0340  07C7               	addwf	___flmul@temp+1,f
  3183  0341                     l1817:
  3184  0341  0847               	movf	___flmul@temp+1,w
  3185  0342  3A80               	xorlw	128
  3186  0343  00FF               	movwf	btemp+1
  3187  0344  3080               	movlw	128
  3188  0345  027F               	subwf	btemp+1,w
  3189  0346  1D03               	skipz
  3190  0347  2B4A               	goto	u1555
  3191  0348  30FF               	movlw	255
  3192  0349  0246               	subwf	___flmul@temp,w
  3193  034A                     u1555:
  3194  034A  1C03               	skipc
  3195  034B  2B4D               	goto	u1551
  3196  034C  2B4E               	goto	u1550
  3197  034D                     u1551:
  3198  034D  2B59               	goto	l1821
  3199  034E                     u1550:
  3200  034E                     l1819:
  3201  034E  307F               	movlw	127
  3202  034F  1283               	bcf	3,5	;RP0=0, select bank0
  3203  0350  1303               	bcf	3,6	;RP1=0, select bank0
  3204  0351  00C5               	movwf	___flmul@prod+3
  3205  0352  3080               	movlw	128
  3206  0353  00C4               	movwf	___flmul@prod+2
  3207  0354  3000               	movlw	0
  3208  0355  00C3               	movwf	___flmul@prod+1
  3209  0356  3000               	movlw	0
  3210  0357  00C2               	movwf	___flmul@prod
  3211  0358  2B8E               	goto	l682
  3212  0359                     l1821:
  3213  0359  1283               	bcf	3,5	;RP0=0, select bank0
  3214  035A  1303               	bcf	3,6	;RP1=0, select bank0
  3215  035B  0847               	movf	___flmul@temp+1,w
  3216  035C  3A80               	xorlw	128
  3217  035D  00FF               	movwf	btemp+1
  3218  035E  3080               	movlw	128
  3219  035F  027F               	subwf	btemp+1,w
  3220  0360  1D03               	skipz
  3221  0361  2B64               	goto	u1565
  3222  0362  3001               	movlw	1
  3223  0363  0246               	subwf	___flmul@temp,w
  3224  0364                     u1565:
  3225  0364  1803               	skipnc
  3226  0365  2B67               	goto	u1561
  3227  0366  2B68               	goto	u1560
  3228  0367                     u1561:
  3229  0367  2B74               	goto	l1827
  3230  0368                     u1560:
  3231  0368                     l1823:
  3232  0368  3000               	movlw	0
  3233  0369  1283               	bcf	3,5	;RP0=0, select bank0
  3234  036A  1303               	bcf	3,6	;RP1=0, select bank0
  3235  036B  00C5               	movwf	___flmul@prod+3
  3236  036C  3000               	movlw	0
  3237  036D  00C4               	movwf	___flmul@prod+2
  3238  036E  3000               	movlw	0
  3239  036F  00C3               	movwf	___flmul@prod+1
  3240  0370  3000               	movlw	0
  3241  0371  00C2               	movwf	___flmul@prod
  3242  0372                     l1825:
  3243  0372  01BB               	clrf	___flmul@sign
  3244  0373  2B8E               	goto	l682
  3245  0374                     l1827:
  3246  0374  1283               	bcf	3,5	;RP0=0, select bank0
  3247  0375  1303               	bcf	3,6	;RP1=0, select bank0
  3248  0376  0846               	movf	___flmul@temp,w
  3249  0377  00B6               	movwf	??___flmul
  3250  0378  0836               	movf	??___flmul,w
  3251  0379  00C1               	movwf	___flmul@bexp
  3252  037A  30FF               	movlw	255
  3253  037B  05C2               	andwf	___flmul@prod,f
  3254  037C  30FF               	movlw	255
  3255  037D  05C3               	andwf	___flmul@prod+1,f
  3256  037E  307F               	movlw	127
  3257  037F  05C4               	andwf	___flmul@prod+2,f
  3258  0380  3000               	movlw	0
  3259  0381  05C5               	andwf	___flmul@prod+3,f
  3260  0382                     l1829:
  3261  0382  1C41               	btfss	___flmul@bexp,0
  3262  0383  2B85               	goto	u1571
  3263  0384  2B86               	goto	u1570
  3264  0385                     u1571:
  3265  0385  2B87               	goto	l1833
  3266  0386                     u1570:
  3267  0386                     l1831:
  3268  0386  17C4               	bsf	___flmul@prod+2,7
  3269  0387                     l1833:
  3270  0387  0841               	movf	___flmul@bexp,w
  3271  0388  00B6               	movwf	??___flmul
  3272  0389  1003               	clrc
  3273  038A  0C36               	rrf	??___flmul,w
  3274  038B  00B7               	movwf	??___flmul+1
  3275  038C  0837               	movf	??___flmul+1,w
  3276  038D  00C5               	movwf	___flmul@prod+3
  3277  038E                     l682:
  3278  038E  083B               	movf	___flmul@sign,w
  3279  038F  00B6               	movwf	??___flmul
  3280  0390  0836               	movf	??___flmul,w
  3281  0391  04C5               	iorwf	___flmul@prod+3,f
  3282  0392                     l1835:
  3283  0392  0845               	movf	___flmul@prod+3,w
  3284  0393  00B1               	movwf	?___flmul+3
  3285  0394  0844               	movf	___flmul@prod+2,w
  3286  0395  00B0               	movwf	?___flmul+2
  3287  0396  0843               	movf	___flmul@prod+1,w
  3288  0397  00AF               	movwf	?___flmul+1
  3289  0398  0842               	movf	___flmul@prod,w
  3290  0399  00AE               	movwf	?___flmul
  3291  039A                     l670:
  3292  039A  0008               	return
  3293  039B                     __end_of___flmul:
  3294                           
  3295                           	psect	text7
  3296  0ED1                     __ptext7:	
  3297 ;; *************** function __Umul8_16 *****************
  3298 ;; Defined at:
  3299 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  3300 ;; Parameters:    Size  Location     Type
  3301 ;;  multiplier      1    wreg     unsigned char 
  3302 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  3303 ;; Auto vars:     Size  Location     Type
  3304 ;;  multiplier      1    8[BANK0 ] unsigned char 
  3305 ;;  word_mpld       2    6[BANK0 ] unsigned int 
  3306 ;;  product         2    4[BANK0 ] unsigned int 
  3307 ;; Return value:  Size  Location     Type
  3308 ;;                  2    0[BANK0 ] unsigned int 
  3309 ;; Registers used:
  3310 ;;		wreg, status,2, status,0
  3311 ;; Tracked objects:
  3312 ;;		On entry : 0/0
  3313 ;;		On exit  : 0/0
  3314 ;;		Unchanged: 0/0
  3315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3316 ;;      Params:         0       2       0       0       0
  3317 ;;      Locals:         0       5       0       0       0
  3318 ;;      Temps:          0       2       0       0       0
  3319 ;;      Totals:         0       9       0       0       0
  3320 ;;Total ram usage:        9 bytes
  3321 ;; Hardware stack levels used:    1
  3322 ;; Hardware stack levels required when called:    2
  3323 ;; This function calls:
  3324 ;;		Nothing
  3325 ;; This function is called by:
  3326 ;;		___flmul
  3327 ;; This function uses a non-reentrant model
  3328 ;;
  3329                           
  3330                           
  3331                           ;psect for function __Umul8_16
  3332  0ED1                     __Umul8_16:
  3333                           
  3334                           ;incstack = 0
  3335                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  3336                           ;__Umul8_16@multiplier stored from wreg
  3337  0ED1  1283               	bcf	3,5	;RP0=0, select bank0
  3338  0ED2  1303               	bcf	3,6	;RP1=0, select bank0
  3339  0ED3  00A8               	movwf	__Umul8_16@multiplier
  3340  0ED4                     l1511:
  3341  0ED4  01A4               	clrf	__Umul8_16@product
  3342  0ED5  01A5               	clrf	__Umul8_16@product+1
  3343  0ED6                     l1513:
  3344  0ED6  0820               	movf	__Umul8_16@multiplicand,w
  3345  0ED7  00A2               	movwf	??__Umul8_16
  3346  0ED8  01A3               	clrf	??__Umul8_16+1
  3347  0ED9  0822               	movf	??__Umul8_16,w
  3348  0EDA  00A6               	movwf	__Umul8_16@word_mpld
  3349  0EDB  0823               	movf	??__Umul8_16+1,w
  3350  0EDC  00A7               	movwf	__Umul8_16@word_mpld+1
  3351  0EDD                     l1515:
  3352  0EDD  1C28               	btfss	__Umul8_16@multiplier,0
  3353  0EDE  2EE0               	goto	u1021
  3354  0EDF  2EE1               	goto	u1020
  3355  0EE0                     u1021:
  3356  0EE0  2EE7               	goto	l689
  3357  0EE1                     u1020:
  3358  0EE1                     l1517:
  3359  0EE1  0826               	movf	__Umul8_16@word_mpld,w
  3360  0EE2  07A4               	addwf	__Umul8_16@product,f
  3361  0EE3  1803               	skipnc
  3362  0EE4  0AA5               	incf	__Umul8_16@product+1,f
  3363  0EE5  0827               	movf	__Umul8_16@word_mpld+1,w
  3364  0EE6  07A5               	addwf	__Umul8_16@product+1,f
  3365  0EE7                     l689:
  3366  0EE7  3001               	movlw	1
  3367  0EE8                     u1035:
  3368  0EE8  1003               	clrc
  3369  0EE9  0DA6               	rlf	__Umul8_16@word_mpld,f
  3370  0EEA  0DA7               	rlf	__Umul8_16@word_mpld+1,f
  3371  0EEB  3EFF               	addlw	-1
  3372  0EEC  1D03               	skipz
  3373  0EED  2EE8               	goto	u1035
  3374  0EEE  1003               	clrc
  3375  0EEF  0CA8               	rrf	__Umul8_16@multiplier,f
  3376  0EF0                     l1519:
  3377  0EF0  0828               	movf	__Umul8_16@multiplier,w
  3378  0EF1  1D03               	btfss	3,2
  3379  0EF2  2EF4               	goto	u1041
  3380  0EF3  2EF5               	goto	u1040
  3381  0EF4                     u1041:
  3382  0EF4  2EDD               	goto	l1515
  3383  0EF5                     u1040:
  3384  0EF5                     l1521:
  3385  0EF5  0825               	movf	__Umul8_16@product+1,w
  3386  0EF6  00A1               	movwf	?__Umul8_16+1
  3387  0EF7  0824               	movf	__Umul8_16@product,w
  3388  0EF8  00A0               	movwf	?__Umul8_16
  3389  0EF9                     l691:
  3390  0EF9  0008               	return
  3391  0EFA                     __end_of__Umul8_16:
  3392                           
  3393                           	psect	text8
  3394  06CD                     __ptext8:	
  3395 ;; *************** function _VAL *****************
  3396 ;; Defined at:
  3397 ;;		line 193 in file "main.c"
  3398 ;; Parameters:    Size  Location     Type
  3399 ;;  variable        2    8[BANK0 ] unsigned int 
  3400 ;; Auto vars:     Size  Location     Type
  3401 ;;  valor           2   12[BANK0 ] unsigned int 
  3402 ;; Return value:  Size  Location     Type
  3403 ;;                  1    wreg      void 
  3404 ;; Registers used:
  3405 ;;		wreg, status,2, status,0, pclath, cstack
  3406 ;; Tracked objects:
  3407 ;;		On entry : 0/0
  3408 ;;		On exit  : 0/0
  3409 ;;		Unchanged: 0/0
  3410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3411 ;;      Params:         0       2       0       0       0
  3412 ;;      Locals:         0       2       0       0       0
  3413 ;;      Temps:          0       2       0       0       0
  3414 ;;      Totals:         0       6       0       0       0
  3415 ;;Total ram usage:        6 bytes
  3416 ;; Hardware stack levels used:    1
  3417 ;; Hardware stack levels required when called:    3
  3418 ;; This function calls:
  3419 ;;		___lwdiv
  3420 ;;		___wmul
  3421 ;; This function is called by:
  3422 ;;		_main
  3423 ;; This function uses a non-reentrant model
  3424 ;;
  3425                           
  3426                           
  3427                           ;psect for function _VAL
  3428  06CD                     _VAL:
  3429  06CD                     l1647:	
  3430                           ;incstack = 0
  3431                           ; Regs used in _VAL: [wreg+status,2+status,0+pclath+cstack]
  3432                           
  3433                           
  3434                           ;main.c: 194:     uint16_t valor;;main.c: 195:     valor = variable;
  3435  06CD  1283               	bcf	3,5	;RP0=0, select bank0
  3436  06CE  1303               	bcf	3,6	;RP1=0, select bank0
  3437  06CF  0829               	movf	VAL@variable+1,w
  3438  06D0  00AD               	movwf	VAL@valor+1
  3439  06D1  0828               	movf	VAL@variable,w
  3440  06D2  00AC               	movwf	VAL@valor
  3441  06D3                     l1649:
  3442                           
  3443                           ;main.c: 196:     POS1 = (valor/100) ;
  3444  06D3  3064               	movlw	100
  3445  06D4  00A0               	movwf	___lwdiv@divisor
  3446  06D5  3000               	movlw	0
  3447  06D6  00A1               	movwf	___lwdiv@divisor+1
  3448  06D7  082D               	movf	VAL@valor+1,w
  3449  06D8  00A3               	movwf	___lwdiv@dividend+1
  3450  06D9  082C               	movf	VAL@valor,w
  3451  06DA  00A2               	movwf	___lwdiv@dividend
  3452  06DB  120A  158A  276C  120A  118A  	fcall	___lwdiv
  3453  06E0  1283               	bcf	3,5	;RP0=0, select bank0
  3454  06E1  1303               	bcf	3,6	;RP1=0, select bank0
  3455  06E2  0820               	movf	?___lwdiv,w
  3456  06E3  00AA               	movwf	??_VAL
  3457  06E4  082A               	movf	??_VAL,w
  3458  06E5  00DC               	movwf	_POS1
  3459  06E6                     l1651:
  3460                           
  3461                           ;main.c: 197:     valor = (valor - (POS1*100));
  3462  06E6  085C               	movf	_POS1,w
  3463  06E7  00AA               	movwf	??_VAL
  3464  06E8  01AB               	clrf	??_VAL+1
  3465  06E9  082A               	movf	??_VAL,w
  3466  06EA  00A0               	movwf	___wmul@multiplier
  3467  06EB  082B               	movf	??_VAL+1,w
  3468  06EC  00A1               	movwf	___wmul@multiplier+1
  3469  06ED  309C               	movlw	156
  3470  06EE  00A2               	movwf	___wmul@multiplicand
  3471  06EF  30FF               	movlw	255
  3472  06F0  00A3               	movwf	___wmul@multiplicand+1
  3473  06F1  120A  158A  265A  120A  118A  	fcall	___wmul
  3474  06F6  1283               	bcf	3,5	;RP0=0, select bank0
  3475  06F7  1303               	bcf	3,6	;RP1=0, select bank0
  3476  06F8  082C               	movf	VAL@valor,w
  3477  06F9  0720               	addwf	?___wmul,w
  3478  06FA  00AC               	movwf	VAL@valor
  3479  06FB  082D               	movf	VAL@valor+1,w
  3480  06FC  1803               	skipnc
  3481  06FD  0A2D               	incf	VAL@valor+1,w
  3482  06FE  0721               	addwf	?___wmul+1,w
  3483  06FF  00AD               	movwf	VAL@valor+1
  3484  0700                     l1653:
  3485                           
  3486                           ;main.c: 198:     POS2 = (valor/10);
  3487  0700  300A               	movlw	10
  3488  0701  00A0               	movwf	___lwdiv@divisor
  3489  0702  3000               	movlw	0
  3490  0703  00A1               	movwf	___lwdiv@divisor+1
  3491  0704  082D               	movf	VAL@valor+1,w
  3492  0705  00A3               	movwf	___lwdiv@dividend+1
  3493  0706  082C               	movf	VAL@valor,w
  3494  0707  00A2               	movwf	___lwdiv@dividend
  3495  0708  120A  158A  276C  120A  118A  	fcall	___lwdiv
  3496  070D  1283               	bcf	3,5	;RP0=0, select bank0
  3497  070E  1303               	bcf	3,6	;RP1=0, select bank0
  3498  070F  0820               	movf	?___lwdiv,w
  3499  0710  00AA               	movwf	??_VAL
  3500  0711  082A               	movf	??_VAL,w
  3501  0712  00DB               	movwf	_POS2
  3502  0713                     l1655:
  3503                           
  3504                           ;main.c: 199:     valor = (valor - (POS2*10));
  3505  0713  085B               	movf	_POS2,w
  3506  0714  00AA               	movwf	??_VAL
  3507  0715  01AB               	clrf	??_VAL+1
  3508  0716  082A               	movf	??_VAL,w
  3509  0717  00A0               	movwf	___wmul@multiplier
  3510  0718  082B               	movf	??_VAL+1,w
  3511  0719  00A1               	movwf	___wmul@multiplier+1
  3512  071A  30F6               	movlw	246
  3513  071B  00A2               	movwf	___wmul@multiplicand
  3514  071C  30FF               	movlw	255
  3515  071D  00A3               	movwf	___wmul@multiplicand+1
  3516  071E  120A  158A  265A  120A  118A  	fcall	___wmul
  3517  0723  1283               	bcf	3,5	;RP0=0, select bank0
  3518  0724  1303               	bcf	3,6	;RP1=0, select bank0
  3519  0725  082C               	movf	VAL@valor,w
  3520  0726  0720               	addwf	?___wmul,w
  3521  0727  00AC               	movwf	VAL@valor
  3522  0728  082D               	movf	VAL@valor+1,w
  3523  0729  1803               	skipnc
  3524  072A  0A2D               	incf	VAL@valor+1,w
  3525  072B  0721               	addwf	?___wmul+1,w
  3526  072C  00AD               	movwf	VAL@valor+1
  3527                           
  3528                           ;main.c: 200:     POS3 = (valor);
  3529  072D  082C               	movf	VAL@valor,w
  3530  072E  00AA               	movwf	??_VAL
  3531  072F  082A               	movf	??_VAL,w
  3532  0730  00DA               	movwf	_POS3
  3533  0731                     l1657:
  3534                           
  3535                           ;main.c: 202:     POS1 = POS1 + 48;
  3536  0731  085C               	movf	_POS1,w
  3537  0732  3E30               	addlw	48
  3538  0733  00AA               	movwf	??_VAL
  3539  0734  082A               	movf	??_VAL,w
  3540  0735  00DC               	movwf	_POS1
  3541  0736                     l1659:
  3542                           
  3543                           ;main.c: 203:     POS2 = POS2 + 48;
  3544  0736  085B               	movf	_POS2,w
  3545  0737  3E30               	addlw	48
  3546  0738  00AA               	movwf	??_VAL
  3547  0739  082A               	movf	??_VAL,w
  3548  073A  00DB               	movwf	_POS2
  3549  073B                     l1661:
  3550                           
  3551                           ;main.c: 204:     POS3 = POS3 + 48;
  3552  073B  085A               	movf	_POS3,w
  3553  073C  3E30               	addlw	48
  3554  073D  00AA               	movwf	??_VAL
  3555  073E  082A               	movf	??_VAL,w
  3556  073F  00DA               	movwf	_POS3
  3557  0740                     l154:
  3558  0740  0008               	return
  3559  0741                     __end_of_VAL:
  3560                           
  3561                           	psect	text9
  3562  0E5A                     __ptext9:	
  3563 ;; *************** function ___wmul *****************
  3564 ;; Defined at:
  3565 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  3566 ;; Parameters:    Size  Location     Type
  3567 ;;  multiplier      2    0[BANK0 ] unsigned int 
  3568 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  3569 ;; Auto vars:     Size  Location     Type
  3570 ;;  product         2    4[BANK0 ] unsigned int 
  3571 ;; Return value:  Size  Location     Type
  3572 ;;                  2    0[BANK0 ] unsigned int 
  3573 ;; Registers used:
  3574 ;;		wreg, status,2, status,0
  3575 ;; Tracked objects:
  3576 ;;		On entry : 0/0
  3577 ;;		On exit  : 0/0
  3578 ;;		Unchanged: 0/0
  3579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3580 ;;      Params:         0       4       0       0       0
  3581 ;;      Locals:         0       2       0       0       0
  3582 ;;      Temps:          0       0       0       0       0
  3583 ;;      Totals:         0       6       0       0       0
  3584 ;;Total ram usage:        6 bytes
  3585 ;; Hardware stack levels used:    1
  3586 ;; Hardware stack levels required when called:    2
  3587 ;; This function calls:
  3588 ;;		Nothing
  3589 ;; This function is called by:
  3590 ;;		_VAL
  3591 ;; This function uses a non-reentrant model
  3592 ;;
  3593                           
  3594                           
  3595                           ;psect for function ___wmul
  3596  0E5A                     ___wmul:
  3597  0E5A                     l1471:	
  3598                           ;incstack = 0
  3599                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3600                           
  3601  0E5A  1283               	bcf	3,5	;RP0=0, select bank0
  3602  0E5B  1303               	bcf	3,6	;RP1=0, select bank0
  3603  0E5C  01A4               	clrf	___wmul@product
  3604  0E5D  01A5               	clrf	___wmul@product+1
  3605  0E5E                     l1473:
  3606  0E5E  1C20               	btfss	___wmul@multiplier,0
  3607  0E5F  2E61               	goto	u911
  3608  0E60  2E62               	goto	u910
  3609  0E61                     u911:
  3610  0E61  2E68               	goto	l281
  3611  0E62                     u910:
  3612  0E62                     l1475:
  3613  0E62  0822               	movf	___wmul@multiplicand,w
  3614  0E63  07A4               	addwf	___wmul@product,f
  3615  0E64  1803               	skipnc
  3616  0E65  0AA5               	incf	___wmul@product+1,f
  3617  0E66  0823               	movf	___wmul@multiplicand+1,w
  3618  0E67  07A5               	addwf	___wmul@product+1,f
  3619  0E68                     l281:
  3620  0E68  3001               	movlw	1
  3621  0E69                     u925:
  3622  0E69  1003               	clrc
  3623  0E6A  0DA2               	rlf	___wmul@multiplicand,f
  3624  0E6B  0DA3               	rlf	___wmul@multiplicand+1,f
  3625  0E6C  3EFF               	addlw	-1
  3626  0E6D  1D03               	skipz
  3627  0E6E  2E69               	goto	u925
  3628  0E6F                     l1477:
  3629  0E6F  3001               	movlw	1
  3630  0E70                     u935:
  3631  0E70  1003               	clrc
  3632  0E71  0CA1               	rrf	___wmul@multiplier+1,f
  3633  0E72  0CA0               	rrf	___wmul@multiplier,f
  3634  0E73  3EFF               	addlw	-1
  3635  0E74  1D03               	skipz
  3636  0E75  2E70               	goto	u935
  3637  0E76                     l1479:
  3638  0E76  0820               	movf	___wmul@multiplier,w
  3639  0E77  0421               	iorwf	___wmul@multiplier+1,w
  3640  0E78  1D03               	btfss	3,2
  3641  0E79  2E7B               	goto	u941
  3642  0E7A  2E7C               	goto	u940
  3643  0E7B                     u941:
  3644  0E7B  2E5E               	goto	l1473
  3645  0E7C                     u940:
  3646  0E7C                     l1481:
  3647  0E7C  0825               	movf	___wmul@product+1,w
  3648  0E7D  00A1               	movwf	?___wmul+1
  3649  0E7E  0824               	movf	___wmul@product,w
  3650  0E7F  00A0               	movwf	?___wmul
  3651  0E80                     l283:
  3652  0E80  0008               	return
  3653  0E81                     __end_of___wmul:
  3654                           
  3655                           	psect	text10
  3656  0F6C                     __ptext10:	
  3657 ;; *************** function ___lwdiv *****************
  3658 ;; Defined at:
  3659 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  3660 ;; Parameters:    Size  Location     Type
  3661 ;;  divisor         2    0[BANK0 ] unsigned int 
  3662 ;;  dividend        2    2[BANK0 ] unsigned int 
  3663 ;; Auto vars:     Size  Location     Type
  3664 ;;  quotient        2    5[BANK0 ] unsigned int 
  3665 ;;  counter         1    7[BANK0 ] unsigned char 
  3666 ;; Return value:  Size  Location     Type
  3667 ;;                  2    0[BANK0 ] unsigned int 
  3668 ;; Registers used:
  3669 ;;		wreg, status,2, status,0
  3670 ;; Tracked objects:
  3671 ;;		On entry : 0/0
  3672 ;;		On exit  : 0/0
  3673 ;;		Unchanged: 0/0
  3674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3675 ;;      Params:         0       4       0       0       0
  3676 ;;      Locals:         0       3       0       0       0
  3677 ;;      Temps:          0       1       0       0       0
  3678 ;;      Totals:         0       8       0       0       0
  3679 ;;Total ram usage:        8 bytes
  3680 ;; Hardware stack levels used:    1
  3681 ;; Hardware stack levels required when called:    2
  3682 ;; This function calls:
  3683 ;;		Nothing
  3684 ;; This function is called by:
  3685 ;;		_VAL
  3686 ;; This function uses a non-reentrant model
  3687 ;;
  3688                           
  3689                           
  3690                           ;psect for function ___lwdiv
  3691  0F6C                     ___lwdiv:
  3692  0F6C                     l1485:	
  3693                           ;incstack = 0
  3694                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3695                           
  3696  0F6C  1283               	bcf	3,5	;RP0=0, select bank0
  3697  0F6D  1303               	bcf	3,6	;RP1=0, select bank0
  3698  0F6E  01A5               	clrf	___lwdiv@quotient
  3699  0F6F  01A6               	clrf	___lwdiv@quotient+1
  3700  0F70                     l1487:
  3701  0F70  0820               	movf	___lwdiv@divisor,w
  3702  0F71  0421               	iorwf	___lwdiv@divisor+1,w
  3703  0F72  1903               	btfsc	3,2
  3704  0F73  2F75               	goto	u951
  3705  0F74  2F76               	goto	u950
  3706  0F75                     u951:
  3707  0F75  2FAD               	goto	l1507
  3708  0F76                     u950:
  3709  0F76                     l1489:
  3710  0F76  01A7               	clrf	___lwdiv@counter
  3711  0F77  0AA7               	incf	___lwdiv@counter,f
  3712  0F78  2F84               	goto	l1495
  3713  0F79                     l1491:
  3714  0F79  3001               	movlw	1
  3715  0F7A                     u965:
  3716  0F7A  1003               	clrc
  3717  0F7B  0DA0               	rlf	___lwdiv@divisor,f
  3718  0F7C  0DA1               	rlf	___lwdiv@divisor+1,f
  3719  0F7D  3EFF               	addlw	-1
  3720  0F7E  1D03               	skipz
  3721  0F7F  2F7A               	goto	u965
  3722  0F80                     l1493:
  3723  0F80  3001               	movlw	1
  3724  0F81  00A4               	movwf	??___lwdiv
  3725  0F82  0824               	movf	??___lwdiv,w
  3726  0F83  07A7               	addwf	___lwdiv@counter,f
  3727  0F84                     l1495:
  3728  0F84  1FA1               	btfss	___lwdiv@divisor+1,7
  3729  0F85  2F87               	goto	u971
  3730  0F86  2F88               	goto	u970
  3731  0F87                     u971:
  3732  0F87  2F79               	goto	l1491
  3733  0F88                     u970:
  3734  0F88                     l1497:
  3735  0F88  3001               	movlw	1
  3736  0F89                     u985:
  3737  0F89  1003               	clrc
  3738  0F8A  0DA5               	rlf	___lwdiv@quotient,f
  3739  0F8B  0DA6               	rlf	___lwdiv@quotient+1,f
  3740  0F8C  3EFF               	addlw	-1
  3741  0F8D  1D03               	skipz
  3742  0F8E  2F89               	goto	u985
  3743  0F8F  0821               	movf	___lwdiv@divisor+1,w
  3744  0F90  0223               	subwf	___lwdiv@dividend+1,w
  3745  0F91  1D03               	skipz
  3746  0F92  2F95               	goto	u995
  3747  0F93  0820               	movf	___lwdiv@divisor,w
  3748  0F94  0222               	subwf	___lwdiv@dividend,w
  3749  0F95                     u995:
  3750  0F95  1C03               	skipc
  3751  0F96  2F98               	goto	u991
  3752  0F97  2F99               	goto	u990
  3753  0F98                     u991:
  3754  0F98  2FA0               	goto	l1503
  3755  0F99                     u990:
  3756  0F99                     l1499:
  3757  0F99  0820               	movf	___lwdiv@divisor,w
  3758  0F9A  02A2               	subwf	___lwdiv@dividend,f
  3759  0F9B  0821               	movf	___lwdiv@divisor+1,w
  3760  0F9C  1C03               	skipc
  3761  0F9D  03A3               	decf	___lwdiv@dividend+1,f
  3762  0F9E  02A3               	subwf	___lwdiv@dividend+1,f
  3763  0F9F                     l1501:
  3764  0F9F  1425               	bsf	___lwdiv@quotient,0
  3765  0FA0                     l1503:
  3766  0FA0  3001               	movlw	1
  3767  0FA1                     u1005:
  3768  0FA1  1003               	clrc
  3769  0FA2  0CA1               	rrf	___lwdiv@divisor+1,f
  3770  0FA3  0CA0               	rrf	___lwdiv@divisor,f
  3771  0FA4  3EFF               	addlw	-1
  3772  0FA5  1D03               	skipz
  3773  0FA6  2FA1               	goto	u1005
  3774  0FA7                     l1505:
  3775  0FA7  3001               	movlw	1
  3776  0FA8  02A7               	subwf	___lwdiv@counter,f
  3777  0FA9  1D03               	btfss	3,2
  3778  0FAA  2FAC               	goto	u1011
  3779  0FAB  2FAD               	goto	u1010
  3780  0FAC                     u1011:
  3781  0FAC  2F88               	goto	l1497
  3782  0FAD                     u1010:
  3783  0FAD                     l1507:
  3784  0FAD  0826               	movf	___lwdiv@quotient+1,w
  3785  0FAE  00A1               	movwf	?___lwdiv+1
  3786  0FAF  0825               	movf	___lwdiv@quotient,w
  3787  0FB0  00A0               	movwf	?___lwdiv
  3788  0FB1                     l553:
  3789  0FB1  0008               	return
  3790  0FB2                     __end_of___lwdiv:
  3791                           
  3792                           	psect	text11
  3793  0EA8                     __ptext11:	
  3794 ;; *************** function _Lcd_Write_String *****************
  3795 ;; Defined at:
  3796 ;;		line 77 in file "LCD.c"
  3797 ;; Parameters:    Size  Location     Type
  3798 ;;  a               1    wreg     PTR unsigned char 
  3799 ;;		 -> STR_3(5), STR_2(3), STR_1(17), 
  3800 ;; Auto vars:     Size  Location     Type
  3801 ;;  a               1    7[BANK0 ] PTR unsigned char 
  3802 ;;		 -> STR_3(5), STR_2(3), STR_1(17), 
  3803 ;;  i               2    5[BANK0 ] int 
  3804 ;; Return value:  Size  Location     Type
  3805 ;;                  1    wreg      void 
  3806 ;; Registers used:
  3807 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3808 ;; Tracked objects:
  3809 ;;		On entry : 0/0
  3810 ;;		On exit  : 0/0
  3811 ;;		Unchanged: 0/0
  3812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3813 ;;      Params:         0       0       0       0       0
  3814 ;;      Locals:         0       3       0       0       0
  3815 ;;      Temps:          0       0       0       0       0
  3816 ;;      Totals:         0       3       0       0       0
  3817 ;;Total ram usage:        3 bytes
  3818 ;; Hardware stack levels used:    1
  3819 ;; Hardware stack levels required when called:    4
  3820 ;; This function calls:
  3821 ;;		_Lcd_Write_Char
  3822 ;; This function is called by:
  3823 ;;		_main
  3824 ;; This function uses a non-reentrant model
  3825 ;;
  3826                           
  3827                           
  3828                           ;psect for function _Lcd_Write_String
  3829  0EA8                     _Lcd_Write_String:
  3830                           
  3831                           ;incstack = 0
  3832                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3833                           ;Lcd_Write_String@a stored from wreg
  3834  0EA8  1283               	bcf	3,5	;RP0=0, select bank0
  3835  0EA9  1303               	bcf	3,6	;RP1=0, select bank0
  3836  0EAA  00A7               	movwf	Lcd_Write_String@a
  3837  0EAB                     l1639:
  3838                           
  3839                           ;LCD.c: 78:     int i;;LCD.c: 79:     for (i = 0; a[i] != '\0'; i++)
  3840  0EAB  01A5               	clrf	Lcd_Write_String@i
  3841  0EAC  01A6               	clrf	Lcd_Write_String@i+1
  3842  0EAD  2EC3               	goto	l1645
  3843  0EAE                     l1641:
  3844                           
  3845                           ;LCD.c: 80:         Lcd_Write_Char(a[i]);
  3846  0EAE  0825               	movf	Lcd_Write_String@i,w
  3847  0EAF  0727               	addwf	Lcd_Write_String@a,w
  3848  0EB0  0084               	movwf	4
  3849  0EB1  120A  158A  2000  120A  158A  	fcall	stringdir
  3850  0EB6  120A  158A  2617  120A  158A  	fcall	_Lcd_Write_Char
  3851  0EBB                     l1643:
  3852  0EBB  3001               	movlw	1
  3853  0EBC  1283               	bcf	3,5	;RP0=0, select bank0
  3854  0EBD  1303               	bcf	3,6	;RP1=0, select bank0
  3855  0EBE  07A5               	addwf	Lcd_Write_String@i,f
  3856  0EBF  1803               	skipnc
  3857  0EC0  0AA6               	incf	Lcd_Write_String@i+1,f
  3858  0EC1  3000               	movlw	0
  3859  0EC2  07A6               	addwf	Lcd_Write_String@i+1,f
  3860  0EC3                     l1645:
  3861  0EC3  0825               	movf	Lcd_Write_String@i,w
  3862  0EC4  0727               	addwf	Lcd_Write_String@a,w
  3863  0EC5  0084               	movwf	4
  3864  0EC6  120A  158A  2000  120A  158A  	fcall	stringdir
  3865  0ECB  3A00               	xorlw	0
  3866  0ECC  1D03               	skipz
  3867  0ECD  2ECF               	goto	u1101
  3868  0ECE  2ED0               	goto	u1100
  3869  0ECF                     u1101:
  3870  0ECF  2EAE               	goto	l1641
  3871  0ED0                     u1100:
  3872  0ED0                     l189:
  3873  0ED0  0008               	return
  3874  0ED1                     __end_of_Lcd_Write_String:
  3875                           
  3876                           	psect	text12
  3877  0E17                     __ptext12:	
  3878 ;; *************** function _Lcd_Write_Char *****************
  3879 ;; Defined at:
  3880 ;;		line 65 in file "LCD.c"
  3881 ;; Parameters:    Size  Location     Type
  3882 ;;  a               1    wreg     unsigned char 
  3883 ;; Auto vars:     Size  Location     Type
  3884 ;;  a               1    2[BANK0 ] unsigned char 
  3885 ;;  y               1    4[BANK0 ] unsigned char 
  3886 ;;  temp            1    3[BANK0 ] unsigned char 
  3887 ;; Return value:  Size  Location     Type
  3888 ;;                  1    wreg      void 
  3889 ;; Registers used:
  3890 ;;		wreg, status,2, status,0, pclath, cstack
  3891 ;; Tracked objects:
  3892 ;;		On entry : 0/0
  3893 ;;		On exit  : 0/0
  3894 ;;		Unchanged: 0/0
  3895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3896 ;;      Params:         0       0       0       0       0
  3897 ;;      Locals:         0       3       0       0       0
  3898 ;;      Temps:          0       1       0       0       0
  3899 ;;      Totals:         0       4       0       0       0
  3900 ;;Total ram usage:        4 bytes
  3901 ;; Hardware stack levels used:    1
  3902 ;; Hardware stack levels required when called:    3
  3903 ;; This function calls:
  3904 ;;		_Lcd_Port
  3905 ;; This function is called by:
  3906 ;;		_main
  3907 ;;		_Lcd_Write_String
  3908 ;; This function uses a non-reentrant model
  3909 ;;
  3910                           
  3911                           
  3912                           ;psect for function _Lcd_Write_Char
  3913  0E17                     _Lcd_Write_Char:
  3914                           
  3915                           ;incstack = 0
  3916                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  3917                           ;Lcd_Write_Char@a stored from wreg
  3918  0E17  1283               	bcf	3,5	;RP0=0, select bank0
  3919  0E18  1303               	bcf	3,6	;RP1=0, select bank0
  3920  0E19  00A2               	movwf	Lcd_Write_Char@a
  3921  0E1A                     l1449:
  3922                           
  3923                           ;LCD.c: 66:     char temp, y;;LCD.c: 67:     temp = a;
  3924  0E1A  0822               	movf	Lcd_Write_Char@a,w
  3925  0E1B  00A1               	movwf	??_Lcd_Write_Char
  3926  0E1C  0821               	movf	??_Lcd_Write_Char,w
  3927  0E1D  00A3               	movwf	Lcd_Write_Char@temp
  3928                           
  3929                           ;LCD.c: 68:     y = temp;
  3930  0E1E  0823               	movf	Lcd_Write_Char@temp,w
  3931  0E1F  00A1               	movwf	??_Lcd_Write_Char
  3932  0E20  0821               	movf	??_Lcd_Write_Char,w
  3933  0E21  00A4               	movwf	Lcd_Write_Char@y
  3934  0E22                     l1451:
  3935                           
  3936                           ;LCD.c: 69:     RE0 = 1;
  3937  0E22  1409               	bsf	9,0	;volatile
  3938  0E23                     l1453:
  3939                           
  3940                           ;LCD.c: 70:     Lcd_Port(y);
  3941  0E23  0824               	movf	Lcd_Write_Char@y,w
  3942  0E24  120A  158A  25B7  120A  158A  	fcall	_Lcd_Port
  3943  0E29                     l1455:
  3944                           
  3945                           ;LCD.c: 71:     RE1 = 1;
  3946  0E29  1283               	bcf	3,5	;RP0=0, select bank0
  3947  0E2A  1303               	bcf	3,6	;RP1=0, select bank0
  3948  0E2B  1489               	bsf	9,1	;volatile
  3949  0E2C                     l1457:
  3950                           
  3951                           ;LCD.c: 72:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  3952  0E2C  300C               	movlw	12
  3953  0E2D  1283               	bcf	3,5	;RP0=0, select bank0
  3954  0E2E  1303               	bcf	3,6	;RP1=0, select bank0
  3955  0E2F  00A1               	movwf	??_Lcd_Write_Char
  3956  0E30                     u1847:
  3957  0E30  0BA1               	decfsz	??_Lcd_Write_Char,f
  3958  0E31  2E30               	goto	u1847
  3959  0E32  0000               	nop
  3960  0E33                     l1459:
  3961                           
  3962                           ;LCD.c: 73:     RE1 = 0;
  3963  0E33  1283               	bcf	3,5	;RP0=0, select bank0
  3964  0E34  1303               	bcf	3,6	;RP1=0, select bank0
  3965  0E35  1089               	bcf	9,1	;volatile
  3966  0E36                     l183:
  3967  0E36  0008               	return
  3968  0E37                     __end_of_Lcd_Write_Char:
  3969                           
  3970                           	psect	text13
  3971  0741                     __ptext13:	
  3972 ;; *************** function _Lcd_Set_Cursor *****************
  3973 ;; Defined at:
  3974 ;;		line 30 in file "LCD.c"
  3975 ;; Parameters:    Size  Location     Type
  3976 ;;  a               1    wreg     unsigned char 
  3977 ;;  b               1    4[BANK0 ] unsigned char 
  3978 ;; Auto vars:     Size  Location     Type
  3979 ;;  a               1    7[BANK0 ] unsigned char 
  3980 ;;  temp            1   10[BANK0 ] unsigned char 
  3981 ;;  y               1    9[BANK0 ] unsigned char 
  3982 ;;  z               1    8[BANK0 ] unsigned char 
  3983 ;; Return value:  Size  Location     Type
  3984 ;;                  1    wreg      void 
  3985 ;; Registers used:
  3986 ;;		wreg, status,2, status,0, pclath, cstack
  3987 ;; Tracked objects:
  3988 ;;		On entry : 0/0
  3989 ;;		On exit  : 0/0
  3990 ;;		Unchanged: 0/0
  3991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3992 ;;      Params:         0       1       0       0       0
  3993 ;;      Locals:         0       4       0       0       0
  3994 ;;      Temps:          0       2       0       0       0
  3995 ;;      Totals:         0       7       0       0       0
  3996 ;;Total ram usage:        7 bytes
  3997 ;; Hardware stack levels used:    1
  3998 ;; Hardware stack levels required when called:    4
  3999 ;; This function calls:
  4000 ;;		_Lcd_Cmd
  4001 ;; This function is called by:
  4002 ;;		_main
  4003 ;; This function uses a non-reentrant model
  4004 ;;
  4005                           
  4006                           
  4007                           ;psect for function _Lcd_Set_Cursor
  4008  0741                     _Lcd_Set_Cursor:
  4009                           
  4010                           ;incstack = 0
  4011                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  4012                           ;Lcd_Set_Cursor@a stored from wreg
  4013  0741  1283               	bcf	3,5	;RP0=0, select bank0
  4014  0742  1303               	bcf	3,6	;RP1=0, select bank0
  4015  0743  00A7               	movwf	Lcd_Set_Cursor@a
  4016  0744                     l1619:
  4017                           
  4018                           ;LCD.c: 31:     char temp, z, y;;LCD.c: 32:     if (a == 1) {
  4019  0744  0327               	decf	Lcd_Set_Cursor@a,w
  4020  0745  1D03               	btfss	3,2
  4021  0746  2F48               	goto	u1061
  4022  0747  2F49               	goto	u1060
  4023  0748                     u1061:
  4024  0748  2F6E               	goto	l1629
  4025  0749                     u1060:
  4026  0749                     l1621:
  4027                           
  4028                           ;LCD.c: 33:         temp = 0x80 + b - 1;
  4029  0749  0824               	movf	Lcd_Set_Cursor@b,w
  4030  074A  3E7F               	addlw	127
  4031  074B  00A5               	movwf	??_Lcd_Set_Cursor
  4032  074C  0825               	movf	??_Lcd_Set_Cursor,w
  4033  074D  00AA               	movwf	Lcd_Set_Cursor@temp
  4034                           
  4035                           ;LCD.c: 34:         z = temp >> 4;
  4036  074E  082A               	movf	Lcd_Set_Cursor@temp,w
  4037  074F  00A5               	movwf	??_Lcd_Set_Cursor
  4038  0750  3004               	movlw	4
  4039  0751                     u1075:
  4040  0751  1003               	clrc
  4041  0752  0CA5               	rrf	??_Lcd_Set_Cursor,f
  4042  0753  3EFF               	addlw	-1
  4043  0754  1D03               	skipz
  4044  0755  2F51               	goto	u1075
  4045  0756  0825               	movf	??_Lcd_Set_Cursor,w
  4046  0757  00A6               	movwf	??_Lcd_Set_Cursor+1
  4047  0758  0826               	movf	??_Lcd_Set_Cursor+1,w
  4048  0759  00A8               	movwf	Lcd_Set_Cursor@z
  4049  075A                     l1623:
  4050                           
  4051                           ;LCD.c: 35:         y = temp & 0x0F;
  4052  075A  082A               	movf	Lcd_Set_Cursor@temp,w
  4053  075B  390F               	andlw	15
  4054  075C  00A5               	movwf	??_Lcd_Set_Cursor
  4055  075D  0825               	movf	??_Lcd_Set_Cursor,w
  4056  075E  00A9               	movwf	Lcd_Set_Cursor@y
  4057  075F                     l1625:
  4058                           
  4059                           ;LCD.c: 36:         Lcd_Cmd(z);
  4060  075F  0828               	movf	Lcd_Set_Cursor@z,w
  4061  0760  120A  158A  25FB  120A  118A  	fcall	_Lcd_Cmd
  4062  0765                     l1627:
  4063                           
  4064                           ;LCD.c: 37:         Lcd_Cmd(y);
  4065  0765  1283               	bcf	3,5	;RP0=0, select bank0
  4066  0766  1303               	bcf	3,6	;RP1=0, select bank0
  4067  0767  0829               	movf	Lcd_Set_Cursor@y,w
  4068  0768  120A  158A  25FB  120A  118A  	fcall	_Lcd_Cmd
  4069                           
  4070                           ;LCD.c: 38:     } else if (a == 2) {
  4071  076D  2F98               	goto	l177
  4072  076E                     l1629:
  4073  076E  3002               	movlw	2
  4074  076F  0627               	xorwf	Lcd_Set_Cursor@a,w
  4075  0770  1D03               	btfss	3,2
  4076  0771  2F73               	goto	u1081
  4077  0772  2F74               	goto	u1080
  4078  0773                     u1081:
  4079  0773  2F98               	goto	l177
  4080  0774                     u1080:
  4081  0774                     l1631:
  4082                           
  4083                           ;LCD.c: 39:         temp = 0xC0 + b - 1;
  4084  0774  0824               	movf	Lcd_Set_Cursor@b,w
  4085  0775  3EBF               	addlw	191
  4086  0776  00A5               	movwf	??_Lcd_Set_Cursor
  4087  0777  0825               	movf	??_Lcd_Set_Cursor,w
  4088  0778  00AA               	movwf	Lcd_Set_Cursor@temp
  4089                           
  4090                           ;LCD.c: 40:         z = temp >> 4;
  4091  0779  082A               	movf	Lcd_Set_Cursor@temp,w
  4092  077A  00A5               	movwf	??_Lcd_Set_Cursor
  4093  077B  3004               	movlw	4
  4094  077C                     u1095:
  4095  077C  1003               	clrc
  4096  077D  0CA5               	rrf	??_Lcd_Set_Cursor,f
  4097  077E  3EFF               	addlw	-1
  4098  077F  1D03               	skipz
  4099  0780  2F7C               	goto	u1095
  4100  0781  0825               	movf	??_Lcd_Set_Cursor,w
  4101  0782  00A6               	movwf	??_Lcd_Set_Cursor+1
  4102  0783  0826               	movf	??_Lcd_Set_Cursor+1,w
  4103  0784  00A8               	movwf	Lcd_Set_Cursor@z
  4104  0785                     l1633:
  4105                           
  4106                           ;LCD.c: 41:         y = temp & 0xF0;
  4107  0785  082A               	movf	Lcd_Set_Cursor@temp,w
  4108  0786  39F0               	andlw	240
  4109  0787  00A5               	movwf	??_Lcd_Set_Cursor
  4110  0788  0825               	movf	??_Lcd_Set_Cursor,w
  4111  0789  00A9               	movwf	Lcd_Set_Cursor@y
  4112  078A                     l1635:
  4113                           
  4114                           ;LCD.c: 42:         Lcd_Cmd(z);
  4115  078A  0828               	movf	Lcd_Set_Cursor@z,w
  4116  078B  120A  158A  25FB  120A  118A  	fcall	_Lcd_Cmd
  4117  0790                     l1637:
  4118                           
  4119                           ;LCD.c: 43:         Lcd_Cmd(y);
  4120  0790  1283               	bcf	3,5	;RP0=0, select bank0
  4121  0791  1303               	bcf	3,6	;RP1=0, select bank0
  4122  0792  0829               	movf	Lcd_Set_Cursor@y,w
  4123  0793  120A  158A  25FB  120A  118A  	fcall	_Lcd_Cmd
  4124  0798                     l177:
  4125  0798  0008               	return
  4126  0799                     __end_of_Lcd_Set_Cursor:
  4127                           
  4128                           	psect	text14
  4129  0FB2                     __ptext14:	
  4130 ;; *************** function _Lcd_Init *****************
  4131 ;; Defined at:
  4132 ;;		line 47 in file "LCD.c"
  4133 ;; Parameters:    Size  Location     Type
  4134 ;;		None
  4135 ;; Auto vars:     Size  Location     Type
  4136 ;;		None
  4137 ;; Return value:  Size  Location     Type
  4138 ;;                  1    wreg      void 
  4139 ;; Registers used:
  4140 ;;		wreg, status,2, status,0, pclath, cstack
  4141 ;; Tracked objects:
  4142 ;;		On entry : 0/0
  4143 ;;		On exit  : 0/0
  4144 ;;		Unchanged: 0/0
  4145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4146 ;;      Params:         0       0       0       0       0
  4147 ;;      Locals:         0       0       0       0       0
  4148 ;;      Temps:          0       2       0       0       0
  4149 ;;      Totals:         0       2       0       0       0
  4150 ;;Total ram usage:        2 bytes
  4151 ;; Hardware stack levels used:    1
  4152 ;; Hardware stack levels required when called:    4
  4153 ;; This function calls:
  4154 ;;		_Lcd_Cmd
  4155 ;;		_Lcd_Port
  4156 ;; This function is called by:
  4157 ;;		_main
  4158 ;; This function uses a non-reentrant model
  4159 ;;
  4160                           
  4161                           
  4162                           ;psect for function _Lcd_Init
  4163  0FB2                     _Lcd_Init:
  4164  0FB2                     l1607:	
  4165                           ;incstack = 0
  4166                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  4167                           
  4168                           
  4169                           ;LCD.c: 48:     Lcd_Port(0x00);
  4170  0FB2  3000               	movlw	0
  4171  0FB3  120A  158A  25B7  120A  158A  	fcall	_Lcd_Port
  4172  0FB8                     l1609:
  4173                           
  4174                           ;LCD.c: 49:     _delay((unsigned long)((20)*(4000000/4000.0)));
  4175  0FB8  301A               	movlw	26
  4176  0FB9  1283               	bcf	3,5	;RP0=0, select bank0
  4177  0FBA  1303               	bcf	3,6	;RP1=0, select bank0
  4178  0FBB  00A5               	movwf	??_Lcd_Init+1
  4179  0FBC  30F7               	movlw	247
  4180  0FBD  00A4               	movwf	??_Lcd_Init
  4181  0FBE                     u1857:
  4182  0FBE  0BA4               	decfsz	??_Lcd_Init,f
  4183  0FBF  2FBE               	goto	u1857
  4184  0FC0  0BA5               	decfsz	??_Lcd_Init+1,f
  4185  0FC1  2FBE               	goto	u1857
  4186  0FC2  2FC3               	nop2
  4187  0FC3                     l1611:
  4188                           
  4189                           ;LCD.c: 50:     Lcd_Cmd(0x30);
  4190  0FC3  3030               	movlw	48
  4191  0FC4  120A  158A  25FB  120A  158A  	fcall	_Lcd_Cmd
  4192                           
  4193                           ;LCD.c: 51:     _delay((unsigned long)((5)*(4000000/4000.0)));
  4194  0FC9  3007               	movlw	7
  4195  0FCA  1283               	bcf	3,5	;RP0=0, select bank0
  4196  0FCB  1303               	bcf	3,6	;RP1=0, select bank0
  4197  0FCC  00A5               	movwf	??_Lcd_Init+1
  4198  0FCD  307C               	movlw	124
  4199  0FCE  00A4               	movwf	??_Lcd_Init
  4200  0FCF                     u1867:
  4201  0FCF  0BA4               	decfsz	??_Lcd_Init,f
  4202  0FD0  2FCF               	goto	u1867
  4203  0FD1  0BA5               	decfsz	??_Lcd_Init+1,f
  4204  0FD2  2FCF               	goto	u1867
  4205  0FD3  0000               	nop
  4206  0FD4                     l1613:
  4207                           
  4208                           ;LCD.c: 52:     Lcd_Cmd(0x30);
  4209  0FD4  3030               	movlw	48
  4210  0FD5  120A  158A  25FB  120A  158A  	fcall	_Lcd_Cmd
  4211  0FDA                     l1615:
  4212                           
  4213                           ;LCD.c: 53:     _delay((unsigned long)((200)*(4000000/4000000.0)));
  4214  0FDA  3041               	movlw	65
  4215  0FDB  1283               	bcf	3,5	;RP0=0, select bank0
  4216  0FDC  1303               	bcf	3,6	;RP1=0, select bank0
  4217  0FDD  00A4               	movwf	??_Lcd_Init
  4218  0FDE                     u1877:
  4219  0FDE  0BA4               	decfsz	??_Lcd_Init,f
  4220  0FDF  2FDE               	goto	u1877
  4221  0FE0  2FE1               	nop2
  4222                           
  4223                           ;LCD.c: 54:     Lcd_Cmd(0x30);
  4224  0FE1  3030               	movlw	48
  4225  0FE2  120A  158A  25FB  120A  158A  	fcall	_Lcd_Cmd
  4226                           
  4227                           ;LCD.c: 56:     Lcd_Cmd(0x3C);
  4228  0FE7  303C               	movlw	60
  4229  0FE8  120A  158A  25FB  120A  158A  	fcall	_Lcd_Cmd
  4230                           
  4231                           ;LCD.c: 58:     Lcd_Cmd(0x08);
  4232  0FED  3008               	movlw	8
  4233  0FEE  120A  158A  25FB  120A  158A  	fcall	_Lcd_Cmd
  4234                           
  4235                           ;LCD.c: 60:     Lcd_Cmd(0x01);
  4236  0FF3  3001               	movlw	1
  4237  0FF4  120A  158A  25FB  120A  158A  	fcall	_Lcd_Cmd
  4238                           
  4239                           ;LCD.c: 62:     Lcd_Cmd(0x06);
  4240  0FF9  3006               	movlw	6
  4241  0FFA  120A  158A  25FB  120A  158A  	fcall	_Lcd_Cmd
  4242  0FFF                     l180:
  4243  0FFF  0008               	return
  4244  1000                     __end_of_Lcd_Init:
  4245                           
  4246                           	psect	text15
  4247  0DCD                     __ptext15:	
  4248 ;; *************** function _Lcd_Clear *****************
  4249 ;; Defined at:
  4250 ;;		line 25 in file "LCD.c"
  4251 ;; Parameters:    Size  Location     Type
  4252 ;;		None
  4253 ;; Auto vars:     Size  Location     Type
  4254 ;;		None
  4255 ;; Return value:  Size  Location     Type
  4256 ;;                  1    wreg      void 
  4257 ;; Registers used:
  4258 ;;		wreg, status,2, status,0, pclath, cstack
  4259 ;; Tracked objects:
  4260 ;;		On entry : 0/0
  4261 ;;		On exit  : 0/0
  4262 ;;		Unchanged: 0/0
  4263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4264 ;;      Params:         0       0       0       0       0
  4265 ;;      Locals:         0       0       0       0       0
  4266 ;;      Temps:          0       0       0       0       0
  4267 ;;      Totals:         0       0       0       0       0
  4268 ;;Total ram usage:        0 bytes
  4269 ;; Hardware stack levels used:    1
  4270 ;; Hardware stack levels required when called:    4
  4271 ;; This function calls:
  4272 ;;		_Lcd_Cmd
  4273 ;; This function is called by:
  4274 ;;		_main
  4275 ;; This function uses a non-reentrant model
  4276 ;;
  4277                           
  4278                           
  4279                           ;psect for function _Lcd_Clear
  4280  0DCD                     _Lcd_Clear:
  4281  0DCD                     l1617:	
  4282                           ;incstack = 0
  4283                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  4284                           
  4285                           
  4286                           ;LCD.c: 26:     Lcd_Cmd(0);
  4287  0DCD  3000               	movlw	0
  4288  0DCE  120A  158A  25FB  120A  158A  	fcall	_Lcd_Cmd
  4289                           
  4290                           ;LCD.c: 27:     Lcd_Cmd(1);
  4291  0DD3  3001               	movlw	1
  4292  0DD4  120A  158A  25FB  120A  158A  	fcall	_Lcd_Cmd
  4293  0DD9                     l171:
  4294  0DD9  0008               	return
  4295  0DDA                     __end_of_Lcd_Clear:
  4296                           
  4297                           	psect	text16
  4298  0DFB                     __ptext16:	
  4299 ;; *************** function _Lcd_Cmd *****************
  4300 ;; Defined at:
  4301 ;;		line 17 in file "LCD.c"
  4302 ;; Parameters:    Size  Location     Type
  4303 ;;  a               1    wreg     unsigned char 
  4304 ;; Auto vars:     Size  Location     Type
  4305 ;;  a               1    3[BANK0 ] unsigned char 
  4306 ;; Return value:  Size  Location     Type
  4307 ;;                  1    wreg      void 
  4308 ;; Registers used:
  4309 ;;		wreg, status,2, status,0, pclath, cstack
  4310 ;; Tracked objects:
  4311 ;;		On entry : 0/0
  4312 ;;		On exit  : 0/0
  4313 ;;		Unchanged: 0/0
  4314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4315 ;;      Params:         0       0       0       0       0
  4316 ;;      Locals:         0       1       0       0       0
  4317 ;;      Temps:          0       2       0       0       0
  4318 ;;      Totals:         0       3       0       0       0
  4319 ;;Total ram usage:        3 bytes
  4320 ;; Hardware stack levels used:    1
  4321 ;; Hardware stack levels required when called:    3
  4322 ;; This function calls:
  4323 ;;		_Lcd_Port
  4324 ;; This function is called by:
  4325 ;;		_Lcd_Clear
  4326 ;;		_Lcd_Set_Cursor
  4327 ;;		_Lcd_Init
  4328 ;;		_Lcd_Shift_Right
  4329 ;;		_Lcd_Shift_Left
  4330 ;; This function uses a non-reentrant model
  4331 ;;
  4332                           
  4333                           
  4334                           ;psect for function _Lcd_Cmd
  4335  0DFB                     _Lcd_Cmd:
  4336                           
  4337                           ;incstack = 0
  4338                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  4339                           ;Lcd_Cmd@a stored from wreg
  4340  0DFB  1283               	bcf	3,5	;RP0=0, select bank0
  4341  0DFC  1303               	bcf	3,6	;RP1=0, select bank0
  4342  0DFD  00A3               	movwf	Lcd_Cmd@a
  4343  0DFE                     l1461:
  4344                           
  4345                           ;LCD.c: 18:     RE0 = 0;
  4346  0DFE  1009               	bcf	9,0	;volatile
  4347  0DFF                     l1463:
  4348                           
  4349                           ;LCD.c: 19:     Lcd_Port(a);
  4350  0DFF  0823               	movf	Lcd_Cmd@a,w
  4351  0E00  120A  158A  25B7  120A  158A  	fcall	_Lcd_Port
  4352  0E05                     l1465:
  4353                           
  4354                           ;LCD.c: 20:     RE1 = 1;
  4355  0E05  1283               	bcf	3,5	;RP0=0, select bank0
  4356  0E06  1303               	bcf	3,6	;RP1=0, select bank0
  4357  0E07  1489               	bsf	9,1	;volatile
  4358  0E08                     l1467:
  4359                           
  4360                           ;LCD.c: 21:     _delay((unsigned long)((4)*(4000000/4000.0)));
  4361  0E08  3006               	movlw	6
  4362  0E09  1283               	bcf	3,5	;RP0=0, select bank0
  4363  0E0A  1303               	bcf	3,6	;RP1=0, select bank0
  4364  0E0B  00A2               	movwf	??_Lcd_Cmd+1
  4365  0E0C  302F               	movlw	47
  4366  0E0D  00A1               	movwf	??_Lcd_Cmd
  4367  0E0E                     u1887:
  4368  0E0E  0BA1               	decfsz	??_Lcd_Cmd,f
  4369  0E0F  2E0E               	goto	u1887
  4370  0E10  0BA2               	decfsz	??_Lcd_Cmd+1,f
  4371  0E11  2E0E               	goto	u1887
  4372  0E12  2E13               	nop2
  4373  0E13                     l1469:
  4374                           
  4375                           ;LCD.c: 22:     RE1 = 0;
  4376  0E13  1283               	bcf	3,5	;RP0=0, select bank0
  4377  0E14  1303               	bcf	3,6	;RP1=0, select bank0
  4378  0E15  1089               	bcf	9,1	;volatile
  4379  0E16                     l168:
  4380  0E16  0008               	return
  4381  0E17                     __end_of_Lcd_Cmd:
  4382                           
  4383                           	psect	text17
  4384  0DB7                     __ptext17:	
  4385 ;; *************** function _Lcd_Port *****************
  4386 ;; Defined at:
  4387 ;;		line 12 in file "LCD.c"
  4388 ;; Parameters:    Size  Location     Type
  4389 ;;  a               1    wreg     unsigned char 
  4390 ;; Auto vars:     Size  Location     Type
  4391 ;;  a               1    0[BANK0 ] unsigned char 
  4392 ;; Return value:  Size  Location     Type
  4393 ;;                  1    wreg      void 
  4394 ;; Registers used:
  4395 ;;		wreg
  4396 ;; Tracked objects:
  4397 ;;		On entry : 0/0
  4398 ;;		On exit  : 0/0
  4399 ;;		Unchanged: 0/0
  4400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4401 ;;      Params:         0       0       0       0       0
  4402 ;;      Locals:         0       1       0       0       0
  4403 ;;      Temps:          0       0       0       0       0
  4404 ;;      Totals:         0       1       0       0       0
  4405 ;;Total ram usage:        1 bytes
  4406 ;; Hardware stack levels used:    1
  4407 ;; Hardware stack levels required when called:    2
  4408 ;; This function calls:
  4409 ;;		Nothing
  4410 ;; This function is called by:
  4411 ;;		_Lcd_Cmd
  4412 ;;		_Lcd_Init
  4413 ;;		_Lcd_Write_Char
  4414 ;; This function uses a non-reentrant model
  4415 ;;
  4416                           
  4417                           
  4418                           ;psect for function _Lcd_Port
  4419  0DB7                     _Lcd_Port:
  4420                           
  4421                           ;incstack = 0
  4422                           ; Regs used in _Lcd_Port: [wreg]
  4423                           ;Lcd_Port@a stored from wreg
  4424  0DB7  1283               	bcf	3,5	;RP0=0, select bank0
  4425  0DB8  1303               	bcf	3,6	;RP1=0, select bank0
  4426  0DB9  00A0               	movwf	Lcd_Port@a
  4427  0DBA                     l1421:
  4428                           
  4429                           ;LCD.c: 13:     PORTD = a;
  4430  0DBA  0820               	movf	Lcd_Port@a,w
  4431  0DBB  0088               	movwf	8	;volatile
  4432  0DBC                     l165:
  4433  0DBC  0008               	return
  4434  0DBD                     __end_of_Lcd_Port:
  4435                           
  4436                           	psect	text18
  4437  07E8                     __ptext18:	
  4438 ;; *************** function _EUSART_ENVIAR *****************
  4439 ;; Defined at:
  4440 ;;		line 36 in file "./EUSART_LIB.h"
  4441 ;; Parameters:    Size  Location     Type
  4442 ;;  dato            1    wreg     unsigned char 
  4443 ;; Auto vars:     Size  Location     Type
  4444 ;;  dato            1    2[BANK0 ] unsigned char 
  4445 ;; Return value:  Size  Location     Type
  4446 ;;                  1    wreg      void 
  4447 ;; Registers used:
  4448 ;;		wreg
  4449 ;; Tracked objects:
  4450 ;;		On entry : 0/0
  4451 ;;		On exit  : 0/0
  4452 ;;		Unchanged: 0/0
  4453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4454 ;;      Params:         0       0       0       0       0
  4455 ;;      Locals:         0       1       0       0       0
  4456 ;;      Temps:          0       2       0       0       0
  4457 ;;      Totals:         0       3       0       0       0
  4458 ;;Total ram usage:        3 bytes
  4459 ;; Hardware stack levels used:    1
  4460 ;; Hardware stack levels required when called:    2
  4461 ;; This function calls:
  4462 ;;		Nothing
  4463 ;; This function is called by:
  4464 ;;		_main
  4465 ;; This function uses a non-reentrant model
  4466 ;;
  4467                           
  4468                           
  4469                           ;psect for function _EUSART_ENVIAR
  4470  07E8                     _EUSART_ENVIAR:
  4471                           
  4472                           ;incstack = 0
  4473                           ; Regs used in _EUSART_ENVIAR: [wreg]
  4474                           ;EUSART_ENVIAR@dato stored from wreg
  4475  07E8  1283               	bcf	3,5	;RP0=0, select bank0
  4476  07E9  1303               	bcf	3,6	;RP1=0, select bank0
  4477  07EA  00A2               	movwf	EUSART_ENVIAR@dato
  4478  07EB                     l1555:
  4479                           
  4480                           ;./EUSART_LIB.h: 37:     if (PIR1bits.TXIF){
  4481  07EB  1E0C               	btfss	12,4	;volatile
  4482  07EC  2FEE               	goto	u1051
  4483  07ED  2FEF               	goto	u1050
  4484  07EE                     u1051:
  4485  07EE  2FFB               	goto	l96
  4486  07EF                     u1050:
  4487  07EF                     l1557:
  4488                           
  4489                           ;./EUSART_LIB.h: 38:         TXREG = dato;
  4490  07EF  0822               	movf	EUSART_ENVIAR@dato,w
  4491  07F0  0099               	movwf	25	;volatile
  4492                           
  4493                           ;./EUSART_LIB.h: 39:         _delay((unsigned long)((10)*(4000000/4000.0)));}
  4494  07F1  300D               	movlw	13
  4495  07F2  1283               	bcf	3,5	;RP0=0, select bank0
  4496  07F3  1303               	bcf	3,6	;RP1=0, select bank0
  4497  07F4  00A1               	movwf	??_EUSART_ENVIAR+1
  4498  07F5  30FB               	movlw	251
  4499  07F6  00A0               	movwf	??_EUSART_ENVIAR
  4500  07F7                     u1897:
  4501  07F7  0BA0               	decfsz	??_EUSART_ENVIAR,f
  4502  07F8  2FF7               	goto	u1897
  4503  07F9  0BA1               	decfsz	??_EUSART_ENVIAR+1,f
  4504  07FA  2FF7               	goto	u1897
  4505  07FB                     l96:
  4506  07FB  0008               	return
  4507  07FC                     __end_of_EUSART_ENVIAR:
  4508                           
  4509                           	psect	text19
  4510  0799                     __ptext19:	
  4511 ;; *************** function _ADC_CHANNELS *****************
  4512 ;; Defined at:
  4513 ;;		line 29 in file "./ADC_LIB.h"
  4514 ;; Parameters:    Size  Location     Type
  4515 ;;  CANAL           2    0[BANK0 ] unsigned int 
  4516 ;;  VALOR_ADC       2    2[BANK0 ] unsigned int 
  4517 ;;  VALORA          1    4[BANK0 ] PTR unsigned int 
  4518 ;;		 -> POT1(2), POT0(2), 
  4519 ;; Auto vars:     Size  Location     Type
  4520 ;;		None
  4521 ;; Return value:  Size  Location     Type
  4522 ;;                  1    wreg      void 
  4523 ;; Registers used:
  4524 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4525 ;; Tracked objects:
  4526 ;;		On entry : 0/0
  4527 ;;		On exit  : 0/0
  4528 ;;		Unchanged: 0/0
  4529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4530 ;;      Params:         0       5       0       0       0
  4531 ;;      Locals:         0       0       0       0       0
  4532 ;;      Temps:          0       3       0       0       0
  4533 ;;      Totals:         0       8       0       0       0
  4534 ;;Total ram usage:        8 bytes
  4535 ;; Hardware stack levels used:    1
  4536 ;; Hardware stack levels required when called:    2
  4537 ;; This function calls:
  4538 ;;		Nothing
  4539 ;; This function is called by:
  4540 ;;		_main
  4541 ;; This function uses a non-reentrant model
  4542 ;;
  4543                           
  4544                           
  4545                           ;psect for function _ADC_CHANNELS
  4546  0799                     _ADC_CHANNELS:
  4547  0799                     l1529:	
  4548                           ;incstack = 0
  4549                           ; Regs used in _ADC_CHANNELS: [wreg-fsr0h+status,2+status,0]
  4550                           
  4551                           
  4552                           ;./ADC_LIB.h: 31:     switch (ADCON0bits.CHS){
  4553  0799  2FD2               	goto	l1549
  4554  079A                     l1531:
  4555                           
  4556                           ;./ADC_LIB.h: 33:             *VALORA = VALOR_ADC;
  4557  079A  0824               	movf	ADC_CHANNELS@VALORA,w
  4558  079B  0084               	movwf	4
  4559  079C  0822               	movf	ADC_CHANNELS@VALOR_ADC,w
  4560  079D  1383               	bcf	3,7	;select IRP bank0
  4561  079E  0080               	movwf	0
  4562  079F  0A84               	incf	4,f
  4563  07A0  0823               	movf	ADC_CHANNELS@VALOR_ADC+1,w
  4564  07A1  0080               	movwf	0
  4565  07A2                     l1533:
  4566                           
  4567                           ;./ADC_LIB.h: 34:             ADCON0bits.CHS = CANAL;
  4568  07A2  0820               	movf	ADC_CHANNELS@CANAL,w
  4569  07A3  00A5               	movwf	??_ADC_CHANNELS
  4570  07A4  0DA5               	rlf	??_ADC_CHANNELS,f
  4571  07A5  0DA5               	rlf	??_ADC_CHANNELS,f
  4572  07A6  081F               	movf	31,w	;volatile
  4573  07A7  0625               	xorwf	??_ADC_CHANNELS,w
  4574  07A8  39C3               	andlw	-61
  4575  07A9  0625               	xorwf	??_ADC_CHANNELS,w
  4576  07AA  009F               	movwf	31	;volatile
  4577  07AB                     l1535:
  4578                           
  4579                           ;./ADC_LIB.h: 35:             _delay((unsigned long)((50)*(4000000/4000000.0)));
  4580  07AB  300F               	movlw	15
  4581  07AC  1283               	bcf	3,5	;RP0=0, select bank0
  4582  07AD  1303               	bcf	3,6	;RP1=0, select bank0
  4583  07AE  00A5               	movwf	??_ADC_CHANNELS
  4584  07AF                     u1907:
  4585  07AF  0BA5               	decfsz	??_ADC_CHANNELS,f
  4586  07B0  2FAF               	goto	u1907
  4587  07B1  2FB2               	nop2
  4588  07B2                     l1537:
  4589                           
  4590                           ;./ADC_LIB.h: 36:             ADCON0bits.GO = 1;
  4591  07B2  1283               	bcf	3,5	;RP0=0, select bank0
  4592  07B3  1303               	bcf	3,6	;RP1=0, select bank0
  4593  07B4  149F               	bsf	31,1	;volatile
  4594                           
  4595                           ;./ADC_LIB.h: 37:             break;
  4596  07B5  2FE7               	goto	l89
  4597  07B6                     l1539:
  4598                           
  4599                           ;./ADC_LIB.h: 39:             *VALORA = VALOR_ADC;
  4600  07B6  0824               	movf	ADC_CHANNELS@VALORA,w
  4601  07B7  0084               	movwf	4
  4602  07B8  0822               	movf	ADC_CHANNELS@VALOR_ADC,w
  4603  07B9  1383               	bcf	3,7	;select IRP bank0
  4604  07BA  0080               	movwf	0
  4605  07BB  0A84               	incf	4,f
  4606  07BC  0823               	movf	ADC_CHANNELS@VALOR_ADC+1,w
  4607  07BD  0080               	movwf	0
  4608  07BE                     l1541:
  4609                           
  4610                           ;./ADC_LIB.h: 40:             ADCON0bits.CHS = CANAL;
  4611  07BE  0820               	movf	ADC_CHANNELS@CANAL,w
  4612  07BF  00A5               	movwf	??_ADC_CHANNELS
  4613  07C0  0DA5               	rlf	??_ADC_CHANNELS,f
  4614  07C1  0DA5               	rlf	??_ADC_CHANNELS,f
  4615  07C2  081F               	movf	31,w	;volatile
  4616  07C3  0625               	xorwf	??_ADC_CHANNELS,w
  4617  07C4  39C3               	andlw	-61
  4618  07C5  0625               	xorwf	??_ADC_CHANNELS,w
  4619  07C6  009F               	movwf	31	;volatile
  4620  07C7                     l1543:
  4621                           
  4622                           ;./ADC_LIB.h: 41:             _delay((unsigned long)((50)*(4000000/4000000.0)));
  4623  07C7  300F               	movlw	15
  4624  07C8  1283               	bcf	3,5	;RP0=0, select bank0
  4625  07C9  1303               	bcf	3,6	;RP1=0, select bank0
  4626  07CA  00A5               	movwf	??_ADC_CHANNELS
  4627  07CB                     u1917:
  4628  07CB  0BA5               	decfsz	??_ADC_CHANNELS,f
  4629  07CC  2FCB               	goto	u1917
  4630  07CD  2FCE               	nop2
  4631  07CE                     l1545:
  4632                           
  4633                           ;./ADC_LIB.h: 42:             ADCON0bits.GO = 1;
  4634  07CE  1283               	bcf	3,5	;RP0=0, select bank0
  4635  07CF  1303               	bcf	3,6	;RP1=0, select bank0
  4636  07D0  149F               	bsf	31,1	;volatile
  4637                           
  4638                           ;./ADC_LIB.h: 43:             break;
  4639  07D1  2FE7               	goto	l89
  4640  07D2                     l1549:
  4641  07D2  1283               	bcf	3,5	;RP0=0, select bank0
  4642  07D3  1303               	bcf	3,6	;RP1=0, select bank0
  4643  07D4  0C1F               	rrf	31,w	;volatile
  4644  07D5  00A5               	movwf	??_ADC_CHANNELS
  4645  07D6  0C25               	rrf	??_ADC_CHANNELS,w
  4646  07D7  390F               	andlw	15
  4647  07D8  00A6               	movwf	??_ADC_CHANNELS+1
  4648  07D9  01A7               	clrf	??_ADC_CHANNELS+2
  4649                           
  4650                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4651                           ; Switch size 1, requested type "simple"
  4652                           ; Number of cases is 1, Range of values is 0 to 0
  4653                           ; switch strategies available:
  4654                           ; Name         Instructions Cycles
  4655                           ; simple_byte            4     3 (average)
  4656                           ; direct_byte           11     8 (fixed)
  4657                           ; jumptable            260     6 (fixed)
  4658                           ;	Chosen strategy is simple_byte
  4659  07DA  0827               	movf	??_ADC_CHANNELS+2,w
  4660  07DB  3A00               	xorlw	0	; case 0
  4661  07DC  1903               	skipnz
  4662  07DD  2FDF               	goto	l2045
  4663  07DE  2FE7               	goto	l89
  4664  07DF                     l2045:
  4665                           
  4666                           ; Switch size 1, requested type "simple"
  4667                           ; Number of cases is 2, Range of values is 0 to 1
  4668                           ; switch strategies available:
  4669                           ; Name         Instructions Cycles
  4670                           ; simple_byte            7     4 (average)
  4671                           ; direct_byte           14     8 (fixed)
  4672                           ; jumptable            260     6 (fixed)
  4673                           ;	Chosen strategy is simple_byte
  4674  07DF  0826               	movf	??_ADC_CHANNELS+1,w
  4675  07E0  3A00               	xorlw	0	; case 0
  4676  07E1  1903               	skipnz
  4677  07E2  2F9A               	goto	l1531
  4678  07E3  3A01               	xorlw	1	; case 1
  4679  07E4  1903               	skipnz
  4680  07E5  2FB6               	goto	l1539
  4681  07E6  2FE7               	goto	l89
  4682  07E7                     l89:
  4683  07E7  0008               	return
  4684  07E8                     __end_of_ADC_CHANNELS:
  4685                           
  4686                           	psect	text20
  4687  0EFA                     __ptext20:	
  4688 ;; *************** function _isr *****************
  4689 ;; Defined at:
  4690 ;;		line 62 in file "main.c"
  4691 ;; Parameters:    Size  Location     Type
  4692 ;;		None
  4693 ;; Auto vars:     Size  Location     Type
  4694 ;;		None
  4695 ;; Return value:  Size  Location     Type
  4696 ;;                  1    wreg      void 
  4697 ;; Registers used:
  4698 ;;		wreg, status,2, status,0, pclath, cstack
  4699 ;; Tracked objects:
  4700 ;;		On entry : 0/0
  4701 ;;		On exit  : 0/0
  4702 ;;		Unchanged: 0/0
  4703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4704 ;;      Params:         0       0       0       0       0
  4705 ;;      Locals:         0       0       0       0       0
  4706 ;;      Temps:          3       0       0       0       0
  4707 ;;      Totals:         3       0       0       0       0
  4708 ;;Total ram usage:        3 bytes
  4709 ;; Hardware stack levels used:    1
  4710 ;; Hardware stack levels required when called:    1
  4711 ;; This function calls:
  4712 ;;		_ADC_READ
  4713 ;; This function is called by:
  4714 ;;		Interrupt level 1
  4715 ;; This function uses a non-reentrant model
  4716 ;;
  4717                           
  4718                           
  4719                           ;psect for function _isr
  4720  0EFA                     _isr:
  4721  0EFA                     i1l1883:
  4722                           
  4723                           ;main.c: 63:     (INTCONbits.GIE = 0);
  4724  0EFA  138B               	bcf	11,7	;volatile
  4725                           
  4726                           ;main.c: 64:      if (ADIF == 1){
  4727  0EFB  1283               	bcf	3,5	;RP0=0, select bank0
  4728  0EFC  1303               	bcf	3,6	;RP1=0, select bank0
  4729  0EFD  1F0C               	btfss	12,6	;volatile
  4730  0EFE  2F00               	goto	u172_21
  4731  0EFF  2F01               	goto	u172_20
  4732  0F00                     u172_21:
  4733  0F00  2F0D               	goto	i1l1889
  4734  0F01                     u172_20:
  4735  0F01                     i1l1885:
  4736                           
  4737                           ;main.c: 66:         VALOR_ADC = ADC_READ();
  4738  0F01  120A  158A  25DA  120A  158A  	fcall	_ADC_READ
  4739  0F06  0871               	movf	?_ADC_READ+1,w
  4740  0F07  1283               	bcf	3,5	;RP0=0, select bank0
  4741  0F08  1303               	bcf	3,6	;RP1=0, select bank0
  4742  0F09  00D6               	movwf	_VALOR_ADC+1
  4743  0F0A  0870               	movf	?_ADC_READ,w
  4744  0F0B  00D5               	movwf	_VALOR_ADC
  4745  0F0C                     i1l1887:
  4746                           
  4747                           ;main.c: 67:         PIR1bits.ADIF = 0;
  4748  0F0C  130C               	bcf	12,6	;volatile
  4749  0F0D                     i1l1889:
  4750                           
  4751                           ;main.c: 69:     if (T0IF == 1){
  4752  0F0D  1D0B               	btfss	11,2	;volatile
  4753  0F0E  2F10               	goto	u173_21
  4754  0F0F  2F11               	goto	u173_20
  4755  0F10                     u173_21:
  4756  0F10  2F14               	goto	i1l1895
  4757  0F11                     u173_20:
  4758  0F11                     i1l1891:
  4759                           
  4760                           ;main.c: 70:         TMR0 = 100;
  4761  0F11  3064               	movlw	100
  4762  0F12  0081               	movwf	1	;volatile
  4763  0F13                     i1l1893:
  4764                           
  4765                           ;main.c: 71:         INTCONbits.T0IF = 0;
  4766  0F13  110B               	bcf	11,2	;volatile
  4767  0F14                     i1l1895:
  4768                           
  4769                           ;main.c: 73:     if (PIR1bits.RCIF){
  4770  0F14  1E8C               	btfss	12,5	;volatile
  4771  0F15  2F17               	goto	u174_21
  4772  0F16  2F18               	goto	u174_20
  4773  0F17                     u174_21:
  4774  0F17  2F28               	goto	i1l1903
  4775  0F18                     u174_20:
  4776  0F18                     i1l1897:
  4777                           
  4778                           ;main.c: 74:         if (RCREG == 43 || RCREG == 45 ){
  4779  0F18  302B               	movlw	43
  4780  0F19  061A               	xorwf	26,w	;volatile
  4781  0F1A  1903               	btfsc	3,2
  4782  0F1B  2F1D               	goto	u175_21
  4783  0F1C  2F1E               	goto	u175_20
  4784  0F1D                     u175_21:
  4785  0F1D  2F24               	goto	i1l1901
  4786  0F1E                     u175_20:
  4787  0F1E                     i1l1899:
  4788  0F1E  302D               	movlw	45
  4789  0F1F  061A               	xorwf	26,w	;volatile
  4790  0F20  1D03               	btfss	3,2
  4791  0F21  2F23               	goto	u176_21
  4792  0F22  2F24               	goto	u176_20
  4793  0F23                     u176_21:
  4794  0F23  2F28               	goto	i1l1903
  4795  0F24                     u176_20:
  4796  0F24                     i1l1901:
  4797                           
  4798                           ;main.c: 75:                 OPCION = RCREG;
  4799  0F24  081A               	movf	26,w	;volatile
  4800  0F25  00F6               	movwf	??_isr
  4801  0F26  0876               	movf	??_isr,w
  4802  0F27  00D7               	movwf	_OPCION
  4803  0F28                     i1l1903:
  4804                           
  4805                           ;main.c: 79:     (INTCONbits.GIE = 1);
  4806  0F28  178B               	bsf	11,7	;volatile
  4807  0F29                     i1l129:
  4808  0F29  0878               	movf	??_isr+2,w
  4809  0F2A  008A               	movwf	10
  4810  0F2B  0E77               	swapf	??_isr+1,w
  4811  0F2C  0083               	movwf	3
  4812  0F2D  0EFE               	swapf	btemp,f
  4813  0F2E  0E7E               	swapf	btemp,w
  4814  0F2F  0009               	retfie
  4815  0F30                     __end_of_isr:
  4816                           
  4817                           	psect	intentry
  4818  0004                     __pintentry:	
  4819                           ;incstack = 0
  4820                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  4821                           
  4822  0004                     interrupt_function:
  4823  007E                     saved_w	set	btemp
  4824  0004  00FE               	movwf	btemp
  4825  0005  0E03               	swapf	3,w
  4826  0006  00F7               	movwf	??_isr+1
  4827  0007  080A               	movf	10,w
  4828  0008  00F8               	movwf	??_isr+2
  4829  0009  120A  158A  2EFA   	ljmp	_isr
  4830                           
  4831                           	psect	text21
  4832  0DDA                     __ptext21:	
  4833 ;; *************** function _ADC_READ *****************
  4834 ;; Defined at:
  4835 ;;		line 24 in file "./ADC_LIB.h"
  4836 ;; Parameters:    Size  Location     Type
  4837 ;;		None
  4838 ;; Auto vars:     Size  Location     Type
  4839 ;;  LECT            2    4[COMMON] unsigned int 
  4840 ;; Return value:  Size  Location     Type
  4841 ;;                  2    0[COMMON] unsigned int 
  4842 ;; Registers used:
  4843 ;;		wreg
  4844 ;; Tracked objects:
  4845 ;;		On entry : 0/0
  4846 ;;		On exit  : 0/0
  4847 ;;		Unchanged: 0/0
  4848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4849 ;;      Params:         2       0       0       0       0
  4850 ;;      Locals:         2       0       0       0       0
  4851 ;;      Temps:          2       0       0       0       0
  4852 ;;      Totals:         6       0       0       0       0
  4853 ;;Total ram usage:        6 bytes
  4854 ;; Hardware stack levels used:    1
  4855 ;; This function calls:
  4856 ;;		Nothing
  4857 ;; This function is called by:
  4858 ;;		_isr
  4859 ;; This function uses a non-reentrant model
  4860 ;;
  4861                           
  4862                           
  4863                           ;psect for function _ADC_READ
  4864  0DDA                     _ADC_READ:
  4865  0DDA                     i1l1525:	
  4866                           ;incstack = 0
  4867                           ; Regs used in _ADC_READ: [wreg]
  4868                           
  4869                           
  4870                           ;./ADC_LIB.h: 25:     unsigned int LECT;;./ADC_LIB.h: 26:     LECT = ADRESH;
  4871  0DDA  1283               	bcf	3,5	;RP0=0, select bank0
  4872  0DDB  1303               	bcf	3,6	;RP1=0, select bank0
  4873  0DDC  081E               	movf	30,w	;volatile
  4874  0DDD  00F2               	movwf	??_ADC_READ
  4875  0DDE  01F3               	clrf	??_ADC_READ+1
  4876  0DDF  0872               	movf	??_ADC_READ,w
  4877  0DE0  00F4               	movwf	ADC_READ@LECT
  4878  0DE1  0873               	movf	??_ADC_READ+1,w
  4879  0DE2  00F5               	movwf	ADC_READ@LECT+1
  4880                           
  4881                           ;./ADC_LIB.h: 27:     return LECT;
  4882  0DE3  0875               	movf	ADC_READ@LECT+1,w
  4883  0DE4  00F1               	movwf	?_ADC_READ+1
  4884  0DE5  0874               	movf	ADC_READ@LECT,w
  4885  0DE6  00F0               	movwf	?_ADC_READ
  4886  0DE7                     i1l82:
  4887  0DE7  0008               	return
  4888  0DE8                     __end_of_ADC_READ:
  4889  007E                     btemp	set	126	;btemp
  4890  007E                     wtemp0	set	126
  4891                           
  4892                           	psect	config
  4893                           
  4894                           ;Config register CONFIG1 @ 0x2007
  4895                           ;	Oscillator Selection bits
  4896                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
  4897                           ;	Watchdog Timer Enable bit
  4898                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4899                           ;	Power-up Timer Enable bit
  4900                           ;	PWRTE = OFF, PWRT disabled
  4901                           ;	RE3/MCLR pin function select bit
  4902                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4903                           ;	Code Protection bit
  4904                           ;	CP = OFF, Program memory code protection is disabled
  4905                           ;	Data Code Protection bit
  4906                           ;	CPD = OFF, Data memory code protection is disabled
  4907                           ;	Brown Out Reset Selection bits
  4908                           ;	BOREN = OFF, BOR disabled
  4909                           ;	Internal External Switchover bit
  4910                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4911                           ;	Fail-Safe Clock Monitor Enabled bit
  4912                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4913                           ;	Low Voltage Programming Enable bit
  4914                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4915                           ;	In-Circuit Debugger Mode bit
  4916                           ;	DEBUG = 0x1, unprogrammed default
  4917  2007                     	org	8199
  4918  2007  20D5               	dw	8405
  4919                           
  4920                           ;Config register CONFIG2 @ 0x2008
  4921                           ;	Brown-out Reset Selection bit
  4922                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4923                           ;	Flash Program Memory Self Write Enable bits
  4924                           ;	WRT = OFF, Write protection off
  4925  2008                     	org	8200
  4926  2008  3FFF               	dw	16383

Data Sizes:
    Strings     25
    Constant    0
    Data        16
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9       9
    BANK0            80     53      73
    BANK1            80      0       8
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_3(CODE[5]), STR_2(CODE[3]), STR_1(CODE[17]), 

    ADC_CHANNELS@VALORA	PTR unsigned int  size(1) Largest target is 2
		 -> POT1(BANK0[2]), POT0(BANK0[2]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_ADC_READ

Critical Paths under _main in BANK0

    _main->___fltol
    _setup->_EUSART_INIT
    ___fltol->___flmul
    ___flmul->___xxtofl
    _VAL->___lwdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    6498
                                             51 BANK0      2     2      0
                       _ADC_CHANNELS
                      _EUSART_ENVIAR
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                                _VAL
                            ___flmul
                            ___fltol
                           ___xxtofl
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     294
                           _ADC_INIT
                        _EUSART_INIT
 ---------------------------------------------------------------------------------
 (2) _EUSART_INIT                                          4     0      4     196
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) _ADC_INIT                                             3     1      2      98
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     474
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             11     7      4     381
                                             40 BANK0     11     7      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             26    18      8    2569
                                             14 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) __Umul8_16                                            9     7      2     799
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (1) _VAL                                                  6     4      2    1225
                                              8 BANK0      6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     396
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     466
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     279
                                              5 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0      90
                                              1 BANK0      4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     466
                                              4 BANK0      7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      66
                                              4 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      44
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      44
                                              1 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART_ENVIAR                                        3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _ADC_CHANNELS                                         8     3      5     588
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  3     3      0      23
                                              6 COMMON     3     3      0
                           _ADC_READ
 ---------------------------------------------------------------------------------
 (5) _ADC_READ                                             6     4      2      23
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_CHANNELS
   _EUSART_ENVIAR
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _VAL
     ___lwdiv
     ___wmul
   ___flmul
     __Umul8_16
     ___xxtofl (ARG)
   ___fltol
     ___flmul (ARG)
       __Umul8_16
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _setup
     _ADC_INIT
     _EUSART_INIT

 _isr (ROOT)
   _ADC_READ

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       8       7       10.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     35      49       5       91.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      9       9       1       64.3%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      5A      12        0.0%
ABS                  0      0      5A       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Jul 27 00:10:20 2021

                        pc 0002                         _S1 0061                         l92 0EA7  
                       _S2 00A0                         l79 0E59                         l96 07FB  
                       l89 07E7                         fsr 0004        ___wmul@multiplicand 0022  
      __Umul8_16@word_mpld 0026                        l141 0554                        l151 0F6B  
                      l154 0740                        l171 0DD9                        l180 0FFF  
                      l165 0DBC                        l183 0E36                        l168 0E16  
                      l177 0798                        l281 0E68                        l283 0E80  
                      l189 0ED0                        l720 05FE                        l553 0FB1  
                      l474 06B7                        l714 05B9                        l467 06CC  
                      l716 0650                        l477 06CC                        l670 039A  
                      l727 061A                        l728 0626                        l682 038E  
                      l691 0EF9                        l676 0306                        l689 0EE7  
                      _RE0 0048                        _RE1 0049                        u910 0E62  
                      _VAL 06CD                        u911 0E61                        u940 0E7C  
                      u941 0E7B                        u925 0E69                        u950 0F76  
                      u951 0F75                        u935 0E70                        u970 0F88  
                      u971 0F87                        u965 0F7A                        u990 0F99  
                      u991 0F98                        u985 0F89                        u995 0F95  
                      _isr 0EFA                        fsr0 0004                        indf 0000  
             ___flmul@aexp 0040               ___flmul@bexp 0041               ___flmul@sign 003B  
             ?_EUSART_INIT 0020               ___flmul@temp 0046               ___flmul@prod 0042  
                     ?_VAL 0028               ___fltol@exp1 0052                       l2043 056D  
                     l2045 07DF                       l1421 0DBA                       l1501 0F9F  
                     l1503 0FA0                       l1511 0ED4                       l1431 0E50  
                     l1423 0E37                       l1505 0FA7                       l1521 0EF5  
                     l1513 0ED6                       l1433 0E53                       l1425 0E3A  
                     l1441 0E81                       l1601 0F68                       l1531 079A  
                     l1611 0FC3                       l1451 0E22                       l1507 0FAD  
                     l1515 0EDD                       l1435 0E54                       l1427 0E43  
                     l1443 0E8F                       l1603 0F69                       l1541 07BE  
                     l1533 07A2                       l1461 0DFE                       l1613 0FD4  
                     l1621 0749                       l1453 0E23                       l1517 0EE1  
                     l1701 0041                       l1437 0E55                       l1429 0E4A  
                     l1445 0E95                       l1605 0F6A                       l1543 07C7  
                     l1535 07AB                       l1463 0DFF                       l1615 0FDA  
                     l1607 0FB2                       l1631 0774                       l1623 075A  
                     l1455 0E29                       l1471 0E5A                       l1519 0EF0  
                     l1711 0056                       l1703 0047                       l1439 0E56  
                     l1447 0E9E                       l1545 07CE                       l1537 07B2  
                     l1529 0799                       l1465 0E05                       l1617 0DCD  
                     l1609 0FB8                       l1633 0785                       l1625 075F  
                     l1457 0E2C                       l1449 0E1A                       l1641 0EAE  
                     l1481 0E7C                       l1473 0E5E                       l1801 02EF  
                     l1721 0073                       l1713 005E                       l1705 004B  
                     l1561 0F34                       l1539 07B6                       l1555 07EB  
                     l1467 0E08                       l1635 078A                       l1627 0765  
                     l1619 0744                       l1459 0E33                       l1643 0EBB  
                     l1491 0F79                       l1475 0E62                       l1651 06E6  
                     l1811 031E                       l1803 0303                       l1731 008A  
                     l1723 0077                       l1715 0060                       l1707 004C  
                     l1571 0F3D                       l1563 0F35                       l1549 07D2  
                     l1557 07EF                       l1469 0E13                       l1637 0790  
                     l1629 076E                       l1645 0EC3                       l1493 0F80  
                     l1485 0F6C                       l1477 0E6F                       l1661 073B  
                     l1653 0700                       l1821 0359                       l1813 0322  
                     l1733 008C                       l1725 0078                       l1717 0068  
                     l1709 0051                       l1581 0F44                       l1573 0F3E  
                     l1565 0F39                       l1639 0EAB                       l1495 0F84  
                     l1487 0F70                       l1479 0E76                       l1655 0713  
                     l1647 06CD                       l1831 0386                       l1823 0368  
                     l1815 033B                       l1807 030B                       l1751 00FD  
                     l1743 00A7                       l1735 0094                       l1727 007D  
                     l1719 006D                       l1671 067C                       l1663 0651  
                     l1591 0F4B                       l1583 0F45                       l1575 0F41  
                     l1567 0F3B                       l1559 0F30                       l1911 03BD  
                     l1497 0F88                       l1489 0F76                       l1657 0731  
                     l1649 06D3                       l1833 0387                       l1825 0372  
                     l1809 0310                       l1817 0341                       l1761 017A  
                     l1753 0129                       l1745 00B7                       l1737 0099  
                     l1729 0082                       l1673 067D                       l1665 065E  
                     l1841 059D                       l1593 0F4D                       l1585 0F48  
                     l1577 0F42                       l1569 0F3C                       l1921 0425  
                     l1913 03D0                       l1905 039B                       l1499 0F99  
                     l1659 0736                       l1835 0392                       l1827 0374  
                     l1819 034E                       l1771 01FA                       l1763 0197  
                     l1755 0145                       l1747 00C4                       l1739 009E  
                     l1675 0685                       l1851 05CA                       l1843 05A1  
                     l1595 0F51                       l1587 0F49                       l1579 0F43  
                     l1923 042B                       l1915 040A                       l1907 03B4  
                     l1829 0382                       l1781 02B2                       l1773 0227  
                     l1765 01A7                       l1757 0161                       l1749 00E1  
                     l1693 06AC                       l1685 0693                       l1677 0687  
                     l1669 0667                       l1861 05F5                       l1853 05CF  
                     l1845 05B1                       l1597 0F59                       l1589 0F4A  
                     l1941 045A                       l1933 043E                       l1925 0433  
                     l1917 0413                       l1909 03BA                       l1791 02D7  
                     l1783 02BB                       l1775 0237                       l1767 01C4  
                     l1759 016A                       l1695 06BC                       l1679 068B  
                     l1687 06A5                       l1871 0628                       l1863 0605  
                     l1855 05DC                       l1847 05C1                       l1839 0598  
                     l1599 0F67                       l1951 04DD                       l1943 0482  
                     l1935 0444                       l1927 043B                       l1919 041D  
                     l1793 02E0                       l1785 02C9                       l1777 0264  
                     l1769 01DD                       l1697 06C1                       l1873 063E  
                     l1865 0610                       l1857 05E3                       l1961 0501  
                     l1953 04E5                       l1945 0488                       l1937 044E  
                     l1787 02D2                       l1795 02E6                       l1779 028A  
                     l1699 003A                       l1875 0643                       l1867 0614  
                     l1859 05E7                       l1971 0514                       l1955 04EB  
                     l1947 049A                       l1939 0454                       l1797 02EA  
                     l1789 02D6                       l1877 0647                       l1869 061E  
                     l1981 0556                       l1973 051A                       l1957 04F3  
                     l1949 04D4                       l1799 02EB                       l1879 0648  
                     l1983 055B                       l1991 0563                       l1975 0520  
                     l1967 0504                       l1959 04FB                       l1985 0560  
                     l1993 0575                       l1977 0549                       l1969 050A  
                     l1979 0553                       _ADIF 0066                       ?_isr 0070  
                     STR_1 0806                       STR_2 081C                       STR_3 0817  
                     _DATO 0059                       _T0IF 005A                       u1010 0FAD  
                     u1011 0FAC                       u1100 0ED0                       u1020 0EE1  
                     u1101 0ECF                       u1005 0FA1                       u1021 0EE0  
                     u1110 065E                       u1111 065D                       u1040 0EF5  
                     u1200 06C1                       u1120 0675                       u1041 0EF4  
                     u1201 06C0                       u1050 07EF                       u1210 004B  
                     u1130 068B                       u1051 07EE                       u1035 0EE8  
                     u1211 004A                       u1131 068A                       u1060 0749  
                     u1220 0051                       u1140 0692                       u1061 0748  
                     u1301 010B                       u1221 0050                       u1141 0691  
                     u1125 0670                       u1302 0112                       u1230 0056  
                     u1311 0137                       u1303 0119                       u1231 0055  
                     u1080 0774                       u1400 0270                       u1312 013E  
                     u1240 0077                       u1160 06A4                       u1081 0773  
                     u1321 0153                       u1313 0145                       u1241 0076  
                     u1161 06A3                       u1322 015A                       u1250 007D  
                     u1170 06AB                       u1075 0751                       u1411 027C  
                     u1323 0161                       u1251 007C                       u1171 06AA  
                     u1155 0694                       u1500 0303                       u1420 0298  
                     u1412 0283                       u1260 0082                       u1501 0302  
                     u1413 028A                       u1405 026B                       u1341 0189  
                     u1261 0081                       u1510 030A                       u1342 0190  
                     u1270 0099                       u1190 06BC                       u1095 077C  
                     u1511 0309                       u1431 02A4                       u1351 01B6  
                     u1343 0197                       u1335 0163                       u1271 0098  
                     u1191 06BB                       u1520 0310                       u1432 02AB  
                     u1352 01BD                       u1280 009E                       u1600 05C1  
                     u1521 030F                       u1433 02B2                       u1425 0293  
                     u1353 01C4                       u1281 009D                       u1185 06AE  
                     u1601 05C0                       u1530 0322                       u1531 0321  
                     u1371 01EC                       u1291 00EF                       u1540 0331  
                     u1460 02D6                       u1372 01F3                       u1292 00F6  
                     u1700 0643                       u1620 05E2                       u1461 02D5  
                     u1445 02B4                       u1381 0219                       u1373 01FA  
                     u1365 01C6                       u1293 00FD                       u1701 0642  
                     u1621 05E1                       u1550 034E                       u1382 0220  
                     u1710 0647                       u1551 034D                       u1455 02CB  
                     u1391 0246                       u1383 0227                       u1711 0646  
                     u1615 05D4                       u1560 0368                       u1480 02EA  
                     u1392 024D                       u1640 0604                       u1800 055B  
                     u1561 0367                       u1545 032C                       u1481 02E9  
                     u1393 0254                       u1641 0603                       u1801 055A  
                     u1570 0386                       u1490 02EF                       u1571 0385  
                     u1555 034A                       u1491 02EE                       u1475 02D9  
                     u1635 05F6                       u1660 0614                       u1580 059D  
                     u1565 0364                       u1661 0613                       u1581 059C  
                     u1670 061A                       u1590 05A1                       u1671 0619  
                     u1655 0609                       u1591 05A0                       u1680 061E  
                     u1681 061D                       u1817 044A                       u1690 0633  
                     u1770 045A                       u1907 07AF                       u1827 0510  
                     u1771 0459                       u1780 0520                       u1917 07CB  
                     u1837 0E47                       u1781 051F                       u1790 0553  
                     u1847 0E30                       u1695 062E                       u1791 0552  
                     u1857 0FBE                       u1867 0FCF                       u1877 0FDE  
                     u1887 0E0E                       u1897 07F7                       i1l82 0DE7  
                     _POS1 005C                       _POT0 005F                       _POS2 005B  
                     _POT1 005D                       _POS3 005A                       _TMR0 0001  
             _ADC_CHANNELS 0799          ?_Lcd_Write_String 0070           __end_of_ADC_INIT 0E5A  
         __end_of_ADC_READ 0DE8                       _main 039B                       btemp 007E  
                     start 000C         ??_Lcd_Write_String 0025            __end_of_Lcd_Cmd 0E17  
                    ??_VAL 002A              _EUSART_ENVIAR 07E8                      ??_isr 0076  
            ___fltol@sign1 0051                      ?_main 0070            __end_of___flmul 039B  
          __end_of___fltol 06CD                      _ANSEL 0188            __end_of___lwdiv 0FB2  
                    i1l129 0F29                      _RCREG 001A                      _SPBRG 0099  
                    _PORTA 0005                      _PORTB 0006                      _PORTC 0007  
                    _PORTD 0008                      _PORTE 0009    __size_of_Lcd_Set_Cursor 0058  
                    _TRISA 0085                      _TRISB 0086                      _TRISC 0087  
                    _TRISD 0088                      _TRISE 0089                      _TXREG 0019  
                    _setup 0F30                      pclath 000A                      status 0003  
                    wtemp0 007E           __end_of_Lcd_Init 1000           __end_of_Lcd_Port 0DBD  
          __initialization 000F             ?_EUSART_ENVIAR 0070               __end_of_main 0595  
                   ??_main 0053         __size_of_Lcd_Clear 000D                     _ADRESH 001E  
                   ?_setup 0070                     _ANSELH 0189                     i1l1525 0DDA  
                   i1l1901 0F24                     i1l1903 0F28                     i1l1891 0F11  
                   i1l1883 0EFA                     i1l1893 0F13                     i1l1885 0F01  
                   i1l1895 0F14                     i1l1887 0F0C                     i1l1897 0F18  
                   i1l1889 0F0D                     i1l1899 0F1E                     u172_20 0F01  
                   u172_21 0F00                     u173_20 0F11                     u173_21 0F10  
                   u174_20 0F18                     u174_21 0F17                     u175_20 0F1E  
                   u175_21 0F1D                     u176_20 0F24                     u176_21 0F23  
                   _OPCION 0057                  ??_Lcd_Cmd 0021                     _SPBRGH 009A  
  __size_of_Lcd_Write_Char 0020           __end_of___xxtofl 0651                     ___wmul 0E5A  
                ??___flmul 0036                  ??___fltol 004C                  ??___lwdiv 0024  
                ?_ADC_INIT 0020                  ?_ADC_READ 0070         __size_of__Umul8_16 0029  
                   saved_w 007E            Lcd_Set_Cursor@a 0027            Lcd_Set_Cursor@b 0024  
          Lcd_Set_Cursor@y 0029            Lcd_Set_Cursor@z 0028       __size_of_EUSART_INIT 0027  
             ___xxtofl@arg 002A               ___xxtofl@exp 0029               ___xxtofl@val 0020  
  __end_of__initialization 0036          __end_of_Lcd_Clear 0DDA                 ___fltol@f1 0048  
          ??_EUSART_ENVIAR 0020             __pcstackCOMMON 0070          ADC_CHANNELS@CANAL 0020  
             __pidataBANK0 0DC5               __pidataBANK1 0DBD               ADC_READ@LECT 0074  
            __end_of_setup 0F6C             _Lcd_Set_Cursor 0741                 ??_ADC_INIT 0022  
               ??_ADC_READ 0072                  ?_Lcd_Init 0070                  ?_Lcd_Port 0070  
                  ??_setup 0024                 __pbssBANK0 0055          __end_of__Umul8_16 0EFA  
               __pmaintext 039B                    ?___wmul 0020                 __pintentry 0004  
__size_of_Lcd_Write_String 0029     __end_of_Lcd_Set_Cursor 0799                  ?___xxtofl 0020  
               ??_Lcd_Init 0024                 ??_Lcd_Port 0020                 __stringtab 0800  
           _Lcd_Write_Char 0E17                    _Lcd_Cmd 0DFB                VAL@variable 0028  
    ADC_CHANNELS@VALOR_ADC 0022                    ___flmul 003A                    ___fltol 0651  
          __size_of___wmul 0027                    ___lwdiv 0F6C            ?_Lcd_Set_Cursor 0024  
                  __ptext1 0F30                    __ptext2 0E81                    __ptext3 0E37  
                  __ptext4 0595                    __ptext5 0651                    __ptext6 003A  
                  __ptext7 0ED1                    __ptext8 06CD                    __ptext9 0E5A  
            EUSART_INIT@rx 0022              EUSART_INIT@tx 0020               __size_of_VAL 0074  
             __size_of_isr 0036                 ??___xxtofl 0024     __end_of_Lcd_Write_Char 0E37  
     end_of_initialization 0036                  _RCSTAbits 0018                  _VALOR_ADC 0055  
                Lcd_Port@a 0020              ___xxtofl@sign 0028          __size_of_ADC_INIT 0023  
        __size_of_ADC_READ 000E            ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0027  
        Lcd_Write_String@i 0025                ___flmul@grs 003C                  _TXSTAbits 0098  
                _Lcd_Clear 0DCD             __end_of___wmul 0E81           _Lcd_Write_String 0EA8  
       ADC_CHANNELS@VALORA 0024                _BAUDCTLbits 0187              ADC_INIT@canal 0020  
      start_initialization 000F                __end_of_VAL 0741              ??_EUSART_INIT 0024  
              __end_of_isr 0F30              ?_ADC_CHANNELS 0020          __size_of_Lcd_Init 004E  
        __size_of_Lcd_Port 0006      __end_of_EUSART_ENVIAR 07FC                 ?_Lcd_Clear 0070  
                 ??___wmul 0024                 init_fetch0 0DE8                  __Umul8_16 0ED1  
              __pdataBANK0 0061                __pdataBANK1 00A0            Lcd_Write_Char@a 0022  
          Lcd_Write_Char@y 0024                  ___flmul@a 0032                  ___flmul@b 002E  
                ___latbits 0002              __pcstackBANK0 0020          __size_of___xxtofl 00BC  
           ??_ADC_CHANNELS 0025                   ?_Lcd_Cmd 0070        __end_of_EUSART_INIT 0EA8  
         ___lwdiv@dividend 0022          EUSART_ENVIAR@dato 0022           ??_Lcd_Set_Cursor 0025  
                 VAL@valor 002C                   ?___flmul 002E                   ?___fltol 0048  
               ?__Umul8_16 0020                   ?___lwdiv 0020                  __pstrings 0800  
                 _ADC_INIT 0E37                   _ADC_READ 0DDA           ___lwdiv@quotient 0025  
                 _CONTADOR 0058             __size_of_setup 003C          interrupt_function 0004  
           ___wmul@product 0024                   _PIE1bits 008C                   Lcd_Cmd@a 0023  
                 _PIR1bits 000C                ??_Lcd_Clear 0024                 _ADCON0bits 001F  
              __stringbase 0805                 _ADCON1bits 009F          ___wmul@multiplier 0020  
         ??_Lcd_Write_Char 0021                _EUSART_INIT 0E81                   _Lcd_Init 0FB2  
                 _Lcd_Port 0DB7   __end_of_Lcd_Write_String 0ED1           __size_of_Lcd_Cmd 001C  
              ??__Umul8_16 0022       __end_of_ADC_CHANNELS 07E8           __size_of___flmul 0361  
         __size_of___fltol 007C           __size_of___lwdiv 0046         __end_of__stringtab 0806  
                 ___xxtofl 0595            ___lwdiv@divisor 0020            ___lwdiv@counter 0027  
                 __ptext10 0F6C                   __ptext11 0EA8                   __ptext20 0EFA  
                 __ptext12 0E17                   __ptext21 0DDA                   __ptext13 0741  
                 __ptext14 0FB2                   __ptext15 0DCD                   __ptext16 0DFB  
                 __ptext17 0DB7                   __ptext18 07E8                   __ptext19 0799  
            __size_of_main 01FA                 _INTCONbits 000B                   init_ram0 0DEC  
       Lcd_Write_Char@temp 0023                   intlevel1 0000                  stringcode 0800  
               _OSCCONbits 008F         Lcd_Set_Cursor@temp 002A     __Umul8_16@multiplicand 0020  
               _OPTION_REG 0081                   stringdir 0800                   stringtab 0800  
   __size_of_EUSART_ENVIAR 0014       __Umul8_16@multiplier 0028      __size_of_ADC_CHANNELS 004F  
        __Umul8_16@product 0024  
