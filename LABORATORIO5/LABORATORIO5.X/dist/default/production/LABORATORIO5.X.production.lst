

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Aug 17 21:51:56 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	intentry,global,class=CODE,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21  0000                     
    22                           ; Version 2.20
    23                           ; Generated 12/02/2020 GMT
    24                           ; 
    25                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F887 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  0006                     	;# 
    63  0007                     	;# 
    64  0008                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  000E                     	;# 
    72  000F                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  001D                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  0081                     	;# 
    92  0085                     	;# 
    93  0086                     	;# 
    94  0087                     	;# 
    95  0088                     	;# 
    96  0089                     	;# 
    97  008C                     	;# 
    98  008D                     	;# 
    99  008E                     	;# 
   100  008F                     	;# 
   101  0090                     	;# 
   102  0091                     	;# 
   103  0092                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0094                     	;# 
   108  0095                     	;# 
   109  0096                     	;# 
   110  0097                     	;# 
   111  0098                     	;# 
   112  0099                     	;# 
   113  009A                     	;# 
   114  009B                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  009F                     	;# 
   119  0105                     	;# 
   120  0107                     	;# 
   121  0108                     	;# 
   122  0109                     	;# 
   123  010C                     	;# 
   124  010C                     	;# 
   125  010D                     	;# 
   126  010E                     	;# 
   127  010F                     	;# 
   128  0185                     	;# 
   129  0187                     	;# 
   130  0188                     	;# 
   131  0189                     	;# 
   132  018C                     	;# 
   133  018D                     	;# 
   134  0000                     	;# 
   135  0001                     	;# 
   136  0002                     	;# 
   137  0003                     	;# 
   138  0004                     	;# 
   139  0005                     	;# 
   140  0006                     	;# 
   141  0007                     	;# 
   142  0008                     	;# 
   143  0009                     	;# 
   144  000A                     	;# 
   145  000B                     	;# 
   146  000C                     	;# 
   147  000D                     	;# 
   148  000E                     	;# 
   149  000E                     	;# 
   150  000F                     	;# 
   151  0010                     	;# 
   152  0011                     	;# 
   153  0012                     	;# 
   154  0013                     	;# 
   155  0014                     	;# 
   156  0015                     	;# 
   157  0015                     	;# 
   158  0016                     	;# 
   159  0017                     	;# 
   160  0018                     	;# 
   161  0019                     	;# 
   162  001A                     	;# 
   163  001B                     	;# 
   164  001B                     	;# 
   165  001C                     	;# 
   166  001D                     	;# 
   167  001E                     	;# 
   168  001F                     	;# 
   169  0081                     	;# 
   170  0085                     	;# 
   171  0086                     	;# 
   172  0087                     	;# 
   173  0088                     	;# 
   174  0089                     	;# 
   175  008C                     	;# 
   176  008D                     	;# 
   177  008E                     	;# 
   178  008F                     	;# 
   179  0090                     	;# 
   180  0091                     	;# 
   181  0092                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0094                     	;# 
   186  0095                     	;# 
   187  0096                     	;# 
   188  0097                     	;# 
   189  0098                     	;# 
   190  0099                     	;# 
   191  009A                     	;# 
   192  009B                     	;# 
   193  009C                     	;# 
   194  009D                     	;# 
   195  009E                     	;# 
   196  009F                     	;# 
   197  0105                     	;# 
   198  0107                     	;# 
   199  0108                     	;# 
   200  0109                     	;# 
   201  010C                     	;# 
   202  010C                     	;# 
   203  010D                     	;# 
   204  010E                     	;# 
   205  010F                     	;# 
   206  0185                     	;# 
   207  0187                     	;# 
   208  0188                     	;# 
   209  0189                     	;# 
   210  018C                     	;# 
   211  018D                     	;# 
   212  0009                     _PORTE	set	9
   213  0007                     _PORTC	set	7
   214  0006                     _PORTB	set	6
   215  0005                     _PORTA	set	5
   216  0008                     _PORTD	set	8
   217  000B                     _INTCONbits	set	11
   218  0019                     _TXREG	set	25
   219  000C                     _PIR1bits	set	12
   220  0018                     _RCSTAbits	set	24
   221  001A                     _RCREG	set	26
   222  0031                     _RB1	set	49
   223  0030                     _RB0	set	48
   224  0058                     _RBIF	set	88
   225  0081                     _OPTION_REGbits	set	129
   226  008F                     _OSCCONbits	set	143
   227  0086                     _TRISB	set	134
   228  0089                     _TRISE	set	137
   229  0088                     _TRISD	set	136
   230  0085                     _TRISA	set	133
   231  008C                     _PIE1bits	set	140
   232  009A                     _SPBRGH	set	154
   233  0099                     _SPBRG	set	153
   234  0098                     _TXSTAbits	set	152
   235  04B1                     _IOCB1	set	1201
   236  04B0                     _IOCB0	set	1200
   237  04A9                     _WPUB1	set	1193
   238  04A8                     _WPUB0	set	1192
   239  043F                     _TRISC7	set	1087
   240  043E                     _TRISC6	set	1086
   241  0189                     _ANSELH	set	393
   242  0188                     _ANSEL	set	392
   243  0187                     _BAUDCTLbits	set	391
   244                           
   245                           	psect	cinit
   246  0011                     start_initialization:	
   247                           ; #config settings
   248                           
   249  0011                     __initialization:
   250                           
   251                           ; Clear objects allocated to COMMON
   252  0011  01F9               	clrf	__pbssCOMMON& (0+127)
   253  0012  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   254  0013  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
   255  0014  01FC               	clrf	(__pbssCOMMON+3)& (0+127)
   256  0015  01FD               	clrf	(__pbssCOMMON+4)& (0+127)
   257                           
   258                           ; Clear objects allocated to BANK0
   259  0016  1283               	bcf	3,5	;RP0=0, select bank0
   260  0017  1303               	bcf	3,6	;RP1=0, select bank0
   261  0018  01B0               	clrf	__pbssBANK0& (0+127)
   262  0019  01B1               	clrf	(__pbssBANK0+1)& (0+127)
   263  001A  01B2               	clrf	(__pbssBANK0+2)& (0+127)
   264  001B  01B3               	clrf	(__pbssBANK0+3)& (0+127)
   265  001C  01B4               	clrf	(__pbssBANK0+4)& (0+127)
   266  001D  01B5               	clrf	(__pbssBANK0+5)& (0+127)
   267  001E  01B6               	clrf	(__pbssBANK0+6)& (0+127)
   268  001F  01B7               	clrf	(__pbssBANK0+7)& (0+127)
   269  0020                     end_of_initialization:	
   270                           ;End of C runtime variable initialization code
   271                           
   272  0020                     __end_of__initialization:
   273  0020  0183               	clrf	3
   274  0021  120A  118A  28B7   	ljmp	_main	;jump to C main() function
   275                           
   276                           	psect	bssCOMMON
   277  0079                     __pbssCOMMON:
   278  0079                     _SEL:
   279  0079                     	ds	1
   280  007A                     _POS_RX:
   281  007A                     	ds	1
   282  007B                     _POS_TX:
   283  007B                     	ds	1
   284  007C                     _flag2:
   285  007C                     	ds	1
   286  007D                     _flag1:
   287  007D                     	ds	1
   288                           
   289                           	psect	bssBANK0
   290  0030                     __pbssBANK0:
   291  0030                     _DATO3:
   292  0030                     	ds	1
   293  0031                     _DATO2:
   294  0031                     	ds	1
   295  0032                     _DATO1:
   296  0032                     	ds	1
   297  0033                     _POS3:
   298  0033                     	ds	1
   299  0034                     _POS2:
   300  0034                     	ds	1
   301  0035                     _POS1:
   302  0035                     	ds	1
   303  0036                     _flagc:
   304  0036                     	ds	1
   305  0037                     _CONTADOR:
   306  0037                     	ds	1
   307                           
   308                           	psect	cstackCOMMON
   309  0070                     __pcstackCOMMON:
   310  0070                     ?_setup:
   311  0070                     ?_EUSART_ENVIAR:	
   312                           ; 1 bytes @ 0x0
   313                           
   314  0070                     ?_isr:	
   315                           ; 1 bytes @ 0x0
   316                           
   317  0070                     ?_main:	
   318                           ; 1 bytes @ 0x0
   319                           
   320  0070                     ?___bmul:	
   321                           ; 1 bytes @ 0x0
   322                           
   323  0070                     ___bmul@multiplicand:	
   324                           ; 1 bytes @ 0x0
   325                           
   326                           
   327                           ; 1 bytes @ 0x0
   328  0070                     	ds	1
   329  0071                     ??___bmul:
   330                           
   331                           ; 1 bytes @ 0x1
   332  0071                     	ds	1
   333  0072                     ___bmul@product:
   334                           
   335                           ; 1 bytes @ 0x2
   336  0072                     	ds	1
   337  0073                     ___bmul@multiplier:
   338                           
   339                           ; 1 bytes @ 0x3
   340  0073                     	ds	1
   341  0074                     ??_isr:
   342                           
   343                           ; 1 bytes @ 0x4
   344  0074                     	ds	5
   345                           
   346                           	psect	cstackBANK0
   347  0020                     __pcstackBANK0:
   348  0020                     ?_EUSART_INIT:
   349  0020                     ??_EUSART_ENVIAR:	
   350                           ; 1 bytes @ 0x0
   351                           
   352  0020                     ?___wmul:	
   353                           ; 1 bytes @ 0x0
   354                           
   355  0020                     ?___lwdiv:	
   356                           ; 2 bytes @ 0x0
   357                           
   358  0020                     EUSART_INIT@tx:	
   359                           ; 2 bytes @ 0x0
   360                           
   361  0020                     ___wmul@multiplier:	
   362                           ; 2 bytes @ 0x0
   363                           
   364  0020                     ___lwdiv@divisor:	
   365                           ; 2 bytes @ 0x0
   366                           
   367                           
   368                           ; 2 bytes @ 0x0
   369  0020                     	ds	2
   370  0022                     EUSART_ENVIAR@dato:
   371  0022                     EUSART_INIT@rx:	
   372                           ; 1 bytes @ 0x2
   373                           
   374  0022                     ___wmul@multiplicand:	
   375                           ; 2 bytes @ 0x2
   376                           
   377  0022                     ___lwdiv@dividend:	
   378                           ; 2 bytes @ 0x2
   379                           
   380                           
   381                           ; 2 bytes @ 0x2
   382  0022                     	ds	2
   383  0024                     ??_setup:
   384  0024                     ??_EUSART_INIT:	
   385                           ; 1 bytes @ 0x4
   386                           
   387  0024                     ??___wmul:	
   388                           ; 1 bytes @ 0x4
   389                           
   390  0024                     ??___lwdiv:	
   391                           ; 1 bytes @ 0x4
   392                           
   393  0024                     ___wmul@product:	
   394                           ; 1 bytes @ 0x4
   395                           
   396                           
   397                           ; 2 bytes @ 0x4
   398  0024                     	ds	1
   399  0025                     ___lwdiv@quotient:
   400                           
   401                           ; 2 bytes @ 0x5
   402  0025                     	ds	2
   403  0027                     ___lwdiv@counter:
   404                           
   405                           ; 1 bytes @ 0x7
   406  0027                     	ds	1
   407  0028                     ?_VAL:
   408  0028                     VAL@variable:	
   409                           ; 1 bytes @ 0x8
   410                           
   411                           
   412                           ; 2 bytes @ 0x8
   413  0028                     	ds	2
   414  002A                     ??_VAL:
   415                           
   416                           ; 1 bytes @ 0xA
   417  002A                     	ds	2
   418  002C                     VAL@valor:
   419                           
   420                           ; 2 bytes @ 0xC
   421  002C                     	ds	2
   422  002E                     ??_main:
   423                           
   424                           ; 1 bytes @ 0xE
   425  002E                     	ds	2
   426                           
   427                           	psect	maintext
   428  00B7                     __pmaintext:	
   429 ;;
   430 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   431 ;;
   432 ;; *************** function _main *****************
   433 ;; Defined at:
   434 ;;		line 103 in file "main.c"
   435 ;; Parameters:    Size  Location     Type
   436 ;;		None
   437 ;; Auto vars:     Size  Location     Type
   438 ;;		None
   439 ;; Return value:  Size  Location     Type
   440 ;;                  1    wreg      void 
   441 ;; Registers used:
   442 ;;		wreg, status,2, status,0, pclath, cstack
   443 ;; Tracked objects:
   444 ;;		On entry : B00/0
   445 ;;		On exit  : 0/0
   446 ;;		Unchanged: 0/0
   447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   448 ;;      Params:         0       0       0       0       0
   449 ;;      Locals:         0       0       0       0       0
   450 ;;      Temps:          0       2       0       0       0
   451 ;;      Totals:         0       2       0       0       0
   452 ;;Total ram usage:        2 bytes
   453 ;; Hardware stack levels required when called:    4
   454 ;; This function calls:
   455 ;;		_EUSART_ENVIAR
   456 ;;		_VAL
   457 ;;		_setup
   458 ;; This function is called by:
   459 ;;		Startup code after reset
   460 ;; This function uses a non-reentrant model
   461 ;;
   462                           
   463                           
   464                           ;psect for function _main
   465  00B7                     _main:
   466  00B7                     l1146:	
   467                           ;incstack = 0
   468                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   469                           
   470                           
   471                           ;main.c: 104:     ANSELH = 0X00;
   472  00B7  120A  118A  21F8  120A  118A  	fcall	_setup
   473  00BC                     l1148:
   474                           
   475                           ;main.c: 108:     TRISE = 0X00;
   476  00BC  1283               	bcf	3,5	;RP0=0, select bank0
   477  00BD  1303               	bcf	3,6	;RP1=0, select bank0
   478  00BE  0836               	movf	_flagc,w
   479  00BF  1903               	btfsc	3,2
   480  00C0  28C2               	goto	u461
   481  00C1  28C3               	goto	u460
   482  00C2                     u461:
   483  00C2  2934               	goto	l1172
   484  00C3                     u460:
   485  00C3                     l1150:
   486                           
   487                           ;main.c: 109:     TRISB = 0X03;
   488  00C3  0837               	movf	_CONTADOR,w
   489  00C4  00AE               	movwf	??_main
   490  00C5  01AF               	clrf	??_main+1
   491  00C6  082E               	movf	??_main,w
   492  00C7  00A8               	movwf	VAL@variable
   493  00C8  082F               	movf	??_main+1,w
   494  00C9  00A9               	movwf	VAL@variable+1
   495  00CA  120A  118A  213E  120A  118A  	fcall	_VAL
   496                           
   497                           ;main.c: 110:     TRISC6 = 0;
   498  00CF  1283               	bcf	3,5	;RP0=0, select bank0
   499  00D0  1303               	bcf	3,6	;RP1=0, select bank0
   500  00D1  0835               	movf	_POS1,w
   501  00D2  120A  118A  228D  120A  118A  	fcall	_EUSART_ENVIAR
   502  00D7                     l1152:
   503                           
   504                           ;main.c: 111:     TRISC7 = 1;
   505  00D7  3041               	movlw	65
   506  00D8  1283               	bcf	3,5	;RP0=0, select bank0
   507  00D9  1303               	bcf	3,6	;RP1=0, select bank0
   508  00DA  00AE               	movwf	??_main
   509  00DB                     u477:
   510  00DB  0BAE               	decfsz	??_main,f
   511  00DC  28DB               	goto	u477
   512  00DD  28DE               	nop2
   513  00DE                     l1154:
   514                           
   515                           ;main.c: 112:     PORTA = 0X00;
   516  00DE  302C               	movlw	44
   517  00DF  120A  118A  228D  120A  118A  	fcall	_EUSART_ENVIAR
   518                           
   519                           ;main.c: 113:     PORTB = 0X00;
   520  00E4  3041               	movlw	65
   521  00E5  1283               	bcf	3,5	;RP0=0, select bank0
   522  00E6  1303               	bcf	3,6	;RP1=0, select bank0
   523  00E7  00AE               	movwf	??_main
   524  00E8                     u487:
   525  00E8  0BAE               	decfsz	??_main,f
   526  00E9  28E8               	goto	u487
   527  00EA  28EB               	nop2
   528  00EB                     l1156:
   529                           
   530                           ;main.c: 114:     PORTC = 0X00;
   531  00EB  1283               	bcf	3,5	;RP0=0, select bank0
   532  00EC  1303               	bcf	3,6	;RP1=0, select bank0
   533  00ED  0834               	movf	_POS2,w
   534  00EE  120A  118A  228D  120A  118A  	fcall	_EUSART_ENVIAR
   535  00F3                     l1158:
   536                           
   537                           ;main.c: 115:     PORTD = 0X00;
   538  00F3  3041               	movlw	65
   539  00F4  1283               	bcf	3,5	;RP0=0, select bank0
   540  00F5  1303               	bcf	3,6	;RP1=0, select bank0
   541  00F6  00AE               	movwf	??_main
   542  00F7                     u497:
   543  00F7  0BAE               	decfsz	??_main,f
   544  00F8  28F7               	goto	u497
   545  00F9  28FA               	nop2
   546                           
   547                           ;main.c: 116:     PORTE = 0X00;
   548  00FA  302C               	movlw	44
   549  00FB  120A  118A  228D  120A  118A  	fcall	_EUSART_ENVIAR
   550  0100                     l1160:
   551                           
   552                           ;main.c: 117: 
   553  0100  3041               	movlw	65
   554  0101  1283               	bcf	3,5	;RP0=0, select bank0
   555  0102  1303               	bcf	3,6	;RP1=0, select bank0
   556  0103  00AE               	movwf	??_main
   557  0104                     u507:
   558  0104  0BAE               	decfsz	??_main,f
   559  0105  2904               	goto	u507
   560  0106  2907               	nop2
   561  0107                     l1162:
   562                           
   563                           ;main.c: 118: 
   564  0107  1283               	bcf	3,5	;RP0=0, select bank0
   565  0108  1303               	bcf	3,6	;RP1=0, select bank0
   566  0109  0833               	movf	_POS3,w
   567  010A  120A  118A  228D  120A  118A  	fcall	_EUSART_ENVIAR
   568                           
   569                           ;main.c: 119:     OSCCONbits.IRCF2 = 1;
   570  010F  3041               	movlw	65
   571  0110  1283               	bcf	3,5	;RP0=0, select bank0
   572  0111  1303               	bcf	3,6	;RP1=0, select bank0
   573  0112  00AE               	movwf	??_main
   574  0113                     u517:
   575  0113  0BAE               	decfsz	??_main,f
   576  0114  2913               	goto	u517
   577  0115  2916               	nop2
   578  0116                     l1164:
   579                           
   580                           ;main.c: 120:     OSCCONbits.IRCF1 = 1;
   581  0116  302C               	movlw	44
   582  0117  120A  118A  228D  120A  118A  	fcall	_EUSART_ENVIAR
   583  011C                     l1166:
   584                           
   585                           ;main.c: 121:     OSCCONbits.IRCF0 = 0;
   586  011C  3041               	movlw	65
   587  011D  1283               	bcf	3,5	;RP0=0, select bank0
   588  011E  1303               	bcf	3,6	;RP1=0, select bank0
   589  011F  00AE               	movwf	??_main
   590  0120                     u527:
   591  0120  0BAE               	decfsz	??_main,f
   592  0121  2920               	goto	u527
   593  0122  2923               	nop2
   594                           
   595                           ;main.c: 122:     OSCCONbits.SCS = 1;
   596  0123  300A               	movlw	10
   597  0124  120A  118A  228D  120A  118A  	fcall	_EUSART_ENVIAR
   598  0129                     l1168:
   599                           
   600                           ;main.c: 123: 
   601  0129  3041               	movlw	65
   602  012A  1283               	bcf	3,5	;RP0=0, select bank0
   603  012B  1303               	bcf	3,6	;RP1=0, select bank0
   604  012C  00AE               	movwf	??_main
   605  012D                     u537:
   606  012D  0BAE               	decfsz	??_main,f
   607  012E  292D               	goto	u537
   608  012F  2930               	nop2
   609  0130                     l1170:
   610                           
   611                           ;main.c: 124:     OPTION_REGbits.nRBPU = 0;
   612  0130  3001               	movlw	1
   613  0131  1283               	bcf	3,5	;RP0=0, select bank0
   614  0132  1303               	bcf	3,6	;RP1=0, select bank0
   615  0133  02B6               	subwf	_flagc,f
   616  0134                     l1172:
   617                           
   618                           ;main.c: 125: 
   619  0134  0831               	movf	_DATO2,w
   620  0135  0732               	addwf	_DATO1,w
   621  0136  00AE               	movwf	??_main
   622  0137  0830               	movf	_DATO3,w
   623  0138  072E               	addwf	??_main,w
   624  0139  0088               	movwf	8	;volatile
   625  013A  28BC               	goto	l1148
   626  013B  120A  118A  280E   	ljmp	start
   627  013E                     __end_of_main:
   628                           
   629                           	psect	text1
   630  01F8                     __ptext1:	
   631 ;; *************** function _setup *****************
   632 ;; Defined at:
   633 ;;		line 131 in file "main.c"
   634 ;; Parameters:    Size  Location     Type
   635 ;;		None
   636 ;; Auto vars:     Size  Location     Type
   637 ;;		None
   638 ;; Return value:  Size  Location     Type
   639 ;;                  1    wreg      void 
   640 ;; Registers used:
   641 ;;		wreg, status,2, status,0, pclath, cstack
   642 ;; Tracked objects:
   643 ;;		On entry : 0/0
   644 ;;		On exit  : 0/0
   645 ;;		Unchanged: 0/0
   646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   647 ;;      Params:         0       0       0       0       0
   648 ;;      Locals:         0       0       0       0       0
   649 ;;      Temps:          0       0       0       0       0
   650 ;;      Totals:         0       0       0       0       0
   651 ;;Total ram usage:        0 bytes
   652 ;; Hardware stack levels used:    1
   653 ;; Hardware stack levels required when called:    3
   654 ;; This function calls:
   655 ;;		_EUSART_INIT
   656 ;; This function is called by:
   657 ;;		_main
   658 ;; This function uses a non-reentrant model
   659 ;;
   660                           
   661                           
   662                           ;psect for function _setup
   663  01F8                     _setup:
   664  01F8                     l1014:	
   665                           ;incstack = 0
   666                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   667                           
   668                           
   669                           ;main.c: 133:     INTCONbits.RBIE = 1;
   670  01F8  1683               	bsf	3,5	;RP0=1, select bank3
   671  01F9  1703               	bsf	3,6	;RP1=1, select bank3
   672  01FA  0188               	clrf	8	;volatile
   673                           
   674                           ;main.c: 134:     INTCONbits.RBIF = 0;
   675  01FB  0189               	clrf	9	;volatile
   676                           
   677                           ;main.c: 136: }
   678  01FC  1683               	bsf	3,5	;RP0=1, select bank1
   679  01FD  1303               	bcf	3,6	;RP1=0, select bank1
   680  01FE  0185               	clrf	5	;volatile
   681                           
   682                           ;main.c: 137: 
   683  01FF  0188               	clrf	8	;volatile
   684                           
   685                           ;main.c: 138: void VAL(uint16_t variable){
   686  0200  0189               	clrf	9	;volatile
   687  0201                     l1016:
   688                           
   689                           ;main.c: 139:     uint16_t valor;
   690  0201  3003               	movlw	3
   691  0202  0086               	movwf	6	;volatile
   692  0203                     l1018:
   693                           
   694                           ;main.c: 140:     valor = variable;
   695  0203  1307               	bcf	7,6	;volatile
   696  0204                     l1020:
   697                           
   698                           ;main.c: 141:     POS1 = (valor/100) ;
   699  0204  1787               	bsf	7,7	;volatile
   700  0205                     l1022:
   701                           
   702                           ;main.c: 142:     valor = (valor - (POS1*100));
   703  0205  1283               	bcf	3,5	;RP0=0, select bank0
   704  0206  1303               	bcf	3,6	;RP1=0, select bank0
   705  0207  0185               	clrf	5	;volatile
   706  0208                     l1024:
   707                           
   708                           ;main.c: 143:     POS2 = (valor/10);
   709  0208  0186               	clrf	6	;volatile
   710  0209                     l1026:
   711                           
   712                           ;main.c: 144:     valor = (valor - (POS2*10));
   713  0209  0187               	clrf	7	;volatile
   714  020A                     l1028:
   715                           
   716                           ;main.c: 145:     POS3 = (valor);
   717  020A  0188               	clrf	8	;volatile
   718  020B                     l1030:
   719                           
   720                           ;main.c: 146: 
   721  020B  0189               	clrf	9	;volatile
   722  020C                     l1032:
   723                           
   724                           ;main.c: 149:     POS3 = POS3 + 48;
   725  020C  1683               	bsf	3,5	;RP0=1, select bank1
   726  020D  1303               	bcf	3,6	;RP1=0, select bank1
   727  020E  170F               	bsf	15,6	;volatile
   728  020F                     l1034:
   729                           
   730                           ;main.c: 150: 
   731  020F  168F               	bsf	15,5	;volatile
   732  0210                     l1036:
   733                           
   734                           ;main.c: 151: }
   735  0210  120F               	bcf	15,4	;volatile
   736  0211                     l1038:
   737  0211  140F               	bsf	15,0	;volatile
   738  0212                     l1040:
   739  0212  1381               	bcf	1,7	;volatile
   740  0213                     l1042:
   741  0213  1415               	bsf	21,0	;volatile
   742  0214                     l1044:
   743  0214  1495               	bsf	21,1	;volatile
   744  0215                     l1046:
   745  0215  1416               	bsf	22,0	;volatile
   746  0216                     l1048:
   747  0216  1496               	bsf	22,1	;volatile
   748  0217                     l1050:
   749  0217  3000               	movlw	0
   750  0218  1283               	bcf	3,5	;RP0=0, select bank0
   751  0219  1303               	bcf	3,6	;RP1=0, select bank0
   752  021A  00A0               	movwf	EUSART_INIT@tx
   753  021B  00A1               	movwf	EUSART_INIT@tx+1
   754  021C  3001               	movlw	1
   755  021D  00A2               	movwf	EUSART_INIT@rx
   756  021E  3000               	movlw	0
   757  021F  00A3               	movwf	EUSART_INIT@rx+1
   758  0220  120A  118A  222A  120A  118A  	fcall	_EUSART_INIT
   759  0225                     l1052:
   760  0225  178B               	bsf	11,7	;volatile
   761  0226                     l1054:
   762  0226  170B               	bsf	11,6	;volatile
   763  0227                     l1056:
   764  0227  158B               	bsf	11,3	;volatile
   765  0228                     l1058:
   766  0228  100B               	bcf	11,0	;volatile
   767  0229                     l135:
   768  0229  0008               	return
   769  022A                     __end_of_setup:
   770                           
   771                           	psect	text2
   772  022A                     __ptext2:	
   773 ;; *************** function _EUSART_INIT *****************
   774 ;; Defined at:
   775 ;;		line 13 in file "./EUSART_LIB.h"
   776 ;; Parameters:    Size  Location     Type
   777 ;;  tx              2    0[BANK0 ] unsigned int 
   778 ;;  rx              2    2[BANK0 ] unsigned int 
   779 ;; Auto vars:     Size  Location     Type
   780 ;;		None
   781 ;; Return value:  Size  Location     Type
   782 ;;                  1    wreg      void 
   783 ;; Registers used:
   784 ;;		wreg, status,0
   785 ;; Tracked objects:
   786 ;;		On entry : 0/0
   787 ;;		On exit  : 0/0
   788 ;;		Unchanged: 0/0
   789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   790 ;;      Params:         0       4       0       0       0
   791 ;;      Locals:         0       0       0       0       0
   792 ;;      Temps:          0       0       0       0       0
   793 ;;      Totals:         0       4       0       0       0
   794 ;;Total ram usage:        4 bytes
   795 ;; Hardware stack levels used:    1
   796 ;; Hardware stack levels required when called:    2
   797 ;; This function calls:
   798 ;;		Nothing
   799 ;; This function is called by:
   800 ;;		_setup
   801 ;; This function uses a non-reentrant model
   802 ;;
   803                           
   804                           
   805                           ;psect for function _EUSART_INIT
   806  022A                     _EUSART_INIT:
   807  022A                     l962:	
   808                           ;incstack = 0
   809                           ; Regs used in _EUSART_INIT: [wreg+status,0]
   810                           
   811                           
   812                           ;./EUSART_LIB.h: 17:   TXSTAbits.SYNC = 0;
   813  022A  1683               	bsf	3,5	;RP0=1, select bank1
   814  022B  1303               	bcf	3,6	;RP1=0, select bank1
   815  022C  1218               	bcf	24,4	;volatile
   816                           
   817                           ;./EUSART_LIB.h: 18:   TXSTAbits.BRGH = 1;
   818  022D  1518               	bsf	24,2	;volatile
   819                           
   820                           ;./EUSART_LIB.h: 19:   TXSTAbits.TX9 = 0;
   821  022E  1318               	bcf	24,6	;volatile
   822                           
   823                           ;./EUSART_LIB.h: 20:   TXSTAbits.TXEN= 1;
   824  022F  1698               	bsf	24,5	;volatile
   825                           
   826                           ;./EUSART_LIB.h: 21:   RCSTAbits.SPEN = 1;
   827  0230  1283               	bcf	3,5	;RP0=0, select bank0
   828  0231  1303               	bcf	3,6	;RP1=0, select bank0
   829  0232  1798               	bsf	24,7	;volatile
   830                           
   831                           ;./EUSART_LIB.h: 24:   RCSTAbits.RX9 = 0;
   832  0233  1318               	bcf	24,6	;volatile
   833                           
   834                           ;./EUSART_LIB.h: 25:   RCSTAbits.CREN = 1;
   835  0234  1618               	bsf	24,4	;volatile
   836                           
   837                           ;./EUSART_LIB.h: 28:     BAUDCTLbits.BRG16 = 0;
   838  0235  1683               	bsf	3,5	;RP0=1, select bank3
   839  0236  1703               	bsf	3,6	;RP1=1, select bank3
   840  0237  1187               	bcf	7,3	;volatile
   841  0238                     l964:
   842                           
   843                           ;./EUSART_LIB.h: 29:     SPBRG =25;
   844  0238  3019               	movlw	25
   845  0239  1683               	bsf	3,5	;RP0=1, select bank1
   846  023A  1303               	bcf	3,6	;RP1=0, select bank1
   847  023B  0099               	movwf	25	;volatile
   848                           
   849                           ;./EUSART_LIB.h: 30:     SPBRGH = 1;
   850  023C  3001               	movlw	1
   851  023D  009A               	movwf	26	;volatile
   852  023E                     l966:
   853                           
   854                           ;./EUSART_LIB.h: 32:     PIE1bits.TXIE =tx;
   855  023E  1283               	bcf	3,5	;RP0=0, select bank0
   856  023F  1303               	bcf	3,6	;RP1=0, select bank0
   857  0240  0C20               	rrf	EUSART_INIT@tx,w
   858  0241  1683               	bsf	3,5	;RP0=1, select bank1
   859  0242  1303               	bcf	3,6	;RP1=0, select bank1
   860  0243  1C03               	skipc
   861  0244  120C               	bcf	12,4	;volatile
   862  0245  1803               	skipnc
   863  0246  160C               	bsf	12,4	;volatile
   864  0247                     l968:
   865                           
   866                           ;./EUSART_LIB.h: 33:     PIE1bits.RCIE =rx;
   867  0247  1283               	bcf	3,5	;RP0=0, select bank0
   868  0248  1303               	bcf	3,6	;RP1=0, select bank0
   869  0249  0C22               	rrf	EUSART_INIT@rx,w
   870  024A  1683               	bsf	3,5	;RP0=1, select bank1
   871  024B  1303               	bcf	3,6	;RP1=0, select bank1
   872  024C  1C03               	skipc
   873  024D  128C               	bcf	12,5	;volatile
   874  024E  1803               	skipnc
   875  024F  168C               	bsf	12,5	;volatile
   876  0250                     l73:
   877  0250  0008               	return
   878  0251                     __end_of_EUSART_INIT:
   879                           
   880                           	psect	text3
   881  013E                     __ptext3:	
   882 ;; *************** function _VAL *****************
   883 ;; Defined at:
   884 ;;		line 168 in file "main.c"
   885 ;; Parameters:    Size  Location     Type
   886 ;;  variable        2    8[BANK0 ] unsigned int 
   887 ;; Auto vars:     Size  Location     Type
   888 ;;  valor           2   12[BANK0 ] unsigned int 
   889 ;; Return value:  Size  Location     Type
   890 ;;                  1    wreg      void 
   891 ;; Registers used:
   892 ;;		wreg, status,2, status,0, pclath, cstack
   893 ;; Tracked objects:
   894 ;;		On entry : 0/0
   895 ;;		On exit  : 0/0
   896 ;;		Unchanged: 0/0
   897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   898 ;;      Params:         0       2       0       0       0
   899 ;;      Locals:         0       2       0       0       0
   900 ;;      Temps:          0       2       0       0       0
   901 ;;      Totals:         0       6       0       0       0
   902 ;;Total ram usage:        6 bytes
   903 ;; Hardware stack levels used:    1
   904 ;; Hardware stack levels required when called:    3
   905 ;; This function calls:
   906 ;;		___lwdiv
   907 ;;		___wmul
   908 ;; This function is called by:
   909 ;;		_main
   910 ;; This function uses a non-reentrant model
   911 ;;
   912                           
   913                           
   914                           ;psect for function _VAL
   915  013E                     _VAL:
   916  013E                     l1060:	
   917                           ;incstack = 0
   918                           ; Regs used in _VAL: [wreg+status,2+status,0+pclath+cstack]
   919                           
   920  013E  1283               	bcf	3,5	;RP0=0, select bank0
   921  013F  1303               	bcf	3,6	;RP1=0, select bank0
   922  0140  0829               	movf	VAL@variable+1,w
   923  0141  00AD               	movwf	VAL@valor+1
   924  0142  0828               	movf	VAL@variable,w
   925  0143  00AC               	movwf	VAL@valor
   926  0144                     l1062:
   927  0144  3064               	movlw	100
   928  0145  00A0               	movwf	___lwdiv@divisor
   929  0146  3000               	movlw	0
   930  0147  00A1               	movwf	___lwdiv@divisor+1
   931  0148  082D               	movf	VAL@valor+1,w
   932  0149  00A3               	movwf	___lwdiv@dividend+1
   933  014A  082C               	movf	VAL@valor,w
   934  014B  00A2               	movwf	___lwdiv@dividend
   935  014C  120A  118A  21B2  120A  118A  	fcall	___lwdiv
   936  0151  1283               	bcf	3,5	;RP0=0, select bank0
   937  0152  1303               	bcf	3,6	;RP1=0, select bank0
   938  0153  0820               	movf	?___lwdiv,w
   939  0154  00AA               	movwf	??_VAL
   940  0155  082A               	movf	??_VAL,w
   941  0156  00B5               	movwf	_POS1
   942  0157                     l1064:
   943  0157  0835               	movf	_POS1,w
   944  0158  00AA               	movwf	??_VAL
   945  0159  01AB               	clrf	??_VAL+1
   946  015A  082A               	movf	??_VAL,w
   947  015B  00A0               	movwf	___wmul@multiplier
   948  015C  082B               	movf	??_VAL+1,w
   949  015D  00A1               	movwf	___wmul@multiplier+1
   950  015E  309C               	movlw	156
   951  015F  00A2               	movwf	___wmul@multiplicand
   952  0160  30FF               	movlw	255
   953  0161  00A3               	movwf	___wmul@multiplicand+1
   954  0162  120A  118A  2251  120A  118A  	fcall	___wmul
   955  0167  1283               	bcf	3,5	;RP0=0, select bank0
   956  0168  1303               	bcf	3,6	;RP1=0, select bank0
   957  0169  082C               	movf	VAL@valor,w
   958  016A  0720               	addwf	?___wmul,w
   959  016B  00AC               	movwf	VAL@valor
   960  016C  082D               	movf	VAL@valor+1,w
   961  016D  1803               	skipnc
   962  016E  0A2D               	incf	VAL@valor+1,w
   963  016F  0721               	addwf	?___wmul+1,w
   964  0170  00AD               	movwf	VAL@valor+1
   965  0171                     l1066:
   966  0171  300A               	movlw	10
   967  0172  00A0               	movwf	___lwdiv@divisor
   968  0173  3000               	movlw	0
   969  0174  00A1               	movwf	___lwdiv@divisor+1
   970  0175  082D               	movf	VAL@valor+1,w
   971  0176  00A3               	movwf	___lwdiv@dividend+1
   972  0177  082C               	movf	VAL@valor,w
   973  0178  00A2               	movwf	___lwdiv@dividend
   974  0179  120A  118A  21B2  120A  118A  	fcall	___lwdiv
   975  017E  1283               	bcf	3,5	;RP0=0, select bank0
   976  017F  1303               	bcf	3,6	;RP1=0, select bank0
   977  0180  0820               	movf	?___lwdiv,w
   978  0181  00AA               	movwf	??_VAL
   979  0182  082A               	movf	??_VAL,w
   980  0183  00B4               	movwf	_POS2
   981  0184                     l1068:
   982  0184  0834               	movf	_POS2,w
   983  0185  00AA               	movwf	??_VAL
   984  0186  01AB               	clrf	??_VAL+1
   985  0187  082A               	movf	??_VAL,w
   986  0188  00A0               	movwf	___wmul@multiplier
   987  0189  082B               	movf	??_VAL+1,w
   988  018A  00A1               	movwf	___wmul@multiplier+1
   989  018B  30F6               	movlw	246
   990  018C  00A2               	movwf	___wmul@multiplicand
   991  018D  30FF               	movlw	255
   992  018E  00A3               	movwf	___wmul@multiplicand+1
   993  018F  120A  118A  2251  120A  118A  	fcall	___wmul
   994  0194  1283               	bcf	3,5	;RP0=0, select bank0
   995  0195  1303               	bcf	3,6	;RP1=0, select bank0
   996  0196  082C               	movf	VAL@valor,w
   997  0197  0720               	addwf	?___wmul,w
   998  0198  00AC               	movwf	VAL@valor
   999  0199  082D               	movf	VAL@valor+1,w
  1000  019A  1803               	skipnc
  1001  019B  0A2D               	incf	VAL@valor+1,w
  1002  019C  0721               	addwf	?___wmul+1,w
  1003  019D  00AD               	movwf	VAL@valor+1
  1004  019E  082C               	movf	VAL@valor,w
  1005  019F  00AA               	movwf	??_VAL
  1006  01A0  082A               	movf	??_VAL,w
  1007  01A1  00B3               	movwf	_POS3
  1008  01A2                     l1070:
  1009  01A2  0835               	movf	_POS1,w
  1010  01A3  3E30               	addlw	48
  1011  01A4  00AA               	movwf	??_VAL
  1012  01A5  082A               	movf	??_VAL,w
  1013  01A6  00B5               	movwf	_POS1
  1014  01A7                     l1072:
  1015  01A7  0834               	movf	_POS2,w
  1016  01A8  3E30               	addlw	48
  1017  01A9  00AA               	movwf	??_VAL
  1018  01AA  082A               	movf	??_VAL,w
  1019  01AB  00B4               	movwf	_POS2
  1020  01AC                     l1074:
  1021  01AC  0833               	movf	_POS3,w
  1022  01AD  3E30               	addlw	48
  1023  01AE  00AA               	movwf	??_VAL
  1024  01AF  082A               	movf	??_VAL,w
  1025  01B0  00B3               	movwf	_POS3
  1026  01B1                     l138:
  1027  01B1  0008               	return
  1028  01B2                     __end_of_VAL:
  1029                           
  1030                           	psect	text4
  1031  0251                     __ptext4:	
  1032 ;; *************** function ___wmul *****************
  1033 ;; Defined at:
  1034 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  1035 ;; Parameters:    Size  Location     Type
  1036 ;;  multiplier      2    0[BANK0 ] unsigned int 
  1037 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  1038 ;; Auto vars:     Size  Location     Type
  1039 ;;  product         2    4[BANK0 ] unsigned int 
  1040 ;; Return value:  Size  Location     Type
  1041 ;;                  2    0[BANK0 ] unsigned int 
  1042 ;; Registers used:
  1043 ;;		wreg, status,2, status,0
  1044 ;; Tracked objects:
  1045 ;;		On entry : 0/0
  1046 ;;		On exit  : 0/0
  1047 ;;		Unchanged: 0/0
  1048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1049 ;;      Params:         0       4       0       0       0
  1050 ;;      Locals:         0       2       0       0       0
  1051 ;;      Temps:          0       0       0       0       0
  1052 ;;      Totals:         0       6       0       0       0
  1053 ;;Total ram usage:        6 bytes
  1054 ;; Hardware stack levels used:    1
  1055 ;; Hardware stack levels required when called:    2
  1056 ;; This function calls:
  1057 ;;		Nothing
  1058 ;; This function is called by:
  1059 ;;		_VAL
  1060 ;; This function uses a non-reentrant model
  1061 ;;
  1062                           
  1063                           
  1064                           ;psect for function ___wmul
  1065  0251                     ___wmul:
  1066  0251                     l970:	
  1067                           ;incstack = 0
  1068                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1069                           
  1070  0251  1283               	bcf	3,5	;RP0=0, select bank0
  1071  0252  1303               	bcf	3,6	;RP1=0, select bank0
  1072  0253  01A4               	clrf	___wmul@product
  1073  0254  01A5               	clrf	___wmul@product+1
  1074  0255                     l972:
  1075  0255  1C20               	btfss	___wmul@multiplier,0
  1076  0256  2A58               	goto	u241
  1077  0257  2A59               	goto	u240
  1078  0258                     u241:
  1079  0258  2A5F               	goto	l224
  1080  0259                     u240:
  1081  0259                     l974:
  1082  0259  0822               	movf	___wmul@multiplicand,w
  1083  025A  07A4               	addwf	___wmul@product,f
  1084  025B  1803               	skipnc
  1085  025C  0AA5               	incf	___wmul@product+1,f
  1086  025D  0823               	movf	___wmul@multiplicand+1,w
  1087  025E  07A5               	addwf	___wmul@product+1,f
  1088  025F                     l224:
  1089  025F  3001               	movlw	1
  1090  0260                     u255:
  1091  0260  1003               	clrc
  1092  0261  0DA2               	rlf	___wmul@multiplicand,f
  1093  0262  0DA3               	rlf	___wmul@multiplicand+1,f
  1094  0263  3EFF               	addlw	-1
  1095  0264  1D03               	skipz
  1096  0265  2A60               	goto	u255
  1097  0266                     l976:
  1098  0266  3001               	movlw	1
  1099  0267                     u265:
  1100  0267  1003               	clrc
  1101  0268  0CA1               	rrf	___wmul@multiplier+1,f
  1102  0269  0CA0               	rrf	___wmul@multiplier,f
  1103  026A  3EFF               	addlw	-1
  1104  026B  1D03               	skipz
  1105  026C  2A67               	goto	u265
  1106  026D                     l978:
  1107  026D  0820               	movf	___wmul@multiplier,w
  1108  026E  0421               	iorwf	___wmul@multiplier+1,w
  1109  026F  1D03               	btfss	3,2
  1110  0270  2A72               	goto	u271
  1111  0271  2A73               	goto	u270
  1112  0272                     u271:
  1113  0272  2A55               	goto	l972
  1114  0273                     u270:
  1115  0273                     l980:
  1116  0273  0825               	movf	___wmul@product+1,w
  1117  0274  00A1               	movwf	?___wmul+1
  1118  0275  0824               	movf	___wmul@product,w
  1119  0276  00A0               	movwf	?___wmul
  1120  0277                     l226:
  1121  0277  0008               	return
  1122  0278                     __end_of___wmul:
  1123                           
  1124                           	psect	text5
  1125  01B2                     __ptext5:	
  1126 ;; *************** function ___lwdiv *****************
  1127 ;; Defined at:
  1128 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  1129 ;; Parameters:    Size  Location     Type
  1130 ;;  divisor         2    0[BANK0 ] unsigned int 
  1131 ;;  dividend        2    2[BANK0 ] unsigned int 
  1132 ;; Auto vars:     Size  Location     Type
  1133 ;;  quotient        2    5[BANK0 ] unsigned int 
  1134 ;;  counter         1    7[BANK0 ] unsigned char 
  1135 ;; Return value:  Size  Location     Type
  1136 ;;                  2    0[BANK0 ] unsigned int 
  1137 ;; Registers used:
  1138 ;;		wreg, status,2, status,0
  1139 ;; Tracked objects:
  1140 ;;		On entry : 0/0
  1141 ;;		On exit  : 0/0
  1142 ;;		Unchanged: 0/0
  1143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1144 ;;      Params:         0       4       0       0       0
  1145 ;;      Locals:         0       3       0       0       0
  1146 ;;      Temps:          0       1       0       0       0
  1147 ;;      Totals:         0       8       0       0       0
  1148 ;;Total ram usage:        8 bytes
  1149 ;; Hardware stack levels used:    1
  1150 ;; Hardware stack levels required when called:    2
  1151 ;; This function calls:
  1152 ;;		Nothing
  1153 ;; This function is called by:
  1154 ;;		_VAL
  1155 ;; This function uses a non-reentrant model
  1156 ;;
  1157                           
  1158                           
  1159                           ;psect for function ___lwdiv
  1160  01B2                     ___lwdiv:
  1161  01B2                     l984:	
  1162                           ;incstack = 0
  1163                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1164                           
  1165  01B2  1283               	bcf	3,5	;RP0=0, select bank0
  1166  01B3  1303               	bcf	3,6	;RP1=0, select bank0
  1167  01B4  01A5               	clrf	___lwdiv@quotient
  1168  01B5  01A6               	clrf	___lwdiv@quotient+1
  1169  01B6                     l986:
  1170  01B6  0820               	movf	___lwdiv@divisor,w
  1171  01B7  0421               	iorwf	___lwdiv@divisor+1,w
  1172  01B8  1903               	btfsc	3,2
  1173  01B9  29BB               	goto	u281
  1174  01BA  29BC               	goto	u280
  1175  01BB                     u281:
  1176  01BB  29F3               	goto	l1006
  1177  01BC                     u280:
  1178  01BC                     l988:
  1179  01BC  01A7               	clrf	___lwdiv@counter
  1180  01BD  0AA7               	incf	___lwdiv@counter,f
  1181  01BE  29CA               	goto	l994
  1182  01BF                     l990:
  1183  01BF  3001               	movlw	1
  1184  01C0                     u295:
  1185  01C0  1003               	clrc
  1186  01C1  0DA0               	rlf	___lwdiv@divisor,f
  1187  01C2  0DA1               	rlf	___lwdiv@divisor+1,f
  1188  01C3  3EFF               	addlw	-1
  1189  01C4  1D03               	skipz
  1190  01C5  29C0               	goto	u295
  1191  01C6                     l992:
  1192  01C6  3001               	movlw	1
  1193  01C7  00A4               	movwf	??___lwdiv
  1194  01C8  0824               	movf	??___lwdiv,w
  1195  01C9  07A7               	addwf	___lwdiv@counter,f
  1196  01CA                     l994:
  1197  01CA  1FA1               	btfss	___lwdiv@divisor+1,7
  1198  01CB  29CD               	goto	u301
  1199  01CC  29CE               	goto	u300
  1200  01CD                     u301:
  1201  01CD  29BF               	goto	l990
  1202  01CE                     u300:
  1203  01CE                     l996:
  1204  01CE  3001               	movlw	1
  1205  01CF                     u315:
  1206  01CF  1003               	clrc
  1207  01D0  0DA5               	rlf	___lwdiv@quotient,f
  1208  01D1  0DA6               	rlf	___lwdiv@quotient+1,f
  1209  01D2  3EFF               	addlw	-1
  1210  01D3  1D03               	skipz
  1211  01D4  29CF               	goto	u315
  1212  01D5  0821               	movf	___lwdiv@divisor+1,w
  1213  01D6  0223               	subwf	___lwdiv@dividend+1,w
  1214  01D7  1D03               	skipz
  1215  01D8  29DB               	goto	u325
  1216  01D9  0820               	movf	___lwdiv@divisor,w
  1217  01DA  0222               	subwf	___lwdiv@dividend,w
  1218  01DB                     u325:
  1219  01DB  1C03               	skipc
  1220  01DC  29DE               	goto	u321
  1221  01DD  29DF               	goto	u320
  1222  01DE                     u321:
  1223  01DE  29E6               	goto	l1002
  1224  01DF                     u320:
  1225  01DF                     l998:
  1226  01DF  0820               	movf	___lwdiv@divisor,w
  1227  01E0  02A2               	subwf	___lwdiv@dividend,f
  1228  01E1  0821               	movf	___lwdiv@divisor+1,w
  1229  01E2  1C03               	skipc
  1230  01E3  03A3               	decf	___lwdiv@dividend+1,f
  1231  01E4  02A3               	subwf	___lwdiv@dividend+1,f
  1232  01E5                     l1000:
  1233  01E5  1425               	bsf	___lwdiv@quotient,0
  1234  01E6                     l1002:
  1235  01E6  3001               	movlw	1
  1236  01E7                     u335:
  1237  01E7  1003               	clrc
  1238  01E8  0CA1               	rrf	___lwdiv@divisor+1,f
  1239  01E9  0CA0               	rrf	___lwdiv@divisor,f
  1240  01EA  3EFF               	addlw	-1
  1241  01EB  1D03               	skipz
  1242  01EC  29E7               	goto	u335
  1243  01ED                     l1004:
  1244  01ED  3001               	movlw	1
  1245  01EE  02A7               	subwf	___lwdiv@counter,f
  1246  01EF  1D03               	btfss	3,2
  1247  01F0  29F2               	goto	u341
  1248  01F1  29F3               	goto	u340
  1249  01F2                     u341:
  1250  01F2  29CE               	goto	l996
  1251  01F3                     u340:
  1252  01F3                     l1006:
  1253  01F3  0826               	movf	___lwdiv@quotient+1,w
  1254  01F4  00A1               	movwf	?___lwdiv+1
  1255  01F5  0825               	movf	___lwdiv@quotient,w
  1256  01F6  00A0               	movwf	?___lwdiv
  1257  01F7                     l496:
  1258  01F7  0008               	return
  1259  01F8                     __end_of___lwdiv:
  1260                           
  1261                           	psect	text6
  1262  028D                     __ptext6:	
  1263 ;; *************** function _EUSART_ENVIAR *****************
  1264 ;; Defined at:
  1265 ;;		line 36 in file "./EUSART_LIB.h"
  1266 ;; Parameters:    Size  Location     Type
  1267 ;;  dato            1    wreg     unsigned char 
  1268 ;; Auto vars:     Size  Location     Type
  1269 ;;  dato            1    2[BANK0 ] unsigned char 
  1270 ;; Return value:  Size  Location     Type
  1271 ;;                  1    wreg      void 
  1272 ;; Registers used:
  1273 ;;		wreg
  1274 ;; Tracked objects:
  1275 ;;		On entry : 0/0
  1276 ;;		On exit  : 0/0
  1277 ;;		Unchanged: 0/0
  1278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1279 ;;      Params:         0       0       0       0       0
  1280 ;;      Locals:         0       1       0       0       0
  1281 ;;      Temps:          0       2       0       0       0
  1282 ;;      Totals:         0       3       0       0       0
  1283 ;;Total ram usage:        3 bytes
  1284 ;; Hardware stack levels used:    1
  1285 ;; Hardware stack levels required when called:    2
  1286 ;; This function calls:
  1287 ;;		Nothing
  1288 ;; This function is called by:
  1289 ;;		_main
  1290 ;; This function uses a non-reentrant model
  1291 ;;
  1292                           
  1293                           
  1294                           ;psect for function _EUSART_ENVIAR
  1295  028D                     _EUSART_ENVIAR:
  1296                           
  1297                           ;incstack = 0
  1298                           ; Regs used in _EUSART_ENVIAR: [wreg]
  1299                           ;EUSART_ENVIAR@dato stored from wreg
  1300  028D  1283               	bcf	3,5	;RP0=0, select bank0
  1301  028E  1303               	bcf	3,6	;RP1=0, select bank0
  1302  028F  00A2               	movwf	EUSART_ENVIAR@dato
  1303  0290                     l1010:
  1304                           
  1305                           ;./EUSART_LIB.h: 37:     if (PIR1bits.TXIF){
  1306  0290  1E0C               	btfss	12,4	;volatile
  1307  0291  2A93               	goto	u351
  1308  0292  2A94               	goto	u350
  1309  0293                     u351:
  1310  0293  2AA0               	goto	l77
  1311  0294                     u350:
  1312  0294                     l1012:
  1313                           
  1314                           ;./EUSART_LIB.h: 38:         TXREG = dato;
  1315  0294  0822               	movf	EUSART_ENVIAR@dato,w
  1316  0295  0099               	movwf	25	;volatile
  1317                           
  1318                           ;./EUSART_LIB.h: 39:         _delay((unsigned long)((10)*(4000000/4000.0)));}
  1319  0296  300D               	movlw	13
  1320  0297  1283               	bcf	3,5	;RP0=0, select bank0
  1321  0298  1303               	bcf	3,6	;RP1=0, select bank0
  1322  0299  00A1               	movwf	??_EUSART_ENVIAR+1
  1323  029A  30FB               	movlw	251
  1324  029B  00A0               	movwf	??_EUSART_ENVIAR
  1325  029C                     u547:
  1326  029C  0BA0               	decfsz	??_EUSART_ENVIAR,f
  1327  029D  2A9C               	goto	u547
  1328  029E  0BA1               	decfsz	??_EUSART_ENVIAR+1,f
  1329  029F  2A9C               	goto	u547
  1330  02A0                     l77:
  1331  02A0  0008               	return
  1332  02A1                     __end_of_EUSART_ENVIAR:
  1333                           
  1334                           	psect	text7
  1335  0024                     __ptext7:	
  1336 ;; *************** function _isr *****************
  1337 ;; Defined at:
  1338 ;;		line 54 in file "main.c"
  1339 ;; Parameters:    Size  Location     Type
  1340 ;;		None
  1341 ;; Auto vars:     Size  Location     Type
  1342 ;;		None
  1343 ;; Return value:  Size  Location     Type
  1344 ;;                  1    wreg      void 
  1345 ;; Registers used:
  1346 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1347 ;; Tracked objects:
  1348 ;;		On entry : 0/0
  1349 ;;		On exit  : 0/0
  1350 ;;		Unchanged: 0/0
  1351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1352 ;;      Params:         0       0       0       0       0
  1353 ;;      Locals:         0       0       0       0       0
  1354 ;;      Temps:          5       0       0       0       0
  1355 ;;      Totals:         5       0       0       0       0
  1356 ;;Total ram usage:        5 bytes
  1357 ;; Hardware stack levels used:    1
  1358 ;; Hardware stack levels required when called:    1
  1359 ;; This function calls:
  1360 ;;		___bmul
  1361 ;; This function is called by:
  1362 ;;		Interrupt level 1
  1363 ;; This function uses a non-reentrant model
  1364 ;;
  1365                           
  1366                           
  1367                           ;psect for function _isr
  1368  0024                     _isr:
  1369  0024                     i1l1090:
  1370                           
  1371                           ;main.c: 55:              switch (POS_RX){
  1372  0024  138B               	bcf	11,7	;volatile
  1373                           
  1374                           ;main.c: 56:                 case 0:
  1375  0025  1C0B               	btfss	11,0	;volatile
  1376  0026  2828               	goto	u38_21
  1377  0027  2829               	goto	u38_20
  1378  0028                     u38_21:
  1379  0028  2854               	goto	i1l1118
  1380  0029                     u38_20:
  1381  0029                     i1l1092:
  1382                           
  1383                           ;main.c: 57:                     DATO1 = (RCREG-48)*100;
  1384  0029  1283               	bcf	3,5	;RP0=0, select bank0
  1385  002A  1303               	bcf	3,6	;RP1=0, select bank0
  1386  002B  1806               	btfsc	6,0	;volatile
  1387  002C  282E               	goto	u39_21
  1388  002D  282F               	goto	u39_20
  1389  002E                     u39_21:
  1390  002E  2832               	goto	i1l1096
  1391  002F                     u39_20:
  1392  002F                     i1l1094:
  1393                           
  1394                           ;main.c: 58:                     POS_RX = 1;
  1395  002F  01FD               	clrf	_flag1
  1396  0030  0AFD               	incf	_flag1,f
  1397                           
  1398                           ;main.c: 59:                     break;
  1399  0031  2840               	goto	i1l1104
  1400  0032                     i1l1096:
  1401                           
  1402                           ;main.c: 61:                     DATO2 = (RCREG-48)*10;
  1403  0032  037D               	decf	_flag1,w
  1404  0033  1D03               	btfss	3,2
  1405  0034  2836               	goto	u40_21
  1406  0035  2837               	goto	u40_20
  1407  0036                     u40_21:
  1408  0036  2840               	goto	i1l1104
  1409  0037                     u40_20:
  1410  0037                     i1l1098:
  1411                           
  1412                           ;main.c: 62:                     POS_RX = 2;
  1413  0037  3001               	movlw	1
  1414  0038  00F4               	movwf	??_isr
  1415  0039  0874               	movf	??_isr,w
  1416  003A  07B7               	addwf	_CONTADOR,f
  1417  003B                     i1l1100:
  1418                           
  1419                           ;main.c: 63:                     break;
  1420  003B  01FD               	clrf	_flag1
  1421  003C                     i1l1102:
  1422                           
  1423                           ;main.c: 64:                 case 2:
  1424  003C  3003               	movlw	3
  1425  003D  00F4               	movwf	??_isr
  1426  003E  0874               	movf	??_isr,w
  1427  003F  00B6               	movwf	_flagc
  1428  0040                     i1l1104:
  1429                           
  1430                           ;main.c: 68:         }
  1431  0040  1886               	btfsc	6,1	;volatile
  1432  0041  2843               	goto	u41_21
  1433  0042  2844               	goto	u41_20
  1434  0043                     u41_21:
  1435  0043  2847               	goto	i1l1108
  1436  0044                     u41_20:
  1437  0044                     i1l1106:
  1438                           
  1439                           ;main.c: 69:         }
  1440  0044  01FC               	clrf	_flag2
  1441  0045  0AFC               	incf	_flag2,f
  1442                           
  1443                           ;main.c: 70:      }
  1444  0046  2853               	goto	i1l1116
  1445  0047                     i1l1108:
  1446                           
  1447                           ;main.c: 72: }
  1448  0047  037C               	decf	_flag2,w
  1449  0048  1D03               	btfss	3,2
  1450  0049  284B               	goto	u42_21
  1451  004A  284C               	goto	u42_20
  1452  004B                     u42_21:
  1453  004B  2853               	goto	i1l1116
  1454  004C                     u42_20:
  1455  004C                     i1l1110:
  1456                           
  1457                           ;main.c: 73: void main (void){
  1458  004C  3001               	movlw	1
  1459  004D  02B7               	subwf	_CONTADOR,f
  1460  004E                     i1l1112:
  1461                           
  1462                           ;main.c: 74:     setup();
  1463  004E  01FC               	clrf	_flag2
  1464  004F                     i1l1114:
  1465                           
  1466                           ;main.c: 75:     while(1){
  1467  004F  3003               	movlw	3
  1468  0050  00F4               	movwf	??_isr
  1469  0051  0874               	movf	??_isr,w
  1470  0052  00B6               	movwf	_flagc
  1471  0053                     i1l1116:
  1472                           
  1473                           ;main.c: 78:         if (flagc >= 1){
  1474  0053  100B               	bcf	11,0	;volatile
  1475  0054                     i1l1118:
  1476                           
  1477                           ;main.c: 80:             EUSART_ENVIAR(POS1);
  1478  0054  1283               	bcf	3,5	;RP0=0, select bank0
  1479  0055  1303               	bcf	3,6	;RP1=0, select bank0
  1480  0056  1E8C               	btfss	12,5	;volatile
  1481  0057  2859               	goto	u43_21
  1482  0058  285A               	goto	u43_20
  1483  0059                     u43_21:
  1484  0059  28AD               	goto	i1l115
  1485  005A                     u43_20:
  1486  005A                     i1l1120:
  1487                           
  1488                           ;main.c: 81:            _delay((unsigned long)((200)*(4000000/4000000.0)));
  1489  005A  3061               	movlw	97
  1490  005B  021A               	subwf	26,w	;volatile
  1491  005C  1C03               	skipc
  1492  005D  285F               	goto	u44_21
  1493  005E  2860               	goto	u44_20
  1494  005F                     u44_21:
  1495  005F  289A               	goto	i1l1140
  1496  0060                     u44_20:
  1497  0060                     i1l1122:
  1498  0060  3069               	movlw	105
  1499  0061  021A               	subwf	26,w	;volatile
  1500  0062  1803               	skipnc
  1501  0063  2865               	goto	u45_21
  1502  0064  2866               	goto	u45_20
  1503  0065                     u45_21:
  1504  0065  289A               	goto	i1l1140
  1505  0066                     u45_20:
  1506  0066                     i1l1124:
  1507                           
  1508                           ;main.c: 82:            EUSART_ENVIAR(0x2C);
  1509  0066  081A               	movf	26,w	;volatile
  1510  0067  00F4               	movwf	??_isr
  1511  0068  0874               	movf	??_isr,w
  1512  0069  00F9               	movwf	_SEL
  1513  006A  28AD               	goto	i1l115
  1514  006B                     i1l1126:
  1515                           
  1516                           ;main.c: 87:            _delay((unsigned long)((200)*(4000000/4000000.0)));
  1517  006B  3064               	movlw	100
  1518  006C  00F4               	movwf	??_isr
  1519  006D  0874               	movf	??_isr,w
  1520  006E  00F0               	movwf	___bmul@multiplicand
  1521  006F  081A               	movf	26,w	;volatile
  1522  0070  3ED0               	addlw	208
  1523  0071  120A  118A  2278  120A  118A  	fcall	___bmul
  1524  0076  00F5               	movwf	??_isr+1
  1525  0077  0875               	movf	??_isr+1,w
  1526  0078  1283               	bcf	3,5	;RP0=0, select bank0
  1527  0079  1303               	bcf	3,6	;RP1=0, select bank0
  1528  007A  00B2               	movwf	_DATO1
  1529  007B                     i1l1128:
  1530                           
  1531                           ;main.c: 88:            EUSART_ENVIAR(POS3);
  1532  007B  01FA               	clrf	_POS_RX
  1533  007C  0AFA               	incf	_POS_RX,f
  1534                           
  1535                           ;main.c: 89:            _delay((unsigned long)((200)*(4000000/4000000.0)));
  1536  007D  28AD               	goto	i1l115
  1537  007E                     i1l1130:
  1538                           
  1539                           ;main.c: 91:            _delay((unsigned long)((200)*(4000000/4000000.0)));
  1540  007E  300A               	movlw	10
  1541  007F  00F4               	movwf	??_isr
  1542  0080  0874               	movf	??_isr,w
  1543  0081  00F0               	movwf	___bmul@multiplicand
  1544  0082  081A               	movf	26,w	;volatile
  1545  0083  3ED0               	addlw	208
  1546  0084  120A  118A  2278  120A  118A  	fcall	___bmul
  1547  0089  00F5               	movwf	??_isr+1
  1548  008A  0875               	movf	??_isr+1,w
  1549  008B  1283               	bcf	3,5	;RP0=0, select bank0
  1550  008C  1303               	bcf	3,6	;RP1=0, select bank0
  1551  008D  00B1               	movwf	_DATO2
  1552  008E                     i1l1132:
  1553                           
  1554                           ;main.c: 92:            EUSART_ENVIAR(10);
  1555  008E  3002               	movlw	2
  1556  008F  00F4               	movwf	??_isr
  1557  0090  0874               	movf	??_isr,w
  1558  0091  00FA               	movwf	_POS_RX
  1559                           
  1560                           ;main.c: 93:             _delay((unsigned long)((200)*(4000000/4000000.0)));
  1561  0092  28AD               	goto	i1l115
  1562  0093                     i1l1134:
  1563                           
  1564                           ;main.c: 95:        PORTD = DATO1 + DATO2 + DATO3;
  1565  0093  081A               	movf	26,w	;volatile
  1566  0094  3ED0               	addlw	208
  1567  0095  00F4               	movwf	??_isr
  1568  0096  0874               	movf	??_isr,w
  1569  0097  00B0               	movwf	_DATO3
  1570  0098                     i1l1136:
  1571                           
  1572                           ;main.c: 96:     }
  1573  0098  01FA               	clrf	_POS_RX
  1574                           
  1575                           ;main.c: 97: 
  1576  0099  28AD               	goto	i1l115
  1577  009A                     i1l1140:
  1578  009A  087A               	movf	_POS_RX,w
  1579  009B  00F4               	movwf	??_isr
  1580  009C  01F5               	clrf	??_isr+1
  1581                           
  1582                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1583                           ; Switch size 1, requested type "simple"
  1584                           ; Number of cases is 1, Range of values is 0 to 0
  1585                           ; switch strategies available:
  1586                           ; Name         Instructions Cycles
  1587                           ; simple_byte            4     3 (average)
  1588                           ; direct_byte           11     8 (fixed)
  1589                           ; jumptable            260     6 (fixed)
  1590                           ;	Chosen strategy is simple_byte
  1591  009D  0875               	movf	??_isr+1,w
  1592  009E  3A00               	xorlw	0	; case 0
  1593  009F  1903               	skipnz
  1594  00A0  28A2               	goto	i1l1194
  1595  00A1  28AD               	goto	i1l115
  1596  00A2                     i1l1194:
  1597                           
  1598                           ; Switch size 1, requested type "simple"
  1599                           ; Number of cases is 3, Range of values is 0 to 2
  1600                           ; switch strategies available:
  1601                           ; Name         Instructions Cycles
  1602                           ; simple_byte           10     6 (average)
  1603                           ; direct_byte           17     8 (fixed)
  1604                           ; jumptable            260     6 (fixed)
  1605                           ;	Chosen strategy is simple_byte
  1606  00A2  0874               	movf	??_isr,w
  1607  00A3  3A00               	xorlw	0	; case 0
  1608  00A4  1903               	skipnz
  1609  00A5  286B               	goto	i1l1126
  1610  00A6  3A01               	xorlw	1	; case 1
  1611  00A7  1903               	skipnz
  1612  00A8  287E               	goto	i1l1130
  1613  00A9  3A03               	xorlw	3	; case 2
  1614  00AA  1903               	skipnz
  1615  00AB  2893               	goto	i1l1134
  1616  00AC  28AD               	goto	i1l115
  1617  00AD                     i1l115:	
  1618                           ;main.c: 100: 
  1619                           
  1620                           
  1621                           ;main.c: 101: void setup(void){
  1622  00AD  178B               	bsf	11,7	;volatile
  1623  00AE                     i1l123:
  1624  00AE  0878               	movf	??_isr+4,w
  1625  00AF  008A               	movwf	10
  1626  00B0  0877               	movf	??_isr+3,w
  1627  00B1  0084               	movwf	4
  1628  00B2  0E76               	swapf	??_isr+2,w
  1629  00B3  0083               	movwf	3
  1630  00B4  0EFE               	swapf	btemp,f
  1631  00B5  0E7E               	swapf	btemp,w
  1632  00B6  0009               	retfie
  1633  00B7                     __end_of_isr:
  1634                           
  1635                           	psect	intentry
  1636  0004                     __pintentry:	
  1637                           ;incstack = 0
  1638                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1639                           
  1640  0004                     interrupt_function:
  1641  007E                     saved_w	set	btemp
  1642  0004  00FE               	movwf	btemp
  1643  0005  0E03               	swapf	3,w
  1644  0006  00F6               	movwf	??_isr+2
  1645  0007  0804               	movf	4,w
  1646  0008  00F7               	movwf	??_isr+3
  1647  0009  080A               	movf	10,w
  1648  000A  00F8               	movwf	??_isr+4
  1649  000B  120A  118A  2824   	ljmp	_isr
  1650                           
  1651                           	psect	text8
  1652  0278                     __ptext8:	
  1653 ;; *************** function ___bmul *****************
  1654 ;; Defined at:
  1655 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8.c"
  1656 ;; Parameters:    Size  Location     Type
  1657 ;;  multiplier      1    wreg     unsigned char 
  1658 ;;  multiplicand    1    0[COMMON] unsigned char 
  1659 ;; Auto vars:     Size  Location     Type
  1660 ;;  multiplier      1    3[COMMON] unsigned char 
  1661 ;;  product         1    2[COMMON] unsigned char 
  1662 ;; Return value:  Size  Location     Type
  1663 ;;                  1    wreg      unsigned char 
  1664 ;; Registers used:
  1665 ;;		wreg, status,2, status,0
  1666 ;; Tracked objects:
  1667 ;;		On entry : 0/0
  1668 ;;		On exit  : 0/0
  1669 ;;		Unchanged: 0/0
  1670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1671 ;;      Params:         1       0       0       0       0
  1672 ;;      Locals:         2       0       0       0       0
  1673 ;;      Temps:          1       0       0       0       0
  1674 ;;      Totals:         4       0       0       0       0
  1675 ;;Total ram usage:        4 bytes
  1676 ;; Hardware stack levels used:    1
  1677 ;; This function calls:
  1678 ;;		Nothing
  1679 ;; This function is called by:
  1680 ;;		_isr
  1681 ;; This function uses a non-reentrant model
  1682 ;;
  1683                           
  1684                           
  1685                           ;psect for function ___bmul
  1686  0278                     ___bmul:
  1687                           
  1688                           ;incstack = 0
  1689                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1690                           ;___bmul@multiplier stored from wreg
  1691  0278  00F3               	movwf	___bmul@multiplier
  1692  0279                     i1l1076:
  1693  0279  01F2               	clrf	___bmul@product
  1694  027A                     i1l1078:
  1695  027A  1C73               	btfss	___bmul@multiplier,0
  1696  027B  2A7D               	goto	u36_21
  1697  027C  2A7E               	goto	u36_20
  1698  027D                     u36_21:
  1699  027D  2A82               	goto	i1l1082
  1700  027E                     u36_20:
  1701  027E                     i1l1080:
  1702  027E  0870               	movf	___bmul@multiplicand,w
  1703  027F  00F1               	movwf	??___bmul
  1704  0280  0871               	movf	??___bmul,w
  1705  0281  07F2               	addwf	___bmul@product,f
  1706  0282                     i1l1082:
  1707  0282  1003               	clrc
  1708  0283  0DF0               	rlf	___bmul@multiplicand,f
  1709  0284                     i1l1084:
  1710  0284  1003               	clrc
  1711  0285  0CF3               	rrf	___bmul@multiplier,f
  1712  0286  0873               	movf	___bmul@multiplier,w
  1713  0287  1D03               	btfss	3,2
  1714  0288  2A8A               	goto	u37_21
  1715  0289  2A8B               	goto	u37_20
  1716  028A                     u37_21:
  1717  028A  2A7A               	goto	i1l1078
  1718  028B                     u37_20:
  1719  028B                     i1l1086:
  1720  028B  0872               	movf	___bmul@product,w
  1721  028C                     i1l250:
  1722  028C  0008               	return
  1723  028D                     __end_of___bmul:
  1724  007E                     btemp	set	126	;btemp
  1725  007E                     wtemp0	set	126
  1726                           
  1727                           	psect	config
  1728                           
  1729                           ;Config register CONFIG1 @ 0x2007
  1730                           ;	Oscillator Selection bits
  1731                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
  1732                           ;	Watchdog Timer Enable bit
  1733                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1734                           ;	Power-up Timer Enable bit
  1735                           ;	PWRTE = OFF, PWRT disabled
  1736                           ;	RE3/MCLR pin function select bit
  1737                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1738                           ;	Code Protection bit
  1739                           ;	CP = OFF, Program memory code protection is disabled
  1740                           ;	Data Code Protection bit
  1741                           ;	CPD = OFF, Data memory code protection is disabled
  1742                           ;	Brown Out Reset Selection bits
  1743                           ;	BOREN = OFF, BOR disabled
  1744                           ;	Internal External Switchover bit
  1745                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1746                           ;	Fail-Safe Clock Monitor Enabled bit
  1747                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1748                           ;	Low Voltage Programming Enable bit
  1749                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1750                           ;	In-Circuit Debugger Mode bit
  1751                           ;	DEBUG = 0x1, unprogrammed default
  1752  2007                     	org	8199
  1753  2007  20D5               	dw	8405
  1754                           
  1755                           ;Config register CONFIG2 @ 0x2008
  1756                           ;	Brown-out Reset Selection bit
  1757                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1758                           ;	Flash Program Memory Self Write Enable bits
  1759                           ;	WRT = OFF, Write protection off
  1760  2008                     	org	8200
  1761  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         13
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      14
    BANK0            80     16      24
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->___bmul

Critical Paths under _main in BANK0

    _main->_VAL
    _setup->_EUSART_INIT
    _VAL->___lwdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1291
                                             14 BANK0      2     2      0
                      _EUSART_ENVIAR
                                _VAL
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     196
                        _EUSART_INIT
 ---------------------------------------------------------------------------------
 (2) _EUSART_INIT                                          4     0      4     196
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _VAL                                                  6     4      2    1073
                                              8 BANK0      6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     396
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     466
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _EUSART_ENVIAR                                        3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  5     5      0     244
                                              4 COMMON     5     5      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (4) ___bmul                                               4     3      1     244
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_ENVIAR
   _VAL
     ___lwdiv
     ___wmul
   _setup
     _EUSART_INIT

 _isr (ROOT)
   ___bmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      26       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     10      18       5       30.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      26      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Aug 17 21:51:56 2021

         ___bmul@product 0072                       l73 0250                       l77 02A0  
    ___wmul@multiplicand 0022                      l135 0229                      l224 025F  
                    l226 0277                      l138 01B1                      l496 01F7  
                    l970 0251                      l962 022A                      l980 0273  
                    l972 0255                      l964 0238                      l990 01BF  
                    l974 0259                      l966 023E                      l992 01C6  
                    l984 01B2                      l976 0266                      l968 0247  
                    l994 01CA                      l986 01B6                      l978 026D  
                    l996 01CE                      l988 01BC                      l998 01DF  
                    _RB0 0030                      _RB1 0031                      u300 01CE  
                    u301 01CD                      u320 01DF                      u240 0259  
                    u321 01DE                      u241 0258                      u315 01CF  
                    u340 01F3                      u341 01F2                      u325 01DB  
                    u350 0294                      u270 0273                      u351 0293  
                    u335 01E7                      u271 0272                      u255 0260  
                    u280 01BC                      u281 01BB                      u265 0267  
                    u507 0104                      u460 00C3                      u517 0113  
                    u461 00C2                      u295 01C0                      u527 0120  
                    u537 012D                      _SEL 0079                      u547 029C  
                    u477 00DB                      _VAL 013E                      u487 00E8  
                    u497 00F7                      _isr 0024                      fsr0 0004  
           ?_EUSART_INIT 0020                     ?_VAL 0028                     l1000 01E5  
                   l1010 0290                     l1002 01E6                     l1012 0294  
                   l1004 01ED                     l1020 0204                     l1006 01F3  
                   l1030 020B                     l1022 0205                     l1014 01F8  
                   l1040 0212                     l1032 020C                     l1024 0208  
                   l1016 0201                     l1050 0217                     l1042 0213  
                   l1034 020F                     l1026 0209                     l1018 0203  
                   l1060 013E                     l1052 0225                     l1044 0214  
                   l1036 0210                     l1028 020A                     l1070 01A2  
                   l1062 0144                     l1054 0226                     l1046 0215  
                   l1038 0211                     l1150 00C3                     l1072 01A7  
                   l1064 0157                     l1056 0227                     l1048 0216  
                   l1160 0100                     l1152 00D7                     l1074 01AC  
                   l1066 0171                     l1058 0228                     l1170 0130  
                   l1162 0107                     l1154 00DE                     l1146 00B7  
                   l1068 0184                     l1164 0116                     l1156 00EB  
                   l1172 0134                     l1148 00BC                     l1166 011C  
                   l1158 00F3                     l1168 0129                     ?_isr 0070  
                   _RBIF 0058                     _POS1 0035                     _POS2 0034  
                   _POS3 0033                     _main 00B7                     btemp 007E  
                   start 000E        ___bmul@multiplier 0073                    ??_VAL 002A  
          _EUSART_ENVIAR 028D                    ??_isr 0074                    ?_main 0070  
                  _DATO1 0032                    _DATO2 0031                    _DATO3 0030  
                  _ANSEL 0188                    _IOCB0 04B0                    _IOCB1 04B1  
        __end_of___lwdiv 01F8                    i1l123 00AE                    i1l115 00AD  
                  i1l250 028C                    _RCREG 001A                    u40_20 0037  
                  u40_21 0036                    u41_20 0044                    u41_21 0043  
                  u42_20 004C                    u42_21 004B                    _SPBRG 0099  
                  u43_20 005A                    u43_21 0059                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _PORTE 0009                    u36_20 027E                    u44_20 0060  
                  u36_21 027D                    u44_21 005F                    u37_20 028B  
                  u45_20 0066                    u37_21 028A                    u45_21 0065  
                  u38_20 0029                    u38_21 0028                    u39_20 002F  
                  u39_21 002E                    _TRISA 0085                    _TRISB 0086  
                  _TRISD 0088                    _TRISE 0089                    _WPUB0 04A8  
                  _WPUB1 04A9                    _TXREG 0019                    _flag1 007D  
                  _flag2 007C                    _flagc 0036                    _setup 01F8  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 0011           ?_EUSART_ENVIAR 0070             __end_of_main 013E  
                 ??_main 002E                   ?_setup 0070                   _ANSELH 0189  
                 i1l1100 003B                   i1l1110 004C                   i1l1102 003C  
                 i1l1120 005A                   i1l1112 004E                   i1l1104 0040  
                 i1l1130 007E                   i1l1122 0060                   i1l1114 004F  
                 i1l1106 0044                   i1l1132 008E                   i1l1124 0066  
                 i1l1140 009A                   i1l1116 0053                   i1l1108 0047  
                 i1l1134 0093                   i1l1126 006B                   i1l1118 0054  
                 i1l1080 027E                   i1l1136 0098                   i1l1128 007B  
                 i1l1082 0282                   i1l1090 0024                   i1l1084 0284  
                 i1l1076 0279                   i1l1092 0029                   i1l1086 028B  
                 i1l1078 027A                   i1l1094 002F                   i1l1096 0032  
                 i1l1194 00A2                   i1l1098 0037                   _SPBRGH 009A  
                 _TRISC6 043E                   _TRISC7 043F                   _POS_RX 007A  
                 _POS_TX 007B                   ___bmul 0278                   ___wmul 0251  
              ??___lwdiv 0024                   saved_w 007E     __size_of_EUSART_INIT 0027  
__end_of__initialization 0020          ??_EUSART_ENVIAR 0020      ___bmul@multiplicand 0070  
         __pcstackCOMMON 0070            __end_of_setup 022A           _OPTION_REGbits 0081  
                ??_setup 0024               __pbssBANK0 0030               __pmaintext 00B7  
                ?___bmul 0070                  ?___wmul 0020               __pintentry 0004  
            VAL@variable 0028          __size_of___bmul 0015          __size_of___wmul 0027  
                ___lwdiv 01B2                  __ptext1 01F8                  __ptext2 022A  
                __ptext3 013E                  __ptext4 0251                  __ptext5 01B2  
                __ptext6 028D                  __ptext7 0024                  __ptext8 0278  
          EUSART_INIT@rx 0022            EUSART_INIT@tx 0020             __size_of_VAL 0074  
           __size_of_isr 0093     end_of_initialization 0020                _RCSTAbits 0018  
              _TXSTAbits 0098           __end_of___bmul 028D           __end_of___wmul 0278  
            _BAUDCTLbits 0187      start_initialization 0011              __end_of_VAL 01B2  
          ??_EUSART_INIT 0024              __end_of_isr 00B7    __end_of_EUSART_ENVIAR 02A1  
               ??___bmul 0071                 ??___wmul 0024              __pbssCOMMON 0079  
              ___latbits 0002            __pcstackBANK0 0020      __end_of_EUSART_INIT 0251  
       ___lwdiv@dividend 0022        EUSART_ENVIAR@dato 0022                 VAL@valor 002C  
               ?___lwdiv 0020         ___lwdiv@quotient 0025                 _CONTADOR 0037  
         __size_of_setup 0032        interrupt_function 0004           ___wmul@product 0024  
               _PIE1bits 008C                 _PIR1bits 000C        ___wmul@multiplier 0020  
            _EUSART_INIT 022A         __size_of___lwdiv 0046          ___lwdiv@divisor 0020  
        ___lwdiv@counter 0027            __size_of_main 0087               _INTCONbits 000B  
               intlevel1 0000               _OSCCONbits 008F   __size_of_EUSART_ENVIAR 0014  
