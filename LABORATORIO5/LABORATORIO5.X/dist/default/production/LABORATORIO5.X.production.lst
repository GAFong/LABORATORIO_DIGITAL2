

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sat Aug 14 15:45:06 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    21                           	dabs	1,0x7E,2
    22  0000                     
    23                           ; Version 2.20
    24                           ; Generated 12/02/2020 GMT
    25                           ; 
    26                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F887 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     	;# 
    58  0001                     	;# 
    59  0002                     	;# 
    60  0003                     	;# 
    61  0004                     	;# 
    62  0005                     	;# 
    63  0006                     	;# 
    64  0007                     	;# 
    65  0008                     	;# 
    66  0009                     	;# 
    67  000A                     	;# 
    68  000B                     	;# 
    69  000C                     	;# 
    70  000D                     	;# 
    71  000E                     	;# 
    72  000E                     	;# 
    73  000F                     	;# 
    74  0010                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0013                     	;# 
    78  0014                     	;# 
    79  0015                     	;# 
    80  0015                     	;# 
    81  0016                     	;# 
    82  0017                     	;# 
    83  0018                     	;# 
    84  0019                     	;# 
    85  001A                     	;# 
    86  001B                     	;# 
    87  001B                     	;# 
    88  001C                     	;# 
    89  001D                     	;# 
    90  001E                     	;# 
    91  001F                     	;# 
    92  0081                     	;# 
    93  0085                     	;# 
    94  0086                     	;# 
    95  0087                     	;# 
    96  0088                     	;# 
    97  0089                     	;# 
    98  008C                     	;# 
    99  008D                     	;# 
   100  008E                     	;# 
   101  008F                     	;# 
   102  0090                     	;# 
   103  0091                     	;# 
   104  0092                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0094                     	;# 
   109  0095                     	;# 
   110  0096                     	;# 
   111  0097                     	;# 
   112  0098                     	;# 
   113  0099                     	;# 
   114  009A                     	;# 
   115  009B                     	;# 
   116  009C                     	;# 
   117  009D                     	;# 
   118  009E                     	;# 
   119  009F                     	;# 
   120  0105                     	;# 
   121  0107                     	;# 
   122  0108                     	;# 
   123  0109                     	;# 
   124  010C                     	;# 
   125  010C                     	;# 
   126  010D                     	;# 
   127  010E                     	;# 
   128  010F                     	;# 
   129  0185                     	;# 
   130  0187                     	;# 
   131  0188                     	;# 
   132  0189                     	;# 
   133  018C                     	;# 
   134  018D                     	;# 
   135  0000                     	;# 
   136  0001                     	;# 
   137  0002                     	;# 
   138  0003                     	;# 
   139  0004                     	;# 
   140  0005                     	;# 
   141  0006                     	;# 
   142  0007                     	;# 
   143  0008                     	;# 
   144  0009                     	;# 
   145  000A                     	;# 
   146  000B                     	;# 
   147  000C                     	;# 
   148  000D                     	;# 
   149  000E                     	;# 
   150  000E                     	;# 
   151  000F                     	;# 
   152  0010                     	;# 
   153  0011                     	;# 
   154  0012                     	;# 
   155  0013                     	;# 
   156  0014                     	;# 
   157  0015                     	;# 
   158  0015                     	;# 
   159  0016                     	;# 
   160  0017                     	;# 
   161  0018                     	;# 
   162  0019                     	;# 
   163  001A                     	;# 
   164  001B                     	;# 
   165  001B                     	;# 
   166  001C                     	;# 
   167  001D                     	;# 
   168  001E                     	;# 
   169  001F                     	;# 
   170  0081                     	;# 
   171  0085                     	;# 
   172  0086                     	;# 
   173  0087                     	;# 
   174  0088                     	;# 
   175  0089                     	;# 
   176  008C                     	;# 
   177  008D                     	;# 
   178  008E                     	;# 
   179  008F                     	;# 
   180  0090                     	;# 
   181  0091                     	;# 
   182  0092                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0094                     	;# 
   187  0095                     	;# 
   188  0096                     	;# 
   189  0097                     	;# 
   190  0098                     	;# 
   191  0099                     	;# 
   192  009A                     	;# 
   193  009B                     	;# 
   194  009C                     	;# 
   195  009D                     	;# 
   196  009E                     	;# 
   197  009F                     	;# 
   198  0105                     	;# 
   199  0107                     	;# 
   200  0108                     	;# 
   201  0109                     	;# 
   202  010C                     	;# 
   203  010C                     	;# 
   204  010D                     	;# 
   205  010E                     	;# 
   206  010F                     	;# 
   207  0185                     	;# 
   208  0187                     	;# 
   209  0188                     	;# 
   210  0189                     	;# 
   211  018C                     	;# 
   212  018D                     	;# 
   213                           
   214                           	psect	nvBANK0
   215  0034                     __pnvBANK0:
   216  0034                     _POS3:
   217  0034                     	ds	1
   218  0035                     _POS2:
   219  0035                     	ds	1
   220  0036                     _POS1:
   221  0036                     	ds	1
   222  0009                     _PORTE	set	9
   223  0007                     _PORTC	set	7
   224  0006                     _PORTB	set	6
   225  0005                     _PORTA	set	5
   226  0008                     _PORTD	set	8
   227  000B                     _INTCONbits	set	11
   228  0019                     _TXREG	set	25
   229  000C                     _PIR1bits	set	12
   230  0018                     _RCSTAbits	set	24
   231  001A                     _RCREG	set	26
   232  0031                     _RB1	set	49
   233  0030                     _RB0	set	48
   234  0058                     _RBIF	set	88
   235  0081                     _OPTION_REGbits	set	129
   236  008F                     _OSCCONbits	set	143
   237  0086                     _TRISB	set	134
   238  0089                     _TRISE	set	137
   239  0088                     _TRISD	set	136
   240  0085                     _TRISA	set	133
   241  008C                     _PIE1bits	set	140
   242  009A                     _SPBRGH	set	154
   243  0099                     _SPBRG	set	153
   244  0098                     _TXSTAbits	set	152
   245  04B1                     _IOCB1	set	1201
   246  04B0                     _IOCB0	set	1200
   247  04A9                     _WPUB1	set	1193
   248  04A8                     _WPUB0	set	1192
   249  0189                     _ANSELH	set	393
   250  0188                     _ANSEL	set	392
   251  0187                     _BAUDCTLbits	set	391
   252                           
   253                           	psect	cinit
   254  0011                     start_initialization:	
   255                           ; #config settings
   256                           
   257  0011                     __initialization:
   258                           
   259                           ; Clear objects allocated to COMMON
   260  0011  01F9               	clrf	__pbssCOMMON& (0+127)
   261  0012  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   262  0013  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
   263  0014  01FC               	clrf	(__pbssCOMMON+3)& (0+127)
   264  0015  01FD               	clrf	(__pbssCOMMON+4)& (0+127)
   265                           
   266                           ; Clear objects allocated to BANK0
   267  0016  1283               	bcf	3,5	;RP0=0, select bank0
   268  0017  1303               	bcf	3,6	;RP1=0, select bank0
   269  0018  01B0               	clrf	__pbssBANK0& (0+127)
   270  0019  01B1               	clrf	(__pbssBANK0+1)& (0+127)
   271  001A  01B2               	clrf	(__pbssBANK0+2)& (0+127)
   272  001B  01B3               	clrf	(__pbssBANK0+3)& (0+127)
   273  001C                     end_of_initialization:	
   274                           ;End of C runtime variable initialization code
   275                           
   276  001C                     __end_of__initialization:
   277  001C  0183               	clrf	3
   278  001D  120A  118A  28AB   	ljmp	_main	;jump to C main() function
   279                           
   280                           	psect	bssCOMMON
   281  0079                     __pbssCOMMON:
   282  0079                     _SEL:
   283  0079                     	ds	1
   284  007A                     _POS_RX:
   285  007A                     	ds	1
   286  007B                     _POS_TX:
   287  007B                     	ds	1
   288  007C                     _flag2:
   289  007C                     	ds	1
   290  007D                     _flag1:
   291  007D                     	ds	1
   292                           
   293                           	psect	bssBANK0
   294  0030                     __pbssBANK0:
   295  0030                     _DATO3:
   296  0030                     	ds	1
   297  0031                     _DATO2:
   298  0031                     	ds	1
   299  0032                     _DATO1:
   300  0032                     	ds	1
   301  0033                     _CONTADOR:
   302  0033                     	ds	1
   303                           
   304                           	psect	cstackCOMMON
   305  0070                     __pcstackCOMMON:
   306  0070                     ?_setup:
   307  0070                     ?_EUSART_ENVIAR:	
   308                           ; 1 bytes @ 0x0
   309                           
   310  0070                     ?_isr:	
   311                           ; 1 bytes @ 0x0
   312                           
   313  0070                     ?_main:	
   314                           ; 1 bytes @ 0x0
   315                           
   316  0070                     ?___bmul:	
   317                           ; 1 bytes @ 0x0
   318                           
   319  0070                     ___bmul@multiplicand:	
   320                           ; 1 bytes @ 0x0
   321                           
   322                           
   323                           ; 1 bytes @ 0x0
   324  0070                     	ds	1
   325  0071                     ??___bmul:
   326                           
   327                           ; 1 bytes @ 0x1
   328  0071                     	ds	1
   329  0072                     ___bmul@product:
   330                           
   331                           ; 1 bytes @ 0x2
   332  0072                     	ds	1
   333  0073                     ___bmul@multiplier:
   334                           
   335                           ; 1 bytes @ 0x3
   336  0073                     	ds	1
   337  0074                     ??_isr:
   338                           
   339                           ; 1 bytes @ 0x4
   340  0074                     	ds	5
   341                           
   342                           	psect	cstackBANK0
   343  0020                     __pcstackBANK0:
   344  0020                     ?_EUSART_INIT:
   345  0020                     ??_EUSART_ENVIAR:	
   346                           ; 1 bytes @ 0x0
   347                           
   348  0020                     ?___wmul:	
   349                           ; 1 bytes @ 0x0
   350                           
   351  0020                     ?___lwdiv:	
   352                           ; 2 bytes @ 0x0
   353                           
   354  0020                     EUSART_INIT@tx:	
   355                           ; 2 bytes @ 0x0
   356                           
   357  0020                     ___wmul@multiplier:	
   358                           ; 2 bytes @ 0x0
   359                           
   360  0020                     ___lwdiv@divisor:	
   361                           ; 2 bytes @ 0x0
   362                           
   363                           
   364                           ; 2 bytes @ 0x0
   365  0020                     	ds	2
   366  0022                     EUSART_ENVIAR@dato:
   367  0022                     EUSART_INIT@rx:	
   368                           ; 1 bytes @ 0x2
   369                           
   370  0022                     ___wmul@multiplicand:	
   371                           ; 2 bytes @ 0x2
   372                           
   373  0022                     ___lwdiv@dividend:	
   374                           ; 2 bytes @ 0x2
   375                           
   376                           
   377                           ; 2 bytes @ 0x2
   378  0022                     	ds	2
   379  0024                     ??_setup:
   380  0024                     ??_EUSART_INIT:	
   381                           ; 1 bytes @ 0x4
   382                           
   383  0024                     ??___wmul:	
   384                           ; 1 bytes @ 0x4
   385                           
   386  0024                     ??___lwdiv:	
   387                           ; 1 bytes @ 0x4
   388                           
   389  0024                     ___wmul@product:	
   390                           ; 1 bytes @ 0x4
   391                           
   392                           
   393                           ; 2 bytes @ 0x4
   394  0024                     	ds	1
   395  0025                     ___lwdiv@quotient:
   396                           
   397                           ; 2 bytes @ 0x5
   398  0025                     	ds	2
   399  0027                     ___lwdiv@counter:
   400                           
   401                           ; 1 bytes @ 0x7
   402  0027                     	ds	1
   403  0028                     ?_VAL:
   404  0028                     VAL@variable:	
   405                           ; 1 bytes @ 0x8
   406                           
   407                           
   408                           ; 2 bytes @ 0x8
   409  0028                     	ds	2
   410  002A                     ??_VAL:
   411                           
   412                           ; 1 bytes @ 0xA
   413  002A                     	ds	2
   414  002C                     VAL@valor:
   415                           
   416                           ; 2 bytes @ 0xC
   417  002C                     	ds	2
   418  002E                     ??_main:
   419                           
   420                           ; 1 bytes @ 0xE
   421  002E                     	ds	2
   422                           
   423                           	psect	maintext
   424  00AB                     __pmaintext:	
   425 ;;
   426 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   427 ;;
   428 ;; *************** function _main *****************
   429 ;; Defined at:
   430 ;;		line 99 in file "main.c"
   431 ;; Parameters:    Size  Location     Type
   432 ;;		None
   433 ;; Auto vars:     Size  Location     Type
   434 ;;		None
   435 ;; Return value:  Size  Location     Type
   436 ;;                  1    wreg      void 
   437 ;; Registers used:
   438 ;;		wreg, status,2, status,0, pclath, cstack
   439 ;; Tracked objects:
   440 ;;		On entry : B00/0
   441 ;;		On exit  : 0/0
   442 ;;		Unchanged: 0/0
   443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   444 ;;      Params:         0       0       0       0       0
   445 ;;      Locals:         0       0       0       0       0
   446 ;;      Temps:          0       2       0       0       0
   447 ;;      Totals:         0       2       0       0       0
   448 ;;Total ram usage:        2 bytes
   449 ;; Hardware stack levels required when called:    4
   450 ;; This function calls:
   451 ;;		_EUSART_ENVIAR
   452 ;;		_VAL
   453 ;;		_setup
   454 ;; This function is called by:
   455 ;;		Startup code after reset
   456 ;; This function uses a non-reentrant model
   457 ;;
   458                           
   459                           
   460                           ;psect for function _main
   461  00AB                     _main:
   462  00AB                     l1117:	
   463                           ;incstack = 0
   464                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   465                           
   466                           
   467                           ;main.c: 100:     TRISD = 0X00;
   468  00AB  120A  118A  21E5  120A  118A  	fcall	_setup
   469  00B0                     l122:	
   470                           ;main.c: 101:     TRISE = 0X00;
   471                           
   472                           
   473                           ;main.c: 103: 
   474  00B0  1283               	bcf	3,5	;RP0=0, select bank0
   475  00B1  1303               	bcf	3,6	;RP1=0, select bank0
   476  00B2  0833               	movf	_CONTADOR,w
   477  00B3  00AE               	movwf	??_main
   478  00B4  01AF               	clrf	??_main+1
   479  00B5  082E               	movf	??_main,w
   480  00B6  00A8               	movwf	VAL@variable
   481  00B7  082F               	movf	??_main+1,w
   482  00B8  00A9               	movwf	VAL@variable+1
   483  00B9  120A  118A  212B  120A  118A  	fcall	_VAL
   484                           
   485                           ;main.c: 104:     PORTA = 0X00;
   486  00BE  1283               	bcf	3,5	;RP0=0, select bank0
   487  00BF  1303               	bcf	3,6	;RP1=0, select bank0
   488  00C0  0836               	movf	_POS1,w
   489  00C1  120A  118A  2278  120A  118A  	fcall	_EUSART_ENVIAR
   490  00C6                     l1119:
   491                           
   492                           ;main.c: 105:     PORTB = 0X00;
   493  00C6  3041               	movlw	65
   494  00C7  1283               	bcf	3,5	;RP0=0, select bank0
   495  00C8  1303               	bcf	3,6	;RP1=0, select bank0
   496  00C9  00AE               	movwf	??_main
   497  00CA                     u457:
   498  00CA  0BAE               	decfsz	??_main,f
   499  00CB  28CA               	goto	u457
   500  00CC  28CD               	nop2
   501  00CD                     l1121:
   502                           
   503                           ;main.c: 106:     PORTC = 0X00;
   504  00CD  302C               	movlw	44
   505  00CE  120A  118A  2278  120A  118A  	fcall	_EUSART_ENVIAR
   506                           
   507                           ;main.c: 107:     PORTD = 0X00;
   508  00D3  3041               	movlw	65
   509  00D4  1283               	bcf	3,5	;RP0=0, select bank0
   510  00D5  1303               	bcf	3,6	;RP1=0, select bank0
   511  00D6  00AE               	movwf	??_main
   512  00D7                     u467:
   513  00D7  0BAE               	decfsz	??_main,f
   514  00D8  28D7               	goto	u467
   515  00D9  28DA               	nop2
   516  00DA                     l1123:
   517                           
   518                           ;main.c: 108:     PORTE = 0X00;
   519  00DA  1283               	bcf	3,5	;RP0=0, select bank0
   520  00DB  1303               	bcf	3,6	;RP1=0, select bank0
   521  00DC  0835               	movf	_POS2,w
   522  00DD  120A  118A  2278  120A  118A  	fcall	_EUSART_ENVIAR
   523  00E2                     l1125:
   524                           
   525                           ;main.c: 109: 
   526  00E2  3041               	movlw	65
   527  00E3  1283               	bcf	3,5	;RP0=0, select bank0
   528  00E4  1303               	bcf	3,6	;RP1=0, select bank0
   529  00E5  00AE               	movwf	??_main
   530  00E6                     u477:
   531  00E6  0BAE               	decfsz	??_main,f
   532  00E7  28E6               	goto	u477
   533  00E8  28E9               	nop2
   534                           
   535                           ;main.c: 110: 
   536  00E9  302C               	movlw	44
   537  00EA  120A  118A  2278  120A  118A  	fcall	_EUSART_ENVIAR
   538  00EF                     l1127:
   539                           
   540                           ;main.c: 111:     OSCCONbits.IRCF2 = 1;
   541  00EF  3041               	movlw	65
   542  00F0  1283               	bcf	3,5	;RP0=0, select bank0
   543  00F1  1303               	bcf	3,6	;RP1=0, select bank0
   544  00F2  00AE               	movwf	??_main
   545  00F3                     u487:
   546  00F3  0BAE               	decfsz	??_main,f
   547  00F4  28F3               	goto	u487
   548  00F5  28F6               	nop2
   549  00F6                     l1129:
   550                           
   551                           ;main.c: 112:     OSCCONbits.IRCF1 = 1;
   552  00F6  1283               	bcf	3,5	;RP0=0, select bank0
   553  00F7  1303               	bcf	3,6	;RP1=0, select bank0
   554  00F8  0834               	movf	_POS3,w
   555  00F9  120A  118A  2278  120A  118A  	fcall	_EUSART_ENVIAR
   556                           
   557                           ;main.c: 113:     OSCCONbits.IRCF0 = 0;
   558  00FE  3041               	movlw	65
   559  00FF  1283               	bcf	3,5	;RP0=0, select bank0
   560  0100  1303               	bcf	3,6	;RP1=0, select bank0
   561  0101  00AE               	movwf	??_main
   562  0102                     u497:
   563  0102  0BAE               	decfsz	??_main,f
   564  0103  2902               	goto	u497
   565  0104  2905               	nop2
   566  0105                     l1131:
   567                           
   568                           ;main.c: 114:     OSCCONbits.SCS = 1;
   569  0105  302C               	movlw	44
   570  0106  120A  118A  2278  120A  118A  	fcall	_EUSART_ENVIAR
   571  010B                     l1133:
   572                           
   573                           ;main.c: 115: 
   574  010B  3041               	movlw	65
   575  010C  1283               	bcf	3,5	;RP0=0, select bank0
   576  010D  1303               	bcf	3,6	;RP1=0, select bank0
   577  010E  00AE               	movwf	??_main
   578  010F                     u507:
   579  010F  0BAE               	decfsz	??_main,f
   580  0110  290F               	goto	u507
   581  0111  2912               	nop2
   582                           
   583                           ;main.c: 116:     OPTION_REGbits.nRBPU = 0;
   584  0112  300D               	movlw	13
   585  0113  120A  118A  2278  120A  118A  	fcall	_EUSART_ENVIAR
   586  0118                     l1135:
   587                           
   588                           ;main.c: 117: 
   589  0118  3041               	movlw	65
   590  0119  1283               	bcf	3,5	;RP0=0, select bank0
   591  011A  1303               	bcf	3,6	;RP1=0, select bank0
   592  011B  00AE               	movwf	??_main
   593  011C                     u517:
   594  011C  0BAE               	decfsz	??_main,f
   595  011D  291C               	goto	u517
   596  011E  291F               	nop2
   597  011F                     l1137:
   598                           
   599                           ;main.c: 118:     WPUB0 = 1 ;
   600  011F  1283               	bcf	3,5	;RP0=0, select bank0
   601  0120  1303               	bcf	3,6	;RP1=0, select bank0
   602  0121  0831               	movf	_DATO2,w
   603  0122  0732               	addwf	_DATO1,w
   604  0123  00AE               	movwf	??_main
   605  0124  0830               	movf	_DATO3,w
   606  0125  072E               	addwf	??_main,w
   607  0126  0088               	movwf	8	;volatile
   608  0127  28B0               	goto	l122
   609  0128  120A  118A  280E   	ljmp	start
   610  012B                     __end_of_main:
   611                           
   612                           	psect	text1
   613  01E5                     __ptext1:	
   614 ;; *************** function _setup *****************
   615 ;; Defined at:
   616 ;;		line 124 in file "main.c"
   617 ;; Parameters:    Size  Location     Type
   618 ;;		None
   619 ;; Auto vars:     Size  Location     Type
   620 ;;		None
   621 ;; Return value:  Size  Location     Type
   622 ;;                  1    wreg      void 
   623 ;; Registers used:
   624 ;;		wreg, status,2, status,0, pclath, cstack
   625 ;; Tracked objects:
   626 ;;		On entry : 0/0
   627 ;;		On exit  : 0/0
   628 ;;		Unchanged: 0/0
   629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   630 ;;      Params:         0       0       0       0       0
   631 ;;      Locals:         0       0       0       0       0
   632 ;;      Temps:          0       0       0       0       0
   633 ;;      Totals:         0       0       0       0       0
   634 ;;Total ram usage:        0 bytes
   635 ;; Hardware stack levels used:    1
   636 ;; Hardware stack levels required when called:    3
   637 ;; This function calls:
   638 ;;		_EUSART_INIT
   639 ;; This function is called by:
   640 ;;		_main
   641 ;; This function uses a non-reentrant model
   642 ;;
   643                           
   644                           
   645                           ;psect for function _setup
   646  01E5                     _setup:
   647  01E5                     l993:	
   648                           ;incstack = 0
   649                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   650                           
   651                           
   652                           ;main.c: 126:     INTCONbits.RBIF = 0;
   653  01E5  1683               	bsf	3,5	;RP0=1, select bank3
   654  01E6  1703               	bsf	3,6	;RP1=1, select bank3
   655  01E7  0188               	clrf	8	;volatile
   656                           
   657                           ;main.c: 127: 
   658  01E8  0189               	clrf	9	;volatile
   659                           
   660                           ;main.c: 129: 
   661  01E9  1683               	bsf	3,5	;RP0=1, select bank1
   662  01EA  1303               	bcf	3,6	;RP1=0, select bank1
   663  01EB  0185               	clrf	5	;volatile
   664                           
   665                           ;main.c: 130: void VAL(uint16_t variable){
   666  01EC  0188               	clrf	8	;volatile
   667                           
   668                           ;main.c: 131:     uint16_t valor;
   669  01ED  0189               	clrf	9	;volatile
   670  01EE                     l995:
   671                           
   672                           ;main.c: 132:     valor = variable;
   673  01EE  3003               	movlw	3
   674  01EF  0086               	movwf	6	;volatile
   675  01F0                     l997:
   676                           
   677                           ;main.c: 134:     valor = (valor - (POS1*100));
   678  01F0  1283               	bcf	3,5	;RP0=0, select bank0
   679  01F1  1303               	bcf	3,6	;RP1=0, select bank0
   680  01F2  0185               	clrf	5	;volatile
   681  01F3                     l999:
   682                           
   683                           ;main.c: 135:     POS2 = (valor/10);
   684  01F3  0186               	clrf	6	;volatile
   685  01F4                     l1001:
   686                           
   687                           ;main.c: 136:     valor = (valor - (POS2*10));
   688  01F4  0187               	clrf	7	;volatile
   689  01F5                     l1003:
   690                           
   691                           ;main.c: 137:     POS3 = (valor);
   692  01F5  0188               	clrf	8	;volatile
   693  01F6                     l1005:
   694                           
   695                           ;main.c: 138: 
   696  01F6  0189               	clrf	9	;volatile
   697  01F7                     l1007:
   698                           
   699                           ;main.c: 141:     POS3 = POS3 + 48;
   700  01F7  1683               	bsf	3,5	;RP0=1, select bank1
   701  01F8  1303               	bcf	3,6	;RP1=0, select bank1
   702  01F9  170F               	bsf	15,6	;volatile
   703  01FA                     l1009:
   704                           
   705                           ;main.c: 142: 
   706  01FA  168F               	bsf	15,5	;volatile
   707  01FB                     l1011:
   708                           
   709                           ;main.c: 143: }
   710  01FB  120F               	bcf	15,4	;volatile
   711  01FC                     l1013:
   712  01FC  140F               	bsf	15,0	;volatile
   713  01FD                     l1015:
   714  01FD  1381               	bcf	1,7	;volatile
   715  01FE                     l1017:
   716  01FE  1415               	bsf	21,0	;volatile
   717  01FF                     l1019:
   718  01FF  1495               	bsf	21,1	;volatile
   719  0200                     l1021:
   720  0200  1416               	bsf	22,0	;volatile
   721  0201                     l1023:
   722  0201  1496               	bsf	22,1	;volatile
   723  0202                     l1025:
   724  0202  3000               	movlw	0
   725  0203  1283               	bcf	3,5	;RP0=0, select bank0
   726  0204  1303               	bcf	3,6	;RP1=0, select bank0
   727  0205  00A0               	movwf	EUSART_INIT@tx
   728  0206  00A1               	movwf	EUSART_INIT@tx+1
   729  0207  3001               	movlw	1
   730  0208  00A2               	movwf	EUSART_INIT@rx
   731  0209  3000               	movlw	0
   732  020A  00A3               	movwf	EUSART_INIT@rx+1
   733  020B  120A  118A  2215  120A  118A  	fcall	_EUSART_INIT
   734  0210                     l1027:
   735  0210  178B               	bsf	11,7	;volatile
   736  0211                     l1029:
   737  0211  170B               	bsf	11,6	;volatile
   738  0212                     l1031:
   739  0212  158B               	bsf	11,3	;volatile
   740  0213                     l1033:
   741  0213  100B               	bcf	11,0	;volatile
   742  0214                     l128:
   743  0214  0008               	return
   744  0215                     __end_of_setup:
   745                           
   746                           	psect	text2
   747  0215                     __ptext2:	
   748 ;; *************** function _EUSART_INIT *****************
   749 ;; Defined at:
   750 ;;		line 13 in file "./EUSART_LIB.h"
   751 ;; Parameters:    Size  Location     Type
   752 ;;  tx              2    0[BANK0 ] unsigned int 
   753 ;;  rx              2    2[BANK0 ] unsigned int 
   754 ;; Auto vars:     Size  Location     Type
   755 ;;		None
   756 ;; Return value:  Size  Location     Type
   757 ;;                  1    wreg      void 
   758 ;; Registers used:
   759 ;;		wreg, status,0
   760 ;; Tracked objects:
   761 ;;		On entry : 0/0
   762 ;;		On exit  : 0/0
   763 ;;		Unchanged: 0/0
   764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   765 ;;      Params:         0       4       0       0       0
   766 ;;      Locals:         0       0       0       0       0
   767 ;;      Temps:          0       0       0       0       0
   768 ;;      Totals:         0       4       0       0       0
   769 ;;Total ram usage:        4 bytes
   770 ;; Hardware stack levels used:    1
   771 ;; Hardware stack levels required when called:    2
   772 ;; This function calls:
   773 ;;		Nothing
   774 ;; This function is called by:
   775 ;;		_setup
   776 ;; This function uses a non-reentrant model
   777 ;;
   778                           
   779                           
   780                           ;psect for function _EUSART_INIT
   781  0215                     _EUSART_INIT:
   782  0215                     l941:	
   783                           ;incstack = 0
   784                           ; Regs used in _EUSART_INIT: [wreg+status,0]
   785                           
   786                           
   787                           ;./EUSART_LIB.h: 17:   TXSTAbits.SYNC = 0;
   788  0215  1683               	bsf	3,5	;RP0=1, select bank1
   789  0216  1303               	bcf	3,6	;RP1=0, select bank1
   790  0217  1218               	bcf	24,4	;volatile
   791                           
   792                           ;./EUSART_LIB.h: 18:   TXSTAbits.BRGH = 1;
   793  0218  1518               	bsf	24,2	;volatile
   794                           
   795                           ;./EUSART_LIB.h: 19:   TXSTAbits.TX9 = 0;
   796  0219  1318               	bcf	24,6	;volatile
   797                           
   798                           ;./EUSART_LIB.h: 20:   TXSTAbits.TXEN= 1;
   799  021A  1698               	bsf	24,5	;volatile
   800                           
   801                           ;./EUSART_LIB.h: 21:   RCSTAbits.SPEN = 1;
   802  021B  1283               	bcf	3,5	;RP0=0, select bank0
   803  021C  1303               	bcf	3,6	;RP1=0, select bank0
   804  021D  1798               	bsf	24,7	;volatile
   805                           
   806                           ;./EUSART_LIB.h: 24:   RCSTAbits.RX9 = 0;
   807  021E  1318               	bcf	24,6	;volatile
   808                           
   809                           ;./EUSART_LIB.h: 25:   RCSTAbits.CREN = 1;
   810  021F  1618               	bsf	24,4	;volatile
   811                           
   812                           ;./EUSART_LIB.h: 28:     BAUDCTLbits.BRG16 = 0;
   813  0220  1683               	bsf	3,5	;RP0=1, select bank3
   814  0221  1703               	bsf	3,6	;RP1=1, select bank3
   815  0222  1187               	bcf	7,3	;volatile
   816  0223                     l943:
   817                           
   818                           ;./EUSART_LIB.h: 29:     SPBRG =25;
   819  0223  3019               	movlw	25
   820  0224  1683               	bsf	3,5	;RP0=1, select bank1
   821  0225  1303               	bcf	3,6	;RP1=0, select bank1
   822  0226  0099               	movwf	25	;volatile
   823                           
   824                           ;./EUSART_LIB.h: 30:     SPBRGH = 1;
   825  0227  3001               	movlw	1
   826  0228  009A               	movwf	26	;volatile
   827  0229                     l945:
   828                           
   829                           ;./EUSART_LIB.h: 32:     PIE1bits.TXIE =tx;
   830  0229  1283               	bcf	3,5	;RP0=0, select bank0
   831  022A  1303               	bcf	3,6	;RP1=0, select bank0
   832  022B  0C20               	rrf	EUSART_INIT@tx,w
   833  022C  1683               	bsf	3,5	;RP0=1, select bank1
   834  022D  1303               	bcf	3,6	;RP1=0, select bank1
   835  022E  1C03               	skipc
   836  022F  120C               	bcf	12,4	;volatile
   837  0230  1803               	skipnc
   838  0231  160C               	bsf	12,4	;volatile
   839  0232                     l947:
   840                           
   841                           ;./EUSART_LIB.h: 33:     PIE1bits.RCIE =rx;
   842  0232  1283               	bcf	3,5	;RP0=0, select bank0
   843  0233  1303               	bcf	3,6	;RP1=0, select bank0
   844  0234  0C22               	rrf	EUSART_INIT@rx,w
   845  0235  1683               	bsf	3,5	;RP0=1, select bank1
   846  0236  1303               	bcf	3,6	;RP1=0, select bank1
   847  0237  1C03               	skipc
   848  0238  128C               	bcf	12,5	;volatile
   849  0239  1803               	skipnc
   850  023A  168C               	bsf	12,5	;volatile
   851  023B                     l69:
   852  023B  0008               	return
   853  023C                     __end_of_EUSART_INIT:
   854                           
   855                           	psect	text3
   856  012B                     __ptext3:	
   857 ;; *************** function _VAL *****************
   858 ;; Defined at:
   859 ;;		line 160 in file "main.c"
   860 ;; Parameters:    Size  Location     Type
   861 ;;  variable        2    8[BANK0 ] unsigned int 
   862 ;; Auto vars:     Size  Location     Type
   863 ;;  valor           2   12[BANK0 ] unsigned int 
   864 ;; Return value:  Size  Location     Type
   865 ;;                  1    wreg      void 
   866 ;; Registers used:
   867 ;;		wreg, status,2, status,0, pclath, cstack
   868 ;; Tracked objects:
   869 ;;		On entry : 0/0
   870 ;;		On exit  : 0/0
   871 ;;		Unchanged: 0/0
   872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   873 ;;      Params:         0       2       0       0       0
   874 ;;      Locals:         0       2       0       0       0
   875 ;;      Temps:          0       2       0       0       0
   876 ;;      Totals:         0       6       0       0       0
   877 ;;Total ram usage:        6 bytes
   878 ;; Hardware stack levels used:    1
   879 ;; Hardware stack levels required when called:    3
   880 ;; This function calls:
   881 ;;		___lwdiv
   882 ;;		___wmul
   883 ;; This function is called by:
   884 ;;		_main
   885 ;; This function uses a non-reentrant model
   886 ;;
   887                           
   888                           
   889                           ;psect for function _VAL
   890  012B                     _VAL:
   891  012B                     l1035:	
   892                           ;incstack = 0
   893                           ; Regs used in _VAL: [wreg+status,2+status,0+pclath+cstack]
   894                           
   895  012B  1283               	bcf	3,5	;RP0=0, select bank0
   896  012C  1303               	bcf	3,6	;RP1=0, select bank0
   897  012D  0829               	movf	VAL@variable+1,w
   898  012E  00AD               	movwf	VAL@valor+1
   899  012F  0828               	movf	VAL@variable,w
   900  0130  00AC               	movwf	VAL@valor
   901  0131                     l1037:
   902  0131  3064               	movlw	100
   903  0132  00A0               	movwf	___lwdiv@divisor
   904  0133  3000               	movlw	0
   905  0134  00A1               	movwf	___lwdiv@divisor+1
   906  0135  082D               	movf	VAL@valor+1,w
   907  0136  00A3               	movwf	___lwdiv@dividend+1
   908  0137  082C               	movf	VAL@valor,w
   909  0138  00A2               	movwf	___lwdiv@dividend
   910  0139  120A  118A  219F  120A  118A  	fcall	___lwdiv
   911  013E  1283               	bcf	3,5	;RP0=0, select bank0
   912  013F  1303               	bcf	3,6	;RP1=0, select bank0
   913  0140  0820               	movf	?___lwdiv,w
   914  0141  00AA               	movwf	??_VAL
   915  0142  082A               	movf	??_VAL,w
   916  0143  00B6               	movwf	_POS1
   917  0144                     l1039:
   918  0144  0836               	movf	_POS1,w
   919  0145  00AA               	movwf	??_VAL
   920  0146  01AB               	clrf	??_VAL+1
   921  0147  082A               	movf	??_VAL,w
   922  0148  00A0               	movwf	___wmul@multiplier
   923  0149  082B               	movf	??_VAL+1,w
   924  014A  00A1               	movwf	___wmul@multiplier+1
   925  014B  309C               	movlw	156
   926  014C  00A2               	movwf	___wmul@multiplicand
   927  014D  30FF               	movlw	255
   928  014E  00A3               	movwf	___wmul@multiplicand+1
   929  014F  120A  118A  223C  120A  118A  	fcall	___wmul
   930  0154  1283               	bcf	3,5	;RP0=0, select bank0
   931  0155  1303               	bcf	3,6	;RP1=0, select bank0
   932  0156  082C               	movf	VAL@valor,w
   933  0157  0720               	addwf	?___wmul,w
   934  0158  00AC               	movwf	VAL@valor
   935  0159  082D               	movf	VAL@valor+1,w
   936  015A  1803               	skipnc
   937  015B  0A2D               	incf	VAL@valor+1,w
   938  015C  0721               	addwf	?___wmul+1,w
   939  015D  00AD               	movwf	VAL@valor+1
   940  015E                     l1041:
   941  015E  300A               	movlw	10
   942  015F  00A0               	movwf	___lwdiv@divisor
   943  0160  3000               	movlw	0
   944  0161  00A1               	movwf	___lwdiv@divisor+1
   945  0162  082D               	movf	VAL@valor+1,w
   946  0163  00A3               	movwf	___lwdiv@dividend+1
   947  0164  082C               	movf	VAL@valor,w
   948  0165  00A2               	movwf	___lwdiv@dividend
   949  0166  120A  118A  219F  120A  118A  	fcall	___lwdiv
   950  016B  1283               	bcf	3,5	;RP0=0, select bank0
   951  016C  1303               	bcf	3,6	;RP1=0, select bank0
   952  016D  0820               	movf	?___lwdiv,w
   953  016E  00AA               	movwf	??_VAL
   954  016F  082A               	movf	??_VAL,w
   955  0170  00B5               	movwf	_POS2
   956  0171                     l1043:
   957  0171  0835               	movf	_POS2,w
   958  0172  00AA               	movwf	??_VAL
   959  0173  01AB               	clrf	??_VAL+1
   960  0174  082A               	movf	??_VAL,w
   961  0175  00A0               	movwf	___wmul@multiplier
   962  0176  082B               	movf	??_VAL+1,w
   963  0177  00A1               	movwf	___wmul@multiplier+1
   964  0178  30F6               	movlw	246
   965  0179  00A2               	movwf	___wmul@multiplicand
   966  017A  30FF               	movlw	255
   967  017B  00A3               	movwf	___wmul@multiplicand+1
   968  017C  120A  118A  223C  120A  118A  	fcall	___wmul
   969  0181  1283               	bcf	3,5	;RP0=0, select bank0
   970  0182  1303               	bcf	3,6	;RP1=0, select bank0
   971  0183  082C               	movf	VAL@valor,w
   972  0184  0720               	addwf	?___wmul,w
   973  0185  00AC               	movwf	VAL@valor
   974  0186  082D               	movf	VAL@valor+1,w
   975  0187  1803               	skipnc
   976  0188  0A2D               	incf	VAL@valor+1,w
   977  0189  0721               	addwf	?___wmul+1,w
   978  018A  00AD               	movwf	VAL@valor+1
   979  018B  082C               	movf	VAL@valor,w
   980  018C  00AA               	movwf	??_VAL
   981  018D  082A               	movf	??_VAL,w
   982  018E  00B4               	movwf	_POS3
   983  018F                     l1045:
   984  018F  0836               	movf	_POS1,w
   985  0190  3E30               	addlw	48
   986  0191  00AA               	movwf	??_VAL
   987  0192  082A               	movf	??_VAL,w
   988  0193  00B6               	movwf	_POS1
   989  0194                     l1047:
   990  0194  0835               	movf	_POS2,w
   991  0195  3E30               	addlw	48
   992  0196  00AA               	movwf	??_VAL
   993  0197  082A               	movf	??_VAL,w
   994  0198  00B5               	movwf	_POS2
   995  0199                     l1049:
   996  0199  0834               	movf	_POS3,w
   997  019A  3E30               	addlw	48
   998  019B  00AA               	movwf	??_VAL
   999  019C  082A               	movf	??_VAL,w
  1000  019D  00B4               	movwf	_POS3
  1001  019E                     l131:
  1002  019E  0008               	return
  1003  019F                     __end_of_VAL:
  1004                           
  1005                           	psect	text4
  1006  023C                     __ptext4:	
  1007 ;; *************** function ___wmul *****************
  1008 ;; Defined at:
  1009 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  1010 ;; Parameters:    Size  Location     Type
  1011 ;;  multiplier      2    0[BANK0 ] unsigned int 
  1012 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  1013 ;; Auto vars:     Size  Location     Type
  1014 ;;  product         2    4[BANK0 ] unsigned int 
  1015 ;; Return value:  Size  Location     Type
  1016 ;;                  2    0[BANK0 ] unsigned int 
  1017 ;; Registers used:
  1018 ;;		wreg, status,2, status,0
  1019 ;; Tracked objects:
  1020 ;;		On entry : 0/0
  1021 ;;		On exit  : 0/0
  1022 ;;		Unchanged: 0/0
  1023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1024 ;;      Params:         0       4       0       0       0
  1025 ;;      Locals:         0       2       0       0       0
  1026 ;;      Temps:          0       0       0       0       0
  1027 ;;      Totals:         0       6       0       0       0
  1028 ;;Total ram usage:        6 bytes
  1029 ;; Hardware stack levels used:    1
  1030 ;; Hardware stack levels required when called:    2
  1031 ;; This function calls:
  1032 ;;		Nothing
  1033 ;; This function is called by:
  1034 ;;		_VAL
  1035 ;; This function uses a non-reentrant model
  1036 ;;
  1037                           
  1038                           
  1039                           ;psect for function ___wmul
  1040  023C                     ___wmul:
  1041  023C                     l949:	
  1042                           ;incstack = 0
  1043                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1044                           
  1045  023C  1283               	bcf	3,5	;RP0=0, select bank0
  1046  023D  1303               	bcf	3,6	;RP1=0, select bank0
  1047  023E  01A4               	clrf	___wmul@product
  1048  023F  01A5               	clrf	___wmul@product+1
  1049  0240                     l951:
  1050  0240  1C20               	btfss	___wmul@multiplier,0
  1051  0241  2A43               	goto	u231
  1052  0242  2A44               	goto	u230
  1053  0243                     u231:
  1054  0243  2A4A               	goto	l217
  1055  0244                     u230:
  1056  0244                     l953:
  1057  0244  0822               	movf	___wmul@multiplicand,w
  1058  0245  07A4               	addwf	___wmul@product,f
  1059  0246  1803               	skipnc
  1060  0247  0AA5               	incf	___wmul@product+1,f
  1061  0248  0823               	movf	___wmul@multiplicand+1,w
  1062  0249  07A5               	addwf	___wmul@product+1,f
  1063  024A                     l217:
  1064  024A  3001               	movlw	1
  1065  024B                     u245:
  1066  024B  1003               	clrc
  1067  024C  0DA2               	rlf	___wmul@multiplicand,f
  1068  024D  0DA3               	rlf	___wmul@multiplicand+1,f
  1069  024E  3EFF               	addlw	-1
  1070  024F  1D03               	skipz
  1071  0250  2A4B               	goto	u245
  1072  0251                     l955:
  1073  0251  3001               	movlw	1
  1074  0252                     u255:
  1075  0252  1003               	clrc
  1076  0253  0CA1               	rrf	___wmul@multiplier+1,f
  1077  0254  0CA0               	rrf	___wmul@multiplier,f
  1078  0255  3EFF               	addlw	-1
  1079  0256  1D03               	skipz
  1080  0257  2A52               	goto	u255
  1081  0258                     l957:
  1082  0258  0820               	movf	___wmul@multiplier,w
  1083  0259  0421               	iorwf	___wmul@multiplier+1,w
  1084  025A  1D03               	btfss	3,2
  1085  025B  2A5D               	goto	u261
  1086  025C  2A5E               	goto	u260
  1087  025D                     u261:
  1088  025D  2A40               	goto	l951
  1089  025E                     u260:
  1090  025E                     l959:
  1091  025E  0825               	movf	___wmul@product+1,w
  1092  025F  00A1               	movwf	?___wmul+1
  1093  0260  0824               	movf	___wmul@product,w
  1094  0261  00A0               	movwf	?___wmul
  1095  0262                     l219:
  1096  0262  0008               	return
  1097  0263                     __end_of___wmul:
  1098                           
  1099                           	psect	text5
  1100  019F                     __ptext5:	
  1101 ;; *************** function ___lwdiv *****************
  1102 ;; Defined at:
  1103 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  1104 ;; Parameters:    Size  Location     Type
  1105 ;;  divisor         2    0[BANK0 ] unsigned int 
  1106 ;;  dividend        2    2[BANK0 ] unsigned int 
  1107 ;; Auto vars:     Size  Location     Type
  1108 ;;  quotient        2    5[BANK0 ] unsigned int 
  1109 ;;  counter         1    7[BANK0 ] unsigned char 
  1110 ;; Return value:  Size  Location     Type
  1111 ;;                  2    0[BANK0 ] unsigned int 
  1112 ;; Registers used:
  1113 ;;		wreg, status,2, status,0
  1114 ;; Tracked objects:
  1115 ;;		On entry : 0/0
  1116 ;;		On exit  : 0/0
  1117 ;;		Unchanged: 0/0
  1118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1119 ;;      Params:         0       4       0       0       0
  1120 ;;      Locals:         0       3       0       0       0
  1121 ;;      Temps:          0       1       0       0       0
  1122 ;;      Totals:         0       8       0       0       0
  1123 ;;Total ram usage:        8 bytes
  1124 ;; Hardware stack levels used:    1
  1125 ;; Hardware stack levels required when called:    2
  1126 ;; This function calls:
  1127 ;;		Nothing
  1128 ;; This function is called by:
  1129 ;;		_VAL
  1130 ;; This function uses a non-reentrant model
  1131 ;;
  1132                           
  1133                           
  1134                           ;psect for function ___lwdiv
  1135  019F                     ___lwdiv:
  1136  019F                     l963:	
  1137                           ;incstack = 0
  1138                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1139                           
  1140  019F  1283               	bcf	3,5	;RP0=0, select bank0
  1141  01A0  1303               	bcf	3,6	;RP1=0, select bank0
  1142  01A1  01A5               	clrf	___lwdiv@quotient
  1143  01A2  01A6               	clrf	___lwdiv@quotient+1
  1144  01A3                     l965:
  1145  01A3  0820               	movf	___lwdiv@divisor,w
  1146  01A4  0421               	iorwf	___lwdiv@divisor+1,w
  1147  01A5  1903               	btfsc	3,2
  1148  01A6  29A8               	goto	u271
  1149  01A7  29A9               	goto	u270
  1150  01A8                     u271:
  1151  01A8  29E0               	goto	l985
  1152  01A9                     u270:
  1153  01A9                     l967:
  1154  01A9  01A7               	clrf	___lwdiv@counter
  1155  01AA  0AA7               	incf	___lwdiv@counter,f
  1156  01AB  29B7               	goto	l973
  1157  01AC                     l969:
  1158  01AC  3001               	movlw	1
  1159  01AD                     u285:
  1160  01AD  1003               	clrc
  1161  01AE  0DA0               	rlf	___lwdiv@divisor,f
  1162  01AF  0DA1               	rlf	___lwdiv@divisor+1,f
  1163  01B0  3EFF               	addlw	-1
  1164  01B1  1D03               	skipz
  1165  01B2  29AD               	goto	u285
  1166  01B3                     l971:
  1167  01B3  3001               	movlw	1
  1168  01B4  00A4               	movwf	??___lwdiv
  1169  01B5  0824               	movf	??___lwdiv,w
  1170  01B6  07A7               	addwf	___lwdiv@counter,f
  1171  01B7                     l973:
  1172  01B7  1FA1               	btfss	___lwdiv@divisor+1,7
  1173  01B8  29BA               	goto	u291
  1174  01B9  29BB               	goto	u290
  1175  01BA                     u291:
  1176  01BA  29AC               	goto	l969
  1177  01BB                     u290:
  1178  01BB                     l975:
  1179  01BB  3001               	movlw	1
  1180  01BC                     u305:
  1181  01BC  1003               	clrc
  1182  01BD  0DA5               	rlf	___lwdiv@quotient,f
  1183  01BE  0DA6               	rlf	___lwdiv@quotient+1,f
  1184  01BF  3EFF               	addlw	-1
  1185  01C0  1D03               	skipz
  1186  01C1  29BC               	goto	u305
  1187  01C2  0821               	movf	___lwdiv@divisor+1,w
  1188  01C3  0223               	subwf	___lwdiv@dividend+1,w
  1189  01C4  1D03               	skipz
  1190  01C5  29C8               	goto	u315
  1191  01C6  0820               	movf	___lwdiv@divisor,w
  1192  01C7  0222               	subwf	___lwdiv@dividend,w
  1193  01C8                     u315:
  1194  01C8  1C03               	skipc
  1195  01C9  29CB               	goto	u311
  1196  01CA  29CC               	goto	u310
  1197  01CB                     u311:
  1198  01CB  29D3               	goto	l981
  1199  01CC                     u310:
  1200  01CC                     l977:
  1201  01CC  0820               	movf	___lwdiv@divisor,w
  1202  01CD  02A2               	subwf	___lwdiv@dividend,f
  1203  01CE  0821               	movf	___lwdiv@divisor+1,w
  1204  01CF  1C03               	skipc
  1205  01D0  03A3               	decf	___lwdiv@dividend+1,f
  1206  01D1  02A3               	subwf	___lwdiv@dividend+1,f
  1207  01D2                     l979:
  1208  01D2  1425               	bsf	___lwdiv@quotient,0
  1209  01D3                     l981:
  1210  01D3  3001               	movlw	1
  1211  01D4                     u325:
  1212  01D4  1003               	clrc
  1213  01D5  0CA1               	rrf	___lwdiv@divisor+1,f
  1214  01D6  0CA0               	rrf	___lwdiv@divisor,f
  1215  01D7  3EFF               	addlw	-1
  1216  01D8  1D03               	skipz
  1217  01D9  29D4               	goto	u325
  1218  01DA                     l983:
  1219  01DA  3001               	movlw	1
  1220  01DB  02A7               	subwf	___lwdiv@counter,f
  1221  01DC  1D03               	btfss	3,2
  1222  01DD  29DF               	goto	u331
  1223  01DE  29E0               	goto	u330
  1224  01DF                     u331:
  1225  01DF  29BB               	goto	l975
  1226  01E0                     u330:
  1227  01E0                     l985:
  1228  01E0  0826               	movf	___lwdiv@quotient+1,w
  1229  01E1  00A1               	movwf	?___lwdiv+1
  1230  01E2  0825               	movf	___lwdiv@quotient,w
  1231  01E3  00A0               	movwf	?___lwdiv
  1232  01E4                     l489:
  1233  01E4  0008               	return
  1234  01E5                     __end_of___lwdiv:
  1235                           
  1236                           	psect	text6
  1237  0278                     __ptext6:	
  1238 ;; *************** function _EUSART_ENVIAR *****************
  1239 ;; Defined at:
  1240 ;;		line 36 in file "./EUSART_LIB.h"
  1241 ;; Parameters:    Size  Location     Type
  1242 ;;  dato            1    wreg     unsigned char 
  1243 ;; Auto vars:     Size  Location     Type
  1244 ;;  dato            1    2[BANK0 ] unsigned char 
  1245 ;; Return value:  Size  Location     Type
  1246 ;;                  1    wreg      void 
  1247 ;; Registers used:
  1248 ;;		wreg
  1249 ;; Tracked objects:
  1250 ;;		On entry : 0/0
  1251 ;;		On exit  : 0/0
  1252 ;;		Unchanged: 0/0
  1253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1254 ;;      Params:         0       0       0       0       0
  1255 ;;      Locals:         0       1       0       0       0
  1256 ;;      Temps:          0       2       0       0       0
  1257 ;;      Totals:         0       3       0       0       0
  1258 ;;Total ram usage:        3 bytes
  1259 ;; Hardware stack levels used:    1
  1260 ;; Hardware stack levels required when called:    2
  1261 ;; This function calls:
  1262 ;;		Nothing
  1263 ;; This function is called by:
  1264 ;;		_main
  1265 ;; This function uses a non-reentrant model
  1266 ;;
  1267                           
  1268                           
  1269                           ;psect for function _EUSART_ENVIAR
  1270  0278                     _EUSART_ENVIAR:
  1271                           
  1272                           ;incstack = 0
  1273                           ; Regs used in _EUSART_ENVIAR: [wreg]
  1274                           ;EUSART_ENVIAR@dato stored from wreg
  1275  0278  1283               	bcf	3,5	;RP0=0, select bank0
  1276  0279  1303               	bcf	3,6	;RP1=0, select bank0
  1277  027A  00A2               	movwf	EUSART_ENVIAR@dato
  1278  027B                     l989:
  1279                           
  1280                           ;./EUSART_LIB.h: 37:     if (PIR1bits.TXIF){
  1281  027B  1E0C               	btfss	12,4	;volatile
  1282  027C  2A7E               	goto	u341
  1283  027D  2A7F               	goto	u340
  1284  027E                     u341:
  1285  027E  2A8B               	goto	l73
  1286  027F                     u340:
  1287  027F                     l991:
  1288                           
  1289                           ;./EUSART_LIB.h: 38:         TXREG = dato;
  1290  027F  0822               	movf	EUSART_ENVIAR@dato,w
  1291  0280  0099               	movwf	25	;volatile
  1292                           
  1293                           ;./EUSART_LIB.h: 39:         _delay((unsigned long)((10)*(4000000/4000.0)));}
  1294  0281  300D               	movlw	13
  1295  0282  1283               	bcf	3,5	;RP0=0, select bank0
  1296  0283  1303               	bcf	3,6	;RP1=0, select bank0
  1297  0284  00A1               	movwf	??_EUSART_ENVIAR+1
  1298  0285  30FB               	movlw	251
  1299  0286  00A0               	movwf	??_EUSART_ENVIAR
  1300  0287                     u527:
  1301  0287  0BA0               	decfsz	??_EUSART_ENVIAR,f
  1302  0288  2A87               	goto	u527
  1303  0289  0BA1               	decfsz	??_EUSART_ENVIAR+1,f
  1304  028A  2A87               	goto	u527
  1305  028B                     l73:
  1306  028B  0008               	return
  1307  028C                     __end_of_EUSART_ENVIAR:
  1308                           
  1309                           	psect	text7
  1310  0020                     __ptext7:	
  1311 ;; *************** function _isr *****************
  1312 ;; Defined at:
  1313 ;;		line 53 in file "main.c"
  1314 ;; Parameters:    Size  Location     Type
  1315 ;;		None
  1316 ;; Auto vars:     Size  Location     Type
  1317 ;;		None
  1318 ;; Return value:  Size  Location     Type
  1319 ;;                  1    wreg      void 
  1320 ;; Registers used:
  1321 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1322 ;; Tracked objects:
  1323 ;;		On entry : 0/0
  1324 ;;		On exit  : 0/0
  1325 ;;		Unchanged: 0/0
  1326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1327 ;;      Params:         0       0       0       0       0
  1328 ;;      Locals:         0       0       0       0       0
  1329 ;;      Temps:          5       0       0       0       0
  1330 ;;      Totals:         5       0       0       0       0
  1331 ;;Total ram usage:        5 bytes
  1332 ;; Hardware stack levels used:    1
  1333 ;; Hardware stack levels required when called:    1
  1334 ;; This function calls:
  1335 ;;		___bmul
  1336 ;; This function is called by:
  1337 ;;		Interrupt level 1
  1338 ;; This function uses a non-reentrant model
  1339 ;;
  1340                           
  1341                           
  1342                           ;psect for function _isr
  1343  0020                     _isr:
  1344  0020                     i1l1065:
  1345                           
  1346                           ;main.c: 54:                     POS_RX = 1;
  1347  0020  138B               	bcf	11,7	;volatile
  1348                           
  1349                           ;main.c: 55:                     break;
  1350  0021  1C0B               	btfss	11,0	;volatile
  1351  0022  2824               	goto	u37_21
  1352  0023  2825               	goto	u37_20
  1353  0024                     u37_21:
  1354  0024  2848               	goto	i1l1089
  1355  0025                     u37_20:
  1356  0025                     i1l1067:
  1357                           
  1358                           ;main.c: 56:                 case 1:
  1359  0025  1283               	bcf	3,5	;RP0=0, select bank0
  1360  0026  1303               	bcf	3,6	;RP1=0, select bank0
  1361  0027  1806               	btfsc	6,0	;volatile
  1362  0028  282A               	goto	u38_21
  1363  0029  282B               	goto	u38_20
  1364  002A                     u38_21:
  1365  002A  282E               	goto	i1l1071
  1366  002B                     u38_20:
  1367  002B                     i1l1069:
  1368                           
  1369                           ;main.c: 57:                     DATO2 = (RCREG-48)*10;
  1370  002B  01FD               	clrf	_flag1
  1371  002C  0AFD               	incf	_flag1,f
  1372                           
  1373                           ;main.c: 58:                     POS_RX = 2;
  1374  002D  2838               	goto	i1l1077
  1375  002E                     i1l1071:
  1376                           
  1377                           ;main.c: 60:                 case 2:
  1378  002E  037D               	decf	_flag1,w
  1379  002F  1D03               	btfss	3,2
  1380  0030  2832               	goto	u39_21
  1381  0031  2833               	goto	u39_20
  1382  0032                     u39_21:
  1383  0032  2838               	goto	i1l1077
  1384  0033                     u39_20:
  1385  0033                     i1l1073:
  1386                           
  1387                           ;main.c: 61:                     DATO3 = (RCREG-48);
  1388  0033  3001               	movlw	1
  1389  0034  00F4               	movwf	??_isr
  1390  0035  0874               	movf	??_isr,w
  1391  0036  07B3               	addwf	_CONTADOR,f
  1392  0037                     i1l1075:
  1393                           
  1394                           ;main.c: 62:                     POS_RX = 0;
  1395  0037  01FD               	clrf	_flag1
  1396  0038                     i1l1077:
  1397                           
  1398                           ;main.c: 66:      }
  1399  0038  1886               	btfsc	6,1	;volatile
  1400  0039  283B               	goto	u40_21
  1401  003A  283C               	goto	u40_20
  1402  003B                     u40_21:
  1403  003B  283F               	goto	i1l1081
  1404  003C                     u40_20:
  1405  003C                     i1l1079:
  1406                           
  1407                           ;main.c: 67:     (INTCONbits.GIE = 1);
  1408  003C  01FC               	clrf	_flag2
  1409  003D  0AFC               	incf	_flag2,f
  1410                           
  1411                           ;main.c: 68: }
  1412  003E  2847               	goto	i1l1087
  1413  003F                     i1l1081:
  1414                           
  1415                           ;main.c: 70:     setup();
  1416  003F  037C               	decf	_flag2,w
  1417  0040  1D03               	btfss	3,2
  1418  0041  2843               	goto	u41_21
  1419  0042  2844               	goto	u41_20
  1420  0043                     u41_21:
  1421  0043  2847               	goto	i1l1087
  1422  0044                     u41_20:
  1423  0044                     i1l1083:
  1424                           
  1425                           ;main.c: 71:     while(1){
  1426  0044  3001               	movlw	1
  1427  0045  02B3               	subwf	_CONTADOR,f
  1428  0046                     i1l1085:
  1429                           
  1430                           ;main.c: 72: 
  1431  0046  01FC               	clrf	_flag2
  1432  0047                     i1l1087:
  1433                           
  1434                           ;main.c: 75:        _delay((unsigned long)((200)*(4000000/4000000.0)));
  1435  0047  100B               	bcf	11,0	;volatile
  1436  0048                     i1l1089:
  1437                           
  1438                           ;main.c: 77:        _delay((unsigned long)((200)*(4000000/4000000.0)));
  1439  0048  1283               	bcf	3,5	;RP0=0, select bank0
  1440  0049  1303               	bcf	3,6	;RP1=0, select bank0
  1441  004A  1E8C               	btfss	12,5	;volatile
  1442  004B  284D               	goto	u42_21
  1443  004C  284E               	goto	u42_20
  1444  004D                     u42_21:
  1445  004D  28A1               	goto	i1l109
  1446  004E                     u42_20:
  1447  004E                     i1l1091:
  1448                           
  1449                           ;main.c: 78:        EUSART_ENVIAR(POS2);
  1450  004E  3061               	movlw	97
  1451  004F  021A               	subwf	26,w	;volatile
  1452  0050  1C03               	skipc
  1453  0051  2853               	goto	u43_21
  1454  0052  2854               	goto	u43_20
  1455  0053                     u43_21:
  1456  0053  288E               	goto	i1l1111
  1457  0054                     u43_20:
  1458  0054                     i1l1093:
  1459  0054  3069               	movlw	105
  1460  0055  021A               	subwf	26,w	;volatile
  1461  0056  1803               	skipnc
  1462  0057  2859               	goto	u44_21
  1463  0058  285A               	goto	u44_20
  1464  0059                     u44_21:
  1465  0059  288E               	goto	i1l1111
  1466  005A                     u44_20:
  1467  005A                     i1l1095:
  1468                           
  1469                           ;main.c: 79:        _delay((unsigned long)((200)*(4000000/4000000.0)));
  1470  005A  081A               	movf	26,w	;volatile
  1471  005B  00F4               	movwf	??_isr
  1472  005C  0874               	movf	??_isr,w
  1473  005D  00F9               	movwf	_SEL
  1474  005E  28A1               	goto	i1l109
  1475  005F                     i1l1097:
  1476                           
  1477                           ;main.c: 83:        _delay((unsigned long)((200)*(4000000/4000000.0)));
  1478  005F  3064               	movlw	100
  1479  0060  00F4               	movwf	??_isr
  1480  0061  0874               	movf	??_isr,w
  1481  0062  00F0               	movwf	___bmul@multiplicand
  1482  0063  081A               	movf	26,w	;volatile
  1483  0064  3ED0               	addlw	208
  1484  0065  120A  118A  2263  120A  118A  	fcall	___bmul
  1485  006A  00F5               	movwf	??_isr+1
  1486  006B  0875               	movf	??_isr+1,w
  1487  006C  1283               	bcf	3,5	;RP0=0, select bank0
  1488  006D  1303               	bcf	3,6	;RP1=0, select bank0
  1489  006E  00B2               	movwf	_DATO1
  1490  006F                     i1l1099:
  1491                           
  1492                           ;main.c: 84:        EUSART_ENVIAR(0x2C);
  1493  006F  01FA               	clrf	_POS_RX
  1494  0070  0AFA               	incf	_POS_RX,f
  1495                           
  1496                           ;main.c: 85:        _delay((unsigned long)((200)*(4000000/4000000.0)));
  1497  0071  28A1               	goto	i1l109
  1498  0072                     i1l1101:
  1499                           
  1500                           ;main.c: 87:         _delay((unsigned long)((200)*(4000000/4000000.0)));
  1501  0072  300A               	movlw	10
  1502  0073  00F4               	movwf	??_isr
  1503  0074  0874               	movf	??_isr,w
  1504  0075  00F0               	movwf	___bmul@multiplicand
  1505  0076  081A               	movf	26,w	;volatile
  1506  0077  3ED0               	addlw	208
  1507  0078  120A  118A  2263  120A  118A  	fcall	___bmul
  1508  007D  00F5               	movwf	??_isr+1
  1509  007E  0875               	movf	??_isr+1,w
  1510  007F  1283               	bcf	3,5	;RP0=0, select bank0
  1511  0080  1303               	bcf	3,6	;RP1=0, select bank0
  1512  0081  00B1               	movwf	_DATO2
  1513  0082                     i1l1103:
  1514                           
  1515                           ;main.c: 88:        PORTD = DATO1 + DATO2 +DATO3;
  1516  0082  3002               	movlw	2
  1517  0083  00F4               	movwf	??_isr
  1518  0084  0874               	movf	??_isr,w
  1519  0085  00FA               	movwf	_POS_RX
  1520                           
  1521                           ;main.c: 89:     }
  1522  0086  28A1               	goto	i1l109
  1523  0087                     i1l1105:
  1524                           
  1525                           ;main.c: 91: }
  1526  0087  081A               	movf	26,w	;volatile
  1527  0088  3ED0               	addlw	208
  1528  0089  00F4               	movwf	??_isr
  1529  008A  0874               	movf	??_isr,w
  1530  008B  00B0               	movwf	_DATO3
  1531  008C                     i1l1107:
  1532                           
  1533                           ;main.c: 92: 
  1534  008C  01FA               	clrf	_POS_RX
  1535                           
  1536                           ;main.c: 93: 
  1537  008D  28A1               	goto	i1l109
  1538  008E                     i1l1111:
  1539  008E  087A               	movf	_POS_RX,w
  1540  008F  00F4               	movwf	??_isr
  1541  0090  01F5               	clrf	??_isr+1
  1542                           
  1543                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1544                           ; Switch size 1, requested type "simple"
  1545                           ; Number of cases is 1, Range of values is 0 to 0
  1546                           ; switch strategies available:
  1547                           ; Name         Instructions Cycles
  1548                           ; simple_byte            4     3 (average)
  1549                           ; direct_byte           11     8 (fixed)
  1550                           ; jumptable            260     6 (fixed)
  1551                           ;	Chosen strategy is simple_byte
  1552  0091  0875               	movf	??_isr+1,w
  1553  0092  3A00               	xorlw	0	; case 0
  1554  0093  1903               	skipnz
  1555  0094  2896               	goto	i1l1159
  1556  0095  28A1               	goto	i1l109
  1557  0096                     i1l1159:
  1558                           
  1559                           ; Switch size 1, requested type "simple"
  1560                           ; Number of cases is 3, Range of values is 0 to 2
  1561                           ; switch strategies available:
  1562                           ; Name         Instructions Cycles
  1563                           ; simple_byte           10     6 (average)
  1564                           ; direct_byte           17     8 (fixed)
  1565                           ; jumptable            260     6 (fixed)
  1566                           ;	Chosen strategy is simple_byte
  1567  0096  0874               	movf	??_isr,w
  1568  0097  3A00               	xorlw	0	; case 0
  1569  0098  1903               	skipnz
  1570  0099  285F               	goto	i1l1097
  1571  009A  3A01               	xorlw	1	; case 1
  1572  009B  1903               	skipnz
  1573  009C  2872               	goto	i1l1101
  1574  009D  3A03               	xorlw	3	; case 2
  1575  009E  1903               	skipnz
  1576  009F  2887               	goto	i1l1105
  1577  00A0  28A1               	goto	i1l109
  1578  00A1                     i1l109:	
  1579                           ;main.c: 96:     ANSEL = 0B0000000;
  1580                           
  1581                           
  1582                           ;main.c: 97:     ANSELH = 0X00;
  1583  00A1  178B               	bsf	11,7	;volatile
  1584  00A2                     i1l117:
  1585  00A2  0878               	movf	??_isr+4,w
  1586  00A3  008A               	movwf	10
  1587  00A4  0877               	movf	??_isr+3,w
  1588  00A5  0084               	movwf	4
  1589  00A6  0E76               	swapf	??_isr+2,w
  1590  00A7  0083               	movwf	3
  1591  00A8  0EFE               	swapf	btemp,f
  1592  00A9  0E7E               	swapf	btemp,w
  1593  00AA  0009               	retfie
  1594  00AB                     __end_of_isr:
  1595                           
  1596                           	psect	intentry
  1597  0004                     __pintentry:	
  1598                           ;incstack = 0
  1599                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1600                           
  1601  0004                     interrupt_function:
  1602  007E                     saved_w	set	btemp
  1603  0004  00FE               	movwf	btemp
  1604  0005  0E03               	swapf	3,w
  1605  0006  00F6               	movwf	??_isr+2
  1606  0007  0804               	movf	4,w
  1607  0008  00F7               	movwf	??_isr+3
  1608  0009  080A               	movf	10,w
  1609  000A  00F8               	movwf	??_isr+4
  1610  000B  120A  118A  2820   	ljmp	_isr
  1611                           
  1612                           	psect	text8
  1613  0263                     __ptext8:	
  1614 ;; *************** function ___bmul *****************
  1615 ;; Defined at:
  1616 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8.c"
  1617 ;; Parameters:    Size  Location     Type
  1618 ;;  multiplier      1    wreg     unsigned char 
  1619 ;;  multiplicand    1    0[COMMON] unsigned char 
  1620 ;; Auto vars:     Size  Location     Type
  1621 ;;  multiplier      1    3[COMMON] unsigned char 
  1622 ;;  product         1    2[COMMON] unsigned char 
  1623 ;; Return value:  Size  Location     Type
  1624 ;;                  1    wreg      unsigned char 
  1625 ;; Registers used:
  1626 ;;		wreg, status,2, status,0
  1627 ;; Tracked objects:
  1628 ;;		On entry : 0/0
  1629 ;;		On exit  : 0/0
  1630 ;;		Unchanged: 0/0
  1631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1632 ;;      Params:         1       0       0       0       0
  1633 ;;      Locals:         2       0       0       0       0
  1634 ;;      Temps:          1       0       0       0       0
  1635 ;;      Totals:         4       0       0       0       0
  1636 ;;Total ram usage:        4 bytes
  1637 ;; Hardware stack levels used:    1
  1638 ;; This function calls:
  1639 ;;		Nothing
  1640 ;; This function is called by:
  1641 ;;		_isr
  1642 ;; This function uses a non-reentrant model
  1643 ;;
  1644                           
  1645                           
  1646                           ;psect for function ___bmul
  1647  0263                     ___bmul:
  1648                           
  1649                           ;incstack = 0
  1650                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1651                           ;___bmul@multiplier stored from wreg
  1652  0263  00F3               	movwf	___bmul@multiplier
  1653  0264                     i1l1051:
  1654  0264  01F2               	clrf	___bmul@product
  1655  0265                     i1l1053:
  1656  0265  1C73               	btfss	___bmul@multiplier,0
  1657  0266  2A68               	goto	u35_21
  1658  0267  2A69               	goto	u35_20
  1659  0268                     u35_21:
  1660  0268  2A6D               	goto	i1l1057
  1661  0269                     u35_20:
  1662  0269                     i1l1055:
  1663  0269  0870               	movf	___bmul@multiplicand,w
  1664  026A  00F1               	movwf	??___bmul
  1665  026B  0871               	movf	??___bmul,w
  1666  026C  07F2               	addwf	___bmul@product,f
  1667  026D                     i1l1057:
  1668  026D  1003               	clrc
  1669  026E  0DF0               	rlf	___bmul@multiplicand,f
  1670  026F                     i1l1059:
  1671  026F  1003               	clrc
  1672  0270  0CF3               	rrf	___bmul@multiplier,f
  1673  0271  0873               	movf	___bmul@multiplier,w
  1674  0272  1D03               	btfss	3,2
  1675  0273  2A75               	goto	u36_21
  1676  0274  2A76               	goto	u36_20
  1677  0275                     u36_21:
  1678  0275  2A65               	goto	i1l1053
  1679  0276                     u36_20:
  1680  0276                     i1l1061:
  1681  0276  0872               	movf	___bmul@product,w
  1682  0277                     i1l243:
  1683  0277  0008               	return
  1684  0278                     __end_of___bmul:
  1685  007E                     btemp	set	126	;btemp
  1686  007E                     wtemp0	set	126
  1687                           
  1688                           	psect	config
  1689                           
  1690                           ;Config register CONFIG1 @ 0x2007
  1691                           ;	Oscillator Selection bits
  1692                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
  1693                           ;	Watchdog Timer Enable bit
  1694                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1695                           ;	Power-up Timer Enable bit
  1696                           ;	PWRTE = OFF, PWRT disabled
  1697                           ;	RE3/MCLR pin function select bit
  1698                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1699                           ;	Code Protection bit
  1700                           ;	CP = OFF, Program memory code protection is disabled
  1701                           ;	Data Code Protection bit
  1702                           ;	CPD = OFF, Data memory code protection is disabled
  1703                           ;	Brown Out Reset Selection bits
  1704                           ;	BOREN = OFF, BOR disabled
  1705                           ;	Internal External Switchover bit
  1706                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1707                           ;	Fail-Safe Clock Monitor Enabled bit
  1708                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1709                           ;	Low Voltage Programming Enable bit
  1710                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1711                           ;	In-Circuit Debugger Mode bit
  1712                           ;	DEBUG = 0x1, unprogrammed default
  1713  2007                     	org	8199
  1714  2007  20D5               	dw	8405
  1715                           
  1716                           ;Config register CONFIG2 @ 0x2008
  1717                           ;	Brown-out Reset Selection bit
  1718                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1719                           ;	Flash Program Memory Self Write Enable bits
  1720                           ;	WRT = OFF, Write protection off
  1721  2008                     	org	8200
  1722  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         9
    Persistent  3
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      14
    BANK0            80     16      23
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->___bmul

Critical Paths under _main in BANK0

    _main->_VAL
    _setup->_EUSART_INIT
    _VAL->___lwdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1291
                                             14 BANK0      2     2      0
                      _EUSART_ENVIAR
                                _VAL
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     196
                        _EUSART_INIT
 ---------------------------------------------------------------------------------
 (2) _EUSART_INIT                                          4     0      4     196
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _VAL                                                  6     4      2    1073
                                              8 BANK0      6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     396
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     466
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _EUSART_ENVIAR                                        3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  5     5      0     244
                                              4 COMMON     5     5      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (4) ___bmul                                               4     3      1     244
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_ENVIAR
   _VAL
     ___lwdiv
     ___wmul
   _setup
     _EUSART_INIT

 _isr (ROOT)
   ___bmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      25       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     10      17       5       28.7%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      25      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sat Aug 14 15:45:06 2021

         ___bmul@product 0072                       l73 028B                       l69 023B  
    ___wmul@multiplicand 0022                      l122 00B0                      l131 019E  
                    l128 0214                      l217 024A                      l219 0262  
                    l489 01E4                      l941 0215                      l951 0240  
                    l943 0223                      l953 0244                      l945 0229  
                    l971 01B3                      l963 019F                      l955 0251  
                    l947 0232                      l981 01D3                      l973 01B7  
                    l965 01A3                      l957 0258                      l949 023C  
                    l991 027F                      l983 01DA                      l975 01BB  
                    l967 01A9                      l959 025E                      l977 01CC  
                    l969 01AC                      l985 01E0                      l993 01E5  
                    l979 01D2                      l995 01EE                      l989 027B  
                    l997 01F0                      l999 01F3                      _RB0 0030  
                    _RB1 0031                      u310 01CC                      u230 0244  
                    u311 01CB                      u231 0243                      u305 01BC  
                    u330 01E0                      u331 01DF                      u315 01C8  
                    u340 027F                      u260 025E                      u341 027E  
                    u325 01D4                      u261 025D                      u245 024B  
                    u270 01A9                      u271 01A8                      u255 0252  
                    u290 01BB                      u291 01BA                      u507 010F  
                    u285 01AD                      u517 011C                      u527 0287  
                    u457 00CA                      _SEL 0079                      u467 00D7  
                    u477 00E6                      _VAL 012B                      u487 00F3  
                    u497 0102                      _isr 0020                      fsr0 0004  
           ?_EUSART_INIT 0020                     ?_VAL 0028                     l1001 01F4  
                   l1011 01FB                     l1003 01F5                     l1021 0200  
                   l1013 01FC                     l1005 01F6                     l1031 0212  
                   l1023 0201                     l1015 01FD                     l1007 01F7  
                   l1041 015E                     l1033 0213                     l1025 0202  
                   l1017 01FE                     l1009 01FA                     l1121 00CD  
                   l1043 0171                     l1035 012B                     l1027 0210  
                   l1019 01FF                     l1131 0105                     l1123 00DA  
                   l1045 018F                     l1037 0131                     l1029 0211  
                   l1133 010B                     l1125 00E2                     l1117 00AB  
                   l1047 0194                     l1039 0144                     l1135 0118  
                   l1127 00EF                     l1119 00C6                     l1049 0199  
                   l1137 011F                     l1129 00F6                     ?_isr 0070  
                   _RBIF 0058                     _POS1 0036                     _POS2 0035  
                   _POS3 0034                     _main 00AB                     btemp 007E  
                   start 000E        ___bmul@multiplier 0073                    ??_VAL 002A  
          _EUSART_ENVIAR 0278                    ??_isr 0074                    ?_main 0070  
                  _DATO1 0032                    _DATO2 0031                    _DATO3 0030  
                  _ANSEL 0188                    _IOCB0 04B0                    _IOCB1 04B1  
        __end_of___lwdiv 01E5                    i1l117 00A2                    i1l109 00A1  
                  i1l243 0277                    _RCREG 001A                    u40_20 003C  
                  u40_21 003B                    u41_20 0044                    u41_21 0043  
                  u42_20 004E                    u42_21 004D                    _SPBRG 0099  
                  u35_20 0269                    u43_20 0054                    u35_21 0268  
                  u43_21 0053                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _PORTE 0009  
                  u36_20 0276                    u44_20 005A                    u36_21 0275  
                  u44_21 0059                    u37_20 0025                    u37_21 0024  
                  u38_20 002B                    u38_21 002A                    u39_20 0033  
                  u39_21 0032                    _TRISA 0085                    _TRISB 0086  
                  _TRISD 0088                    _TRISE 0089                    _WPUB0 04A8  
                  _WPUB1 04A9                    _TXREG 0019                    _flag1 007D  
                  _flag2 007C                    _setup 01E5                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 0011  
         ?_EUSART_ENVIAR 0070             __end_of_main 012B                   ??_main 002E  
                 ?_setup 0070                   _ANSELH 0189                   i1l1101 0072  
                 i1l1103 0082                   i1l1111 008E                   i1l1105 0087  
                 i1l1051 0264                   i1l1107 008C                   i1l1061 0276  
                 i1l1053 0265                   i1l1055 0269                   i1l1071 002E  
                 i1l1057 026D                   i1l1081 003F                   i1l1073 0033  
                 i1l1065 0020                   i1l1059 026F                   i1l1091 004E  
                 i1l1083 0044                   i1l1075 0037                   i1l1067 0025  
                 i1l1093 0054                   i1l1085 0046                   i1l1077 0038  
                 i1l1069 002B                   i1l1159 0096                   i1l1095 005A  
                 i1l1087 0047                   i1l1079 003C                   i1l1097 005F  
                 i1l1089 0048                   i1l1099 006F                   _SPBRGH 009A  
                 _POS_RX 007A                   _POS_TX 007B                   ___bmul 0263  
                 ___wmul 023C                ??___lwdiv 0024                   saved_w 007E  
   __size_of_EUSART_INIT 0027  __end_of__initialization 001C          ??_EUSART_ENVIAR 0020  
    ___bmul@multiplicand 0070           __pcstackCOMMON 0070            __end_of_setup 0215  
         _OPTION_REGbits 0081                  ??_setup 0024               __pbssBANK0 0030  
             __pmaintext 00AB                  ?___bmul 0070                  ?___wmul 0020  
             __pintentry 0004              VAL@variable 0028          __size_of___bmul 0015  
        __size_of___wmul 0027                  ___lwdiv 019F                  __ptext1 01E5  
                __ptext2 0215                  __ptext3 012B                  __ptext4 023C  
                __ptext5 019F                  __ptext6 0278                  __ptext7 0020  
                __ptext8 0263            EUSART_INIT@rx 0022            EUSART_INIT@tx 0020  
           __size_of_VAL 0074             __size_of_isr 008B     end_of_initialization 001C  
              _RCSTAbits 0018                _TXSTAbits 0098           __end_of___bmul 0278  
         __end_of___wmul 0263              _BAUDCTLbits 0187      start_initialization 0011  
            __end_of_VAL 019F            ??_EUSART_INIT 0024              __end_of_isr 00AB  
  __end_of_EUSART_ENVIAR 028C                 ??___bmul 0071                 ??___wmul 0024  
            __pbssCOMMON 0079                ___latbits 0002            __pcstackBANK0 0020  
    __end_of_EUSART_INIT 023C                __pnvBANK0 0034         ___lwdiv@dividend 0022  
      EUSART_ENVIAR@dato 0022                 VAL@valor 002C                 ?___lwdiv 0020  
       ___lwdiv@quotient 0025                 _CONTADOR 0033           __size_of_setup 0030  
      interrupt_function 0004           ___wmul@product 0024                 _PIE1bits 008C  
               _PIR1bits 000C        ___wmul@multiplier 0020              _EUSART_INIT 0215  
       __size_of___lwdiv 0046          ___lwdiv@divisor 0020          ___lwdiv@counter 0027  
          __size_of_main 0080               _INTCONbits 000B                 intlevel1 0000  
             _OSCCONbits 008F   __size_of_EUSART_ENVIAR 0014  
