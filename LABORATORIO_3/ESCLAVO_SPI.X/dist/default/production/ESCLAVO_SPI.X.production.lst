

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Aug 02 23:41:48 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    21                           	dabs	1,0x7E,2
    22  0000                     
    23                           ; Version 2.20
    24                           ; Generated 12/02/2020 GMT
    25                           ; 
    26                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F887 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     	;# 
    58  0001                     	;# 
    59  0002                     	;# 
    60  0003                     	;# 
    61  0004                     	;# 
    62  0005                     	;# 
    63  0006                     	;# 
    64  0007                     	;# 
    65  0008                     	;# 
    66  0009                     	;# 
    67  000A                     	;# 
    68  000B                     	;# 
    69  000C                     	;# 
    70  000D                     	;# 
    71  000E                     	;# 
    72  000E                     	;# 
    73  000F                     	;# 
    74  0010                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0013                     	;# 
    78  0014                     	;# 
    79  0015                     	;# 
    80  0015                     	;# 
    81  0016                     	;# 
    82  0017                     	;# 
    83  0018                     	;# 
    84  0019                     	;# 
    85  001A                     	;# 
    86  001B                     	;# 
    87  001B                     	;# 
    88  001C                     	;# 
    89  001D                     	;# 
    90  001E                     	;# 
    91  001F                     	;# 
    92  0081                     	;# 
    93  0085                     	;# 
    94  0086                     	;# 
    95  0087                     	;# 
    96  0088                     	;# 
    97  0089                     	;# 
    98  008C                     	;# 
    99  008D                     	;# 
   100  008E                     	;# 
   101  008F                     	;# 
   102  0090                     	;# 
   103  0091                     	;# 
   104  0092                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0094                     	;# 
   109  0095                     	;# 
   110  0096                     	;# 
   111  0097                     	;# 
   112  0098                     	;# 
   113  0099                     	;# 
   114  009A                     	;# 
   115  009B                     	;# 
   116  009C                     	;# 
   117  009D                     	;# 
   118  009E                     	;# 
   119  009F                     	;# 
   120  0105                     	;# 
   121  0107                     	;# 
   122  0108                     	;# 
   123  0109                     	;# 
   124  010C                     	;# 
   125  010C                     	;# 
   126  010D                     	;# 
   127  010E                     	;# 
   128  010F                     	;# 
   129  0185                     	;# 
   130  0187                     	;# 
   131  0188                     	;# 
   132  0189                     	;# 
   133  018C                     	;# 
   134  018D                     	;# 
   135  0000                     	;# 
   136  0001                     	;# 
   137  0002                     	;# 
   138  0003                     	;# 
   139  0004                     	;# 
   140  0005                     	;# 
   141  0006                     	;# 
   142  0007                     	;# 
   143  0008                     	;# 
   144  0009                     	;# 
   145  000A                     	;# 
   146  000B                     	;# 
   147  000C                     	;# 
   148  000D                     	;# 
   149  000E                     	;# 
   150  000E                     	;# 
   151  000F                     	;# 
   152  0010                     	;# 
   153  0011                     	;# 
   154  0012                     	;# 
   155  0013                     	;# 
   156  0014                     	;# 
   157  0015                     	;# 
   158  0015                     	;# 
   159  0016                     	;# 
   160  0017                     	;# 
   161  0018                     	;# 
   162  0019                     	;# 
   163  001A                     	;# 
   164  001B                     	;# 
   165  001B                     	;# 
   166  001C                     	;# 
   167  001D                     	;# 
   168  001E                     	;# 
   169  001F                     	;# 
   170  0081                     	;# 
   171  0085                     	;# 
   172  0086                     	;# 
   173  0087                     	;# 
   174  0088                     	;# 
   175  0089                     	;# 
   176  008C                     	;# 
   177  008D                     	;# 
   178  008E                     	;# 
   179  008F                     	;# 
   180  0090                     	;# 
   181  0091                     	;# 
   182  0092                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0094                     	;# 
   187  0095                     	;# 
   188  0096                     	;# 
   189  0097                     	;# 
   190  0098                     	;# 
   191  0099                     	;# 
   192  009A                     	;# 
   193  009B                     	;# 
   194  009C                     	;# 
   195  009D                     	;# 
   196  009E                     	;# 
   197  009F                     	;# 
   198  0105                     	;# 
   199  0107                     	;# 
   200  0108                     	;# 
   201  0109                     	;# 
   202  010C                     	;# 
   203  010C                     	;# 
   204  010D                     	;# 
   205  010E                     	;# 
   206  010F                     	;# 
   207  0185                     	;# 
   208  0187                     	;# 
   209  0188                     	;# 
   210  0189                     	;# 
   211  018C                     	;# 
   212  018D                     	;# 
   213  0000                     	;# 
   214  0001                     	;# 
   215  0002                     	;# 
   216  0003                     	;# 
   217  0004                     	;# 
   218  0005                     	;# 
   219  0006                     	;# 
   220  0007                     	;# 
   221  0008                     	;# 
   222  0009                     	;# 
   223  000A                     	;# 
   224  000B                     	;# 
   225  000C                     	;# 
   226  000D                     	;# 
   227  000E                     	;# 
   228  000E                     	;# 
   229  000F                     	;# 
   230  0010                     	;# 
   231  0011                     	;# 
   232  0012                     	;# 
   233  0013                     	;# 
   234  0014                     	;# 
   235  0015                     	;# 
   236  0015                     	;# 
   237  0016                     	;# 
   238  0017                     	;# 
   239  0018                     	;# 
   240  0019                     	;# 
   241  001A                     	;# 
   242  001B                     	;# 
   243  001B                     	;# 
   244  001C                     	;# 
   245  001D                     	;# 
   246  001E                     	;# 
   247  001F                     	;# 
   248  0081                     	;# 
   249  0085                     	;# 
   250  0086                     	;# 
   251  0087                     	;# 
   252  0088                     	;# 
   253  0089                     	;# 
   254  008C                     	;# 
   255  008D                     	;# 
   256  008E                     	;# 
   257  008F                     	;# 
   258  0090                     	;# 
   259  0091                     	;# 
   260  0092                     	;# 
   261  0093                     	;# 
   262  0093                     	;# 
   263  0093                     	;# 
   264  0094                     	;# 
   265  0095                     	;# 
   266  0096                     	;# 
   267  0097                     	;# 
   268  0098                     	;# 
   269  0099                     	;# 
   270  009A                     	;# 
   271  009B                     	;# 
   272  009C                     	;# 
   273  009D                     	;# 
   274  009E                     	;# 
   275  009F                     	;# 
   276  0105                     	;# 
   277  0107                     	;# 
   278  0108                     	;# 
   279  0109                     	;# 
   280  010C                     	;# 
   281  010C                     	;# 
   282  010D                     	;# 
   283  010E                     	;# 
   284  010F                     	;# 
   285  0185                     	;# 
   286  0187                     	;# 
   287  0188                     	;# 
   288  0189                     	;# 
   289  018C                     	;# 
   290  018D                     	;# 
   291  0013                     _SSPBUF	set	19
   292  0014                     _SSPCON	set	20
   293  0009                     _PORTE	set	9
   294  0008                     _PORTD	set	8
   295  0007                     _PORTC	set	7
   296  0006                     _PORTB	set	6
   297  0005                     _PORTA	set	5
   298  000B                     _INTCONbits	set	11
   299  001E                     _ADRESH	set	30
   300  000C                     _PIR1bits	set	12
   301  001F                     _ADCON0bits	set	31
   302  0063                     _SSPIF	set	99
   303  0066                     _ADIF	set	102
   304  0094                     _SSPSTATbits	set	148
   305  0094                     _SSPSTAT	set	148
   306  008F                     _OSCCONbits	set	143
   307  0086                     _TRISB	set	134
   308  0089                     _TRISE	set	137
   309  0088                     _TRISD	set	136
   310  0085                     _TRISA	set	133
   311  008C                     _PIE1bits	set	140
   312  009F                     _ADCON1bits	set	159
   313  043B                     _TRISC3	set	1083
   314  043D                     _TRISC5	set	1085
   315  0189                     _ANSELH	set	393
   316  0188                     _ANSEL	set	392
   317                           
   318                           	psect	cinit
   319  0011                     start_initialization:	
   320                           ; #config settings
   321                           
   322  0011                     __initialization:
   323                           
   324                           ; Clear objects allocated to COMMON
   325  0011  01FB               	clrf	__pbssCOMMON& (0+127)
   326  0012  01FC               	clrf	(__pbssCOMMON+1)& (0+127)
   327  0013  01FD               	clrf	(__pbssCOMMON+2)& (0+127)
   328                           
   329                           ; Clear objects allocated to BANK0
   330  0014  1283               	bcf	3,5	;RP0=0, select bank0
   331  0015  1303               	bcf	3,6	;RP1=0, select bank0
   332  0016  01AA               	clrf	__pbssBANK0& (0+127)
   333  0017  01AB               	clrf	(__pbssBANK0+1)& (0+127)
   334  0018                     end_of_initialization:	
   335                           ;End of C runtime variable initialization code
   336                           
   337  0018                     __end_of__initialization:
   338  0018  0183               	clrf	3
   339  0019  120A  118A  28B4   	ljmp	_main	;jump to C main() function
   340                           
   341                           	psect	bssCOMMON
   342  007B                     __pbssCOMMON:
   343  007B                     _SEL_POT:
   344  007B                     	ds	1
   345  007C                     _POT1:
   346  007C                     	ds	1
   347  007D                     _POT0:
   348  007D                     	ds	1
   349                           
   350                           	psect	bssBANK0
   351  002A                     __pbssBANK0:
   352  002A                     _VALOR_ADC:
   353  002A                     	ds	2
   354                           
   355                           	psect	cstackCOMMON
   356  0070                     __pcstackCOMMON:
   357  0070                     ?_spiRead:
   358  0070                     ??_spiRead:	
   359                           ; 1 bytes @ 0x0
   360                           
   361  0070                     ?_spiWrite:	
   362                           ; 1 bytes @ 0x0
   363                           
   364  0070                     ??_spiWrite:	
   365                           ; 1 bytes @ 0x0
   366                           
   367  0070                     ?_setup:	
   368                           ; 1 bytes @ 0x0
   369                           
   370  0070                     ?_isr:	
   371                           ; 1 bytes @ 0x0
   372                           
   373  0070                     ?_main:	
   374                           ; 1 bytes @ 0x0
   375                           
   376  0070                     ?_spiReceiveWait:	
   377                           ; 1 bytes @ 0x0
   378                           
   379  0070                     ??_spiReceiveWait:	
   380                           ; 1 bytes @ 0x0
   381                           
   382  0070                     ?_ADC_READ:	
   383                           ; 1 bytes @ 0x0
   384                           
   385  0070                     spiWrite@dat:	
   386                           ; 2 bytes @ 0x0
   387                           
   388                           
   389                           ; 1 bytes @ 0x0
   390  0070                     	ds	2
   391  0072                     ??_ADC_READ:
   392                           
   393                           ; 1 bytes @ 0x2
   394  0072                     	ds	2
   395  0074                     ADC_READ@LECT:
   396                           
   397                           ; 2 bytes @ 0x4
   398  0074                     	ds	2
   399  0076                     ??_isr:
   400                           
   401                           ; 1 bytes @ 0x6
   402  0076                     	ds	5
   403                           
   404                           	psect	cstackBANK0
   405  0020                     __pcstackBANK0:
   406  0020                     ?_spiInit:
   407  0020                     ?_ADC_INIT:	
   408                           ; 1 bytes @ 0x0
   409                           
   410  0020                     ?_ADC_CHANNELS:	
   411                           ; 1 bytes @ 0x0
   412                           
   413  0020                     spiInit@sDataSample:	
   414                           ; 1 bytes @ 0x0
   415                           
   416  0020                     ADC_INIT@canal:	
   417                           ; 1 bytes @ 0x0
   418                           
   419  0020                     ADC_CHANNELS@CANAL:	
   420                           ; 2 bytes @ 0x0
   421                           
   422                           
   423                           ; 2 bytes @ 0x0
   424  0020                     	ds	1
   425  0021                     spiInit@sClockIdle:
   426                           
   427                           ; 1 bytes @ 0x1
   428  0021                     	ds	1
   429  0022                     ??_ADC_INIT:
   430  0022                     spiInit@sTransmitEdge:	
   431                           ; 1 bytes @ 0x2
   432                           
   433  0022                     ADC_CHANNELS@VALOR_ADC:	
   434                           ; 1 bytes @ 0x2
   435                           
   436                           
   437                           ; 2 bytes @ 0x2
   438  0022                     	ds	1
   439  0023                     ??_spiInit:
   440  0023                     spiInit@sType:	
   441                           ; 1 bytes @ 0x3
   442                           
   443                           
   444                           ; 1 bytes @ 0x3
   445  0023                     	ds	1
   446  0024                     ??_setup:
   447  0024                     ADC_CHANNELS@VALORA:	
   448                           ; 1 bytes @ 0x4
   449                           
   450                           
   451                           ; 1 bytes @ 0x4
   452  0024                     	ds	1
   453  0025                     ??_ADC_CHANNELS:
   454                           
   455                           ; 1 bytes @ 0x5
   456  0025                     	ds	3
   457  0028                     ??_main:
   458                           
   459                           ; 1 bytes @ 0x8
   460  0028                     	ds	2
   461                           
   462                           	psect	maintext
   463  00B4                     __pmaintext:	
   464 ;;
   465 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   466 ;;
   467 ;; *************** function _main *****************
   468 ;; Defined at:
   469 ;;		line 73 in file "main.c"
   470 ;; Parameters:    Size  Location     Type
   471 ;;		None
   472 ;; Auto vars:     Size  Location     Type
   473 ;;		None
   474 ;; Return value:  Size  Location     Type
   475 ;;                  1    wreg      void 
   476 ;; Registers used:
   477 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   478 ;; Tracked objects:
   479 ;;		On entry : B00/0
   480 ;;		On exit  : 0/0
   481 ;;		Unchanged: 0/0
   482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   483 ;;      Params:         0       0       0       0       0
   484 ;;      Locals:         0       0       0       0       0
   485 ;;      Temps:          0       2       0       0       0
   486 ;;      Totals:         0       2       0       0       0
   487 ;;Total ram usage:        2 bytes
   488 ;; Hardware stack levels required when called:    5
   489 ;; This function calls:
   490 ;;		_ADC_CHANNELS
   491 ;;		_setup
   492 ;; This function is called by:
   493 ;;		Startup code after reset
   494 ;; This function uses a non-reentrant model
   495 ;;
   496                           
   497                           
   498                           ;psect for function _main
   499  00B4                     _main:
   500  00B4                     l1019:	
   501                           ;incstack = 0
   502                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   503                           
   504                           
   505                           ;main.c: 74: 
   506  00B4  120A  118A  20F6  120A  118A  	fcall	_setup
   507  00B9                     l1021:
   508                           
   509                           ;main.c: 76:     ADC_INIT(0);
   510  00B9  3001               	movlw	1
   511  00BA  1283               	bcf	3,5	;RP0=0, select bank0
   512  00BB  1303               	bcf	3,6	;RP1=0, select bank0
   513  00BC  00A0               	movwf	ADC_CHANNELS@CANAL
   514  00BD  3000               	movlw	0
   515  00BE  00A1               	movwf	ADC_CHANNELS@CANAL+1
   516  00BF  082B               	movf	_VALOR_ADC+1,w
   517  00C0  00A3               	movwf	ADC_CHANNELS@VALOR_ADC+1
   518  00C1  082A               	movf	_VALOR_ADC,w
   519  00C2  00A2               	movwf	ADC_CHANNELS@VALOR_ADC
   520  00C3  307D               	movlw	(low (_POT0| 0))& (0+255)
   521  00C4  00A8               	movwf	??_main
   522  00C5  0828               	movf	??_main,w
   523  00C6  00A4               	movwf	ADC_CHANNELS@VALORA
   524  00C7  120A  118A  201C  120A  118A  	fcall	_ADC_CHANNELS
   525  00CC                     l1023:
   526                           
   527                           ;main.c: 77:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW, SP
      +                          I_IDLE_2_ACTIVE);
   528  00CC  300D               	movlw	13
   529  00CD  1283               	bcf	3,5	;RP0=0, select bank0
   530  00CE  1303               	bcf	3,6	;RP1=0, select bank0
   531  00CF  00A9               	movwf	??_main+1
   532  00D0  30FB               	movlw	251
   533  00D1  00A8               	movwf	??_main
   534  00D2                     u97:
   535  00D2  0BA8               	decfsz	??_main,f
   536  00D3  28D2               	goto	u97
   537  00D4  0BA9               	decfsz	??_main+1,f
   538  00D5  28D2               	goto	u97
   539  00D6                     l1025:
   540                           
   541                           ;main.c: 78: 
   542  00D6  3000               	movlw	0
   543  00D7  1283               	bcf	3,5	;RP0=0, select bank0
   544  00D8  1303               	bcf	3,6	;RP1=0, select bank0
   545  00D9  00A0               	movwf	ADC_CHANNELS@CANAL
   546  00DA  00A1               	movwf	ADC_CHANNELS@CANAL+1
   547  00DB  082B               	movf	_VALOR_ADC+1,w
   548  00DC  00A3               	movwf	ADC_CHANNELS@VALOR_ADC+1
   549  00DD  082A               	movf	_VALOR_ADC,w
   550  00DE  00A2               	movwf	ADC_CHANNELS@VALOR_ADC
   551  00DF  307C               	movlw	(low (_POT1| 0))& (0+255)
   552  00E0  00A8               	movwf	??_main
   553  00E1  0828               	movf	??_main,w
   554  00E2  00A4               	movwf	ADC_CHANNELS@VALORA
   555  00E3  120A  118A  201C  120A  118A  	fcall	_ADC_CHANNELS
   556  00E8                     l1027:
   557                           
   558                           ;main.c: 79:     INTCONbits.GIE = 1;
   559  00E8  300D               	movlw	13
   560  00E9  1283               	bcf	3,5	;RP0=0, select bank0
   561  00EA  1303               	bcf	3,6	;RP1=0, select bank0
   562  00EB  00A9               	movwf	??_main+1
   563  00EC  30FB               	movlw	251
   564  00ED  00A8               	movwf	??_main
   565  00EE                     u107:
   566  00EE  0BA8               	decfsz	??_main,f
   567  00EF  28EE               	goto	u107
   568  00F0  0BA9               	decfsz	??_main+1,f
   569  00F1  28EE               	goto	u107
   570  00F2  28B9               	goto	l1021
   571  00F3  120A  118A  280E   	ljmp	start
   572  00F6                     __end_of_main:
   573                           
   574                           	psect	text1
   575  00F6                     __ptext1:	
   576 ;; *************** function _setup *****************
   577 ;; Defined at:
   578 ;;		line 85 in file "main.c"
   579 ;; Parameters:    Size  Location     Type
   580 ;;		None
   581 ;; Auto vars:     Size  Location     Type
   582 ;;		None
   583 ;; Return value:  Size  Location     Type
   584 ;;                  1    wreg      void 
   585 ;; Registers used:
   586 ;;		wreg, status,2, status,0, pclath, cstack
   587 ;; Tracked objects:
   588 ;;		On entry : 0/0
   589 ;;		On exit  : 0/0
   590 ;;		Unchanged: 0/0
   591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   592 ;;      Params:         0       0       0       0       0
   593 ;;      Locals:         0       0       0       0       0
   594 ;;      Temps:          0       0       0       0       0
   595 ;;      Totals:         0       0       0       0       0
   596 ;;Total ram usage:        0 bytes
   597 ;; Hardware stack levels used:    1
   598 ;; Hardware stack levels required when called:    4
   599 ;; This function calls:
   600 ;;		_ADC_INIT
   601 ;;		_spiInit
   602 ;; This function is called by:
   603 ;;		_main
   604 ;; This function uses a non-reentrant model
   605 ;;
   606                           
   607                           
   608                           ;psect for function _setup
   609  00F6                     _setup:
   610  00F6                     l971:	
   611                           ;incstack = 0
   612                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   613                           
   614  00F6  3003               	movlw	3
   615  00F7  1683               	bsf	3,5	;RP0=1, select bank3
   616  00F8  1703               	bsf	3,6	;RP1=1, select bank3
   617  00F9  0088               	movwf	8	;volatile
   618  00FA                     l973:
   619  00FA  0189               	clrf	9	;volatile
   620  00FB                     l975:
   621  00FB  3023               	movlw	35
   622  00FC  1683               	bsf	3,5	;RP0=1, select bank1
   623  00FD  1303               	bcf	3,6	;RP1=0, select bank1
   624  00FE  0085               	movwf	5	;volatile
   625  00FF  0188               	clrf	8	;volatile
   626  0100  0189               	clrf	9	;volatile
   627  0101  0186               	clrf	6	;volatile
   628  0102  1283               	bcf	3,5	;RP0=0, select bank0
   629  0103  1303               	bcf	3,6	;RP1=0, select bank0
   630  0104  0185               	clrf	5	;volatile
   631  0105  0186               	clrf	6	;volatile
   632  0106  0187               	clrf	7	;volatile
   633  0107  0188               	clrf	8	;volatile
   634  0108  0189               	clrf	9	;volatile
   635  0109                     l977:
   636  0109  1683               	bsf	3,5	;RP0=1, select bank1
   637  010A  1303               	bcf	3,6	;RP1=0, select bank1
   638  010B  170F               	bsf	15,6	;volatile
   639  010C                     l979:
   640  010C  168F               	bsf	15,5	;volatile
   641  010D                     l981:
   642  010D  120F               	bcf	15,4	;volatile
   643  010E                     l983:
   644  010E  140F               	bsf	15,0	;volatile
   645  010F                     l985:
   646  010F  3000               	movlw	0
   647  0110  1283               	bcf	3,5	;RP0=0, select bank0
   648  0111  1303               	bcf	3,6	;RP1=0, select bank0
   649  0112  00A0               	movwf	ADC_INIT@canal
   650  0113  00A1               	movwf	ADC_INIT@canal+1
   651  0114  120A  118A  212D  120A  118A  	fcall	_ADC_INIT
   652  0119                     l987:
   653  0119  1283               	bcf	3,5	;RP0=0, select bank0
   654  011A  1303               	bcf	3,6	;RP1=0, select bank0
   655  011B  01A0               	clrf	spiInit@sDataSample
   656  011C  01A1               	clrf	spiInit@sClockIdle
   657  011D  01A2               	clrf	spiInit@sTransmitEdge
   658  011E  3024               	movlw	36
   659  011F  120A  118A  2150  120A  118A  	fcall	_spiInit
   660  0124                     l989:
   661  0124  178B               	bsf	11,7	;volatile
   662  0125                     l991:
   663  0125  170B               	bsf	11,6	;volatile
   664  0126                     l993:
   665  0126  1283               	bcf	3,5	;RP0=0, select bank0
   666  0127  1303               	bcf	3,6	;RP1=0, select bank0
   667  0128  118C               	bcf	12,3	;volatile
   668  0129                     l995:
   669  0129  1683               	bsf	3,5	;RP0=1, select bank1
   670  012A  1303               	bcf	3,6	;RP1=0, select bank1
   671  012B  158C               	bsf	12,3	;volatile
   672  012C                     l93:
   673  012C  0008               	return
   674  012D                     __end_of_setup:
   675                           
   676                           	psect	text2
   677  0150                     __ptext2:	
   678 ;; *************** function _spiInit *****************
   679 ;; Defined at:
   680 ;;		line 12 in file "SPI.c"
   681 ;; Parameters:    Size  Location     Type
   682 ;;  sType           1    wreg     enum E1264
   683 ;;  sDataSample     1    0[BANK0 ] enum E1272
   684 ;;  sClockIdle      1    1[BANK0 ] enum E1276
   685 ;;  sTransmitEdg    1    2[BANK0 ] enum E1280
   686 ;; Auto vars:     Size  Location     Type
   687 ;;  sType           1    3[BANK0 ] enum E1264
   688 ;; Return value:  Size  Location     Type
   689 ;;                  1    wreg      void 
   690 ;; Registers used:
   691 ;;		wreg, status,2, status,0
   692 ;; Tracked objects:
   693 ;;		On entry : 0/0
   694 ;;		On exit  : 0/0
   695 ;;		Unchanged: 0/0
   696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   697 ;;      Params:         0       3       0       0       0
   698 ;;      Locals:         0       1       0       0       0
   699 ;;      Temps:          0       0       0       0       0
   700 ;;      Totals:         0       4       0       0       0
   701 ;;Total ram usage:        4 bytes
   702 ;; Hardware stack levels used:    1
   703 ;; Hardware stack levels required when called:    3
   704 ;; This function calls:
   705 ;;		Nothing
   706 ;; This function is called by:
   707 ;;		_setup
   708 ;; This function uses a non-reentrant model
   709 ;;
   710                           
   711                           
   712                           ;psect for function _spiInit
   713  0150                     _spiInit:
   714                           
   715                           ;incstack = 0
   716                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   717                           ;spiInit@sType stored from wreg
   718  0150  1283               	bcf	3,5	;RP0=0, select bank0
   719  0151  1303               	bcf	3,6	;RP1=0, select bank0
   720  0152  00A3               	movwf	spiInit@sType
   721  0153                     l921:
   722                           
   723                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
   724  0153  1683               	bsf	3,5	;RP0=1, select bank1
   725  0154  1303               	bcf	3,6	;RP1=0, select bank1
   726  0155  1287               	bcf	7,5	;volatile
   727                           
   728                           ;SPI.c: 15:     if(sType & 0b00000100)
   729  0156  1283               	bcf	3,5	;RP0=0, select bank0
   730  0157  1303               	bcf	3,6	;RP1=0, select bank0
   731  0158  1D23               	btfss	spiInit@sType,2
   732  0159  295B               	goto	u51
   733  015A  295C               	goto	u50
   734  015B                     u51:
   735  015B  2962               	goto	l927
   736  015C                     u50:
   737  015C                     l923:
   738                           
   739                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
   740  015C  0822               	movf	spiInit@sTransmitEdge,w
   741  015D  1683               	bsf	3,5	;RP0=1, select bank1
   742  015E  1303               	bcf	3,6	;RP1=0, select bank1
   743  015F  0094               	movwf	20	;volatile
   744  0160                     l925:
   745                           
   746                           ;SPI.c: 18:         TRISC3 = 1;
   747  0160  1587               	bsf	7,3	;volatile
   748                           
   749                           ;SPI.c: 19:     }
   750  0161  2968               	goto	l109
   751  0162                     l927:
   752                           
   753                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   754  0162  0820               	movf	spiInit@sDataSample,w
   755  0163  0422               	iorwf	spiInit@sTransmitEdge,w
   756  0164  1683               	bsf	3,5	;RP0=1, select bank1
   757  0165  1303               	bcf	3,6	;RP1=0, select bank1
   758  0166  0094               	movwf	20	;volatile
   759  0167                     l929:
   760                           
   761                           ;SPI.c: 23:         TRISC3 = 0;
   762  0167  1187               	bcf	7,3	;volatile
   763  0168                     l109:	
   764                           ;SPI.c: 24:     }
   765                           
   766                           
   767                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
   768  0168  1283               	bcf	3,5	;RP0=0, select bank0
   769  0169  1303               	bcf	3,6	;RP1=0, select bank0
   770  016A  0823               	movf	spiInit@sType,w
   771  016B  0421               	iorwf	spiInit@sClockIdle,w
   772  016C  0094               	movwf	20	;volatile
   773  016D                     l110:
   774  016D  0008               	return
   775  016E                     __end_of_spiInit:
   776                           
   777                           	psect	text3
   778  012D                     __ptext3:	
   779 ;; *************** function _ADC_INIT *****************
   780 ;; Defined at:
   781 ;;		line 12 in file "./ADC_LIB.h"
   782 ;; Parameters:    Size  Location     Type
   783 ;;  canal           2    0[BANK0 ] unsigned int 
   784 ;; Auto vars:     Size  Location     Type
   785 ;;		None
   786 ;; Return value:  Size  Location     Type
   787 ;;                  1    wreg      void 
   788 ;; Registers used:
   789 ;;		wreg, status,2, status,0
   790 ;; Tracked objects:
   791 ;;		On entry : 0/0
   792 ;;		On exit  : 0/0
   793 ;;		Unchanged: 0/0
   794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   795 ;;      Params:         0       2       0       0       0
   796 ;;      Locals:         0       0       0       0       0
   797 ;;      Temps:          0       1       0       0       0
   798 ;;      Totals:         0       3       0       0       0
   799 ;;Total ram usage:        3 bytes
   800 ;; Hardware stack levels used:    1
   801 ;; Hardware stack levels required when called:    3
   802 ;; This function calls:
   803 ;;		Nothing
   804 ;; This function is called by:
   805 ;;		_setup
   806 ;; This function uses a non-reentrant model
   807 ;;
   808                           
   809                           
   810                           ;psect for function _ADC_INIT
   811  012D                     _ADC_INIT:
   812  012D                     l903:	
   813                           ;incstack = 0
   814                           ; Regs used in _ADC_INIT: [wreg+status,2+status,0]
   815                           
   816                           
   817                           ;./ADC_LIB.h: 14:     ADCON0bits.ADON = 0X01;
   818  012D  1283               	bcf	3,5	;RP0=0, select bank0
   819  012E  1303               	bcf	3,6	;RP1=0, select bank0
   820  012F  141F               	bsf	31,0	;volatile
   821  0130                     l905:
   822                           
   823                           ;./ADC_LIB.h: 15:     ADCON0bits.CHS = canal;
   824  0130  0820               	movf	ADC_INIT@canal,w
   825  0131  00A2               	movwf	??_ADC_INIT
   826  0132  0DA2               	rlf	??_ADC_INIT,f
   827  0133  0DA2               	rlf	??_ADC_INIT,f
   828  0134  081F               	movf	31,w	;volatile
   829  0135  0622               	xorwf	??_ADC_INIT,w
   830  0136  39C3               	andlw	-61
   831  0137  0622               	xorwf	??_ADC_INIT,w
   832  0138  009F               	movwf	31	;volatile
   833  0139                     l907:
   834                           
   835                           ;./ADC_LIB.h: 16:     _delay((unsigned long)((100)*(4000000/4000000.0)));
   836  0139  3020               	movlw	32
   837  013A  1283               	bcf	3,5	;RP0=0, select bank0
   838  013B  1303               	bcf	3,6	;RP1=0, select bank0
   839  013C  00A2               	movwf	??_ADC_INIT
   840  013D                     u117:
   841  013D  0BA2               	decfsz	??_ADC_INIT,f
   842  013E  293D               	goto	u117
   843  013F  0000               	nop
   844  0140                     l909:
   845                           
   846                           ;./ADC_LIB.h: 17:     ADCON0bits.ADCS = 0X01;
   847  0140  1283               	bcf	3,5	;RP0=0, select bank0
   848  0141  1303               	bcf	3,6	;RP1=0, select bank0
   849  0142  081F               	movf	31,w	;volatile
   850  0143  393F               	andlw	-193
   851  0144  3840               	iorlw	64
   852  0145  009F               	movwf	31	;volatile
   853  0146                     l911:
   854                           
   855                           ;./ADC_LIB.h: 18:     ADCON1bits.ADFM = 0;
   856  0146  1683               	bsf	3,5	;RP0=1, select bank1
   857  0147  1303               	bcf	3,6	;RP1=0, select bank1
   858  0148  139F               	bcf	31,7	;volatile
   859  0149                     l913:
   860                           
   861                           ;./ADC_LIB.h: 19:     ADCON1bits.VCFG0 = 0;
   862  0149  121F               	bcf	31,4	;volatile
   863  014A                     l915:
   864                           
   865                           ;./ADC_LIB.h: 20:     ADCON1bits.VCFG1 = 0;
   866  014A  129F               	bcf	31,5	;volatile
   867  014B                     l917:
   868                           
   869                           ;./ADC_LIB.h: 21:     PIE1bits.ADIE = 1;
   870  014B  170C               	bsf	12,6	;volatile
   871  014C                     l919:
   872                           
   873                           ;./ADC_LIB.h: 22:     PIR1bits.ADIF = 0;
   874  014C  1283               	bcf	3,5	;RP0=0, select bank0
   875  014D  1303               	bcf	3,6	;RP1=0, select bank0
   876  014E  130C               	bcf	12,6	;volatile
   877  014F                     l53:
   878  014F  0008               	return
   879  0150                     __end_of_ADC_INIT:
   880                           
   881                           	psect	text4
   882  001C                     __ptext4:	
   883 ;; *************** function _ADC_CHANNELS *****************
   884 ;; Defined at:
   885 ;;		line 29 in file "./ADC_LIB.h"
   886 ;; Parameters:    Size  Location     Type
   887 ;;  CANAL           2    0[BANK0 ] unsigned int 
   888 ;;  VALOR_ADC       2    2[BANK0 ] unsigned int 
   889 ;;  VALORA          1    4[BANK0 ] PTR unsigned int 
   890 ;;		 -> POT1(1), POT0(1), 
   891 ;; Auto vars:     Size  Location     Type
   892 ;;		None
   893 ;; Return value:  Size  Location     Type
   894 ;;                  1    wreg      void 
   895 ;; Registers used:
   896 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   897 ;; Tracked objects:
   898 ;;		On entry : 0/0
   899 ;;		On exit  : 0/0
   900 ;;		Unchanged: 0/0
   901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   902 ;;      Params:         0       5       0       0       0
   903 ;;      Locals:         0       0       0       0       0
   904 ;;      Temps:          0       3       0       0       0
   905 ;;      Totals:         0       8       0       0       0
   906 ;;Total ram usage:        8 bytes
   907 ;; Hardware stack levels used:    1
   908 ;; Hardware stack levels required when called:    3
   909 ;; This function calls:
   910 ;;		Nothing
   911 ;; This function is called by:
   912 ;;		_main
   913 ;; This function uses a non-reentrant model
   914 ;;
   915                           
   916                           
   917                           ;psect for function _ADC_CHANNELS
   918  001C                     _ADC_CHANNELS:
   919  001C                     l937:	
   920                           ;incstack = 0
   921                           ; Regs used in _ADC_CHANNELS: [wreg-fsr0h+status,2+status,0]
   922                           
   923                           
   924                           ;./ADC_LIB.h: 31:     switch (ADCON0bits.CHS){
   925  001C  2853               	goto	l957
   926  001D                     l939:
   927                           
   928                           ;./ADC_LIB.h: 33:             *VALORA = VALOR_ADC;
   929  001D  0824               	movf	ADC_CHANNELS@VALORA,w
   930  001E  0084               	movwf	4
   931  001F  0822               	movf	ADC_CHANNELS@VALOR_ADC,w
   932  0020  0080               	movwf	0
   933  0021  0A84               	incf	4,f
   934  0022  0823               	movf	ADC_CHANNELS@VALOR_ADC+1,w
   935  0023  0080               	movwf	0
   936  0024                     l941:
   937                           
   938                           ;./ADC_LIB.h: 34:             ADCON0bits.CHS = CANAL;
   939  0024  0820               	movf	ADC_CHANNELS@CANAL,w
   940  0025  00A5               	movwf	??_ADC_CHANNELS
   941  0026  0DA5               	rlf	??_ADC_CHANNELS,f
   942  0027  0DA5               	rlf	??_ADC_CHANNELS,f
   943  0028  081F               	movf	31,w	;volatile
   944  0029  0625               	xorwf	??_ADC_CHANNELS,w
   945  002A  39C3               	andlw	-61
   946  002B  0625               	xorwf	??_ADC_CHANNELS,w
   947  002C  009F               	movwf	31	;volatile
   948  002D                     l943:
   949                           
   950                           ;./ADC_LIB.h: 35:             _delay((unsigned long)((50)*(4000000/4000000.0)));
   951  002D  300F               	movlw	15
   952  002E  1283               	bcf	3,5	;RP0=0, select bank0
   953  002F  1303               	bcf	3,6	;RP1=0, select bank0
   954  0030  00A5               	movwf	??_ADC_CHANNELS
   955  0031                     u127:
   956  0031  0BA5               	decfsz	??_ADC_CHANNELS,f
   957  0032  2831               	goto	u127
   958  0033  2834               	nop2
   959  0034                     l945:
   960                           
   961                           ;./ADC_LIB.h: 36:             ADCON0bits.GO = 1;
   962  0034  1283               	bcf	3,5	;RP0=0, select bank0
   963  0035  1303               	bcf	3,6	;RP1=0, select bank0
   964  0036  149F               	bsf	31,1	;volatile
   965                           
   966                           ;./ADC_LIB.h: 37:             break;
   967  0037  2868               	goto	l63
   968  0038                     l947:
   969                           
   970                           ;./ADC_LIB.h: 39:             *VALORA = VALOR_ADC;
   971  0038  0824               	movf	ADC_CHANNELS@VALORA,w
   972  0039  0084               	movwf	4
   973  003A  0822               	movf	ADC_CHANNELS@VALOR_ADC,w
   974  003B  0080               	movwf	0
   975  003C  0A84               	incf	4,f
   976  003D  0823               	movf	ADC_CHANNELS@VALOR_ADC+1,w
   977  003E  0080               	movwf	0
   978  003F                     l949:
   979                           
   980                           ;./ADC_LIB.h: 40:             ADCON0bits.CHS = CANAL;
   981  003F  0820               	movf	ADC_CHANNELS@CANAL,w
   982  0040  00A5               	movwf	??_ADC_CHANNELS
   983  0041  0DA5               	rlf	??_ADC_CHANNELS,f
   984  0042  0DA5               	rlf	??_ADC_CHANNELS,f
   985  0043  081F               	movf	31,w	;volatile
   986  0044  0625               	xorwf	??_ADC_CHANNELS,w
   987  0045  39C3               	andlw	-61
   988  0046  0625               	xorwf	??_ADC_CHANNELS,w
   989  0047  009F               	movwf	31	;volatile
   990  0048                     l951:
   991                           
   992                           ;./ADC_LIB.h: 41:             _delay((unsigned long)((50)*(4000000/4000000.0)));
   993  0048  300F               	movlw	15
   994  0049  1283               	bcf	3,5	;RP0=0, select bank0
   995  004A  1303               	bcf	3,6	;RP1=0, select bank0
   996  004B  00A5               	movwf	??_ADC_CHANNELS
   997  004C                     u137:
   998  004C  0BA5               	decfsz	??_ADC_CHANNELS,f
   999  004D  284C               	goto	u137
  1000  004E  284F               	nop2
  1001  004F                     l953:
  1002                           
  1003                           ;./ADC_LIB.h: 42:             ADCON0bits.GO = 1;
  1004  004F  1283               	bcf	3,5	;RP0=0, select bank0
  1005  0050  1303               	bcf	3,6	;RP1=0, select bank0
  1006  0051  149F               	bsf	31,1	;volatile
  1007                           
  1008                           ;./ADC_LIB.h: 43:             break;
  1009  0052  2868               	goto	l63
  1010  0053                     l957:
  1011  0053  1283               	bcf	3,5	;RP0=0, select bank0
  1012  0054  1303               	bcf	3,6	;RP1=0, select bank0
  1013  0055  0C1F               	rrf	31,w	;volatile
  1014  0056  00A5               	movwf	??_ADC_CHANNELS
  1015  0057  0C25               	rrf	??_ADC_CHANNELS,w
  1016  0058  390F               	andlw	15
  1017  0059  00A6               	movwf	??_ADC_CHANNELS+1
  1018  005A  01A7               	clrf	??_ADC_CHANNELS+2
  1019                           
  1020                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1021                           ; Switch size 1, requested type "simple"
  1022                           ; Number of cases is 1, Range of values is 0 to 0
  1023                           ; switch strategies available:
  1024                           ; Name         Instructions Cycles
  1025                           ; simple_byte            4     3 (average)
  1026                           ; direct_byte           11     8 (fixed)
  1027                           ; jumptable            260     6 (fixed)
  1028                           ;	Chosen strategy is simple_byte
  1029  005B  0827               	movf	??_ADC_CHANNELS+2,w
  1030  005C  3A00               	xorlw	0	; case 0
  1031  005D  1903               	skipnz
  1032  005E  2860               	goto	l1069
  1033  005F  2868               	goto	l63
  1034  0060                     l1069:
  1035                           
  1036                           ; Switch size 1, requested type "simple"
  1037                           ; Number of cases is 2, Range of values is 0 to 1
  1038                           ; switch strategies available:
  1039                           ; Name         Instructions Cycles
  1040                           ; simple_byte            7     4 (average)
  1041                           ; direct_byte           14     8 (fixed)
  1042                           ; jumptable            260     6 (fixed)
  1043                           ;	Chosen strategy is simple_byte
  1044  0060  0826               	movf	??_ADC_CHANNELS+1,w
  1045  0061  3A00               	xorlw	0	; case 0
  1046  0062  1903               	skipnz
  1047  0063  281D               	goto	l939
  1048  0064  3A01               	xorlw	1	; case 1
  1049  0065  1903               	skipnz
  1050  0066  2838               	goto	l947
  1051  0067  2868               	goto	l63
  1052  0068                     l63:
  1053  0068  0008               	return
  1054  0069                     __end_of_ADC_CHANNELS:
  1055                           
  1056                           	psect	text5
  1057  0069                     __ptext5:	
  1058 ;; *************** function _isr *****************
  1059 ;; Defined at:
  1060 ;;		line 49 in file "main.c"
  1061 ;; Parameters:    Size  Location     Type
  1062 ;;		None
  1063 ;; Auto vars:     Size  Location     Type
  1064 ;;		None
  1065 ;; Return value:  Size  Location     Type
  1066 ;;                  1    wreg      void 
  1067 ;; Registers used:
  1068 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1069 ;; Tracked objects:
  1070 ;;		On entry : 0/0
  1071 ;;		On exit  : 0/0
  1072 ;;		Unchanged: 0/0
  1073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1074 ;;      Params:         0       0       0       0       0
  1075 ;;      Locals:         0       0       0       0       0
  1076 ;;      Temps:          5       0       0       0       0
  1077 ;;      Totals:         5       0       0       0       0
  1078 ;;Total ram usage:        5 bytes
  1079 ;; Hardware stack levels used:    1
  1080 ;; Hardware stack levels required when called:    2
  1081 ;; This function calls:
  1082 ;;		_ADC_READ
  1083 ;;		_spiRead
  1084 ;;		_spiWrite
  1085 ;; This function is called by:
  1086 ;;		Interrupt level 1
  1087 ;; This function uses a non-reentrant model
  1088 ;;
  1089                           
  1090                           
  1091                           ;psect for function _isr
  1092  0069                     _isr:
  1093  0069                     i1l997:
  1094                           
  1095                           ;main.c: 50: 
  1096  0069  138B               	bcf	11,7	;volatile
  1097                           
  1098                           ;main.c: 51: 
  1099  006A  1283               	bcf	3,5	;RP0=0, select bank0
  1100  006B  1303               	bcf	3,6	;RP1=0, select bank0
  1101  006C  1F0C               	btfss	12,6	;volatile
  1102  006D  286F               	goto	u7_21
  1103  006E  2870               	goto	u7_20
  1104  006F                     u7_21:
  1105  006F  287C               	goto	i1l1003
  1106  0070                     u7_20:
  1107  0070                     i1l999:
  1108                           
  1109                           ;main.c: 53: 
  1110  0070  120A  118A  216E  120A  118A  	fcall	_ADC_READ
  1111  0075  0871               	movf	?_ADC_READ+1,w
  1112  0076  1283               	bcf	3,5	;RP0=0, select bank0
  1113  0077  1303               	bcf	3,6	;RP1=0, select bank0
  1114  0078  00AB               	movwf	_VALOR_ADC+1
  1115  0079  0870               	movf	?_ADC_READ,w
  1116  007A  00AA               	movwf	_VALOR_ADC
  1117  007B                     i1l1001:
  1118                           
  1119                           ;main.c: 54:     ANSEL = 0B00000011;
  1120  007B  130C               	bcf	12,6	;volatile
  1121  007C                     i1l1003:
  1122                           
  1123                           ;main.c: 56: 
  1124  007C  1D8C               	btfss	12,3	;volatile
  1125  007D  287F               	goto	u8_21
  1126  007E  2880               	goto	u8_20
  1127  007F                     u8_21:
  1128  007F  28AA               	goto	i1l77
  1129  0080                     u8_20:
  1130  0080                     i1l1005:
  1131                           
  1132                           ;main.c: 57:     TRISA = 0B00100011;
  1133  0080  120A  118A  217C  120A  118A  	fcall	_spiRead
  1134  0085  00F6               	movwf	??_isr
  1135  0086  0876               	movf	??_isr,w
  1136  0087  00FB               	movwf	_SEL_POT
  1137                           
  1138                           ;main.c: 58:     TRISD = 0X00;
  1139  0088  2897               	goto	i1l1013
  1140  0089                     i1l1007:
  1141                           
  1142                           ;main.c: 60:     TRISB = 0B00000000;
  1143  0089  087D               	movf	_POT0,w
  1144  008A  120A  118A  218C  120A  118A  	fcall	_spiWrite
  1145                           
  1146                           ;main.c: 61: 
  1147  008F  28A7               	goto	i1l80
  1148  0090                     i1l1009:
  1149                           
  1150                           ;main.c: 63:     PORTB = 0X00;
  1151  0090  087C               	movf	_POT1,w
  1152  0091  120A  118A  218C  120A  118A  	fcall	_spiWrite
  1153                           
  1154                           ;main.c: 64:     PORTC = 0X00;
  1155  0096  28A7               	goto	i1l80
  1156  0097                     i1l1013:
  1157  0097  087B               	movf	_SEL_POT,w
  1158  0098  00F6               	movwf	??_isr
  1159  0099  01F7               	clrf	??_isr+1
  1160                           
  1161                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1162                           ; Switch size 1, requested type "simple"
  1163                           ; Number of cases is 1, Range of values is 0 to 0
  1164                           ; switch strategies available:
  1165                           ; Name         Instructions Cycles
  1166                           ; simple_byte            4     3 (average)
  1167                           ; direct_byte           11     8 (fixed)
  1168                           ; jumptable            260     6 (fixed)
  1169                           ;	Chosen strategy is simple_byte
  1170  009A  0877               	movf	??_isr+1,w
  1171  009B  3A00               	xorlw	0	; case 0
  1172  009C  1903               	skipnz
  1173  009D  289F               	goto	i1l1071
  1174  009E  28A7               	goto	i1l80
  1175  009F                     i1l1071:
  1176                           
  1177                           ; Switch size 1, requested type "simple"
  1178                           ; Number of cases is 2, Range of values is 1 to 2
  1179                           ; switch strategies available:
  1180                           ; Name         Instructions Cycles
  1181                           ; simple_byte            7     4 (average)
  1182                           ; direct_byte           17    11 (fixed)
  1183                           ; jumptable            263     9 (fixed)
  1184                           ;	Chosen strategy is simple_byte
  1185  009F  0876               	movf	??_isr,w
  1186  00A0  3A01               	xorlw	1	; case 1
  1187  00A1  1903               	skipnz
  1188  00A2  2889               	goto	i1l1007
  1189  00A3  3A03               	xorlw	3	; case 2
  1190  00A4  1903               	skipnz
  1191  00A5  2890               	goto	i1l1009
  1192  00A6  28A7               	goto	i1l80
  1193  00A7                     i1l80:
  1194                           
  1195                           ;main.c: 67: 
  1196  00A7  1283               	bcf	3,5	;RP0=0, select bank0
  1197  00A8  1303               	bcf	3,6	;RP1=0, select bank0
  1198  00A9  118C               	bcf	12,3	;volatile
  1199  00AA                     i1l77:	
  1200                           ;main.c: 68: 
  1201                           
  1202                           
  1203                           ;main.c: 70:     OSCCONbits.IRCF1 = 1;
  1204  00AA  178B               	bsf	11,7	;volatile
  1205  00AB                     i1l82:
  1206  00AB  087A               	movf	??_isr+4,w
  1207  00AC  008A               	movwf	10
  1208  00AD  0879               	movf	??_isr+3,w
  1209  00AE  0084               	movwf	4
  1210  00AF  0E78               	swapf	??_isr+2,w
  1211  00B0  0083               	movwf	3
  1212  00B1  0EFE               	swapf	btemp,f
  1213  00B2  0E7E               	swapf	btemp,w
  1214  00B3  0009               	retfie
  1215  00B4                     __end_of_isr:
  1216                           
  1217                           	psect	intentry
  1218  0004                     __pintentry:	
  1219                           ;incstack = 0
  1220                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1221                           
  1222  0004                     interrupt_function:
  1223  007E                     saved_w	set	btemp
  1224  0004  00FE               	movwf	btemp
  1225  0005  0E03               	swapf	3,w
  1226  0006  00F8               	movwf	??_isr+2
  1227  0007  0804               	movf	4,w
  1228  0008  00F9               	movwf	??_isr+3
  1229  0009  080A               	movf	10,w
  1230  000A  00FA               	movwf	??_isr+4
  1231  000B  120A  118A  2869   	ljmp	_isr
  1232                           
  1233                           	psect	text6
  1234  018C                     __ptext6:	
  1235 ;; *************** function _spiWrite *****************
  1236 ;; Defined at:
  1237 ;;		line 34 in file "SPI.c"
  1238 ;; Parameters:    Size  Location     Type
  1239 ;;  dat             1    wreg     unsigned char 
  1240 ;; Auto vars:     Size  Location     Type
  1241 ;;  dat             1    0[COMMON] unsigned char 
  1242 ;; Return value:  Size  Location     Type
  1243 ;;                  1    wreg      void 
  1244 ;; Registers used:
  1245 ;;		wreg
  1246 ;; Tracked objects:
  1247 ;;		On entry : 0/0
  1248 ;;		On exit  : 0/0
  1249 ;;		Unchanged: 0/0
  1250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1251 ;;      Params:         0       0       0       0       0
  1252 ;;      Locals:         1       0       0       0       0
  1253 ;;      Temps:          0       0       0       0       0
  1254 ;;      Totals:         1       0       0       0       0
  1255 ;;Total ram usage:        1 bytes
  1256 ;; Hardware stack levels used:    1
  1257 ;; This function calls:
  1258 ;;		Nothing
  1259 ;; This function is called by:
  1260 ;;		_isr
  1261 ;; This function uses a non-reentrant model
  1262 ;;
  1263                           
  1264                           
  1265                           ;psect for function _spiWrite
  1266  018C                     _spiWrite:
  1267                           
  1268                           ;incstack = 0
  1269                           ; Regs used in _spiWrite: [wreg]
  1270                           ;spiWrite@dat stored from wreg
  1271  018C  00F0               	movwf	spiWrite@dat
  1272  018D                     i1l969:
  1273                           
  1274                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
  1275  018D  0870               	movf	spiWrite@dat,w
  1276  018E  1283               	bcf	3,5	;RP0=0, select bank0
  1277  018F  1303               	bcf	3,6	;RP1=0, select bank0
  1278  0190  0093               	movwf	19	;volatile
  1279  0191                     i1l119:
  1280  0191  0008               	return
  1281  0192                     __end_of_spiWrite:
  1282                           
  1283                           	psect	text7
  1284  017C                     __ptext7:	
  1285 ;; *************** function _spiRead *****************
  1286 ;; Defined at:
  1287 ;;		line 47 in file "SPI.c"
  1288 ;; Parameters:    Size  Location     Type
  1289 ;;		None
  1290 ;; Auto vars:     Size  Location     Type
  1291 ;;		None
  1292 ;; Return value:  Size  Location     Type
  1293 ;;                  1    wreg      unsigned char 
  1294 ;; Registers used:
  1295 ;;		wreg, status,2, status,0, pclath, cstack
  1296 ;; Tracked objects:
  1297 ;;		On entry : 0/0
  1298 ;;		On exit  : 0/0
  1299 ;;		Unchanged: 0/0
  1300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1301 ;;      Params:         0       0       0       0       0
  1302 ;;      Locals:         0       0       0       0       0
  1303 ;;      Temps:          0       0       0       0       0
  1304 ;;      Totals:         0       0       0       0       0
  1305 ;;Total ram usage:        0 bytes
  1306 ;; Hardware stack levels used:    1
  1307 ;; Hardware stack levels required when called:    1
  1308 ;; This function calls:
  1309 ;;		_spiReceiveWait
  1310 ;; This function is called by:
  1311 ;;		_isr
  1312 ;; This function uses a non-reentrant model
  1313 ;;
  1314                           
  1315                           
  1316                           ;psect for function _spiRead
  1317  017C                     _spiRead:
  1318  017C                     i1l963:	
  1319                           ;incstack = 0
  1320                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1321                           
  1322                           
  1323                           ;SPI.c: 49:     spiReceiveWait();
  1324  017C  120A  118A  2185  120A  118A  	fcall	_spiReceiveWait
  1325  0181                     i1l965:
  1326                           
  1327                           ;SPI.c: 50:     return(SSPBUF);
  1328  0181  1283               	bcf	3,5	;RP0=0, select bank0
  1329  0182  1303               	bcf	3,6	;RP1=0, select bank0
  1330  0183  0813               	movf	19,w	;volatile
  1331  0184                     i1l127:
  1332  0184  0008               	return
  1333  0185                     __end_of_spiRead:
  1334                           
  1335                           	psect	text8
  1336  0185                     __ptext8:	
  1337 ;; *************** function _spiReceiveWait *****************
  1338 ;; Defined at:
  1339 ;;		line 29 in file "SPI.c"
  1340 ;; Parameters:    Size  Location     Type
  1341 ;;		None
  1342 ;; Auto vars:     Size  Location     Type
  1343 ;;		None
  1344 ;; Return value:  Size  Location     Type
  1345 ;;                  1    wreg      void 
  1346 ;; Registers used:
  1347 ;;		None
  1348 ;; Tracked objects:
  1349 ;;		On entry : 0/0
  1350 ;;		On exit  : 0/0
  1351 ;;		Unchanged: 0/0
  1352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1353 ;;      Params:         0       0       0       0       0
  1354 ;;      Locals:         0       0       0       0       0
  1355 ;;      Temps:          0       0       0       0       0
  1356 ;;      Totals:         0       0       0       0       0
  1357 ;;Total ram usage:        0 bytes
  1358 ;; Hardware stack levels used:    1
  1359 ;; This function calls:
  1360 ;;		Nothing
  1361 ;; This function is called by:
  1362 ;;		_spiRead
  1363 ;; This function uses a non-reentrant model
  1364 ;;
  1365                           
  1366                           
  1367                           ;psect for function _spiReceiveWait
  1368  0185                     _spiReceiveWait:
  1369  0185                     i1l931:	
  1370                           ;incstack = 0
  1371                           ; Regs used in _spiReceiveWait: []
  1372                           
  1373  0185                     i1l113:	
  1374                           ;SPI.c: 31:     while ( !SSPSTATbits.BF );
  1375                           
  1376  0185  1683               	bsf	3,5	;RP0=1, select bank1
  1377  0186  1303               	bcf	3,6	;RP1=0, select bank1
  1378  0187  1C14               	btfss	20,0	;volatile
  1379  0188  298A               	goto	u6_21
  1380  0189  298B               	goto	u6_20
  1381  018A                     u6_21:
  1382  018A  2985               	goto	i1l113
  1383  018B                     u6_20:
  1384  018B                     i1l116:
  1385  018B  0008               	return
  1386  018C                     __end_of_spiReceiveWait:
  1387                           
  1388                           	psect	text9
  1389  016E                     __ptext9:	
  1390 ;; *************** function _ADC_READ *****************
  1391 ;; Defined at:
  1392 ;;		line 24 in file "./ADC_LIB.h"
  1393 ;; Parameters:    Size  Location     Type
  1394 ;;		None
  1395 ;; Auto vars:     Size  Location     Type
  1396 ;;  LECT            2    4[COMMON] unsigned int 
  1397 ;; Return value:  Size  Location     Type
  1398 ;;                  2    0[COMMON] unsigned int 
  1399 ;; Registers used:
  1400 ;;		wreg
  1401 ;; Tracked objects:
  1402 ;;		On entry : 0/0
  1403 ;;		On exit  : 0/0
  1404 ;;		Unchanged: 0/0
  1405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1406 ;;      Params:         2       0       0       0       0
  1407 ;;      Locals:         2       0       0       0       0
  1408 ;;      Temps:          2       0       0       0       0
  1409 ;;      Totals:         6       0       0       0       0
  1410 ;;Total ram usage:        6 bytes
  1411 ;; Hardware stack levels used:    1
  1412 ;; This function calls:
  1413 ;;		Nothing
  1414 ;; This function is called by:
  1415 ;;		_isr
  1416 ;; This function uses a non-reentrant model
  1417 ;;
  1418                           
  1419                           
  1420                           ;psect for function _ADC_READ
  1421  016E                     _ADC_READ:
  1422  016E                     i1l933:	
  1423                           ;incstack = 0
  1424                           ; Regs used in _ADC_READ: [wreg]
  1425                           
  1426                           
  1427                           ;./ADC_LIB.h: 25:     unsigned int LECT;;./ADC_LIB.h: 26:     LECT = ADRESH;
  1428  016E  1283               	bcf	3,5	;RP0=0, select bank0
  1429  016F  1303               	bcf	3,6	;RP1=0, select bank0
  1430  0170  081E               	movf	30,w	;volatile
  1431  0171  00F2               	movwf	??_ADC_READ
  1432  0172  01F3               	clrf	??_ADC_READ+1
  1433  0173  0872               	movf	??_ADC_READ,w
  1434  0174  00F4               	movwf	ADC_READ@LECT
  1435  0175  0873               	movf	??_ADC_READ+1,w
  1436  0176  00F5               	movwf	ADC_READ@LECT+1
  1437                           
  1438                           ;./ADC_LIB.h: 27:     return LECT;
  1439  0177  0875               	movf	ADC_READ@LECT+1,w
  1440  0178  00F1               	movwf	?_ADC_READ+1
  1441  0179  0874               	movf	ADC_READ@LECT,w
  1442  017A  00F0               	movwf	?_ADC_READ
  1443  017B                     i1l56:
  1444  017B  0008               	return
  1445  017C                     __end_of_ADC_READ:
  1446  007E                     btemp	set	126	;btemp
  1447  007E                     wtemp0	set	126
  1448                           
  1449                           	psect	config
  1450                           
  1451                           ;Config register CONFIG1 @ 0x2007
  1452                           ;	Oscillator Selection bits
  1453                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
  1454                           ;	Watchdog Timer Enable bit
  1455                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1456                           ;	Power-up Timer Enable bit
  1457                           ;	PWRTE = OFF, PWRT disabled
  1458                           ;	RE3/MCLR pin function select bit
  1459                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1460                           ;	Code Protection bit
  1461                           ;	CP = OFF, Program memory code protection is disabled
  1462                           ;	Data Code Protection bit
  1463                           ;	CPD = OFF, Data memory code protection is disabled
  1464                           ;	Brown Out Reset Selection bits
  1465                           ;	BOREN = OFF, BOR disabled
  1466                           ;	Internal External Switchover bit
  1467                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1468                           ;	Fail-Safe Clock Monitor Enabled bit
  1469                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1470                           ;	Low Voltage Programming Enable bit
  1471                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1472                           ;	In-Circuit Debugger Mode bit
  1473                           ;	DEBUG = 0x1, unprogrammed default
  1474  2007                     	org	8199
  1475  2007  20D5               	dw	8405
  1476                           
  1477                           ;Config register CONFIG2 @ 0x2008
  1478                           ;	Brown-out Reset Selection bit
  1479                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1480                           ;	Flash Program Memory Self Write Enable bits
  1481                           ;	WRT = OFF, Write protection off
  1482  2008                     	org	8200
  1483  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      14
    BANK0            80     10      12
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    ADC_CHANNELS@VALORA	PTR unsigned int  size(1) Largest target is 1
		 -> POT1(COMMON[1]), POT0(COMMON[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_ADC_READ

Critical Paths under _main in BANK0

    _main->_ADC_CHANNELS
    _setup->_spiInit

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1046
                                              8 BANK0      2     2      0
                       _ADC_CHANNELS
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     458
                           _ADC_INIT
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (2) _ADC_INIT                                             3     1      2      98
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _ADC_CHANNELS                                         8     3      5     588
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  5     5      0      45
                                              6 COMMON     5     5      0
                           _ADC_READ
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (5) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ADC_READ                                             6     4      2      23
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_CHANNELS
   _setup
     _ADC_INIT
     _spiInit

 _isr (ROOT)
   _ADC_READ
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      1A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      A       C       5       15.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      1A      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Aug 02 23:41:48 2021

            _SSPSTATbits 0094                       l53 014F                       l63 0068  
                     l93 012C                       u50 015C                       u51 015B  
                     u97 00D2                      l110 016D                      l109 0168  
                    l911 0146                      l903 012D                      l913 0149  
                    l905 0130                      l921 0153                      l915 014A  
                    l907 0139                      l923 015C                      l941 0024  
                    l917 014B                      l909 0140                      l925 0160  
                    l951 0048                      l943 002D                      l919 014C  
                    l927 0162                      l953 004F                      l945 0034  
                    l937 001C                      l929 0167                      l947 0038  
                    l939 001D                      l971 00F6                      l949 003F  
                    l957 0053                      l981 010D                      l973 00FA  
                    l991 0125                      l983 010E                      l975 00FB  
                    l993 0126                      l985 010F                      l977 0109  
                    l995 0129                      l987 0119                      l979 010C  
                    l989 0124                      u107 00EE                      u117 013D  
                    u127 0031                      u137 004C                      _isr 0069  
                    fsr0 0004                      indf 0000                     l1021 00B9  
                   l1023 00CC                     l1025 00D6                     l1027 00E8  
                   l1019 00B4                     l1069 0060                     _ADIF 0066  
                   ?_isr 0070                     i1l56 017B                     i1l80 00A7  
                   i1l82 00AB                     i1l77 00AA                     _POT0 007D  
                   _POT1 007C             _ADC_CHANNELS 001C                     u6_20 018B  
                   u6_21 018A                     u7_20 0070                     u7_21 006F  
                   u8_20 0080                     u8_21 007F         __end_of_ADC_INIT 0150  
       __end_of_ADC_READ 017C                     _main 00B4                     btemp 007E  
                   start 000E                    ??_isr 0076                    ?_main 0070  
                  _ANSEL 0188                    i1l113 0185                    i1l116 018B  
                  i1l127 0184                    i1l119 0191                    i1l931 0185  
                  i1l933 016E                    i1l963 017C                    i1l965 0181  
                  i1l969 018D                    i1l997 0069                    i1l999 0070  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    _TRISA 0085  
                  _TRISB 0086                    _TRISD 0088                    _TRISE 0089  
                  _SSPIF 0063                    _setup 00F6                    pclath 000A  
        __end_of_spiInit 016E          __end_of_spiRead 0185                    status 0003  
                  wtemp0 007E          __initialization 0011             __end_of_main 00F6  
                 ??_main 0028                   _ADRESH 001E                   ?_setup 0070  
                 _ANSELH 0189                   i1l1001 007B                   i1l1003 007C  
                 i1l1013 0097                   i1l1005 0080                   i1l1007 0089  
                 i1l1009 0090                   i1l1071 009F                   _TRISC3 043B  
                 _TRISC5 043D                   _SSPCON 0014                   _SSPBUF 0013  
              ?_ADC_INIT 0020                ?_ADC_READ 0070                   saved_w 007E  
       __end_of_spiWrite 0192                ??_spiInit 0023                ??_spiRead 0070  
__end_of__initialization 0018           __pcstackCOMMON 0070        ADC_CHANNELS@CANAL 0020  
           ADC_READ@LECT 0074            __end_of_setup 012D               ??_ADC_INIT 0022  
             ??_ADC_READ 0072                  ??_setup 0024               __pbssBANK0 002A  
             __pmaintext 00B4               __pintentry 0004  __size_of_spiReceiveWait 0007  
                _SEL_POT 007B                  _SSPSTAT 0094    ADC_CHANNELS@VALOR_ADC 0022  
              ?_spiWrite 0070                  __ptext1 00F6                  __ptext2 0150  
                __ptext3 012D                  __ptext4 001C                  __ptext5 0069  
                __ptext6 018C                  __ptext7 017C                  __ptext8 0185  
                __ptext9 016E             __size_of_isr 004B                  _spiInit 0150  
                _spiRead 017C     end_of_initialization 0018               ??_spiWrite 0070  
              _VALOR_ADC 002A        __size_of_ADC_INIT 0023        __size_of_ADC_READ 000E  
            spiWrite@dat 0070           _spiReceiveWait 0185       ADC_CHANNELS@VALORA 0024  
          ADC_INIT@canal 0020      start_initialization 0011              __end_of_isr 00B4  
          ?_ADC_CHANNELS 0020   __end_of_spiReceiveWait 018C              __pbssCOMMON 007B  
              ___latbits 0002            __pcstackBANK0 0020           ??_ADC_CHANNELS 0025  
        ?_spiReceiveWait 0070        __size_of_spiWrite 0006                 _ADC_INIT 012D  
               _ADC_READ 016E                 ?_spiInit 0020                 ?_spiRead 0070  
         __size_of_setup 0037     spiInit@sTransmitEdge 0022        interrupt_function 0004  
               _PIE1bits 008C       spiInit@sDataSample 0020                 _PIR1bits 000C  
             _ADCON0bits 001F               _ADCON1bits 009F     __end_of_ADC_CHANNELS 0069  
       __size_of_spiInit 001E         __size_of_spiRead 0009            __size_of_main 0042  
               _spiWrite 018C             spiInit@sType 0023        spiInit@sClockIdle 0021  
             _INTCONbits 000B                 intlevel1 0000         ??_spiReceiveWait 0070  
             _OSCCONbits 008F    __size_of_ADC_CHANNELS 004D  
