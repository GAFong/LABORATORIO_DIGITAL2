

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Jul 26 17:08:06 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	intentry,global,class=CODE,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    24                           	dabs	1,0x7E,2
    25  0000                     
    26                           ; Version 2.20
    27                           ; Generated 12/02/2020 GMT
    28                           ; 
    29                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC16F887 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60  0000                     	;# 
    61  0001                     	;# 
    62  0002                     	;# 
    63  0003                     	;# 
    64  0004                     	;# 
    65  0005                     	;# 
    66  0006                     	;# 
    67  0007                     	;# 
    68  0008                     	;# 
    69  0009                     	;# 
    70  000A                     	;# 
    71  000B                     	;# 
    72  000C                     	;# 
    73  000D                     	;# 
    74  000E                     	;# 
    75  000E                     	;# 
    76  000F                     	;# 
    77  0010                     	;# 
    78  0011                     	;# 
    79  0012                     	;# 
    80  0013                     	;# 
    81  0014                     	;# 
    82  0015                     	;# 
    83  0015                     	;# 
    84  0016                     	;# 
    85  0017                     	;# 
    86  0018                     	;# 
    87  0019                     	;# 
    88  001A                     	;# 
    89  001B                     	;# 
    90  001B                     	;# 
    91  001C                     	;# 
    92  001D                     	;# 
    93  001E                     	;# 
    94  001F                     	;# 
    95  0081                     	;# 
    96  0085                     	;# 
    97  0086                     	;# 
    98  0087                     	;# 
    99  0088                     	;# 
   100  0089                     	;# 
   101  008C                     	;# 
   102  008D                     	;# 
   103  008E                     	;# 
   104  008F                     	;# 
   105  0090                     	;# 
   106  0091                     	;# 
   107  0092                     	;# 
   108  0093                     	;# 
   109  0093                     	;# 
   110  0093                     	;# 
   111  0094                     	;# 
   112  0095                     	;# 
   113  0096                     	;# 
   114  0097                     	;# 
   115  0098                     	;# 
   116  0099                     	;# 
   117  009A                     	;# 
   118  009B                     	;# 
   119  009C                     	;# 
   120  009D                     	;# 
   121  009E                     	;# 
   122  009F                     	;# 
   123  0105                     	;# 
   124  0107                     	;# 
   125  0108                     	;# 
   126  0109                     	;# 
   127  010C                     	;# 
   128  010C                     	;# 
   129  010D                     	;# 
   130  010E                     	;# 
   131  010F                     	;# 
   132  0185                     	;# 
   133  0187                     	;# 
   134  0188                     	;# 
   135  0189                     	;# 
   136  018C                     	;# 
   137  018D                     	;# 
   138  0000                     	;# 
   139  0001                     	;# 
   140  0002                     	;# 
   141  0003                     	;# 
   142  0004                     	;# 
   143  0005                     	;# 
   144  0006                     	;# 
   145  0007                     	;# 
   146  0008                     	;# 
   147  0009                     	;# 
   148  000A                     	;# 
   149  000B                     	;# 
   150  000C                     	;# 
   151  000D                     	;# 
   152  000E                     	;# 
   153  000E                     	;# 
   154  000F                     	;# 
   155  0010                     	;# 
   156  0011                     	;# 
   157  0012                     	;# 
   158  0013                     	;# 
   159  0014                     	;# 
   160  0015                     	;# 
   161  0015                     	;# 
   162  0016                     	;# 
   163  0017                     	;# 
   164  0018                     	;# 
   165  0019                     	;# 
   166  001A                     	;# 
   167  001B                     	;# 
   168  001B                     	;# 
   169  001C                     	;# 
   170  001D                     	;# 
   171  001E                     	;# 
   172  001F                     	;# 
   173  0081                     	;# 
   174  0085                     	;# 
   175  0086                     	;# 
   176  0087                     	;# 
   177  0088                     	;# 
   178  0089                     	;# 
   179  008C                     	;# 
   180  008D                     	;# 
   181  008E                     	;# 
   182  008F                     	;# 
   183  0090                     	;# 
   184  0091                     	;# 
   185  0092                     	;# 
   186  0093                     	;# 
   187  0093                     	;# 
   188  0093                     	;# 
   189  0094                     	;# 
   190  0095                     	;# 
   191  0096                     	;# 
   192  0097                     	;# 
   193  0098                     	;# 
   194  0099                     	;# 
   195  009A                     	;# 
   196  009B                     	;# 
   197  009C                     	;# 
   198  009D                     	;# 
   199  009E                     	;# 
   200  009F                     	;# 
   201  0105                     	;# 
   202  0107                     	;# 
   203  0108                     	;# 
   204  0109                     	;# 
   205  010C                     	;# 
   206  010C                     	;# 
   207  010D                     	;# 
   208  010E                     	;# 
   209  010F                     	;# 
   210  0185                     	;# 
   211  0187                     	;# 
   212  0188                     	;# 
   213  0189                     	;# 
   214  018C                     	;# 
   215  018D                     	;# 
   216  0000                     	;# 
   217  0001                     	;# 
   218  0002                     	;# 
   219  0003                     	;# 
   220  0004                     	;# 
   221  0005                     	;# 
   222  0006                     	;# 
   223  0007                     	;# 
   224  0008                     	;# 
   225  0009                     	;# 
   226  000A                     	;# 
   227  000B                     	;# 
   228  000C                     	;# 
   229  000D                     	;# 
   230  000E                     	;# 
   231  000E                     	;# 
   232  000F                     	;# 
   233  0010                     	;# 
   234  0011                     	;# 
   235  0012                     	;# 
   236  0013                     	;# 
   237  0014                     	;# 
   238  0015                     	;# 
   239  0015                     	;# 
   240  0016                     	;# 
   241  0017                     	;# 
   242  0018                     	;# 
   243  0019                     	;# 
   244  001A                     	;# 
   245  001B                     	;# 
   246  001B                     	;# 
   247  001C                     	;# 
   248  001D                     	;# 
   249  001E                     	;# 
   250  001F                     	;# 
   251  0081                     	;# 
   252  0085                     	;# 
   253  0086                     	;# 
   254  0087                     	;# 
   255  0088                     	;# 
   256  0089                     	;# 
   257  008C                     	;# 
   258  008D                     	;# 
   259  008E                     	;# 
   260  008F                     	;# 
   261  0090                     	;# 
   262  0091                     	;# 
   263  0092                     	;# 
   264  0093                     	;# 
   265  0093                     	;# 
   266  0093                     	;# 
   267  0094                     	;# 
   268  0095                     	;# 
   269  0096                     	;# 
   270  0097                     	;# 
   271  0098                     	;# 
   272  0099                     	;# 
   273  009A                     	;# 
   274  009B                     	;# 
   275  009C                     	;# 
   276  009D                     	;# 
   277  009E                     	;# 
   278  009F                     	;# 
   279  0105                     	;# 
   280  0107                     	;# 
   281  0108                     	;# 
   282  0109                     	;# 
   283  010C                     	;# 
   284  010C                     	;# 
   285  010D                     	;# 
   286  010E                     	;# 
   287  010F                     	;# 
   288  0185                     	;# 
   289  0187                     	;# 
   290  0188                     	;# 
   291  0189                     	;# 
   292  018C                     	;# 
   293  018D                     	;# 
   294  0009                     _PORTE	set	9
   295  0008                     _PORTD	set	8
   296  0007                     _PORTC	set	7
   297  0006                     _PORTB	set	6
   298  0005                     _PORTA	set	5
   299  0001                     _TMR0	set	1
   300  000B                     _INTCONbits	set	11
   301  001E                     _ADRESH	set	30
   302  000C                     _PIR1bits	set	12
   303  001F                     _ADCON0bits	set	31
   304  0033                     _RB3	set	51
   305  0032                     _RB2	set	50
   306  0047                     _RD7	set	71
   307  0046                     _RD6	set	70
   308  0045                     _RD5	set	69
   309  0044                     _RD4	set	68
   310  0043                     _RD3	set	67
   311  0042                     _RD2	set	66
   312  0041                     _RD1	set	65
   313  0040                     _RD0	set	64
   314  005A                     _T0IF	set	90
   315  0066                     _ADIF	set	102
   316  0081                     _OPTION_REG	set	129
   317  008F                     _OSCCONbits	set	143
   318  0086                     _TRISB	set	134
   319  0089                     _TRISE	set	137
   320  0088                     _TRISD	set	136
   321  0087                     _TRISC	set	135
   322  0085                     _TRISA	set	133
   323  008C                     _PIE1bits	set	140
   324  009F                     _ADCON1bits	set	159
   325  0189                     _ANSELH	set	393
   326  0188                     _ANSEL	set	392
   327                           
   328                           	psect	strings
   329  02A9                     __pstrings:
   330  02A9                     stringtab:
   331  02A9                     __stringtab:
   332  02A9                     stringcode:	
   333                           ;	String table - string pointers are 1 byte each
   334                           
   335  02A9                     stringdir:
   336  02A9  3002               	movlw	high stringdir
   337  02AA  008A               	movwf	10
   338  02AB  0804               	movf	4,w
   339  02AC  0A84               	incf	4,f
   340  02AD  0782               	addwf	2,f
   341  02AE                     __stringbase:
   342  02AE  3400               	retlw	0
   343  02AF                     __end_of__stringtab:
   344  02AF                     STR_1:
   345  02AF  3456               	retlw	86	;'V'
   346  02B0  3400               	retlw	0
   347                           
   348                           	psect	cinit
   349  000F                     start_initialization:	
   350                           ; #config settings
   351                           
   352  000F                     __initialization:
   353                           
   354                           ; Clear objects allocated to BANK0
   355  000F  1283               	bcf	3,5	;RP0=0, select bank0
   356  0010  1303               	bcf	3,6	;RP1=0, select bank0
   357  0011  01AD               	clrf	__pbssBANK0& (0+127)
   358  0012  01AE               	clrf	(__pbssBANK0+1)& (0+127)
   359  0013  01AF               	clrf	(__pbssBANK0+2)& (0+127)
   360  0014  01B0               	clrf	(__pbssBANK0+3)& (0+127)
   361  0015  01B1               	clrf	(__pbssBANK0+4)& (0+127)
   362  0016  01B2               	clrf	(__pbssBANK0+5)& (0+127)
   363  0017                     end_of_initialization:	
   364                           ;End of C runtime variable initialization code
   365                           
   366  0017                     __end_of__initialization:
   367  0017  0183               	clrf	3
   368  0018  120A  118A  281B   	ljmp	_main	;jump to C main() function
   369                           
   370                           	psect	bssBANK0
   371  002D                     __pbssBANK0:
   372  002D                     _VALOR_ADC:
   373  002D                     	ds	2
   374  002F                     _POT1:
   375  002F                     	ds	2
   376  0031                     _POT0:
   377  0031                     	ds	2
   378                           
   379                           	psect	cstackCOMMON
   380  0070                     __pcstackCOMMON:
   381  0070                     ?_setup:
   382  0070                     ?_Lcd_Init:	
   383                           ; 1 bytes @ 0x0
   384                           
   385  0070                     ?_Lcd_Clear:	
   386                           ; 1 bytes @ 0x0
   387                           
   388  0070                     ?_Lcd_Write_String:	
   389                           ; 1 bytes @ 0x0
   390                           
   391  0070                     ?_isr:	
   392                           ; 1 bytes @ 0x0
   393                           
   394  0070                     ?_main:	
   395                           ; 1 bytes @ 0x0
   396                           
   397  0070                     ?_LCD_PORT:	
   398                           ; 1 bytes @ 0x0
   399                           
   400  0070                     ?_Lcd_Cmd:	
   401                           ; 1 bytes @ 0x0
   402                           
   403  0070                     ?_Lcd_Write_Char:	
   404                           ; 1 bytes @ 0x0
   405                           
   406  0070                     ?_ADC_READ:	
   407                           ; 1 bytes @ 0x0
   408                           
   409                           
   410                           ; 2 bytes @ 0x0
   411  0070                     	ds	2
   412  0072                     ??_ADC_READ:
   413                           
   414                           ; 1 bytes @ 0x2
   415  0072                     	ds	2
   416  0074                     ADC_READ@LECT:
   417                           
   418                           ; 2 bytes @ 0x4
   419  0074                     	ds	2
   420  0076                     ??_isr:
   421                           
   422                           ; 1 bytes @ 0x6
   423  0076                     	ds	2
   424                           
   425                           	psect	cstackBANK0
   426  0020                     __pcstackBANK0:
   427  0020                     ?_ADC_INIT:
   428  0020                     ?_ADC_CHANNELS:	
   429                           ; 1 bytes @ 0x0
   430                           
   431  0020                     ??_LCD_PORT:	
   432                           ; 1 bytes @ 0x0
   433                           
   434  0020                     LCD_PORT@a:	
   435                           ; 1 bytes @ 0x0
   436                           
   437  0020                     ADC_INIT@canal:	
   438                           ; 1 bytes @ 0x0
   439                           
   440  0020                     ADC_CHANNELS@CANAL:	
   441                           ; 2 bytes @ 0x0
   442                           
   443                           
   444                           ; 2 bytes @ 0x0
   445  0020                     	ds	1
   446  0021                     ??_Lcd_Cmd:
   447  0021                     ??_Lcd_Write_Char:	
   448                           ; 1 bytes @ 0x1
   449                           
   450                           
   451                           ; 1 bytes @ 0x1
   452  0021                     	ds	1
   453  0022                     ??_ADC_INIT:
   454  0022                     Lcd_Write_Char@a:	
   455                           ; 1 bytes @ 0x2
   456                           
   457  0022                     ADC_CHANNELS@VALOR_ADC:	
   458                           ; 1 bytes @ 0x2
   459                           
   460                           
   461                           ; 2 bytes @ 0x2
   462  0022                     	ds	1
   463  0023                     ??_setup:
   464  0023                     Lcd_Cmd@a:	
   465                           ; 1 bytes @ 0x3
   466                           
   467  0023                     Lcd_Write_Char@temp:	
   468                           ; 1 bytes @ 0x3
   469                           
   470                           
   471                           ; 1 bytes @ 0x3
   472  0023                     	ds	1
   473  0024                     ??_Lcd_Init:
   474  0024                     ??_Lcd_Clear:	
   475                           ; 1 bytes @ 0x4
   476                           
   477  0024                     ?_Lcd_Set_Cursor:	
   478                           ; 1 bytes @ 0x4
   479                           
   480  0024                     ADC_CHANNELS@VALOR0:	
   481                           ; 1 bytes @ 0x4
   482                           
   483  0024                     Lcd_Write_Char@y:	
   484                           ; 1 bytes @ 0x4
   485                           
   486  0024                     Lcd_Set_Cursor@b:	
   487                           ; 1 bytes @ 0x4
   488                           
   489                           
   490                           ; 1 bytes @ 0x4
   491  0024                     	ds	1
   492  0025                     ??_Lcd_Set_Cursor:
   493  0025                     ??_Lcd_Write_String:	
   494                           ; 1 bytes @ 0x5
   495                           
   496  0025                     ADC_CHANNELS@VALOR1:	
   497                           ; 1 bytes @ 0x5
   498                           
   499  0025                     Lcd_Write_String@i:	
   500                           ; 1 bytes @ 0x5
   501                           
   502                           
   503                           ; 2 bytes @ 0x5
   504  0025                     	ds	1
   505  0026                     ??_ADC_CHANNELS:
   506                           
   507                           ; 1 bytes @ 0x6
   508  0026                     	ds	1
   509  0027                     Lcd_Write_String@a:
   510  0027                     Lcd_Set_Cursor@a:	
   511                           ; 1 bytes @ 0x7
   512                           
   513                           
   514                           ; 1 bytes @ 0x7
   515  0027                     	ds	1
   516  0028                     Lcd_Set_Cursor@z:
   517                           
   518                           ; 1 bytes @ 0x8
   519  0028                     	ds	1
   520  0029                     Lcd_Set_Cursor@y:
   521                           
   522                           ; 1 bytes @ 0x9
   523  0029                     	ds	1
   524  002A                     Lcd_Set_Cursor@temp:
   525                           
   526                           ; 1 bytes @ 0xA
   527  002A                     	ds	1
   528  002B                     ??_main:
   529                           
   530                           ; 1 bytes @ 0xB
   531  002B                     	ds	2
   532                           
   533                           	psect	maintext
   534  001B                     __pmaintext:	
   535 ;;
   536 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   537 ;;
   538 ;; *************** function _main *****************
   539 ;; Defined at:
   540 ;;		line 69 in file "main.c"
   541 ;; Parameters:    Size  Location     Type
   542 ;;		None
   543 ;; Auto vars:     Size  Location     Type
   544 ;;		None
   545 ;; Return value:  Size  Location     Type
   546 ;;                  1    wreg      void 
   547 ;; Registers used:
   548 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   549 ;; Tracked objects:
   550 ;;		On entry : B00/0
   551 ;;		On exit  : 0/0
   552 ;;		Unchanged: 0/0
   553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   554 ;;      Params:         0       0       0       0       0
   555 ;;      Locals:         0       0       0       0       0
   556 ;;      Temps:          0       2       0       0       0
   557 ;;      Totals:         0       2       0       0       0
   558 ;;Total ram usage:        2 bytes
   559 ;; Hardware stack levels required when called:    5
   560 ;; This function calls:
   561 ;;		_ADC_CHANNELS
   562 ;;		_Lcd_Clear
   563 ;;		_Lcd_Init
   564 ;;		_Lcd_Set_Cursor
   565 ;;		_Lcd_Write_String
   566 ;;		_setup
   567 ;; This function is called by:
   568 ;;		Startup code after reset
   569 ;; This function uses a non-reentrant model
   570 ;;
   571                           
   572                           
   573                           ;psect for function _main
   574  001B                     _main:
   575  001B                     l1148:	
   576                           ;incstack = 0
   577                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   578                           
   579                           
   580                           ;main.c: 70:     setup();
   581  001B  120A  118A  21B7  120A  118A  	fcall	_setup
   582                           
   583                           ;main.c: 71:     Lcd_Init();
   584  0020  120A  118A  212D  120A  118A  	fcall	_Lcd_Init
   585                           
   586                           ;main.c: 72:     Lcd_Clear();
   587  0025  120A  118A  229C  120A  118A  	fcall	_Lcd_Clear
   588  002A                     l1150:
   589                           
   590                           ;main.c: 73:     _delay((unsigned long)((20)*(4000000/4000.0)));
   591  002A  301A               	movlw	26
   592  002B  1283               	bcf	3,5	;RP0=0, select bank0
   593  002C  1303               	bcf	3,6	;RP1=0, select bank0
   594  002D  00AC               	movwf	??_main+1
   595  002E  30F7               	movlw	247
   596  002F  00AB               	movwf	??_main
   597  0030                     u317:
   598  0030  0BAB               	decfsz	??_main,f
   599  0031  2830               	goto	u317
   600  0032  0BAC               	decfsz	??_main+1,f
   601  0033  2830               	goto	u317
   602  0034  2835               	nop2
   603  0035                     l1152:
   604                           
   605                           ;main.c: 74:     Lcd_Set_Cursor(1,2);
   606  0035  3002               	movlw	2
   607  0036  1283               	bcf	3,5	;RP0=0, select bank0
   608  0037  1303               	bcf	3,6	;RP1=0, select bank0
   609  0038  00AB               	movwf	??_main
   610  0039  082B               	movf	??_main,w
   611  003A  00A4               	movwf	Lcd_Set_Cursor@b
   612  003B  3001               	movlw	1
   613  003C  120A  118A  2086  120A  118A  	fcall	_Lcd_Set_Cursor
   614                           
   615                           ;main.c: 75:     _delay((unsigned long)((20)*(4000000/4000.0)));
   616  0041  301A               	movlw	26
   617  0042  1283               	bcf	3,5	;RP0=0, select bank0
   618  0043  1303               	bcf	3,6	;RP1=0, select bank0
   619  0044  00AC               	movwf	??_main+1
   620  0045  30F7               	movlw	247
   621  0046  00AB               	movwf	??_main
   622  0047                     u327:
   623  0047  0BAB               	decfsz	??_main,f
   624  0048  2847               	goto	u327
   625  0049  0BAC               	decfsz	??_main+1,f
   626  004A  2847               	goto	u327
   627  004B  284C               	nop2
   628  004C                     l1154:
   629                           
   630                           ;main.c: 76:     Lcd_Write_String("V");
   631  004C  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   632  004D  120A  118A  21E4  120A  118A  	fcall	_Lcd_Write_String
   633  0052                     l1156:
   634                           
   635                           ;main.c: 77:     ADCON0bits.GO = 1;
   636  0052  1283               	bcf	3,5	;RP0=0, select bank0
   637  0053  1303               	bcf	3,6	;RP1=0, select bank0
   638  0054  149F               	bsf	31,1	;volatile
   639  0055                     l1158:
   640                           
   641                           ;main.c: 81:          ADC_CHANNELS(0,VALOR_ADC,&POT0,&POT1);
   642  0055  3000               	movlw	0
   643  0056  1283               	bcf	3,5	;RP0=0, select bank0
   644  0057  1303               	bcf	3,6	;RP1=0, select bank0
   645  0058  00A0               	movwf	ADC_CHANNELS@CANAL
   646  0059  00A1               	movwf	ADC_CHANNELS@CANAL+1
   647  005A  082E               	movf	_VALOR_ADC+1,w
   648  005B  00A3               	movwf	ADC_CHANNELS@VALOR_ADC+1
   649  005C  082D               	movf	_VALOR_ADC,w
   650  005D  00A2               	movwf	ADC_CHANNELS@VALOR_ADC
   651  005E  3031               	movlw	(low (_POT0| 0))& (0+255)
   652  005F  00AB               	movwf	??_main
   653  0060  082B               	movf	??_main,w
   654  0061  00A4               	movwf	ADC_CHANNELS@VALOR0
   655  0062  302F               	movlw	(low (_POT1| 0))& (0+255)
   656  0063  00AC               	movwf	??_main+1
   657  0064  082C               	movf	??_main+1,w
   658  0065  00A5               	movwf	ADC_CHANNELS@VALOR1
   659  0066  120A  118A  20DE  120A  118A  	fcall	_ADC_CHANNELS
   660  006B                     l1160:
   661                           
   662                           ;main.c: 83:          ADC_CHANNELS(1,VALOR_ADC,&POT1,&POT1);
   663  006B  3001               	movlw	1
   664  006C  1283               	bcf	3,5	;RP0=0, select bank0
   665  006D  1303               	bcf	3,6	;RP1=0, select bank0
   666  006E  00A0               	movwf	ADC_CHANNELS@CANAL
   667  006F  3000               	movlw	0
   668  0070  00A1               	movwf	ADC_CHANNELS@CANAL+1
   669  0071  082E               	movf	_VALOR_ADC+1,w
   670  0072  00A3               	movwf	ADC_CHANNELS@VALOR_ADC+1
   671  0073  082D               	movf	_VALOR_ADC,w
   672  0074  00A2               	movwf	ADC_CHANNELS@VALOR_ADC
   673  0075  302F               	movlw	(low (_POT1| 0))& (0+255)
   674  0076  00AB               	movwf	??_main
   675  0077  082B               	movf	??_main,w
   676  0078  00A4               	movwf	ADC_CHANNELS@VALOR0
   677  0079  302F               	movlw	(low (_POT1| 0))& (0+255)
   678  007A  00AC               	movwf	??_main+1
   679  007B  082C               	movf	??_main+1,w
   680  007C  00A5               	movwf	ADC_CHANNELS@VALOR1
   681  007D  120A  118A  20DE  120A  118A  	fcall	_ADC_CHANNELS
   682  0082  2855               	goto	l1158
   683  0083  120A  118A  280C   	ljmp	start
   684  0086                     __end_of_main:
   685                           
   686                           	psect	text1
   687  01B7                     __ptext1:	
   688 ;; *************** function _setup *****************
   689 ;; Defined at:
   690 ;;		line 88 in file "main.c"
   691 ;; Parameters:    Size  Location     Type
   692 ;;		None
   693 ;; Auto vars:     Size  Location     Type
   694 ;;		None
   695 ;; Return value:  Size  Location     Type
   696 ;;                  1    wreg      void 
   697 ;; Registers used:
   698 ;;		wreg, status,2, status,0, pclath, cstack
   699 ;; Tracked objects:
   700 ;;		On entry : 0/0
   701 ;;		On exit  : 0/0
   702 ;;		Unchanged: 0/0
   703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   704 ;;      Params:         0       0       0       0       0
   705 ;;      Locals:         0       0       0       0       0
   706 ;;      Temps:          0       0       0       0       0
   707 ;;      Totals:         0       0       0       0       0
   708 ;;Total ram usage:        0 bytes
   709 ;; Hardware stack levels used:    1
   710 ;; Hardware stack levels required when called:    3
   711 ;; This function calls:
   712 ;;		_ADC_INIT
   713 ;; This function is called by:
   714 ;;		_main
   715 ;; This function uses a non-reentrant model
   716 ;;
   717                           
   718                           
   719                           ;psect for function _setup
   720  01B7                     _setup:
   721  01B7                     l1066:	
   722                           ;incstack = 0
   723                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   724                           
   725                           
   726                           ;main.c: 90:     ANSEL = 0B00000011;
   727  01B7  3003               	movlw	3
   728  01B8  1683               	bsf	3,5	;RP0=1, select bank3
   729  01B9  1703               	bsf	3,6	;RP1=1, select bank3
   730  01BA  0088               	movwf	8	;volatile
   731  01BB                     l1068:
   732                           
   733                           ;main.c: 91:     ANSELH = 0X00;
   734  01BB  0189               	clrf	9	;volatile
   735  01BC                     l1070:
   736                           
   737                           ;main.c: 93:     TRISA = 0B00000011;
   738  01BC  3003               	movlw	3
   739  01BD  1683               	bsf	3,5	;RP0=1, select bank1
   740  01BE  1303               	bcf	3,6	;RP1=0, select bank1
   741  01BF  0085               	movwf	5	;volatile
   742                           
   743                           ;main.c: 94:     TRISC = 0X00;
   744  01C0  0187               	clrf	7	;volatile
   745                           
   746                           ;main.c: 95:     TRISD = 0X00;
   747  01C1  0188               	clrf	8	;volatile
   748                           
   749                           ;main.c: 96:     TRISE = 0X00;
   750  01C2  0189               	clrf	9	;volatile
   751                           
   752                           ;main.c: 97:     TRISB = 0B00000000;
   753  01C3  0186               	clrf	6	;volatile
   754                           
   755                           ;main.c: 99:     PORTA = 0X00;
   756  01C4  1283               	bcf	3,5	;RP0=0, select bank0
   757  01C5  1303               	bcf	3,6	;RP1=0, select bank0
   758  01C6  0185               	clrf	5	;volatile
   759                           
   760                           ;main.c: 100:     PORTB = 0X00;
   761  01C7  0186               	clrf	6	;volatile
   762                           
   763                           ;main.c: 101:     PORTC = 0X00;
   764  01C8  0187               	clrf	7	;volatile
   765                           
   766                           ;main.c: 102:     PORTD = 0X00;
   767  01C9  0188               	clrf	8	;volatile
   768                           
   769                           ;main.c: 103:     PORTE = 0X00;
   770  01CA  0189               	clrf	9	;volatile
   771  01CB                     l1072:
   772                           
   773                           ;main.c: 106:     OSCCONbits.IRCF2 = 1;
   774  01CB  1683               	bsf	3,5	;RP0=1, select bank1
   775  01CC  1303               	bcf	3,6	;RP1=0, select bank1
   776  01CD  170F               	bsf	15,6	;volatile
   777  01CE                     l1074:
   778                           
   779                           ;main.c: 107:     OSCCONbits.IRCF1 = 1;
   780  01CE  168F               	bsf	15,5	;volatile
   781  01CF                     l1076:
   782                           
   783                           ;main.c: 108:     OSCCONbits.IRCF0 = 0;
   784  01CF  120F               	bcf	15,4	;volatile
   785  01D0                     l1078:
   786                           
   787                           ;main.c: 109:     OSCCONbits.SCS = 1;
   788  01D0  140F               	bsf	15,0	;volatile
   789  01D1                     l1080:
   790                           
   791                           ;main.c: 112:     OPTION_REG = 0B01010100;
   792  01D1  3054               	movlw	84
   793  01D2  0081               	movwf	1	;volatile
   794  01D3                     l1082:
   795                           
   796                           ;main.c: 113:     TMR0 = 100;
   797  01D3  3064               	movlw	100
   798  01D4  1283               	bcf	3,5	;RP0=0, select bank0
   799  01D5  1303               	bcf	3,6	;RP1=0, select bank0
   800  01D6  0081               	movwf	1	;volatile
   801  01D7                     l1084:
   802                           
   803                           ;main.c: 115:     ADC_INIT(0);
   804  01D7  3000               	movlw	0
   805  01D8  00A0               	movwf	ADC_INIT@canal
   806  01D9  00A1               	movwf	ADC_INIT@canal+1
   807  01DA  120A  118A  220D  120A  118A  	fcall	_ADC_INIT
   808  01DF                     l1086:
   809                           
   810                           ;main.c: 118:     INTCONbits.GIE = 1;
   811  01DF  178B               	bsf	11,7	;volatile
   812  01E0                     l1088:
   813                           
   814                           ;main.c: 119:     INTCONbits.PEIE = 1;
   815  01E0  170B               	bsf	11,6	;volatile
   816  01E1                     l1090:
   817                           
   818                           ;main.c: 120:     INTCONbits.T0IE = 1;
   819  01E1  168B               	bsf	11,5	;volatile
   820  01E2                     l1092:
   821                           
   822                           ;main.c: 121:     INTCONbits.T0IF = 0;
   823  01E2  110B               	bcf	11,2	;volatile
   824  01E3                     l95:
   825  01E3  0008               	return
   826  01E4                     __end_of_setup:
   827                           
   828                           	psect	text2
   829  020D                     __ptext2:	
   830 ;; *************** function _ADC_INIT *****************
   831 ;; Defined at:
   832 ;;		line 12 in file "./ADC_LIB.h"
   833 ;; Parameters:    Size  Location     Type
   834 ;;  canal           2    0[BANK0 ] unsigned int 
   835 ;; Auto vars:     Size  Location     Type
   836 ;;		None
   837 ;; Return value:  Size  Location     Type
   838 ;;                  1    wreg      void 
   839 ;; Registers used:
   840 ;;		wreg, status,2, status,0
   841 ;; Tracked objects:
   842 ;;		On entry : 0/0
   843 ;;		On exit  : 0/0
   844 ;;		Unchanged: 0/0
   845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   846 ;;      Params:         0       2       0       0       0
   847 ;;      Locals:         0       0       0       0       0
   848 ;;      Temps:          0       1       0       0       0
   849 ;;      Totals:         0       3       0       0       0
   850 ;;Total ram usage:        3 bytes
   851 ;; Hardware stack levels used:    1
   852 ;; Hardware stack levels required when called:    2
   853 ;; This function calls:
   854 ;;		Nothing
   855 ;; This function is called by:
   856 ;;		_setup
   857 ;; This function uses a non-reentrant model
   858 ;;
   859                           
   860                           
   861                           ;psect for function _ADC_INIT
   862  020D                     _ADC_INIT:
   863  020D                     l996:	
   864                           ;incstack = 0
   865                           ; Regs used in _ADC_INIT: [wreg+status,2+status,0]
   866                           
   867                           
   868                           ;./ADC_LIB.h: 14:     ADCON0bits.ADON = 0X01;
   869  020D  1283               	bcf	3,5	;RP0=0, select bank0
   870  020E  1303               	bcf	3,6	;RP1=0, select bank0
   871  020F  141F               	bsf	31,0	;volatile
   872  0210                     l998:
   873                           
   874                           ;./ADC_LIB.h: 15:     ADCON0bits.CHS = canal;
   875  0210  0820               	movf	ADC_INIT@canal,w
   876  0211  00A2               	movwf	??_ADC_INIT
   877  0212  0DA2               	rlf	??_ADC_INIT,f
   878  0213  0DA2               	rlf	??_ADC_INIT,f
   879  0214  081F               	movf	31,w	;volatile
   880  0215  0622               	xorwf	??_ADC_INIT,w
   881  0216  39C3               	andlw	-61
   882  0217  0622               	xorwf	??_ADC_INIT,w
   883  0218  009F               	movwf	31	;volatile
   884  0219                     l1000:
   885                           
   886                           ;./ADC_LIB.h: 16:     _delay((unsigned long)((100)*(4000000/4000000.0)));
   887  0219  3020               	movlw	32
   888  021A  1283               	bcf	3,5	;RP0=0, select bank0
   889  021B  1303               	bcf	3,6	;RP1=0, select bank0
   890  021C  00A2               	movwf	??_ADC_INIT
   891  021D                     u337:
   892  021D  0BA2               	decfsz	??_ADC_INIT,f
   893  021E  2A1D               	goto	u337
   894  021F  0000               	nop
   895  0220                     l1002:
   896                           
   897                           ;./ADC_LIB.h: 17:     ADCON0bits.ADCS = 0X01;
   898  0220  1283               	bcf	3,5	;RP0=0, select bank0
   899  0221  1303               	bcf	3,6	;RP1=0, select bank0
   900  0222  081F               	movf	31,w	;volatile
   901  0223  393F               	andlw	-193
   902  0224  3840               	iorlw	64
   903  0225  009F               	movwf	31	;volatile
   904  0226                     l1004:
   905                           
   906                           ;./ADC_LIB.h: 18:     ADCON1bits.ADFM = 0;
   907  0226  1683               	bsf	3,5	;RP0=1, select bank1
   908  0227  1303               	bcf	3,6	;RP1=0, select bank1
   909  0228  139F               	bcf	31,7	;volatile
   910  0229                     l1006:
   911                           
   912                           ;./ADC_LIB.h: 19:     ADCON1bits.VCFG0 = 0;
   913  0229  121F               	bcf	31,4	;volatile
   914  022A                     l1008:
   915                           
   916                           ;./ADC_LIB.h: 20:     ADCON1bits.VCFG1 = 0;
   917  022A  129F               	bcf	31,5	;volatile
   918  022B                     l1010:
   919                           
   920                           ;./ADC_LIB.h: 21:     PIE1bits.ADIE = 1;
   921  022B  170C               	bsf	12,6	;volatile
   922  022C                     l1012:
   923                           
   924                           ;./ADC_LIB.h: 22:     PIR1bits.ADIF = 0;
   925  022C  1283               	bcf	3,5	;RP0=0, select bank0
   926  022D  1303               	bcf	3,6	;RP1=0, select bank0
   927  022E  130C               	bcf	12,6	;volatile
   928  022F                     l61:
   929  022F  0008               	return
   930  0230                     __end_of_ADC_INIT:
   931                           
   932                           	psect	text3
   933  01E4                     __ptext3:	
   934 ;; *************** function _Lcd_Write_String *****************
   935 ;; Defined at:
   936 ;;		line 89 in file "LCD_LIB.c"
   937 ;; Parameters:    Size  Location     Type
   938 ;;  a               1    wreg     PTR unsigned char 
   939 ;;		 -> STR_1(2), 
   940 ;; Auto vars:     Size  Location     Type
   941 ;;  a               1    7[BANK0 ] PTR unsigned char 
   942 ;;		 -> STR_1(2), 
   943 ;;  i               2    5[BANK0 ] int 
   944 ;; Return value:  Size  Location     Type
   945 ;;                  1    wreg      void 
   946 ;; Registers used:
   947 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   948 ;; Tracked objects:
   949 ;;		On entry : 0/0
   950 ;;		On exit  : 0/0
   951 ;;		Unchanged: 0/0
   952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   953 ;;      Params:         0       0       0       0       0
   954 ;;      Locals:         0       3       0       0       0
   955 ;;      Temps:          0       0       0       0       0
   956 ;;      Totals:         0       3       0       0       0
   957 ;;Total ram usage:        3 bytes
   958 ;; Hardware stack levels used:    1
   959 ;; Hardware stack levels required when called:    4
   960 ;; This function calls:
   961 ;;		_Lcd_Write_Char
   962 ;; This function is called by:
   963 ;;		_main
   964 ;; This function uses a non-reentrant model
   965 ;;
   966                           
   967                           
   968                           ;psect for function _Lcd_Write_String
   969  01E4                     _Lcd_Write_String:
   970                           
   971                           ;incstack = 0
   972                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   973                           ;Lcd_Write_String@a stored from wreg
   974  01E4  1283               	bcf	3,5	;RP0=0, select bank0
   975  01E5  1303               	bcf	3,6	;RP1=0, select bank0
   976  01E6  00A7               	movwf	Lcd_Write_String@a
   977  01E7                     l1126:
   978                           
   979                           ;LCD_LIB.c: 90:     int i;;LCD_LIB.c: 91:     for (i = 0; a[i] != '\0'; i++)
   980  01E7  01A5               	clrf	Lcd_Write_String@i
   981  01E8  01A6               	clrf	Lcd_Write_String@i+1
   982  01E9  29FF               	goto	l1132
   983  01EA                     l1128:
   984                           
   985                           ;LCD_LIB.c: 92:         Lcd_Write_Char(a[i]);
   986  01EA  0825               	movf	Lcd_Write_String@i,w
   987  01EB  0727               	addwf	Lcd_Write_String@a,w
   988  01EC  0084               	movwf	4
   989  01ED  120A  118A  22A9  120A  118A  	fcall	stringdir
   990  01F2  120A  118A  2252  120A  118A  	fcall	_Lcd_Write_Char
   991  01F7                     l1130:
   992  01F7  3001               	movlw	1
   993  01F8  1283               	bcf	3,5	;RP0=0, select bank0
   994  01F9  1303               	bcf	3,6	;RP1=0, select bank0
   995  01FA  07A5               	addwf	Lcd_Write_String@i,f
   996  01FB  1803               	skipnc
   997  01FC  0AA6               	incf	Lcd_Write_String@i+1,f
   998  01FD  3000               	movlw	0
   999  01FE  07A6               	addwf	Lcd_Write_String@i+1,f
  1000  01FF                     l1132:
  1001  01FF  0825               	movf	Lcd_Write_String@i,w
  1002  0200  0727               	addwf	Lcd_Write_String@a,w
  1003  0201  0084               	movwf	4
  1004  0202  120A  118A  22A9  120A  118A  	fcall	stringdir
  1005  0207  3A00               	xorlw	0
  1006  0208  1D03               	skipz
  1007  0209  2A0B               	goto	u281
  1008  020A  2A0C               	goto	u280
  1009  020B                     u281:
  1010  020B  29EA               	goto	l1128
  1011  020C                     u280:
  1012  020C                     l154:
  1013  020C  0008               	return
  1014  020D                     __end_of_Lcd_Write_String:
  1015                           
  1016                           	psect	text4
  1017  0252                     __ptext4:	
  1018 ;; *************** function _Lcd_Write_Char *****************
  1019 ;; Defined at:
  1020 ;;		line 77 in file "LCD_LIB.c"
  1021 ;; Parameters:    Size  Location     Type
  1022 ;;  a               1    wreg     unsigned char 
  1023 ;; Auto vars:     Size  Location     Type
  1024 ;;  a               1    2[BANK0 ] unsigned char 
  1025 ;;  y               1    4[BANK0 ] unsigned char 
  1026 ;;  temp            1    3[BANK0 ] unsigned char 
  1027 ;; Return value:  Size  Location     Type
  1028 ;;                  1    wreg      void 
  1029 ;; Registers used:
  1030 ;;		wreg, status,2, status,0, pclath, cstack
  1031 ;; Tracked objects:
  1032 ;;		On entry : 0/0
  1033 ;;		On exit  : 0/0
  1034 ;;		Unchanged: 0/0
  1035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1036 ;;      Params:         0       0       0       0       0
  1037 ;;      Locals:         0       3       0       0       0
  1038 ;;      Temps:          0       1       0       0       0
  1039 ;;      Totals:         0       4       0       0       0
  1040 ;;Total ram usage:        4 bytes
  1041 ;; Hardware stack levels used:    1
  1042 ;; Hardware stack levels required when called:    3
  1043 ;; This function calls:
  1044 ;;		_LCD_PORT
  1045 ;; This function is called by:
  1046 ;;		_Lcd_Write_String
  1047 ;; This function uses a non-reentrant model
  1048 ;;
  1049                           
  1050                           
  1051                           ;psect for function _Lcd_Write_Char
  1052  0252                     _Lcd_Write_Char:
  1053                           
  1054                           ;incstack = 0
  1055                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1056                           ;Lcd_Write_Char@a stored from wreg
  1057  0252  1283               	bcf	3,5	;RP0=0, select bank0
  1058  0253  1303               	bcf	3,6	;RP1=0, select bank0
  1059  0254  00A2               	movwf	Lcd_Write_Char@a
  1060  0255                     l1024:
  1061                           
  1062                           ;LCD_LIB.c: 79:     char temp, y;;LCD_LIB.c: 80:     temp = a;
  1063  0255  0822               	movf	Lcd_Write_Char@a,w
  1064  0256  00A1               	movwf	??_Lcd_Write_Char
  1065  0257  0821               	movf	??_Lcd_Write_Char,w
  1066  0258  00A3               	movwf	Lcd_Write_Char@temp
  1067                           
  1068                           ;LCD_LIB.c: 81:     y = temp;
  1069  0259  0823               	movf	Lcd_Write_Char@temp,w
  1070  025A  00A1               	movwf	??_Lcd_Write_Char
  1071  025B  0821               	movf	??_Lcd_Write_Char,w
  1072  025C  00A4               	movwf	Lcd_Write_Char@y
  1073  025D                     l1026:
  1074                           
  1075                           ;LCD_LIB.c: 82:     RB2 = 1;
  1076  025D  1506               	bsf	6,2	;volatile
  1077  025E                     l1028:
  1078                           
  1079                           ;LCD_LIB.c: 83:     LCD_PORT(y);
  1080  025E  0824               	movf	Lcd_Write_Char@y,w
  1081  025F  120A  118A  217B  120A  118A  	fcall	_LCD_PORT
  1082  0264                     l1030:
  1083                           
  1084                           ;LCD_LIB.c: 84:     RB3 = 1;
  1085  0264  1283               	bcf	3,5	;RP0=0, select bank0
  1086  0265  1303               	bcf	3,6	;RP1=0, select bank0
  1087  0266  1586               	bsf	6,3	;volatile
  1088  0267                     l1032:
  1089                           
  1090                           ;LCD_LIB.c: 85:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  1091  0267  300C               	movlw	12
  1092  0268  1283               	bcf	3,5	;RP0=0, select bank0
  1093  0269  1303               	bcf	3,6	;RP1=0, select bank0
  1094  026A  00A1               	movwf	??_Lcd_Write_Char
  1095  026B                     u347:
  1096  026B  0BA1               	decfsz	??_Lcd_Write_Char,f
  1097  026C  2A6B               	goto	u347
  1098  026D  0000               	nop
  1099  026E                     l1034:
  1100                           
  1101                           ;LCD_LIB.c: 86:     RB3 = 0;
  1102  026E  1283               	bcf	3,5	;RP0=0, select bank0
  1103  026F  1303               	bcf	3,6	;RP1=0, select bank0
  1104  0270  1186               	bcf	6,3	;volatile
  1105  0271                     l148:
  1106  0271  0008               	return
  1107  0272                     __end_of_Lcd_Write_Char:
  1108                           
  1109                           	psect	text5
  1110  0086                     __ptext5:	
  1111 ;; *************** function _Lcd_Set_Cursor *****************
  1112 ;; Defined at:
  1113 ;;		line 95 in file "LCD_LIB.c"
  1114 ;; Parameters:    Size  Location     Type
  1115 ;;  a               1    wreg     unsigned char 
  1116 ;;  b               1    4[BANK0 ] unsigned char 
  1117 ;; Auto vars:     Size  Location     Type
  1118 ;;  a               1    7[BANK0 ] unsigned char 
  1119 ;;  temp            1   10[BANK0 ] unsigned char 
  1120 ;;  y               1    9[BANK0 ] unsigned char 
  1121 ;;  z               1    8[BANK0 ] unsigned char 
  1122 ;; Return value:  Size  Location     Type
  1123 ;;                  1    wreg      void 
  1124 ;; Registers used:
  1125 ;;		wreg, status,2, status,0, pclath, cstack
  1126 ;; Tracked objects:
  1127 ;;		On entry : 0/0
  1128 ;;		On exit  : 0/0
  1129 ;;		Unchanged: 0/0
  1130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1131 ;;      Params:         0       1       0       0       0
  1132 ;;      Locals:         0       4       0       0       0
  1133 ;;      Temps:          0       2       0       0       0
  1134 ;;      Totals:         0       7       0       0       0
  1135 ;;Total ram usage:        7 bytes
  1136 ;; Hardware stack levels used:    1
  1137 ;; Hardware stack levels required when called:    4
  1138 ;; This function calls:
  1139 ;;		_Lcd_Cmd
  1140 ;; This function is called by:
  1141 ;;		_main
  1142 ;; This function uses a non-reentrant model
  1143 ;;
  1144                           
  1145                           
  1146                           ;psect for function _Lcd_Set_Cursor
  1147  0086                     _Lcd_Set_Cursor:
  1148                           
  1149                           ;incstack = 0
  1150                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1151                           ;Lcd_Set_Cursor@a stored from wreg
  1152  0086  1283               	bcf	3,5	;RP0=0, select bank0
  1153  0087  1303               	bcf	3,6	;RP1=0, select bank0
  1154  0088  00A7               	movwf	Lcd_Set_Cursor@a
  1155  0089                     l1106:
  1156                           
  1157                           ;LCD_LIB.c: 96: char temp, z, y;;LCD_LIB.c: 97:     if (a == 1) {
  1158  0089  0327               	decf	Lcd_Set_Cursor@a,w
  1159  008A  1D03               	btfss	3,2
  1160  008B  288D               	goto	u241
  1161  008C  288E               	goto	u240
  1162  008D                     u241:
  1163  008D  28B3               	goto	l1116
  1164  008E                     u240:
  1165  008E                     l1108:
  1166                           
  1167                           ;LCD_LIB.c: 98:         temp = 0x80 + b - 1;
  1168  008E  0824               	movf	Lcd_Set_Cursor@b,w
  1169  008F  3E7F               	addlw	127
  1170  0090  00A5               	movwf	??_Lcd_Set_Cursor
  1171  0091  0825               	movf	??_Lcd_Set_Cursor,w
  1172  0092  00AA               	movwf	Lcd_Set_Cursor@temp
  1173                           
  1174                           ;LCD_LIB.c: 99:         z = temp >> 4;
  1175  0093  082A               	movf	Lcd_Set_Cursor@temp,w
  1176  0094  00A5               	movwf	??_Lcd_Set_Cursor
  1177  0095  3004               	movlw	4
  1178  0096                     u255:
  1179  0096  1003               	clrc
  1180  0097  0CA5               	rrf	??_Lcd_Set_Cursor,f
  1181  0098  3EFF               	addlw	-1
  1182  0099  1D03               	skipz
  1183  009A  2896               	goto	u255
  1184  009B  0825               	movf	??_Lcd_Set_Cursor,w
  1185  009C  00A6               	movwf	??_Lcd_Set_Cursor+1
  1186  009D  0826               	movf	??_Lcd_Set_Cursor+1,w
  1187  009E  00A8               	movwf	Lcd_Set_Cursor@z
  1188  009F                     l1110:
  1189                           
  1190                           ;LCD_LIB.c: 100:         y = temp & 0x0F;
  1191  009F  082A               	movf	Lcd_Set_Cursor@temp,w
  1192  00A0  390F               	andlw	15
  1193  00A1  00A5               	movwf	??_Lcd_Set_Cursor
  1194  00A2  0825               	movf	??_Lcd_Set_Cursor,w
  1195  00A3  00A9               	movwf	Lcd_Set_Cursor@y
  1196  00A4                     l1112:
  1197                           
  1198                           ;LCD_LIB.c: 101:         Lcd_Cmd(z);
  1199  00A4  0828               	movf	Lcd_Set_Cursor@z,w
  1200  00A5  120A  118A  2272  120A  118A  	fcall	_Lcd_Cmd
  1201  00AA                     l1114:
  1202                           
  1203                           ;LCD_LIB.c: 103:         Lcd_Cmd(y);
  1204  00AA  1283               	bcf	3,5	;RP0=0, select bank0
  1205  00AB  1303               	bcf	3,6	;RP1=0, select bank0
  1206  00AC  0829               	movf	Lcd_Set_Cursor@y,w
  1207  00AD  120A  118A  2272  120A  118A  	fcall	_Lcd_Cmd
  1208                           
  1209                           ;LCD_LIB.c: 104:     } else if (a == 2) {
  1210  00B2  28DD               	goto	l160
  1211  00B3                     l1116:
  1212  00B3  3002               	movlw	2
  1213  00B4  0627               	xorwf	Lcd_Set_Cursor@a,w
  1214  00B5  1D03               	btfss	3,2
  1215  00B6  28B8               	goto	u261
  1216  00B7  28B9               	goto	u260
  1217  00B8                     u261:
  1218  00B8  28DD               	goto	l160
  1219  00B9                     u260:
  1220  00B9                     l1118:
  1221                           
  1222                           ;LCD_LIB.c: 105:         temp = 0xC0 + b - 1;
  1223  00B9  0824               	movf	Lcd_Set_Cursor@b,w
  1224  00BA  3EBF               	addlw	191
  1225  00BB  00A5               	movwf	??_Lcd_Set_Cursor
  1226  00BC  0825               	movf	??_Lcd_Set_Cursor,w
  1227  00BD  00AA               	movwf	Lcd_Set_Cursor@temp
  1228                           
  1229                           ;LCD_LIB.c: 106:         z = temp >> 4;
  1230  00BE  082A               	movf	Lcd_Set_Cursor@temp,w
  1231  00BF  00A5               	movwf	??_Lcd_Set_Cursor
  1232  00C0  3004               	movlw	4
  1233  00C1                     u275:
  1234  00C1  1003               	clrc
  1235  00C2  0CA5               	rrf	??_Lcd_Set_Cursor,f
  1236  00C3  3EFF               	addlw	-1
  1237  00C4  1D03               	skipz
  1238  00C5  28C1               	goto	u275
  1239  00C6  0825               	movf	??_Lcd_Set_Cursor,w
  1240  00C7  00A6               	movwf	??_Lcd_Set_Cursor+1
  1241  00C8  0826               	movf	??_Lcd_Set_Cursor+1,w
  1242  00C9  00A8               	movwf	Lcd_Set_Cursor@z
  1243  00CA                     l1120:
  1244                           
  1245                           ;LCD_LIB.c: 107:         y = temp & 0xF0;
  1246  00CA  082A               	movf	Lcd_Set_Cursor@temp,w
  1247  00CB  39F0               	andlw	240
  1248  00CC  00A5               	movwf	??_Lcd_Set_Cursor
  1249  00CD  0825               	movf	??_Lcd_Set_Cursor,w
  1250  00CE  00A9               	movwf	Lcd_Set_Cursor@y
  1251  00CF                     l1122:
  1252                           
  1253                           ;LCD_LIB.c: 108:         Lcd_Cmd(z);
  1254  00CF  0828               	movf	Lcd_Set_Cursor@z,w
  1255  00D0  120A  118A  2272  120A  118A  	fcall	_Lcd_Cmd
  1256  00D5                     l1124:
  1257                           
  1258                           ;LCD_LIB.c: 109:         Lcd_Cmd(y);
  1259  00D5  1283               	bcf	3,5	;RP0=0, select bank0
  1260  00D6  1303               	bcf	3,6	;RP1=0, select bank0
  1261  00D7  0829               	movf	Lcd_Set_Cursor@y,w
  1262  00D8  120A  118A  2272  120A  118A  	fcall	_Lcd_Cmd
  1263  00DD                     l160:
  1264  00DD  0008               	return
  1265  00DE                     __end_of_Lcd_Set_Cursor:
  1266                           
  1267                           	psect	text6
  1268  012D                     __ptext6:	
  1269 ;; *************** function _Lcd_Init *****************
  1270 ;; Defined at:
  1271 ;;		line 61 in file "LCD_LIB.c"
  1272 ;; Parameters:    Size  Location     Type
  1273 ;;		None
  1274 ;; Auto vars:     Size  Location     Type
  1275 ;;		None
  1276 ;; Return value:  Size  Location     Type
  1277 ;;                  1    wreg      void 
  1278 ;; Registers used:
  1279 ;;		wreg, status,2, status,0, pclath, cstack
  1280 ;; Tracked objects:
  1281 ;;		On entry : 0/0
  1282 ;;		On exit  : 0/0
  1283 ;;		Unchanged: 0/0
  1284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1285 ;;      Params:         0       0       0       0       0
  1286 ;;      Locals:         0       0       0       0       0
  1287 ;;      Temps:          0       2       0       0       0
  1288 ;;      Totals:         0       2       0       0       0
  1289 ;;Total ram usage:        2 bytes
  1290 ;; Hardware stack levels used:    1
  1291 ;; Hardware stack levels required when called:    4
  1292 ;; This function calls:
  1293 ;;		_LCD_PORT
  1294 ;;		_Lcd_Cmd
  1295 ;; This function is called by:
  1296 ;;		_main
  1297 ;; This function uses a non-reentrant model
  1298 ;;
  1299                           
  1300                           
  1301                           ;psect for function _Lcd_Init
  1302  012D                     _Lcd_Init:
  1303  012D                     l1094:	
  1304                           ;incstack = 0
  1305                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1306                           
  1307                           
  1308                           ;LCD_LIB.c: 62:     LCD_PORT(0x00);
  1309  012D  3000               	movlw	0
  1310  012E  120A  118A  217B  120A  118A  	fcall	_LCD_PORT
  1311  0133                     l1096:
  1312                           
  1313                           ;LCD_LIB.c: 63:     _delay((unsigned long)((20)*(4000000/4000.0)));
  1314  0133  301A               	movlw	26
  1315  0134  1283               	bcf	3,5	;RP0=0, select bank0
  1316  0135  1303               	bcf	3,6	;RP1=0, select bank0
  1317  0136  00A5               	movwf	??_Lcd_Init+1
  1318  0137  30F7               	movlw	247
  1319  0138  00A4               	movwf	??_Lcd_Init
  1320  0139                     u357:
  1321  0139  0BA4               	decfsz	??_Lcd_Init,f
  1322  013A  2939               	goto	u357
  1323  013B  0BA5               	decfsz	??_Lcd_Init+1,f
  1324  013C  2939               	goto	u357
  1325  013D  293E               	nop2
  1326  013E                     l1098:
  1327                           
  1328                           ;LCD_LIB.c: 64:     Lcd_Cmd(0x30);
  1329  013E  3030               	movlw	48
  1330  013F  120A  118A  2272  120A  118A  	fcall	_Lcd_Cmd
  1331                           
  1332                           ;LCD_LIB.c: 65:     _delay((unsigned long)((5)*(4000000/4000.0)));
  1333  0144  3007               	movlw	7
  1334  0145  1283               	bcf	3,5	;RP0=0, select bank0
  1335  0146  1303               	bcf	3,6	;RP1=0, select bank0
  1336  0147  00A5               	movwf	??_Lcd_Init+1
  1337  0148  307C               	movlw	124
  1338  0149  00A4               	movwf	??_Lcd_Init
  1339  014A                     u367:
  1340  014A  0BA4               	decfsz	??_Lcd_Init,f
  1341  014B  294A               	goto	u367
  1342  014C  0BA5               	decfsz	??_Lcd_Init+1,f
  1343  014D  294A               	goto	u367
  1344  014E  0000               	nop
  1345  014F                     l1100:
  1346                           
  1347                           ;LCD_LIB.c: 66:     Lcd_Cmd(0x30);
  1348  014F  3030               	movlw	48
  1349  0150  120A  118A  2272  120A  118A  	fcall	_Lcd_Cmd
  1350  0155                     l1102:
  1351                           
  1352                           ;LCD_LIB.c: 67:     _delay((unsigned long)((200)*(4000000/4000000.0)));
  1353  0155  3041               	movlw	65
  1354  0156  1283               	bcf	3,5	;RP0=0, select bank0
  1355  0157  1303               	bcf	3,6	;RP1=0, select bank0
  1356  0158  00A4               	movwf	??_Lcd_Init
  1357  0159                     u377:
  1358  0159  0BA4               	decfsz	??_Lcd_Init,f
  1359  015A  2959               	goto	u377
  1360  015B  295C               	nop2
  1361                           
  1362                           ;LCD_LIB.c: 68:     Lcd_Cmd(0x30);
  1363  015C  3030               	movlw	48
  1364  015D  120A  118A  2272  120A  118A  	fcall	_Lcd_Cmd
  1365                           
  1366                           ;LCD_LIB.c: 70:     Lcd_Cmd(0x3C);
  1367  0162  303C               	movlw	60
  1368  0163  120A  118A  2272  120A  118A  	fcall	_Lcd_Cmd
  1369                           
  1370                           ;LCD_LIB.c: 71:     Lcd_Cmd(0x08);
  1371  0168  3008               	movlw	8
  1372  0169  120A  118A  2272  120A  118A  	fcall	_Lcd_Cmd
  1373                           
  1374                           ;LCD_LIB.c: 72:     Lcd_Cmd(0x01);
  1375  016E  3001               	movlw	1
  1376  016F  120A  118A  2272  120A  118A  	fcall	_Lcd_Cmd
  1377                           
  1378                           ;LCD_LIB.c: 73:     Lcd_Cmd(0x06);
  1379  0174  3006               	movlw	6
  1380  0175  120A  118A  2272  120A  118A  	fcall	_Lcd_Cmd
  1381  017A                     l145:
  1382  017A  0008               	return
  1383  017B                     __end_of_Lcd_Init:
  1384                           
  1385                           	psect	text7
  1386  029C                     __ptext7:	
  1387 ;; *************** function _Lcd_Clear *****************
  1388 ;; Defined at:
  1389 ;;		line 56 in file "LCD_LIB.c"
  1390 ;; Parameters:    Size  Location     Type
  1391 ;;		None
  1392 ;; Auto vars:     Size  Location     Type
  1393 ;;		None
  1394 ;; Return value:  Size  Location     Type
  1395 ;;                  1    wreg      void 
  1396 ;; Registers used:
  1397 ;;		wreg, status,2, status,0, pclath, cstack
  1398 ;; Tracked objects:
  1399 ;;		On entry : 0/0
  1400 ;;		On exit  : 0/0
  1401 ;;		Unchanged: 0/0
  1402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1403 ;;      Params:         0       0       0       0       0
  1404 ;;      Locals:         0       0       0       0       0
  1405 ;;      Temps:          0       0       0       0       0
  1406 ;;      Totals:         0       0       0       0       0
  1407 ;;Total ram usage:        0 bytes
  1408 ;; Hardware stack levels used:    1
  1409 ;; Hardware stack levels required when called:    4
  1410 ;; This function calls:
  1411 ;;		_Lcd_Cmd
  1412 ;; This function is called by:
  1413 ;;		_main
  1414 ;; This function uses a non-reentrant model
  1415 ;;
  1416                           
  1417                           
  1418                           ;psect for function _Lcd_Clear
  1419  029C                     _Lcd_Clear:
  1420  029C                     l1104:	
  1421                           ;incstack = 0
  1422                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  1423                           
  1424                           
  1425                           ;LCD_LIB.c: 57:     Lcd_Cmd(0);
  1426  029C  3000               	movlw	0
  1427  029D  120A  118A  2272  120A  118A  	fcall	_Lcd_Cmd
  1428                           
  1429                           ;LCD_LIB.c: 58:     Lcd_Cmd(1);
  1430  02A2  3001               	movlw	1
  1431  02A3  120A  118A  2272  120A  118A  	fcall	_Lcd_Cmd
  1432  02A8                     l142:
  1433  02A8  0008               	return
  1434  02A9                     __end_of_Lcd_Clear:
  1435                           
  1436                           	psect	text8
  1437  0272                     __ptext8:	
  1438 ;; *************** function _Lcd_Cmd *****************
  1439 ;; Defined at:
  1440 ;;		line 49 in file "LCD_LIB.c"
  1441 ;; Parameters:    Size  Location     Type
  1442 ;;  a               1    wreg     unsigned char 
  1443 ;; Auto vars:     Size  Location     Type
  1444 ;;  a               1    3[BANK0 ] unsigned char 
  1445 ;; Return value:  Size  Location     Type
  1446 ;;                  1    wreg      void 
  1447 ;; Registers used:
  1448 ;;		wreg, status,2, status,0, pclath, cstack
  1449 ;; Tracked objects:
  1450 ;;		On entry : 0/0
  1451 ;;		On exit  : 0/0
  1452 ;;		Unchanged: 0/0
  1453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1454 ;;      Params:         0       0       0       0       0
  1455 ;;      Locals:         0       1       0       0       0
  1456 ;;      Temps:          0       2       0       0       0
  1457 ;;      Totals:         0       3       0       0       0
  1458 ;;Total ram usage:        3 bytes
  1459 ;; Hardware stack levels used:    1
  1460 ;; Hardware stack levels required when called:    3
  1461 ;; This function calls:
  1462 ;;		_LCD_PORT
  1463 ;; This function is called by:
  1464 ;;		_Lcd_Clear
  1465 ;;		_Lcd_Init
  1466 ;;		_Lcd_Set_Cursor
  1467 ;;		_Lcd_Shift_Right
  1468 ;;		_Lcd_Shift_Left
  1469 ;; This function uses a non-reentrant model
  1470 ;;
  1471                           
  1472                           
  1473                           ;psect for function _Lcd_Cmd
  1474  0272                     _Lcd_Cmd:
  1475                           
  1476                           ;incstack = 0
  1477                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  1478                           ;Lcd_Cmd@a stored from wreg
  1479  0272  1283               	bcf	3,5	;RP0=0, select bank0
  1480  0273  1303               	bcf	3,6	;RP1=0, select bank0
  1481  0274  00A3               	movwf	Lcd_Cmd@a
  1482  0275                     l1014:
  1483                           
  1484                           ;LCD_LIB.c: 50:     RB2 = 0;
  1485  0275  1106               	bcf	6,2	;volatile
  1486  0276                     l1016:
  1487                           
  1488                           ;LCD_LIB.c: 51:     LCD_PORT(a);
  1489  0276  0823               	movf	Lcd_Cmd@a,w
  1490  0277  120A  118A  217B  120A  118A  	fcall	_LCD_PORT
  1491  027C                     l1018:
  1492                           
  1493                           ;LCD_LIB.c: 52:     RB3 = 1;
  1494  027C  1283               	bcf	3,5	;RP0=0, select bank0
  1495  027D  1303               	bcf	3,6	;RP1=0, select bank0
  1496  027E  1586               	bsf	6,3	;volatile
  1497  027F                     l1020:
  1498                           
  1499                           ;LCD_LIB.c: 53:     _delay((unsigned long)((4)*(4000000/4000.0)));
  1500  027F  3006               	movlw	6
  1501  0280  1283               	bcf	3,5	;RP0=0, select bank0
  1502  0281  1303               	bcf	3,6	;RP1=0, select bank0
  1503  0282  00A2               	movwf	??_Lcd_Cmd+1
  1504  0283  302F               	movlw	47
  1505  0284  00A1               	movwf	??_Lcd_Cmd
  1506  0285                     u387:
  1507  0285  0BA1               	decfsz	??_Lcd_Cmd,f
  1508  0286  2A85               	goto	u387
  1509  0287  0BA2               	decfsz	??_Lcd_Cmd+1,f
  1510  0288  2A85               	goto	u387
  1511  0289  2A8A               	nop2
  1512  028A                     l1022:
  1513                           
  1514                           ;LCD_LIB.c: 54:     RB3 = 0;
  1515  028A  1283               	bcf	3,5	;RP0=0, select bank0
  1516  028B  1303               	bcf	3,6	;RP1=0, select bank0
  1517  028C  1186               	bcf	6,3	;volatile
  1518  028D                     l139:
  1519  028D  0008               	return
  1520  028E                     __end_of_Lcd_Cmd:
  1521                           
  1522                           	psect	text9
  1523  017B                     __ptext9:	
  1524 ;; *************** function _LCD_PORT *****************
  1525 ;; Defined at:
  1526 ;;		line 15 in file "LCD_LIB.c"
  1527 ;; Parameters:    Size  Location     Type
  1528 ;;  a               1    wreg     unsigned char 
  1529 ;; Auto vars:     Size  Location     Type
  1530 ;;  a               1    0[BANK0 ] unsigned char 
  1531 ;; Return value:  Size  Location     Type
  1532 ;;                  1    wreg      void 
  1533 ;; Registers used:
  1534 ;;		wreg
  1535 ;; Tracked objects:
  1536 ;;		On entry : 0/0
  1537 ;;		On exit  : 0/0
  1538 ;;		Unchanged: 0/0
  1539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1540 ;;      Params:         0       0       0       0       0
  1541 ;;      Locals:         0       1       0       0       0
  1542 ;;      Temps:          0       0       0       0       0
  1543 ;;      Totals:         0       1       0       0       0
  1544 ;;Total ram usage:        1 bytes
  1545 ;; Hardware stack levels used:    1
  1546 ;; Hardware stack levels required when called:    2
  1547 ;; This function calls:
  1548 ;;		Nothing
  1549 ;; This function is called by:
  1550 ;;		_Lcd_Cmd
  1551 ;;		_Lcd_Init
  1552 ;;		_Lcd_Write_Char
  1553 ;; This function uses a non-reentrant model
  1554 ;;
  1555                           
  1556                           
  1557                           ;psect for function _LCD_PORT
  1558  017B                     _LCD_PORT:
  1559                           
  1560                           ;incstack = 0
  1561                           ; Regs used in _LCD_PORT: [wreg]
  1562                           ;LCD_PORT@a stored from wreg
  1563  017B  1283               	bcf	3,5	;RP0=0, select bank0
  1564  017C  1303               	bcf	3,6	;RP1=0, select bank0
  1565  017D  00A0               	movwf	LCD_PORT@a
  1566  017E                     l978:
  1567                           
  1568                           ;LCD_LIB.c: 16:     if (a & 1){
  1569  017E  1C20               	btfss	LCD_PORT@a,0
  1570  017F  2981               	goto	u161
  1571  0180  2982               	goto	u160
  1572  0181                     u161:
  1573  0181  2984               	goto	l120
  1574  0182                     u160:
  1575  0182                     l980:
  1576                           
  1577                           ;LCD_LIB.c: 17:         RD0 = 1;}
  1578  0182  1408               	bsf	8,0	;volatile
  1579  0183  2985               	goto	l121
  1580  0184                     l120:	
  1581                           ;LCD_LIB.c: 18:     else {
  1582                           
  1583                           
  1584                           ;LCD_LIB.c: 19:         RD0 = 0;}
  1585  0184  1008               	bcf	8,0	;volatile
  1586  0185                     l121:
  1587                           
  1588                           ;LCD_LIB.c: 20:     if (a & 2){
  1589  0185  1CA0               	btfss	LCD_PORT@a,1
  1590  0186  2988               	goto	u171
  1591  0187  2989               	goto	u170
  1592  0188                     u171:
  1593  0188  298B               	goto	l122
  1594  0189                     u170:
  1595  0189                     l982:
  1596                           
  1597                           ;LCD_LIB.c: 21:         RD1 = 1;}
  1598  0189  1488               	bsf	8,1	;volatile
  1599  018A  298C               	goto	l123
  1600  018B                     l122:	
  1601                           ;LCD_LIB.c: 22:     else {
  1602                           
  1603                           
  1604                           ;LCD_LIB.c: 23:         RD1 = 0;}
  1605  018B  1088               	bcf	8,1	;volatile
  1606  018C                     l123:
  1607                           
  1608                           ;LCD_LIB.c: 24:     if (a & 4){
  1609  018C  1D20               	btfss	LCD_PORT@a,2
  1610  018D  298F               	goto	u181
  1611  018E  2990               	goto	u180
  1612  018F                     u181:
  1613  018F  2992               	goto	l124
  1614  0190                     u180:
  1615  0190                     l984:
  1616                           
  1617                           ;LCD_LIB.c: 25:         RD2 = 1;}
  1618  0190  1508               	bsf	8,2	;volatile
  1619  0191  2993               	goto	l125
  1620  0192                     l124:	
  1621                           ;LCD_LIB.c: 26:     else {
  1622                           
  1623                           
  1624                           ;LCD_LIB.c: 27:         RD2 = 0;}
  1625  0192  1108               	bcf	8,2	;volatile
  1626  0193                     l125:
  1627                           
  1628                           ;LCD_LIB.c: 28:     if (a & 8){
  1629  0193  1DA0               	btfss	LCD_PORT@a,3
  1630  0194  2996               	goto	u191
  1631  0195  2997               	goto	u190
  1632  0196                     u191:
  1633  0196  2999               	goto	l126
  1634  0197                     u190:
  1635  0197                     l986:
  1636                           
  1637                           ;LCD_LIB.c: 29:         RD3 = 1;}
  1638  0197  1588               	bsf	8,3	;volatile
  1639  0198  299A               	goto	l127
  1640  0199                     l126:	
  1641                           ;LCD_LIB.c: 30:     else {
  1642                           
  1643                           
  1644                           ;LCD_LIB.c: 31:         RD3 = 0;}
  1645  0199  1188               	bcf	8,3	;volatile
  1646  019A                     l127:
  1647                           
  1648                           ;LCD_LIB.c: 32:     if (a & 16){
  1649  019A  1E20               	btfss	LCD_PORT@a,4
  1650  019B  299D               	goto	u201
  1651  019C  299E               	goto	u200
  1652  019D                     u201:
  1653  019D  29A0               	goto	l128
  1654  019E                     u200:
  1655  019E                     l988:
  1656                           
  1657                           ;LCD_LIB.c: 33:         RD4 = 1;}
  1658  019E  1608               	bsf	8,4	;volatile
  1659  019F  29A1               	goto	l129
  1660  01A0                     l128:	
  1661                           ;LCD_LIB.c: 34:     else {
  1662                           
  1663                           
  1664                           ;LCD_LIB.c: 35:         RD4 = 0;}
  1665  01A0  1208               	bcf	8,4	;volatile
  1666  01A1                     l129:
  1667                           
  1668                           ;LCD_LIB.c: 36:     if (a & 32){
  1669  01A1  1EA0               	btfss	LCD_PORT@a,5
  1670  01A2  29A4               	goto	u211
  1671  01A3  29A5               	goto	u210
  1672  01A4                     u211:
  1673  01A4  29A7               	goto	l130
  1674  01A5                     u210:
  1675  01A5                     l990:
  1676                           
  1677                           ;LCD_LIB.c: 37:         RD5 = 1;}
  1678  01A5  1688               	bsf	8,5	;volatile
  1679  01A6  29A8               	goto	l131
  1680  01A7                     l130:	
  1681                           ;LCD_LIB.c: 38:     else {
  1682                           
  1683                           
  1684                           ;LCD_LIB.c: 39:         RD5 = 0;}
  1685  01A7  1288               	bcf	8,5	;volatile
  1686  01A8                     l131:
  1687                           
  1688                           ;LCD_LIB.c: 40:     if (a & 64){
  1689  01A8  1F20               	btfss	LCD_PORT@a,6
  1690  01A9  29AB               	goto	u221
  1691  01AA  29AC               	goto	u220
  1692  01AB                     u221:
  1693  01AB  29AE               	goto	l132
  1694  01AC                     u220:
  1695  01AC                     l992:
  1696                           
  1697                           ;LCD_LIB.c: 41:         RD6 = 1;}
  1698  01AC  1708               	bsf	8,6	;volatile
  1699  01AD  29AF               	goto	l133
  1700  01AE                     l132:	
  1701                           ;LCD_LIB.c: 42:     else {
  1702                           
  1703                           
  1704                           ;LCD_LIB.c: 43:         RD6 = 0;}
  1705  01AE  1308               	bcf	8,6	;volatile
  1706  01AF                     l133:
  1707                           
  1708                           ;LCD_LIB.c: 44:     if (a & 128){
  1709  01AF  1FA0               	btfss	LCD_PORT@a,7
  1710  01B0  29B2               	goto	u231
  1711  01B1  29B3               	goto	u230
  1712  01B2                     u231:
  1713  01B2  29B5               	goto	l134
  1714  01B3                     u230:
  1715  01B3                     l994:
  1716                           
  1717                           ;LCD_LIB.c: 45:         RD7 = 1;}
  1718  01B3  1788               	bsf	8,7	;volatile
  1719  01B4  29B6               	goto	l136
  1720  01B5                     l134:	
  1721                           ;LCD_LIB.c: 46:     else {
  1722                           
  1723                           
  1724                           ;LCD_LIB.c: 47:         RD7 = 0;}
  1725  01B5  1388               	bcf	8,7	;volatile
  1726  01B6                     l136:
  1727  01B6  0008               	return
  1728  01B7                     __end_of_LCD_PORT:
  1729                           
  1730                           	psect	text10
  1731  00DE                     __ptext10:	
  1732 ;; *************** function _ADC_CHANNELS *****************
  1733 ;; Defined at:
  1734 ;;		line 29 in file "./ADC_LIB.h"
  1735 ;; Parameters:    Size  Location     Type
  1736 ;;  CANAL           2    0[BANK0 ] unsigned int 
  1737 ;;  VALOR_ADC       2    2[BANK0 ] unsigned int 
  1738 ;;  VALOR0          1    4[BANK0 ] PTR unsigned int 
  1739 ;;		 -> POT1(2), POT0(2), 
  1740 ;;  VALOR1          1    5[BANK0 ] PTR unsigned int 
  1741 ;;		 -> POT1(2), 
  1742 ;; Auto vars:     Size  Location     Type
  1743 ;;		None
  1744 ;; Return value:  Size  Location     Type
  1745 ;;                  1    wreg      void 
  1746 ;; Registers used:
  1747 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1748 ;; Tracked objects:
  1749 ;;		On entry : 0/0
  1750 ;;		On exit  : 0/0
  1751 ;;		Unchanged: 0/0
  1752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1753 ;;      Params:         0       6       0       0       0
  1754 ;;      Locals:         0       0       0       0       0
  1755 ;;      Temps:          0       3       0       0       0
  1756 ;;      Totals:         0       9       0       0       0
  1757 ;;Total ram usage:        9 bytes
  1758 ;; Hardware stack levels used:    1
  1759 ;; Hardware stack levels required when called:    2
  1760 ;; This function calls:
  1761 ;;		Nothing
  1762 ;; This function is called by:
  1763 ;;		_main
  1764 ;; This function uses a non-reentrant model
  1765 ;;
  1766                           
  1767                           
  1768                           ;psect for function _ADC_CHANNELS
  1769  00DE                     _ADC_CHANNELS:
  1770  00DE                     l1040:	
  1771                           ;incstack = 0
  1772                           ; Regs used in _ADC_CHANNELS: [wreg-fsr0h+status,2+status,0]
  1773                           
  1774                           
  1775                           ;./ADC_LIB.h: 31:     switch (ADCON0bits.CHS){
  1776  00DE  2917               	goto	l1060
  1777  00DF                     l1042:
  1778                           
  1779                           ;./ADC_LIB.h: 33:             *VALOR0 = VALOR_ADC;
  1780  00DF  0824               	movf	ADC_CHANNELS@VALOR0,w
  1781  00E0  0084               	movwf	4
  1782  00E1  0822               	movf	ADC_CHANNELS@VALOR_ADC,w
  1783  00E2  1383               	bcf	3,7	;select IRP bank0
  1784  00E3  0080               	movwf	0
  1785  00E4  0A84               	incf	4,f
  1786  00E5  0823               	movf	ADC_CHANNELS@VALOR_ADC+1,w
  1787  00E6  0080               	movwf	0
  1788  00E7                     l1044:
  1789                           
  1790                           ;./ADC_LIB.h: 34:             ADCON0bits.CHS = CANAL;
  1791  00E7  0820               	movf	ADC_CHANNELS@CANAL,w
  1792  00E8  00A6               	movwf	??_ADC_CHANNELS
  1793  00E9  0DA6               	rlf	??_ADC_CHANNELS,f
  1794  00EA  0DA6               	rlf	??_ADC_CHANNELS,f
  1795  00EB  081F               	movf	31,w	;volatile
  1796  00EC  0626               	xorwf	??_ADC_CHANNELS,w
  1797  00ED  39C3               	andlw	-61
  1798  00EE  0626               	xorwf	??_ADC_CHANNELS,w
  1799  00EF  009F               	movwf	31	;volatile
  1800  00F0                     l1046:
  1801                           
  1802                           ;./ADC_LIB.h: 35:             _delay((unsigned long)((50)*(4000000/4000000.0)));
  1803  00F0  300F               	movlw	15
  1804  00F1  1283               	bcf	3,5	;RP0=0, select bank0
  1805  00F2  1303               	bcf	3,6	;RP1=0, select bank0
  1806  00F3  00A6               	movwf	??_ADC_CHANNELS
  1807  00F4                     u397:
  1808  00F4  0BA6               	decfsz	??_ADC_CHANNELS,f
  1809  00F5  28F4               	goto	u397
  1810  00F6  28F7               	nop2
  1811  00F7                     l1048:
  1812                           
  1813                           ;./ADC_LIB.h: 36:             ADCON0bits.GO = 1;
  1814  00F7  1283               	bcf	3,5	;RP0=0, select bank0
  1815  00F8  1303               	bcf	3,6	;RP1=0, select bank0
  1816  00F9  149F               	bsf	31,1	;volatile
  1817                           
  1818                           ;./ADC_LIB.h: 37:             break;
  1819  00FA  292C               	goto	l71
  1820  00FB                     l1050:
  1821                           
  1822                           ;./ADC_LIB.h: 39:             *VALOR1 = VALOR_ADC;
  1823  00FB  0825               	movf	ADC_CHANNELS@VALOR1,w
  1824  00FC  0084               	movwf	4
  1825  00FD  0822               	movf	ADC_CHANNELS@VALOR_ADC,w
  1826  00FE  1383               	bcf	3,7	;select IRP bank0
  1827  00FF  0080               	movwf	0
  1828  0100  0A84               	incf	4,f
  1829  0101  0823               	movf	ADC_CHANNELS@VALOR_ADC+1,w
  1830  0102  0080               	movwf	0
  1831  0103                     l1052:
  1832                           
  1833                           ;./ADC_LIB.h: 40:             ADCON0bits.CHS = CANAL;
  1834  0103  0820               	movf	ADC_CHANNELS@CANAL,w
  1835  0104  00A6               	movwf	??_ADC_CHANNELS
  1836  0105  0DA6               	rlf	??_ADC_CHANNELS,f
  1837  0106  0DA6               	rlf	??_ADC_CHANNELS,f
  1838  0107  081F               	movf	31,w	;volatile
  1839  0108  0626               	xorwf	??_ADC_CHANNELS,w
  1840  0109  39C3               	andlw	-61
  1841  010A  0626               	xorwf	??_ADC_CHANNELS,w
  1842  010B  009F               	movwf	31	;volatile
  1843  010C                     l1054:
  1844                           
  1845                           ;./ADC_LIB.h: 41:             _delay((unsigned long)((50)*(4000000/4000000.0)));
  1846  010C  300F               	movlw	15
  1847  010D  1283               	bcf	3,5	;RP0=0, select bank0
  1848  010E  1303               	bcf	3,6	;RP1=0, select bank0
  1849  010F  00A6               	movwf	??_ADC_CHANNELS
  1850  0110                     u407:
  1851  0110  0BA6               	decfsz	??_ADC_CHANNELS,f
  1852  0111  2910               	goto	u407
  1853  0112  2913               	nop2
  1854  0113                     l1056:
  1855                           
  1856                           ;./ADC_LIB.h: 42:             ADCON0bits.GO = 1;
  1857  0113  1283               	bcf	3,5	;RP0=0, select bank0
  1858  0114  1303               	bcf	3,6	;RP1=0, select bank0
  1859  0115  149F               	bsf	31,1	;volatile
  1860                           
  1861                           ;./ADC_LIB.h: 43:             break;
  1862  0116  292C               	goto	l71
  1863  0117                     l1060:
  1864  0117  1283               	bcf	3,5	;RP0=0, select bank0
  1865  0118  1303               	bcf	3,6	;RP1=0, select bank0
  1866  0119  0C1F               	rrf	31,w	;volatile
  1867  011A  00A6               	movwf	??_ADC_CHANNELS
  1868  011B  0C26               	rrf	??_ADC_CHANNELS,w
  1869  011C  390F               	andlw	15
  1870  011D  00A7               	movwf	??_ADC_CHANNELS+1
  1871  011E  01A8               	clrf	??_ADC_CHANNELS+2
  1872                           
  1873                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1874                           ; Switch size 1, requested type "simple"
  1875                           ; Number of cases is 1, Range of values is 0 to 0
  1876                           ; switch strategies available:
  1877                           ; Name         Instructions Cycles
  1878                           ; simple_byte            4     3 (average)
  1879                           ; direct_byte           11     8 (fixed)
  1880                           ; jumptable            260     6 (fixed)
  1881                           ;	Chosen strategy is simple_byte
  1882  011F  0828               	movf	??_ADC_CHANNELS+2,w
  1883  0120  3A00               	xorlw	0	; case 0
  1884  0121  1903               	skipnz
  1885  0122  2924               	goto	l1186
  1886  0123  292C               	goto	l71
  1887  0124                     l1186:
  1888                           
  1889                           ; Switch size 1, requested type "simple"
  1890                           ; Number of cases is 2, Range of values is 0 to 1
  1891                           ; switch strategies available:
  1892                           ; Name         Instructions Cycles
  1893                           ; simple_byte            7     4 (average)
  1894                           ; direct_byte           14     8 (fixed)
  1895                           ; jumptable            260     6 (fixed)
  1896                           ;	Chosen strategy is simple_byte
  1897  0124  0827               	movf	??_ADC_CHANNELS+1,w
  1898  0125  3A00               	xorlw	0	; case 0
  1899  0126  1903               	skipnz
  1900  0127  28DF               	goto	l1042
  1901  0128  3A01               	xorlw	1	; case 1
  1902  0129  1903               	skipnz
  1903  012A  28FB               	goto	l1050
  1904  012B  292C               	goto	l71
  1905  012C                     l71:
  1906  012C  0008               	return
  1907  012D                     __end_of_ADC_CHANNELS:
  1908                           
  1909                           	psect	text11
  1910  0230                     __ptext11:	
  1911 ;; *************** function _isr *****************
  1912 ;; Defined at:
  1913 ;;		line 54 in file "main.c"
  1914 ;; Parameters:    Size  Location     Type
  1915 ;;		None
  1916 ;; Auto vars:     Size  Location     Type
  1917 ;;		None
  1918 ;; Return value:  Size  Location     Type
  1919 ;;                  1    wreg      void 
  1920 ;; Registers used:
  1921 ;;		wreg, pclath, cstack
  1922 ;; Tracked objects:
  1923 ;;		On entry : 0/0
  1924 ;;		On exit  : 0/0
  1925 ;;		Unchanged: 0/0
  1926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1927 ;;      Params:         0       0       0       0       0
  1928 ;;      Locals:         0       0       0       0       0
  1929 ;;      Temps:          2       0       0       0       0
  1930 ;;      Totals:         2       0       0       0       0
  1931 ;;Total ram usage:        2 bytes
  1932 ;; Hardware stack levels used:    1
  1933 ;; Hardware stack levels required when called:    1
  1934 ;; This function calls:
  1935 ;;		_ADC_READ
  1936 ;; This function is called by:
  1937 ;;		Interrupt level 1
  1938 ;; This function uses a non-reentrant model
  1939 ;;
  1940                           
  1941                           
  1942                           ;psect for function _isr
  1943  0230                     _isr:
  1944  0230                     i1l1134:
  1945                           
  1946                           ;main.c: 55:     (INTCONbits.GIE = 0);
  1947  0230  138B               	bcf	11,7	;volatile
  1948                           
  1949                           ;main.c: 56:      if (ADIF == 1){
  1950  0231  1283               	bcf	3,5	;RP0=0, select bank0
  1951  0232  1303               	bcf	3,6	;RP1=0, select bank0
  1952  0233  1F0C               	btfss	12,6	;volatile
  1953  0234  2A36               	goto	u29_21
  1954  0235  2A37               	goto	u29_20
  1955  0236                     u29_21:
  1956  0236  2A43               	goto	i1l1140
  1957  0237                     u29_20:
  1958  0237                     i1l1136:
  1959                           
  1960                           ;main.c: 58:         VALOR_ADC = ADC_READ();
  1961  0237  120A  118A  228E  120A  118A  	fcall	_ADC_READ
  1962  023C  0871               	movf	?_ADC_READ+1,w
  1963  023D  1283               	bcf	3,5	;RP0=0, select bank0
  1964  023E  1303               	bcf	3,6	;RP1=0, select bank0
  1965  023F  00AE               	movwf	_VALOR_ADC+1
  1966  0240  0870               	movf	?_ADC_READ,w
  1967  0241  00AD               	movwf	_VALOR_ADC
  1968  0242                     i1l1138:
  1969                           
  1970                           ;main.c: 59:         PIR1bits.ADIF = 0;
  1971  0242  130C               	bcf	12,6	;volatile
  1972  0243                     i1l1140:
  1973                           
  1974                           ;main.c: 61:     if (T0IF == 1){
  1975  0243  1D0B               	btfss	11,2	;volatile
  1976  0244  2A46               	goto	u30_21
  1977  0245  2A47               	goto	u30_20
  1978  0246                     u30_21:
  1979  0246  2A4A               	goto	i1l1146
  1980  0247                     u30_20:
  1981  0247                     i1l1142:
  1982                           
  1983                           ;main.c: 62:         TMR0 = 100;
  1984  0247  3064               	movlw	100
  1985  0248  0081               	movwf	1	;volatile
  1986  0249                     i1l1144:
  1987                           
  1988                           ;main.c: 63:         INTCONbits.T0IF = 0;
  1989  0249  110B               	bcf	11,2	;volatile
  1990  024A                     i1l1146:
  1991                           
  1992                           ;main.c: 66:     (INTCONbits.GIE = 1);
  1993  024A  178B               	bsf	11,7	;volatile
  1994  024B                     i1l84:
  1995  024B  0877               	movf	??_isr+1,w
  1996  024C  008A               	movwf	10
  1997  024D  0E76               	swapf	??_isr,w
  1998  024E  0083               	movwf	3
  1999  024F  0EFE               	swapf	btemp,f
  2000  0250  0E7E               	swapf	btemp,w
  2001  0251  0009               	retfie
  2002  0252                     __end_of_isr:
  2003                           
  2004                           	psect	intentry
  2005  0004                     __pintentry:	
  2006                           ;incstack = 0
  2007                           ; Regs used in _isr: [wreg+pclath+cstack]
  2008                           
  2009  0004                     interrupt_function:
  2010  007E                     saved_w	set	btemp
  2011  0004  00FE               	movwf	btemp
  2012  0005  0E03               	swapf	3,w
  2013  0006  00F6               	movwf	??_isr
  2014  0007  080A               	movf	10,w
  2015  0008  00F7               	movwf	??_isr+1
  2016  0009  120A  118A  2A30   	ljmp	_isr
  2017                           
  2018                           	psect	text12
  2019  028E                     __ptext12:	
  2020 ;; *************** function _ADC_READ *****************
  2021 ;; Defined at:
  2022 ;;		line 24 in file "./ADC_LIB.h"
  2023 ;; Parameters:    Size  Location     Type
  2024 ;;		None
  2025 ;; Auto vars:     Size  Location     Type
  2026 ;;  LECT            2    4[COMMON] unsigned int 
  2027 ;; Return value:  Size  Location     Type
  2028 ;;                  2    0[COMMON] unsigned int 
  2029 ;; Registers used:
  2030 ;;		wreg
  2031 ;; Tracked objects:
  2032 ;;		On entry : 0/0
  2033 ;;		On exit  : 0/0
  2034 ;;		Unchanged: 0/0
  2035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2036 ;;      Params:         2       0       0       0       0
  2037 ;;      Locals:         2       0       0       0       0
  2038 ;;      Temps:          2       0       0       0       0
  2039 ;;      Totals:         6       0       0       0       0
  2040 ;;Total ram usage:        6 bytes
  2041 ;; Hardware stack levels used:    1
  2042 ;; This function calls:
  2043 ;;		Nothing
  2044 ;; This function is called by:
  2045 ;;		_isr
  2046 ;; This function uses a non-reentrant model
  2047 ;;
  2048                           
  2049                           
  2050                           ;psect for function _ADC_READ
  2051  028E                     _ADC_READ:
  2052  028E                     i1l1036:	
  2053                           ;incstack = 0
  2054                           ; Regs used in _ADC_READ: [wreg]
  2055                           
  2056                           
  2057                           ;./ADC_LIB.h: 25:     unsigned int LECT;;./ADC_LIB.h: 26:     LECT = ADRESH;
  2058  028E  1283               	bcf	3,5	;RP0=0, select bank0
  2059  028F  1303               	bcf	3,6	;RP1=0, select bank0
  2060  0290  081E               	movf	30,w	;volatile
  2061  0291  00F2               	movwf	??_ADC_READ
  2062  0292  01F3               	clrf	??_ADC_READ+1
  2063  0293  0872               	movf	??_ADC_READ,w
  2064  0294  00F4               	movwf	ADC_READ@LECT
  2065  0295  0873               	movf	??_ADC_READ+1,w
  2066  0296  00F5               	movwf	ADC_READ@LECT+1
  2067                           
  2068                           ;./ADC_LIB.h: 27:     return LECT;
  2069  0297  0875               	movf	ADC_READ@LECT+1,w
  2070  0298  00F1               	movwf	?_ADC_READ+1
  2071  0299  0874               	movf	ADC_READ@LECT,w
  2072  029A  00F0               	movwf	?_ADC_READ
  2073  029B                     i1l64:
  2074  029B  0008               	return
  2075  029C                     __end_of_ADC_READ:
  2076  007E                     btemp	set	126	;btemp
  2077  007E                     wtemp0	set	126
  2078                           
  2079                           	psect	config
  2080                           
  2081                           ;Config register CONFIG1 @ 0x2007
  2082                           ;	Oscillator Selection bits
  2083                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
  2084                           ;	Watchdog Timer Enable bit
  2085                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2086                           ;	Power-up Timer Enable bit
  2087                           ;	PWRTE = OFF, PWRT disabled
  2088                           ;	RE3/MCLR pin function select bit
  2089                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2090                           ;	Code Protection bit
  2091                           ;	CP = OFF, Program memory code protection is disabled
  2092                           ;	Data Code Protection bit
  2093                           ;	CPD = OFF, Data memory code protection is disabled
  2094                           ;	Brown Out Reset Selection bits
  2095                           ;	BOREN = OFF, BOR disabled
  2096                           ;	Internal External Switchover bit
  2097                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2098                           ;	Fail-Safe Clock Monitor Enabled bit
  2099                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2100                           ;	Low Voltage Programming Enable bit
  2101                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2102                           ;	In-Circuit Debugger Mode bit
  2103                           ;	DEBUG = 0x1, unprogrammed default
  2104  2007                     	org	8199
  2105  2007  20D5               	dw	8405
  2106                           
  2107                           ;Config register CONFIG2 @ 0x2008
  2108                           ;	Brown-out Reset Selection bit
  2109                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2110                           ;	Flash Program Memory Self Write Enable bits
  2111                           ;	WRT = OFF, Write protection off
  2112  2008                     	org	8200
  2113  2008  3FFF               	dw	16383

Data Sizes:
    Strings     2
    Constant    0
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       8
    BANK0            80     13      19
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 2
		 -> STR_1(CODE[2]), 

    ADC_CHANNELS@VALOR1	PTR unsigned int  size(1) Largest target is 2
		 -> POT1(BANK0[2]), 

    ADC_CHANNELS@VALOR0	PTR unsigned int  size(1) Largest target is 2
		 -> POT1(BANK0[2]), POT0(BANK0[2]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_ADC_READ

Critical Paths under _main in BANK0

    _main->_Lcd_Set_Cursor
    _setup->_ADC_INIT
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_LCD_PORT
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_LCD_PORT

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2321
                                             11 BANK0      2     2      0
                       _ADC_CHANNELS
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      98
                           _ADC_INIT
 ---------------------------------------------------------------------------------
 (2) _ADC_INIT                                             3     1      2      98
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     367
                                              5 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     244
                                              1 BANK0      4     4      0
                           _LCD_PORT
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     544
                                              4 BANK0      7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     374
                                              4 BANK0      2     2      0
                           _LCD_PORT
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     198
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     198
                                              1 BANK0      3     3      0
                           _LCD_PORT
 ---------------------------------------------------------------------------------
 (3) _LCD_PORT                                             1     1      0     176
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_CHANNELS                                         9     3      6     740
                                              0 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  2     2      0      23
                                              6 COMMON     2     2      0
                           _ADC_READ
 ---------------------------------------------------------------------------------
 (5) _ADC_READ                                             6     4      2      23
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_CHANNELS
   _Lcd_Clear
     _Lcd_Cmd
       _LCD_PORT
   _Lcd_Init
     _LCD_PORT
     _Lcd_Cmd
       _LCD_PORT
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _LCD_PORT
   _Lcd_Write_String
     _Lcd_Write_Char
       _LCD_PORT
   _setup
     _ADC_INIT

 _isr (ROOT)
   _ADC_READ

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      1B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      D      13       5       23.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      1B      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Jul 26 17:08:06 2021

                        pc 0002                         l61 022F                         l71 012C  
                       l95 01E3                         fsr 0004                        l120 0184  
                      l121 0185                        l130 01A7                        l122 018B  
                      l131 01A8                        l123 018C                        l132 01AE  
                      l124 0192                        l133 01AF                        l125 0193  
                      l134 01B5                        l126 0199                        l142 02A8  
                      l127 019A                        l136 01B6                        l128 01A0  
                      l160 00DD                        l129 01A1                        l145 017A  
                      l154 020C                        l139 028D                        l148 0271  
                      l980 0182                        l990 01A5                        l982 0189  
                      l992 01AC                        l984 0190                        l994 01B3  
                      l986 0197                        l978 017E                        l988 019E  
                      l996 020D                        l998 0210                        _RB2 0032  
                      _RB3 0033                        _RD0 0040                        _RD1 0041  
                      _RD2 0042                        _RD3 0043                        _RD4 0044  
                      _RD5 0045                        _RD6 0046                        _RD7 0047  
                      u200 019E                        u201 019D                        u210 01A5  
                      u211 01A4                        u220 01AC                        u221 01AB  
                      u230 01B3                        u231 01B2                        u160 0182  
                      u240 008E                        u161 0181                        u241 008D  
                      u170 0189                        u171 0188                        u180 0190  
                      u260 00B9                        u181 018F                        u261 00B8  
                      u317 0030                        u190 0197                        u407 0110  
                      u191 0196                        u255 0096                        u327 0047  
                      u280 020C                        u281 020B                        u337 021D  
                      u275 00C1                        u347 026B                        u357 0139  
                      u367 014A                        u377 0159                        u387 0285  
                      u397 00F4                        _isr 0230                        fsr0 0004  
                      indf 0000                       l1000 0219                       l1010 022B  
                     l1002 0220                       l1020 027F                       l1100 014F  
                     l1012 022C                       l1004 0226                       l1022 028A  
                     l1014 0275                       l1102 0155                       l1110 009F  
                     l1030 0264                       l1006 0229                       l1040 00DE  
                     l1016 0276                       l1104 029C                       l1120 00CA  
                     l1112 00A4                       l1032 0267                       l1024 0255  
                     l1008 022A                       l1050 00FB                       l1042 00DF  
                     l1018 027C                       l1122 00CF                       l1114 00AA  
                     l1106 0089                       l1034 026E                       l1026 025D  
                     l1130 01F7                       l1052 0103                       l1044 00E7  
                     l1060 0117                       l1124 00D5                       l1108 008E  
                     l1116 00B3                       l1028 025E                       l1132 01FF  
                     l1054 010C                       l1046 00F0                       l1118 00B9  
                     l1126 01E7                       l1070 01BC                       l1150 002A  
                     l1056 0113                       l1048 00F7                       l1128 01EA  
                     l1080 01D1                       l1072 01CB                       l1160 006B  
                     l1152 0035                       l1090 01E1                       l1082 01D3  
                     l1074 01CE                       l1066 01B7                       l1154 004C  
                     l1092 01E2                       l1084 01D7                       l1076 01CF  
                     l1068 01BB                       l1156 0052                       l1148 001B  
                     l1094 012D                       l1086 01DF                       l1078 01D0  
                     l1158 0055                       l1096 0133                       l1088 01E0  
                     l1186 0124                       l1098 013E                       _ADIF 0066  
                     ?_isr 0070                       STR_1 02AF                       _T0IF 005A  
                     i1l64 029B                       i1l84 024B                       _POT0 0031  
                     _POT1 002F                       _TMR0 0001               _ADC_CHANNELS 00DE  
        ?_Lcd_Write_String 0070           __end_of_ADC_INIT 0230           __end_of_ADC_READ 029C  
                     _main 001B                       btemp 007E                       start 000C  
       ??_Lcd_Write_String 0025            __end_of_Lcd_Cmd 028E           __end_of_LCD_PORT 01B7  
                    ??_isr 0076                      ?_main 0070                      _ANSEL 0188  
                    u30_20 0247                      u30_21 0246                      _PORTA 0005  
                    _PORTB 0006                      _PORTC 0007                      _PORTD 0008  
                    _PORTE 0009                      u29_20 0237                      u29_21 0236  
  __size_of_Lcd_Set_Cursor 0058                      _TRISA 0085                      _TRISB 0086  
                    _TRISC 0087                      _TRISD 0088                      _TRISE 0089  
                    _setup 01B7                      pclath 000A                      status 0003  
                    wtemp0 007E           __end_of_Lcd_Init 017B            __initialization 000F  
             __end_of_main 0086                     ??_main 002B         __size_of_Lcd_Clear 000D  
                   _ADRESH 001E                     ?_setup 0070                     _ANSELH 0189  
                   i1l1036 028E                     i1l1140 0243                     i1l1142 0247  
                   i1l1134 0230                     i1l1144 0249                     i1l1136 0237  
                   i1l1146 024A                     i1l1138 0242                  ??_Lcd_Cmd 0021  
  __size_of_Lcd_Write_Char 0020                  ?_ADC_INIT 0020                  ?_ADC_READ 0070  
                   saved_w 007E            Lcd_Set_Cursor@a 0027            Lcd_Set_Cursor@b 0024  
          Lcd_Set_Cursor@y 0029            Lcd_Set_Cursor@z 0028                  ?_LCD_PORT 0070  
  __end_of__initialization 0017                  LCD_PORT@a 0020          __end_of_Lcd_Clear 02A9  
           __pcstackCOMMON 0070          ADC_CHANNELS@CANAL 0020               ADC_READ@LECT 0074  
            __end_of_setup 01E4             _Lcd_Set_Cursor 0086                 ??_ADC_INIT 0022  
               ??_ADC_READ 0072                  ?_Lcd_Init 0070                    ??_setup 0023  
               __pbssBANK0 002D                 ??_LCD_PORT 0020                 __pmaintext 001B  
               __pintentry 0004  __size_of_Lcd_Write_String 0029     __end_of_Lcd_Set_Cursor 00DE  
               ??_Lcd_Init 0024                 __stringtab 02A9             _Lcd_Write_Char 0252  
                  _Lcd_Cmd 0272      ADC_CHANNELS@VALOR_ADC 0022            ?_Lcd_Set_Cursor 0024  
                  __ptext1 01B7                    __ptext2 020D                    __ptext3 01E4  
                  __ptext4 0252                    __ptext5 0086                    __ptext6 012D  
                  __ptext7 029C                    __ptext8 0272                    __ptext9 017B  
             __size_of_isr 0022     __end_of_Lcd_Write_Char 0272       end_of_initialization 0017  
                _VALOR_ADC 002D          __size_of_ADC_INIT 0023          __size_of_ADC_READ 000E  
          ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0027          Lcd_Write_String@i 0025  
        __size_of_LCD_PORT 003C                  _Lcd_Clear 029C           _Lcd_Write_String 01E4  
       ADC_CHANNELS@VALOR0 0024         ADC_CHANNELS@VALOR1 0025              ADC_INIT@canal 0020  
      start_initialization 000F                __end_of_isr 0252              ?_ADC_CHANNELS 0020  
        __size_of_Lcd_Init 004E                 ?_Lcd_Clear 0070            Lcd_Write_Char@a 0022  
          Lcd_Write_Char@y 0024                  ___latbits 0002              __pcstackBANK0 0020  
           ??_ADC_CHANNELS 0026                   ?_Lcd_Cmd 0070           ??_Lcd_Set_Cursor 0025  
                __pstrings 02A9                   _ADC_INIT 020D                   _ADC_READ 028E  
           __size_of_setup 002D                   _LCD_PORT 017B          interrupt_function 0004  
                 _PIE1bits 008C                   Lcd_Cmd@a 0023                   _PIR1bits 000C  
              ??_Lcd_Clear 0024                 _ADCON0bits 001F                __stringbase 02AE  
               _ADCON1bits 009F           ??_Lcd_Write_Char 0021                   _Lcd_Init 012D  
 __end_of_Lcd_Write_String 020D           __size_of_Lcd_Cmd 001C       __end_of_ADC_CHANNELS 012D  
       __end_of__stringtab 02AF                   __ptext10 00DE                   __ptext11 0230  
                 __ptext12 028E              __size_of_main 006B                 _INTCONbits 000B  
       Lcd_Write_Char@temp 0023                   intlevel1 0000                  stringcode 02A9  
               _OSCCONbits 008F         Lcd_Set_Cursor@temp 002A                 _OPTION_REG 0081  
                 stringdir 02A9                   stringtab 02A9      __size_of_ADC_CHANNELS 004F  
