

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sat Jul 24 22:28:51 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.20
    20                           ; Generated 12/02/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209  0009                     _PORTE	set	9
   210  0006                     _PORTB	set	6
   211  0005                     _PORTA	set	5
   212  0001                     _TMR0	set	1
   213  000B                     _INTCONbits	set	11
   214  001E                     _ADRESH	set	30
   215  000C                     _PIR1bits	set	12
   216  001F                     _ADCON0bits	set	31
   217  0008                     _PORTD	set	8
   218  0007                     _PORTC	set	7
   219  005A                     _T0IF	set	90
   220  0066                     _ADIF	set	102
   221  0081                     _OPTION_REG	set	129
   222  008F                     _OSCCONbits	set	143
   223  0086                     _TRISB	set	134
   224  0089                     _TRISE	set	137
   225  0088                     _TRISD	set	136
   226  0087                     _TRISC	set	135
   227  0085                     _TRISA	set	133
   228  008C                     _PIE1bits	set	140
   229  009F                     _ADCON1bits	set	159
   230  0189                     _ANSELH	set	393
   231  0188                     _ANSEL	set	392
   232                           
   233                           	psect	cinit
   234  000F                     start_initialization:	
   235                           ; #config settings
   236                           
   237  000F                     __initialization:
   238                           
   239                           ; Clear objects allocated to COMMON
   240  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   241  0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   242  0011  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   243  0012  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
   244                           
   245                           ; Clear objects allocated to BANK0
   246  0013  1283               	bcf	3,5	;RP0=0, select bank0
   247  0014  1303               	bcf	3,6	;RP1=0, select bank0
   248  0015  01AB               	clrf	__pbssBANK0& (0+127)
   249  0016  01AC               	clrf	(__pbssBANK0+1)& (0+127)
   250  0017                     end_of_initialization:	
   251                           ;End of C runtime variable initialization code
   252                           
   253  0017                     __end_of__initialization:
   254  0017  0183               	clrf	3
   255  0018  120A  118A  286E   	ljmp	_main	;jump to C main() function
   256                           
   257                           	psect	bssCOMMON
   258  0078                     __pbssCOMMON:
   259  0078                     _POT1:
   260  0078                     	ds	2
   261  007A                     _POT0:
   262  007A                     	ds	2
   263                           
   264                           	psect	bssBANK0
   265  002B                     __pbssBANK0:
   266  002B                     _VALOR_ADC:
   267  002B                     	ds	2
   268                           
   269                           	psect	cstackCOMMON
   270  0070                     __pcstackCOMMON:
   271  0070                     ?_setup:
   272  0070                     ?_isr:	
   273                           ; 1 bytes @ 0x0
   274                           
   275  0070                     ?_main:	
   276                           ; 1 bytes @ 0x0
   277                           
   278  0070                     ?_ADC_READ:	
   279                           ; 1 bytes @ 0x0
   280                           
   281                           
   282                           ; 2 bytes @ 0x0
   283  0070                     	ds	2
   284  0072                     ??_ADC_READ:
   285                           
   286                           ; 1 bytes @ 0x2
   287  0072                     	ds	2
   288  0074                     ADC_READ@LECT:
   289                           
   290                           ; 2 bytes @ 0x4
   291  0074                     	ds	2
   292  0076                     ??_isr:
   293                           
   294                           ; 1 bytes @ 0x6
   295  0076                     	ds	2
   296                           
   297                           	psect	cstackBANK0
   298  0020                     __pcstackBANK0:
   299  0020                     ?_ADC_INIT:
   300  0020                     ?_ADC_CHANNELS:	
   301                           ; 1 bytes @ 0x0
   302                           
   303  0020                     ADC_INIT@canal:	
   304                           ; 1 bytes @ 0x0
   305                           
   306  0020                     ADC_CHANNELS@CANAL:	
   307                           ; 2 bytes @ 0x0
   308                           
   309                           
   310                           ; 2 bytes @ 0x0
   311  0020                     	ds	2
   312  0022                     ??_ADC_INIT:
   313  0022                     ADC_CHANNELS@VALOR_ADC:	
   314                           ; 1 bytes @ 0x2
   315                           
   316                           
   317                           ; 2 bytes @ 0x2
   318  0022                     	ds	1
   319  0023                     ??_setup:
   320                           
   321                           ; 1 bytes @ 0x3
   322  0023                     	ds	1
   323  0024                     ADC_CHANNELS@VALOR0:
   324                           
   325                           ; 2 bytes @ 0x4
   326  0024                     	ds	2
   327  0026                     ADC_CHANNELS@VALOR1:
   328                           
   329                           ; 2 bytes @ 0x6
   330  0026                     	ds	2
   331  0028                     ??_ADC_CHANNELS:
   332                           
   333                           ; 1 bytes @ 0x8
   334  0028                     	ds	3
   335  002B                     ??_main:
   336                           
   337                           	psect	maintext
   338  006E                     __pmaintext:	
   339                           ; 1 bytes @ 0xB
   340 ;;
   341 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   342 ;;
   343 ;; *************** function _main *****************
   344 ;; Defined at:
   345 ;;		line 57 in file "main.c"
   346 ;; Parameters:    Size  Location     Type
   347 ;;		None
   348 ;; Auto vars:     Size  Location     Type
   349 ;;		None
   350 ;; Return value:  Size  Location     Type
   351 ;;                  1    wreg      void 
   352 ;; Registers used:
   353 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   354 ;; Tracked objects:
   355 ;;		On entry : B00/0
   356 ;;		On exit  : 0/0
   357 ;;		Unchanged: 0/0
   358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   359 ;;      Params:         0       0       0       0       0
   360 ;;      Locals:         0       0       0       0       0
   361 ;;      Temps:          0       0       0       0       0
   362 ;;      Totals:         0       0       0       0       0
   363 ;;Total ram usage:        0 bytes
   364 ;; Hardware stack levels required when called:    4
   365 ;; This function calls:
   366 ;;		_ADC_CHANNELS
   367 ;;		_setup
   368 ;; This function is called by:
   369 ;;		Startup code after reset
   370 ;; This function uses a non-reentrant model
   371 ;;
   372                           
   373                           
   374                           ;psect for function _main
   375  006E                     _main:
   376  006E                     l887:	
   377                           ;incstack = 0
   378                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   379                           
   380                           
   381                           ;main.c: 58:     OSCCONbits.IRCF1 = 1;
   382  006E  120A  118A  20A7  120A  118A  	fcall	_setup
   383  0073                     l889:
   384                           
   385                           ;main.c: 59:     OSCCONbits.IRCF0 = 0;
   386  0073  1283               	bcf	3,5	;RP0=0, select bank0
   387  0074  1303               	bcf	3,6	;RP1=0, select bank0
   388  0075  149F               	bsf	31,1	;volatile
   389  0076                     l891:
   390                           
   391                           ;main.c: 61: 
   392  0076  3000               	movlw	0
   393  0077  1283               	bcf	3,5	;RP0=0, select bank0
   394  0078  1303               	bcf	3,6	;RP1=0, select bank0
   395  0079  00A0               	movwf	ADC_CHANNELS@CANAL
   396  007A  00A1               	movwf	ADC_CHANNELS@CANAL+1
   397  007B  082C               	movf	_VALOR_ADC+1,w
   398  007C  00A3               	movwf	ADC_CHANNELS@VALOR_ADC+1
   399  007D  082B               	movf	_VALOR_ADC,w
   400  007E  00A2               	movwf	ADC_CHANNELS@VALOR_ADC
   401  007F  3007               	movlw	7
   402  0080  00A4               	movwf	ADC_CHANNELS@VALOR0
   403  0081  3000               	movlw	0
   404  0082  00A5               	movwf	ADC_CHANNELS@VALOR0+1
   405  0083  3008               	movlw	8
   406  0084  00A6               	movwf	ADC_CHANNELS@VALOR1
   407  0085  3000               	movlw	0
   408  0086  00A7               	movwf	ADC_CHANNELS@VALOR1+1
   409  0087  120A  118A  201B  120A  118A  	fcall	_ADC_CHANNELS
   410  008C                     l893:
   411                           
   412                           ;main.c: 63:     OPTION_REG = 0B01010100;
   413  008C  3001               	movlw	1
   414  008D  1283               	bcf	3,5	;RP0=0, select bank0
   415  008E  1303               	bcf	3,6	;RP1=0, select bank0
   416  008F  00A0               	movwf	ADC_CHANNELS@CANAL
   417  0090  3000               	movlw	0
   418  0091  00A1               	movwf	ADC_CHANNELS@CANAL+1
   419  0092  082C               	movf	_VALOR_ADC+1,w
   420  0093  00A3               	movwf	ADC_CHANNELS@VALOR_ADC+1
   421  0094  082B               	movf	_VALOR_ADC,w
   422  0095  00A2               	movwf	ADC_CHANNELS@VALOR_ADC
   423  0096  3007               	movlw	7
   424  0097  00A4               	movwf	ADC_CHANNELS@VALOR0
   425  0098  3000               	movlw	0
   426  0099  00A5               	movwf	ADC_CHANNELS@VALOR0+1
   427  009A  3008               	movlw	8
   428  009B  00A6               	movwf	ADC_CHANNELS@VALOR1
   429  009C  3000               	movlw	0
   430  009D  00A7               	movwf	ADC_CHANNELS@VALOR1+1
   431  009E  120A  118A  201B  120A  118A  	fcall	_ADC_CHANNELS
   432  00A3  2876               	goto	l891
   433  00A4  120A  118A  280C   	ljmp	start
   434  00A7                     __end_of_main:
   435                           
   436                           	psect	text1
   437  00A7                     __ptext1:	
   438 ;; *************** function _setup *****************
   439 ;; Defined at:
   440 ;;		line 68 in file "main.c"
   441 ;; Parameters:    Size  Location     Type
   442 ;;		None
   443 ;; Auto vars:     Size  Location     Type
   444 ;;		None
   445 ;; Return value:  Size  Location     Type
   446 ;;                  1    wreg      void 
   447 ;; Registers used:
   448 ;;		wreg, status,2, status,0, pclath, cstack
   449 ;; Tracked objects:
   450 ;;		On entry : 0/0
   451 ;;		On exit  : 0/0
   452 ;;		Unchanged: 0/0
   453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   454 ;;      Params:         0       0       0       0       0
   455 ;;      Locals:         0       0       0       0       0
   456 ;;      Temps:          0       0       0       0       0
   457 ;;      Totals:         0       0       0       0       0
   458 ;;Total ram usage:        0 bytes
   459 ;; Hardware stack levels used:    1
   460 ;; Hardware stack levels required when called:    3
   461 ;; This function calls:
   462 ;;		_ADC_INIT
   463 ;; This function is called by:
   464 ;;		_main
   465 ;; This function uses a non-reentrant model
   466 ;;
   467                           
   468                           
   469                           ;psect for function _setup
   470  00A7                     _setup:
   471  00A7                     l845:	
   472                           ;incstack = 0
   473                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   474                           
   475                           
   476                           ;main.c: 70:     INTCONbits.PEIE = 1;
   477  00A7  3003               	movlw	3
   478  00A8  1683               	bsf	3,5	;RP0=1, select bank3
   479  00A9  1703               	bsf	3,6	;RP1=1, select bank3
   480  00AA  0088               	movwf	8	;volatile
   481  00AB                     l847:
   482                           
   483                           ;main.c: 71:     INTCONbits.T0IE = 1;
   484  00AB  0189               	clrf	9	;volatile
   485  00AC                     l849:
   486                           
   487                           ;main.c: 73: }
   488  00AC  3003               	movlw	3
   489  00AD  1683               	bsf	3,5	;RP0=1, select bank1
   490  00AE  1303               	bcf	3,6	;RP1=0, select bank1
   491  00AF  0085               	movwf	5	;volatile
   492  00B0  0187               	clrf	7	;volatile
   493  00B1  0188               	clrf	8	;volatile
   494  00B2  0189               	clrf	9	;volatile
   495  00B3  0186               	clrf	6	;volatile
   496  00B4  1283               	bcf	3,5	;RP0=0, select bank0
   497  00B5  1303               	bcf	3,6	;RP1=0, select bank0
   498  00B6  0185               	clrf	5	;volatile
   499  00B7  0186               	clrf	6	;volatile
   500  00B8  0187               	clrf	7	;volatile
   501  00B9  0188               	clrf	8	;volatile
   502  00BA  0189               	clrf	9	;volatile
   503  00BB                     l851:
   504  00BB  1683               	bsf	3,5	;RP0=1, select bank1
   505  00BC  1303               	bcf	3,6	;RP1=0, select bank1
   506  00BD  170F               	bsf	15,6	;volatile
   507  00BE                     l853:
   508  00BE  168F               	bsf	15,5	;volatile
   509  00BF                     l855:
   510  00BF  120F               	bcf	15,4	;volatile
   511  00C0                     l857:
   512  00C0  140F               	bsf	15,0	;volatile
   513  00C1                     l859:
   514  00C1  3054               	movlw	84
   515  00C2  0081               	movwf	1	;volatile
   516  00C3                     l861:
   517  00C3  3064               	movlw	100
   518  00C4  1283               	bcf	3,5	;RP0=0, select bank0
   519  00C5  1303               	bcf	3,6	;RP1=0, select bank0
   520  00C6  0081               	movwf	1	;volatile
   521  00C7                     l863:
   522  00C7  3000               	movlw	0
   523  00C8  00A0               	movwf	ADC_INIT@canal
   524  00C9  00A1               	movwf	ADC_INIT@canal+1
   525  00CA  120A  118A  20D4  120A  118A  	fcall	_ADC_INIT
   526  00CF                     l865:
   527  00CF  178B               	bsf	11,7	;volatile
   528  00D0                     l867:
   529  00D0  170B               	bsf	11,6	;volatile
   530  00D1                     l869:
   531  00D1  168B               	bsf	11,5	;volatile
   532  00D2                     l871:
   533  00D2  110B               	bcf	11,2	;volatile
   534  00D3                     l87:
   535  00D3  0008               	return
   536  00D4                     __end_of_setup:
   537                           
   538                           	psect	text2
   539  00D4                     __ptext2:	
   540 ;; *************** function _ADC_INIT *****************
   541 ;; Defined at:
   542 ;;		line 12 in file "./ADC_LIB.h"
   543 ;; Parameters:    Size  Location     Type
   544 ;;  canal           2    0[BANK0 ] unsigned int 
   545 ;; Auto vars:     Size  Location     Type
   546 ;;		None
   547 ;; Return value:  Size  Location     Type
   548 ;;                  1    wreg      void 
   549 ;; Registers used:
   550 ;;		wreg, status,2, status,0
   551 ;; Tracked objects:
   552 ;;		On entry : 0/0
   553 ;;		On exit  : 0/0
   554 ;;		Unchanged: 0/0
   555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   556 ;;      Params:         0       2       0       0       0
   557 ;;      Locals:         0       0       0       0       0
   558 ;;      Temps:          0       1       0       0       0
   559 ;;      Totals:         0       3       0       0       0
   560 ;;Total ram usage:        3 bytes
   561 ;; Hardware stack levels used:    1
   562 ;; Hardware stack levels required when called:    2
   563 ;; This function calls:
   564 ;;		Nothing
   565 ;; This function is called by:
   566 ;;		_setup
   567 ;; This function uses a non-reentrant model
   568 ;;
   569                           
   570                           
   571                           ;psect for function _ADC_INIT
   572  00D4                     _ADC_INIT:
   573  00D4                     l797:	
   574                           ;incstack = 0
   575                           ; Regs used in _ADC_INIT: [wreg+status,2+status,0]
   576                           
   577                           
   578                           ;./ADC_LIB.h: 14:     ADCON0bits.ADON = 0X01;
   579  00D4  1283               	bcf	3,5	;RP0=0, select bank0
   580  00D5  1303               	bcf	3,6	;RP1=0, select bank0
   581  00D6  141F               	bsf	31,0	;volatile
   582  00D7                     l799:
   583                           
   584                           ;./ADC_LIB.h: 15:     ADCON0bits.CHS = canal;
   585  00D7  0820               	movf	ADC_INIT@canal,w
   586  00D8  00A2               	movwf	??_ADC_INIT
   587  00D9  0DA2               	rlf	??_ADC_INIT,f
   588  00DA  0DA2               	rlf	??_ADC_INIT,f
   589  00DB  081F               	movf	31,w	;volatile
   590  00DC  0622               	xorwf	??_ADC_INIT,w
   591  00DD  39C3               	andlw	-61
   592  00DE  0622               	xorwf	??_ADC_INIT,w
   593  00DF  009F               	movwf	31	;volatile
   594  00E0                     l801:
   595                           
   596                           ;./ADC_LIB.h: 16:     _delay((unsigned long)((100)*(4000000/4000000.0)));
   597  00E0  3020               	movlw	32
   598  00E1  1283               	bcf	3,5	;RP0=0, select bank0
   599  00E2  1303               	bcf	3,6	;RP1=0, select bank0
   600  00E3  00A2               	movwf	??_ADC_INIT
   601  00E4                     u57:
   602  00E4  0BA2               	decfsz	??_ADC_INIT,f
   603  00E5  28E4               	goto	u57
   604  00E6  0000               	nop
   605  00E7                     l803:
   606                           
   607                           ;./ADC_LIB.h: 17:     ADCON0bits.ADCS = 0X01;
   608  00E7  1283               	bcf	3,5	;RP0=0, select bank0
   609  00E8  1303               	bcf	3,6	;RP1=0, select bank0
   610  00E9  081F               	movf	31,w	;volatile
   611  00EA  393F               	andlw	-193
   612  00EB  3840               	iorlw	64
   613  00EC  009F               	movwf	31	;volatile
   614  00ED                     l805:
   615                           
   616                           ;./ADC_LIB.h: 18:     ADCON1bits.ADFM = 0;
   617  00ED  1683               	bsf	3,5	;RP0=1, select bank1
   618  00EE  1303               	bcf	3,6	;RP1=0, select bank1
   619  00EF  139F               	bcf	31,7	;volatile
   620  00F0                     l807:
   621                           
   622                           ;./ADC_LIB.h: 19:     ADCON1bits.VCFG0 = 0;
   623  00F0  121F               	bcf	31,4	;volatile
   624  00F1                     l809:
   625                           
   626                           ;./ADC_LIB.h: 20:     ADCON1bits.VCFG1 = 0;
   627  00F1  129F               	bcf	31,5	;volatile
   628  00F2                     l811:
   629                           
   630                           ;./ADC_LIB.h: 21:     PIE1bits.ADIE = 1;
   631  00F2  170C               	bsf	12,6	;volatile
   632  00F3                     l813:
   633                           
   634                           ;./ADC_LIB.h: 22:     PIR1bits.ADIF = 0;
   635  00F3  1283               	bcf	3,5	;RP0=0, select bank0
   636  00F4  1303               	bcf	3,6	;RP1=0, select bank0
   637  00F5  130C               	bcf	12,6	;volatile
   638  00F6                     l53:
   639  00F6  0008               	return
   640  00F7                     __end_of_ADC_INIT:
   641                           
   642                           	psect	text3
   643  001B                     __ptext3:	
   644 ;; *************** function _ADC_CHANNELS *****************
   645 ;; Defined at:
   646 ;;		line 29 in file "./ADC_LIB.h"
   647 ;; Parameters:    Size  Location     Type
   648 ;;  CANAL           2    0[BANK0 ] unsigned int 
   649 ;;  VALOR_ADC       2    2[BANK0 ] unsigned int 
   650 ;;  VALOR0          2    4[BANK0 ] PTR unsigned int 
   651 ;;		 -> PORTC(1), 
   652 ;;  VALOR1          2    6[BANK0 ] PTR unsigned int 
   653 ;;		 -> PORTD(1), 
   654 ;; Auto vars:     Size  Location     Type
   655 ;;		None
   656 ;; Return value:  Size  Location     Type
   657 ;;                  1    wreg      void 
   658 ;; Registers used:
   659 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   660 ;; Tracked objects:
   661 ;;		On entry : 0/0
   662 ;;		On exit  : 0/0
   663 ;;		Unchanged: 0/0
   664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   665 ;;      Params:         0       8       0       0       0
   666 ;;      Locals:         0       0       0       0       0
   667 ;;      Temps:          0       3       0       0       0
   668 ;;      Totals:         0      11       0       0       0
   669 ;;Total ram usage:       11 bytes
   670 ;; Hardware stack levels used:    1
   671 ;; Hardware stack levels required when called:    2
   672 ;; This function calls:
   673 ;;		Nothing
   674 ;; This function is called by:
   675 ;;		_main
   676 ;; This function uses a non-reentrant model
   677 ;;
   678                           
   679                           
   680                           ;psect for function _ADC_CHANNELS
   681  001B                     _ADC_CHANNELS:
   682  001B                     l819:	
   683                           ;incstack = 0
   684                           ; Regs used in _ADC_CHANNELS: [wreg-fsr0h+status,2+status,0]
   685                           
   686                           
   687                           ;./ADC_LIB.h: 31:     switch (ADCON0bits.CHS){
   688  001B  2858               	goto	l839
   689  001C                     l821:
   690                           
   691                           ;./ADC_LIB.h: 33:             *VALOR0 = VALOR_ADC;
   692  001C  0824               	movf	ADC_CHANNELS@VALOR0,w
   693  001D  0084               	movwf	4
   694  001E  1783               	bsf	3,7
   695  001F  1C25               	btfss	ADC_CHANNELS@VALOR0+1,0
   696  0020  1383               	bcf	3,7
   697  0021  0822               	movf	ADC_CHANNELS@VALOR_ADC,w
   698  0022  0080               	movwf	0
   699  0023  0A84               	incf	4,f
   700  0024  0823               	movf	ADC_CHANNELS@VALOR_ADC+1,w
   701  0025  0080               	movwf	0
   702  0026                     l823:
   703                           
   704                           ;./ADC_LIB.h: 34:             ADCON0bits.CHS = CANAL;
   705  0026  0820               	movf	ADC_CHANNELS@CANAL,w
   706  0027  00A8               	movwf	??_ADC_CHANNELS
   707  0028  0DA8               	rlf	??_ADC_CHANNELS,f
   708  0029  0DA8               	rlf	??_ADC_CHANNELS,f
   709  002A  081F               	movf	31,w	;volatile
   710  002B  0628               	xorwf	??_ADC_CHANNELS,w
   711  002C  39C3               	andlw	-61
   712  002D  0628               	xorwf	??_ADC_CHANNELS,w
   713  002E  009F               	movwf	31	;volatile
   714  002F                     l825:
   715                           
   716                           ;./ADC_LIB.h: 35:             _delay((unsigned long)((50)*(4000000/4000000.0)));
   717  002F  300F               	movlw	15
   718  0030  1283               	bcf	3,5	;RP0=0, select bank0
   719  0031  1303               	bcf	3,6	;RP1=0, select bank0
   720  0032  00A8               	movwf	??_ADC_CHANNELS
   721  0033                     u67:
   722  0033  0BA8               	decfsz	??_ADC_CHANNELS,f
   723  0034  2833               	goto	u67
   724  0035  2836               	nop2
   725  0036                     l827:
   726                           
   727                           ;./ADC_LIB.h: 36:             ADCON0bits.GO = 1;
   728  0036  1283               	bcf	3,5	;RP0=0, select bank0
   729  0037  1303               	bcf	3,6	;RP1=0, select bank0
   730  0038  149F               	bsf	31,1	;volatile
   731                           
   732                           ;./ADC_LIB.h: 37:             break;
   733  0039  286D               	goto	l63
   734  003A                     l829:
   735                           
   736                           ;./ADC_LIB.h: 39:             *VALOR1 = VALOR_ADC;
   737  003A  0826               	movf	ADC_CHANNELS@VALOR1,w
   738  003B  0084               	movwf	4
   739  003C  1783               	bsf	3,7
   740  003D  1C27               	btfss	ADC_CHANNELS@VALOR1+1,0
   741  003E  1383               	bcf	3,7
   742  003F  0822               	movf	ADC_CHANNELS@VALOR_ADC,w
   743  0040  0080               	movwf	0
   744  0041  0A84               	incf	4,f
   745  0042  0823               	movf	ADC_CHANNELS@VALOR_ADC+1,w
   746  0043  0080               	movwf	0
   747  0044                     l831:
   748                           
   749                           ;./ADC_LIB.h: 40:             ADCON0bits.CHS = CANAL;
   750  0044  0820               	movf	ADC_CHANNELS@CANAL,w
   751  0045  00A8               	movwf	??_ADC_CHANNELS
   752  0046  0DA8               	rlf	??_ADC_CHANNELS,f
   753  0047  0DA8               	rlf	??_ADC_CHANNELS,f
   754  0048  081F               	movf	31,w	;volatile
   755  0049  0628               	xorwf	??_ADC_CHANNELS,w
   756  004A  39C3               	andlw	-61
   757  004B  0628               	xorwf	??_ADC_CHANNELS,w
   758  004C  009F               	movwf	31	;volatile
   759  004D                     l833:
   760                           
   761                           ;./ADC_LIB.h: 41:             _delay((unsigned long)((50)*(4000000/4000000.0)));
   762  004D  300F               	movlw	15
   763  004E  1283               	bcf	3,5	;RP0=0, select bank0
   764  004F  1303               	bcf	3,6	;RP1=0, select bank0
   765  0050  00A8               	movwf	??_ADC_CHANNELS
   766  0051                     u77:
   767  0051  0BA8               	decfsz	??_ADC_CHANNELS,f
   768  0052  2851               	goto	u77
   769  0053  2854               	nop2
   770  0054                     l835:
   771                           
   772                           ;./ADC_LIB.h: 42:             ADCON0bits.GO = 1;
   773  0054  1283               	bcf	3,5	;RP0=0, select bank0
   774  0055  1303               	bcf	3,6	;RP1=0, select bank0
   775  0056  149F               	bsf	31,1	;volatile
   776                           
   777                           ;./ADC_LIB.h: 43:             break;
   778  0057  286D               	goto	l63
   779  0058                     l839:
   780  0058  1283               	bcf	3,5	;RP0=0, select bank0
   781  0059  1303               	bcf	3,6	;RP1=0, select bank0
   782  005A  0C1F               	rrf	31,w	;volatile
   783  005B  00A8               	movwf	??_ADC_CHANNELS
   784  005C  0C28               	rrf	??_ADC_CHANNELS,w
   785  005D  390F               	andlw	15
   786  005E  00A9               	movwf	??_ADC_CHANNELS+1
   787  005F  01AA               	clrf	??_ADC_CHANNELS+2
   788                           
   789                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   790                           ; Switch size 1, requested type "simple"
   791                           ; Number of cases is 1, Range of values is 0 to 0
   792                           ; switch strategies available:
   793                           ; Name         Instructions Cycles
   794                           ; simple_byte            4     3 (average)
   795                           ; direct_byte           11     8 (fixed)
   796                           ; jumptable            260     6 (fixed)
   797                           ;	Chosen strategy is simple_byte
   798  0060  082A               	movf	??_ADC_CHANNELS+2,w
   799  0061  3A00               	xorlw	0	; case 0
   800  0062  1903               	skipnz
   801  0063  2865               	goto	l915
   802  0064  286D               	goto	l63
   803  0065                     l915:
   804                           
   805                           ; Switch size 1, requested type "simple"
   806                           ; Number of cases is 2, Range of values is 0 to 1
   807                           ; switch strategies available:
   808                           ; Name         Instructions Cycles
   809                           ; simple_byte            7     4 (average)
   810                           ; direct_byte           14     8 (fixed)
   811                           ; jumptable            260     6 (fixed)
   812                           ;	Chosen strategy is simple_byte
   813  0065  0829               	movf	??_ADC_CHANNELS+1,w
   814  0066  3A00               	xorlw	0	; case 0
   815  0067  1903               	skipnz
   816  0068  281C               	goto	l821
   817  0069  3A01               	xorlw	1	; case 1
   818  006A  1903               	skipnz
   819  006B  283A               	goto	l829
   820  006C  286D               	goto	l63
   821  006D                     l63:
   822  006D  0008               	return
   823  006E                     __end_of_ADC_CHANNELS:
   824                           
   825                           	psect	text4
   826  00F7                     __ptext4:	
   827 ;; *************** function _isr *****************
   828 ;; Defined at:
   829 ;;		line 42 in file "main.c"
   830 ;; Parameters:    Size  Location     Type
   831 ;;		None
   832 ;; Auto vars:     Size  Location     Type
   833 ;;		None
   834 ;; Return value:  Size  Location     Type
   835 ;;                  1    wreg      void 
   836 ;; Registers used:
   837 ;;		wreg, pclath, cstack
   838 ;; Tracked objects:
   839 ;;		On entry : 0/0
   840 ;;		On exit  : 0/0
   841 ;;		Unchanged: 0/0
   842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   843 ;;      Params:         0       0       0       0       0
   844 ;;      Locals:         0       0       0       0       0
   845 ;;      Temps:          2       0       0       0       0
   846 ;;      Totals:         2       0       0       0       0
   847 ;;Total ram usage:        2 bytes
   848 ;; Hardware stack levels used:    1
   849 ;; Hardware stack levels required when called:    1
   850 ;; This function calls:
   851 ;;		_ADC_READ
   852 ;; This function is called by:
   853 ;;		Interrupt level 1
   854 ;; This function uses a non-reentrant model
   855 ;;
   856                           
   857                           
   858                           ;psect for function _isr
   859  00F7                     _isr:
   860  00F7                     i1l873:
   861                           
   862                           ;main.c: 43: 
   863  00F7  138B               	bcf	11,7	;volatile
   864                           
   865                           ;main.c: 44:     TRISA = 0B00000011;
   866  00F8  1283               	bcf	3,5	;RP0=0, select bank0
   867  00F9  1303               	bcf	3,6	;RP1=0, select bank0
   868  00FA  1F0C               	btfss	12,6	;volatile
   869  00FB  28FD               	goto	u3_21
   870  00FC  28FE               	goto	u3_20
   871  00FD                     u3_21:
   872  00FD  290A               	goto	i1l879
   873  00FE                     u3_20:
   874  00FE                     i1l875:
   875                           
   876                           ;main.c: 46:     TRISD = 0X00;
   877  00FE  120A  118A  2119  120A  118A  	fcall	_ADC_READ
   878  0103  0871               	movf	?_ADC_READ+1,w
   879  0104  1283               	bcf	3,5	;RP0=0, select bank0
   880  0105  1303               	bcf	3,6	;RP1=0, select bank0
   881  0106  00AC               	movwf	_VALOR_ADC+1
   882  0107  0870               	movf	?_ADC_READ,w
   883  0108  00AB               	movwf	_VALOR_ADC
   884  0109                     i1l877:
   885                           
   886                           ;main.c: 47:     TRISE = 0X00;
   887  0109  130C               	bcf	12,6	;volatile
   888  010A                     i1l879:
   889                           
   890                           ;main.c: 49: 
   891  010A  1D0B               	btfss	11,2	;volatile
   892  010B  290D               	goto	u4_21
   893  010C  290E               	goto	u4_20
   894  010D                     u4_21:
   895  010D  2911               	goto	i1l885
   896  010E                     u4_20:
   897  010E                     i1l881:
   898                           
   899                           ;main.c: 50:     PORTA = 0X00;
   900  010E  3064               	movlw	100
   901  010F  0081               	movwf	1	;volatile
   902  0110                     i1l883:
   903                           
   904                           ;main.c: 51:     PORTB = 0X00;
   905  0110  110B               	bcf	11,2	;volatile
   906  0111                     i1l885:
   907                           
   908                           ;main.c: 54:     PORTE = 0X00;
   909  0111  178B               	bsf	11,7	;volatile
   910  0112                     i1l76:
   911  0112  0877               	movf	??_isr+1,w
   912  0113  008A               	movwf	10
   913  0114  0E76               	swapf	??_isr,w
   914  0115  0083               	movwf	3
   915  0116  0EFE               	swapf	btemp,f
   916  0117  0E7E               	swapf	btemp,w
   917  0118  0009               	retfie
   918  0119                     __end_of_isr:
   919                           
   920                           	psect	intentry
   921  0004                     __pintentry:	
   922                           ;incstack = 0
   923                           ; Regs used in _isr: [wreg+pclath+cstack]
   924                           
   925  0004                     interrupt_function:
   926  007E                     saved_w	set	btemp
   927  0004  00FE               	movwf	btemp
   928  0005  0E03               	swapf	3,w
   929  0006  00F6               	movwf	??_isr
   930  0007  080A               	movf	10,w
   931  0008  00F7               	movwf	??_isr+1
   932  0009  120A  118A  28F7   	ljmp	_isr
   933                           
   934                           	psect	text5
   935  0119                     __ptext5:	
   936 ;; *************** function _ADC_READ *****************
   937 ;; Defined at:
   938 ;;		line 24 in file "./ADC_LIB.h"
   939 ;; Parameters:    Size  Location     Type
   940 ;;		None
   941 ;; Auto vars:     Size  Location     Type
   942 ;;  LECT            2    4[COMMON] unsigned int 
   943 ;; Return value:  Size  Location     Type
   944 ;;                  2    0[COMMON] unsigned int 
   945 ;; Registers used:
   946 ;;		wreg
   947 ;; Tracked objects:
   948 ;;		On entry : 0/0
   949 ;;		On exit  : 0/0
   950 ;;		Unchanged: 0/0
   951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   952 ;;      Params:         2       0       0       0       0
   953 ;;      Locals:         2       0       0       0       0
   954 ;;      Temps:          2       0       0       0       0
   955 ;;      Totals:         6       0       0       0       0
   956 ;;Total ram usage:        6 bytes
   957 ;; Hardware stack levels used:    1
   958 ;; This function calls:
   959 ;;		Nothing
   960 ;; This function is called by:
   961 ;;		_isr
   962 ;; This function uses a non-reentrant model
   963 ;;
   964                           
   965                           
   966                           ;psect for function _ADC_READ
   967  0119                     _ADC_READ:
   968  0119                     i1l815:	
   969                           ;incstack = 0
   970                           ; Regs used in _ADC_READ: [wreg]
   971                           
   972                           
   973                           ;./ADC_LIB.h: 25:     unsigned int LECT;;./ADC_LIB.h: 26:     LECT = ADRESH;
   974  0119  1283               	bcf	3,5	;RP0=0, select bank0
   975  011A  1303               	bcf	3,6	;RP1=0, select bank0
   976  011B  081E               	movf	30,w	;volatile
   977  011C  00F2               	movwf	??_ADC_READ
   978  011D  01F3               	clrf	??_ADC_READ+1
   979  011E  0872               	movf	??_ADC_READ,w
   980  011F  00F4               	movwf	ADC_READ@LECT
   981  0120  0873               	movf	??_ADC_READ+1,w
   982  0121  00F5               	movwf	ADC_READ@LECT+1
   983                           
   984                           ;./ADC_LIB.h: 27:     return LECT;
   985  0122  0875               	movf	ADC_READ@LECT+1,w
   986  0123  00F1               	movwf	?_ADC_READ+1
   987  0124  0874               	movf	ADC_READ@LECT,w
   988  0125  00F0               	movwf	?_ADC_READ
   989  0126                     i1l56:
   990  0126  0008               	return
   991  0127                     __end_of_ADC_READ:
   992  007E                     btemp	set	126	;btemp
   993  007E                     wtemp0	set	126
   994                           
   995                           	psect	config
   996                           
   997                           ;Config register CONFIG1 @ 0x2007
   998                           ;	Oscillator Selection bits
   999                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
  1000                           ;	Watchdog Timer Enable bit
  1001                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1002                           ;	Power-up Timer Enable bit
  1003                           ;	PWRTE = OFF, PWRT disabled
  1004                           ;	RE3/MCLR pin function select bit
  1005                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1006                           ;	Code Protection bit
  1007                           ;	CP = OFF, Program memory code protection is disabled
  1008                           ;	Data Code Protection bit
  1009                           ;	CPD = OFF, Data memory code protection is disabled
  1010                           ;	Brown Out Reset Selection bits
  1011                           ;	BOREN = OFF, BOR disabled
  1012                           ;	Internal External Switchover bit
  1013                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1014                           ;	Fail-Safe Clock Monitor Enabled bit
  1015                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1016                           ;	Low Voltage Programming Enable bit
  1017                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1018                           ;	In-Circuit Debugger Mode bit
  1019                           ;	DEBUG = 0x1, unprogrammed default
  1020  2007                     	org	8199
  1021  2007  20D5               	dw	8405
  1022                           
  1023                           ;Config register CONFIG2 @ 0x2008
  1024                           ;	Brown-out Reset Selection bit
  1025                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1026                           ;	Flash Program Memory Self Write Enable bits
  1027                           ;	WRT = OFF, Write protection off
  1028  2008                     	org	8200
  1029  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      12
    BANK0            80     11      13
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    ADC_CHANNELS@VALOR1	PTR unsigned int  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), 

    ADC_CHANNELS@VALOR0	PTR unsigned int  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_ADC_READ

Critical Paths under _main in BANK0

    _main->_ADC_CHANNELS
    _setup->_ADC_INIT

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     838
                       _ADC_CHANNELS
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      98
                           _ADC_INIT
 ---------------------------------------------------------------------------------
 (2) _ADC_INIT                                             3     1      2      98
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _ADC_CHANNELS                                        11     3      8     740
                                              0 BANK0     11     3      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  2     2      0      23
                                              6 COMMON     2     2      0
                           _ADC_READ
 ---------------------------------------------------------------------------------
 (4) _ADC_READ                                             6     4      2      23
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_CHANNELS
   _setup
     _ADC_INIT

 _isr (ROOT)
   _ADC_READ

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      19       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      B       D       5       16.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      19      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sat Jul 24 22:28:51 2021

                     l53 00F6                       l63 006D                       l87 00D3  
                     u57 00E4                       u67 0033                       u77 0051  
                    l801 00E0                      l811 00F2                      l803 00E7  
                    l821 001C                      l813 00F3                      l805 00ED  
                    l831 0044                      l823 0026                      l807 00F0  
                    l833 004D                      l825 002F                      l809 00F1  
                    l915 0065                      l835 0054                      l827 0036  
                    l819 001B                      l851 00BB                      l829 003A  
                    l861 00C3                      l853 00BE                      l845 00A7  
                    l839 0058                      l871 00D2                      l863 00C7  
                    l855 00BF                      l847 00AB                      l865 00CF  
                    l857 00C0                      l849 00AC                      l867 00D0  
                    l859 00C1                      l891 0076                      l797 00D4  
                    l869 00D1                      l893 008C                      l799 00D7  
                    l887 006E                      l889 0073                      _isr 00F7  
                    fsr0 0004                      indf 0000                     _ADIF 0066  
                   ?_isr 0070                     _T0IF 005A                     i1l56 0126  
                   i1l76 0112                     _POT0 007A                     _POT1 0078  
                   _TMR0 0001             _ADC_CHANNELS 001B                     u3_20 00FE  
                   u3_21 00FD                     u4_20 010E                     u4_21 010D  
       __end_of_ADC_INIT 00F7         __end_of_ADC_READ 0127                     _main 006E  
                   btemp 007E                     start 000C                    ??_isr 0076  
                  ?_main 0070                    _ANSEL 0188                    i1l815 0119  
                  i1l881 010E                    i1l873 00F7                    i1l883 0110  
                  i1l875 00FE                    i1l885 0111                    i1l877 0109  
                  i1l879 010A                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _PORTE 0009  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _TRISE 0089                    _setup 00A7  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 00A7                   ??_main 002B  
                 _ADRESH 001E                   ?_setup 0070                   _ANSELH 0189  
              ?_ADC_INIT 0020                ?_ADC_READ 0070                   saved_w 007E  
__end_of__initialization 0017           __pcstackCOMMON 0070        ADC_CHANNELS@CANAL 0020  
           ADC_READ@LECT 0074            __end_of_setup 00D4               ??_ADC_INIT 0022  
             ??_ADC_READ 0072                  ??_setup 0023               __pbssBANK0 002B  
             __pmaintext 006E               __pintentry 0004    ADC_CHANNELS@VALOR_ADC 0022  
                __ptext1 00A7                  __ptext2 00D4                  __ptext3 001B  
                __ptext4 00F7                  __ptext5 0119             __size_of_isr 0022  
   end_of_initialization 0017                _VALOR_ADC 002B        __size_of_ADC_INIT 0023  
      __size_of_ADC_READ 000E       ADC_CHANNELS@VALOR0 0024       ADC_CHANNELS@VALOR1 0026  
          ADC_INIT@canal 0020      start_initialization 000F              __end_of_isr 0119  
          ?_ADC_CHANNELS 0020              __pbssCOMMON 0078                ___latbits 0002  
          __pcstackBANK0 0020           ??_ADC_CHANNELS 0028                 _ADC_INIT 00D4  
               _ADC_READ 0119           __size_of_setup 002D        interrupt_function 0004  
               _PIE1bits 008C                 _PIR1bits 000C               _ADCON0bits 001F  
             _ADCON1bits 009F     __end_of_ADC_CHANNELS 006E            __size_of_main 0039  
             _INTCONbits 000B                 intlevel1 0000               _OSCCONbits 008F  
             _OPTION_REG 0081    __size_of_ADC_CHANNELS 0053  
